{"version":3,"sources":["lib/theme/index.ts","lib/layout/Menu.tsx","lib/layout/MobileMenu.tsx","lib/layout/TopMenu.tsx","lib/layout/Topbar.tsx","lib/layout/DocumentTitle.tsx","lib/layout/Layout.tsx","lib/Alert.tsx","lib/BigNumber.tsx","lib/ConfirmationDialog.tsx","lib/DashBoard.tsx","lib/SearchField.tsx","lib/TextFieldEditor.tsx","lib/Trending.tsx","lib/Emoji.tsx","lib/Delay.tsx","lib/Hoverable.tsx","lib/Wizard.tsx","lib/icons/TfsoLoading.tsx","demo/components/MaterialUiLink.tsx","demo/components/GitHubLink.tsx","demo/pages/Home.tsx","demo/components/code.tsx","demo/history.ts","demo/components/Link.tsx","demo/components/demo.tsx","demo/demos/TrendingDemo.tsx","demo/demos/BigNumberDemo.tsx","demo/demos/AlertDemo.tsx","demo/demos/SearchFieldDemo.tsx","demo/demos/TextFieldEditorDemo.tsx","demo/demos/ConfirmationDialogDemo.tsx","demo/demos/EmojiDemo.tsx","demo/pages/Components.tsx","demo/pages/Utils.tsx","lib/icons/Tfso.tsx","demo/pages/Icons.tsx","demo/pages/Guidelines.tsx","demo/components/ThemeColor.tsx","demo/pages/Theme.tsx","demo/demos/DashBoardDemo.tsx","demo/pages/Lab.tsx","demo/Layout.tsx","demo/index.tsx"],"names":["colorScheme","colors","tfso","baseColor","baseLightColor","baseLight2Color","baseLight3Color","baseLight4Color","baseLight5Color","blueColor","blueDarkColor","blueDesaturatedColor","grayBlueColor","tealColor","greenColor","greenLightColor","purpleColor","redColor","redLightColor","orangeColor","yellowColor","blackColor","grayColor","grayDarkColor","grayDarkerColor","grayLightColor","grayLighterColor","grayLightestColor","whiteColor","whiteDarkColor","whiteDarkerColor","bodyBackgroundColor","listOverBackgroundColor","borderColor","tabBarColor","palette","primary","primaryLight","success","warning","alert","delete","materialuiTheme","createMuiTheme","typography","useNextVariants","secondary","dark","main","light","contrastText","styledTheme","layout","containerMargin","mui","StyledDrawer","styled","Drawer","attrs","classes","paper","withConfig","displayName","componentId","_ref","open","props","theme","withWidth","_React$PureComponent","Menu","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","isMobile","includes","width","react_default","a","createElement","variant","onClose","List_default","children","React","PureComponent","MenuGroup","_React$PureComponent2","Icon","icon","LinkContent","ListItem_default","divider","expanded","ListItemIcon_default","style","marginRight","fontSize","color","selected","ListItemText_default","subtitle","primaryTypographyProps","label","ListItemSecondaryAction_default","IconButton_default","onClick","onToggleExpanded","ExpandLess_default","ExpandMore_default","Fragment","href","Link_default","Collapse_default","in","timeout","NestedListItem","ListItem","_ref2","spacing","unit","MenuItem","_React$PureComponent3","dense","MobileMenu","TopMenu","Root","div","StyledAppBar","AppBar","zIndex","drawer","Grow","MenuButton","IconButton","Title","Typography","breakpoints","up","SectionDesktop","SectionMobile","_ref3","TopBar","state","mobileMoreAnchorEl","handleMobileMenuOpen","event","_this","setState","currentTarget","handleMobileMenuClose","_this2","isMobileMenuOpen","Boolean","position","Toolbar_default","noWrap","title","onMenuToggle","aria-label","e","icons_Menu_default","aria-haspopup","MoreVert_default","Menu_default","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","mobileMenu","setTitle","text","document","DocumentTitle","call","nextProps","LayoutWrapper","LayoutHeader","LayoutBody","LayoutBodyLeft","LayoutBodyRight","Layout","DocumentTitle_DocumentTitle","docTitle","Topbar_TopBar","topMenu","menu","LayoutNoMenu","variantIcon","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","StyledSnack","other","objectWithoutProperties","SnackbarContent_default","_templateObject","bgColor","Alert","message","aria-describedby","id","display","alignItems","opacity","action","Close_default","fontSizeMap","medium","large","defaultProps","size","wrapper","BigNumber","_ref2$size","pxToRem","_ref3$color","TransitionComponent","Slide_default","assign","direction","ConfirmationDialog","onCancel","onOk","okButtonText","cancelButtonText","Dialog_default","keepMounted","maxWidth","DialogTitle_default","DialogContent_default","DialogActions_default","Button_default","WidgetContainer","background","Paper_default","Widget","dragging","dragOver","onDrop","stopPropagation","preventDefault","data","JSON","parse","dataTransfer","getData","index","onOrder","err","onDragStart","dragData","setData","stringify","onDragEnd","onDragEnter","onDragOver","onDragLeave","_this$props","elevation","border","draggable","sizeMap","small","cols","rows","DashBoard","onOrderArray","target","source","widgets","toConsumableArray","splice","onChangeOrder","_this3","GridList_default","cellHeight","map","i","widget","GridListTile_default","DashBoard_Widget","SearchField","editing","onBlur","onFocus","TextField_default","fullWidth","handleEvent","nativeEvent","stopImmediatePropagation","placeholder","margin","InputProps","startAdornment","InputAdornment_default","Search_default","TextFieldEditor","_inputRef","createRef","prevProps","blur","current","onKeyDown","defaultPrevented","ctrlKey","multiline","onChange","dirtyProp","dirty","enableDirtyCheck","otherProps","isDirty","inputRef","fontStyle","iconMap","TrendingUp","flat","TrendingFlat","down","TrendingDown","memo","withTheme","iconProps","nativeColor","getColor","emojis","middleFinger","indexFinger","flex","brokenHeart","perfect","thumbsUp","thumbsDown","clap","heart","fire","bulb","crap","thinking","rocket","Emoji","propTypes","PropTypes","oneOf","keys","Delay","_timer","show","setTimeout","delayMs","clearTimeout","beforeShow","Hoverable","ref","toggleHover","hover","hoverOn","hoverOff","restProps","onMouseEnter","onMouseLeave","Wizard","next","length","prev","hasOwnProperty","path","css","TfsoLoading_templateObject","StyledSvgIcon","Styled","once","SvgIcon_default","_ref4","_ref5","_ref6","viewBox","fillRule","strokeWidth","d","MaterialUiIcon","fill","MaterialUiLink","rel","GitHubIcon","GitHubLink","concat","Tooltip_default","tooltip","CenterTop","Home_templateObject","Home","TfsoLoading","Typography_default","paragraph","align","Grid_default","container","justify","item","xs","flexDirection","Zoom_default","appear","transitionDelay","Code","_getPrototypeOf2","_len","args","Array","_key","highlight","Prism","highlightElement","className","language","history","createHashHistory","basename","hashType","Link","to","push","toLowerCase","underline","undefined","AnchorLink","Anchor","window","location","hash","split","Demo","padding","marginBottom","DemoTitle","Link_Anchor","srcPath","demoPath","components_GitHubLink","DemoHelp","DemoContent","marginTop","Divider_default","isArray","child","DemoProps","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpansionPanelDetails_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","DemoProp","name","type","default","description","DemoCode","Code_default","code_Code","TrendingDemo","demo_Demo","demo_DemoTitle","demo_DemoHelp","demo_DemoProps","demo_DemoProp","demo_DemoContent","Trending","select","MenuItem_default","BigNumberDemo","handleChange","defineProperty","backgroundColor","lib_BigNumber","variantMessage","AlertDemo","onPress","demo_DemoCode","Snackbar_default","autoHideDuration","lib_Alert","SearchFieldDemo","SearchField_SearchField","TextFieldEditorDemo","onReset","TextFieldEditor_TextFieldEditor","toString","ConfirmationDialogDemo","openConfirmationDialog","onClickOpenConfirmationDialog","lib_ConfirmationDialog","EmojiDemo","lib_Emoji","Components","EmojiDemo_EmojiDemo","AlertDemo_AlertDemo","BigNumberDemo_BigNumberDemo","ConfirmationDialogDemo_ConfirmationDialogDemo","SearchFieldDemo_SearchFieldDemo","TextFieldEditorDemo_TextFieldEditorDemo","TrendingDemo_TrendingDemo","Utils","Utils_DelayDemo","Utils_HoverableDemo","Utils_WizardDemo","DelayDemo","Delay_Delay","CircularProgress_default","HoverableDemo","Hoverable_Hoverable","cursor","height","WizardDemo","Wizard_Wizard","Stepper_default","activeStep","Step_default","StepLabel_default","disabled","Icons","Icons_TfsoDemo","Icons_TfsoLoadingDemo","TfsoDemo","Tfso","TfsoLoadingDemo","Section","SubHeading","Paragraph","component","Tip","Card_default","CardContent_default","Guideline","Guidelines","render","renderHeading","renderGuidelines","renderTips","renderContributing","Guidelines_SubHeading","Guidelines_Guideline","Link_Link","Guidelines_Tip","Guidelines_Paragraph","Box","ThemeColor_templateObject","Txt","_templateObject2","ThemeColor","ThemeColors","Theme_templateObject","Theme","components_ThemeColor","W1","wrap","DashBoardDemo","DashBoardDemo_W1","flexWrap","justifyContent","overflowX","DashBoard_DashBoard","onRemove","Lab","DashBoardDemo_DashBoardDemo","menuGroups","pages","pageIcon","HomeIcon","StraightenIcon","ViewCompactIcon","StyleIcon","BuildIcon","FontDownloadIcon","CodeIcon","_unsubHistory","menuOpen","menuGroupsExpanded","onNavigation","getSelectedPageName","pathname","slice","indexOf","find","page","onCloseMenu","onToggleGroupExpanded","objectSpread","listen","layout_namespaceObject","groupName","group","content","components_MaterialUiLink","Page","ReactDOM","CssBaseline_default","styles","styled_components_browser_esm","demo_Layout_Layout","getElementById"],"mappings":"o2BAGMA,EAkBK,UAILC,EAAS,CACXC,KAAM,UACNC,UAvBO,UAwBPC,eAAgB,UAChBC,gBAAiB,UACjBC,gBAAiB,UACjBC,gBAAiB,UACjBC,gBAAiB,UACjBC,UA3BY,UA4BZC,cA3BW,UA4BXC,qBAnBY,UAoBZC,cAdQ,UAeRC,UA7Ba,UA8BbC,WA7BO,UA8BPC,gBAAiB,yBACjBC,YA9BS,UA+BTC,SA9BU,UA+BVC,cAAe,yBACfC,YA/BW,UAgCXC,YA/BW,UAgCXC,WA/BS,UAgCTC,UA/BW,UAgCXC,cAAe,UACfC,gBAAiB,UACjBC,eAAgB,UAChBC,iBAAkB,UAClBC,kBAAmB,UACnBC,WAAY5B,EACZ6B,eAAgB,UAChBC,iBAAkB,UAClBC,oBAAqB,UACrBC,wBAAyB,UACzBC,YAAa,UACbC,YAAalC,GAGXmC,EAAU,CACZC,QAASnC,EAAOE,UAChBkC,aAAcpC,EAAOG,eACrBkC,QAASrC,EAAOa,WAChByB,QAAStC,EAAOkB,YAChBqB,MAAOvC,EAAOgB,SACdwB,OAAQxC,EAAOgB,UAONyB,EAAkBC,yBAAe,CAC1CC,WAAY,CACRC,iBAAiB,GAErBV,QAAS,CACLW,UAAW,CACPC,KAAM,UACNC,KAAM,OACNC,MAAO,WAEXb,QAAS,CACLW,KAAM,UACNC,KAAM,UACNC,MAAO,UACPC,aAAc,WAKbC,EAAc,CACvBjD,KAAM,CACFD,SACAkC,UACAiB,OA3BO,CACXC,gBAAiB,SA4BjBC,IAAKZ,mPCtDHa,EAAeC,YAAOC,KAAQC,MAAM,CACtCC,QAAS,CAACC,MAAO,mBADHC,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGP,CAAH,uMAIH,SAAAQ,GAAA,OAAAA,EAAEC,KAAiB,IAAM,GAOd,SAAAC,GAAK,OAAIA,EAAMC,MAAMjE,KAAKD,OAAOO,iBAOjC,SAAA0D,GAAK,OAAIA,EAAMC,MAAMjE,KAAKD,OAAOO,kBAU5C4D,gBAAS,SAAAC,GAAA,SAAAC,IAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAD,GAAAM,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAD,EAAAD,GAAAE,OAAAQ,EAAA,EAAAR,CAAAD,EAAA,EAAAU,IAAA,SAAAC,MAAA,WAOhB,IAAMC,EAAW,CAAC,KAAM,MAAMC,SAASV,KAAKP,MAAMkB,OAElD,OACIC,EAAAC,EAAAC,cAAChC,EAAD,CAAciC,QAASN,EAAW,YAAc,aAAcjB,KAAMQ,KAAKP,MAAMD,KAAMwB,QAAShB,KAAKP,MAAMuB,SACrGJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACKb,KAAKP,MAAMyB,eAZRrB,EAAA,CAAsBsB,IAAMC,gBA8BvCC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAAqB,GAAAvB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuB,GAAAlB,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAuB,EAAAC,GAAAxB,OAAAQ,EAAA,EAAAR,CAAAuB,EAAA,EAAAd,IAAA,SAAAC,MAAA,WAEQ,IAAMe,EAAOvB,KAAKP,MAAM+B,KAElBC,EACFb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAUc,SAAU3B,KAAKP,MAAMmC,UAC1BL,GACDX,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAciB,MAAO,CAACC,YAAa,IAAInB,EAAAC,EAAAC,cAACS,EAAD,CAAMS,SAAS,QAAQC,MAAOjC,KAAKP,MAAMyC,SAAW,UAAY,eAEvGtB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACIxC,UAAW2B,KAAKP,MAAM2C,SACtBC,uBAAwB,CAACJ,MAAOjC,KAAKP,MAAMyC,SAAW,UAAY,cAEjElC,KAAKP,MAAM6C,OAEhB1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,KACID,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAY4B,QAASzC,KAAKP,MAAMiD,kBAC3B1C,KAAKP,MAAMmC,SAAWhB,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,MAAiBD,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,SAMxD,OACID,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KACgC,kBAApB7C,KAAKP,MAAMqD,KACblC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAMiC,KAAM9C,KAAKP,MAAMqD,MAAOrB,GAC9BzB,KAAKP,MAAMqD,KACP9C,KAAKP,MAAMqD,KAAKrB,GAChBA,EAEVb,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAUoC,GAAIjD,KAAKP,MAAMmC,SAAUsB,QAAQ,QACvCtC,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACKb,KAAKP,MAAMyB,gBAjCpCG,EAAA,CAA+BF,IAAMC,eAgD/B+B,EAAiBpE,YAAOqE,KAAVhE,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGP,CAAH,4BACA,SAAAsE,GAAA,OAAsC,EAAtCA,EAAE3D,MAAiBb,IAAIyE,QAAQC,OAGtCC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA1D,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,GAAA1D,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0D,GAAArD,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAA0D,EAAAC,GAAA3D,OAAAQ,EAAA,EAAAR,CAAA0D,EAAA,EAAAjD,IAAA,SAAAC,MAAA,WAEQ,IAAMe,EAAOvB,KAAKP,MAAM+B,KAClBC,EACFb,EAAAC,EAAAC,cAACqC,EAAD,CAAgBO,OAAK,GAChBnC,GACDX,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAciB,MAAO,CAACC,YAAa,IAAInB,EAAAC,EAAAC,cAACS,EAAD,CAAMS,SAAS,QAAQC,MAAOjC,KAAKP,MAAMyC,SAAW,UAAY,eAEvGtB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAcwB,uBAAwB,CAACJ,MAAOjC,KAAKP,MAAMyC,SAAW,UAAY,cAAelC,KAAKP,MAAM6C,QAIlH,OACI1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KACgC,kBAApB7C,KAAKP,MAAMqD,KACblC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAMiC,KAAM9C,KAAKP,MAAMqD,MAAOrB,GAC9BzB,KAAKP,MAAMqD,KAAKrB,QAhBtC+B,EAAA,CAA8BrC,IAAMC,eCzJfuC,mLAEb,OACI/C,EAAAC,EAAAC,cAACF,EAAAC,EAAMgC,SAAP,KACK7C,KAAKP,MAAMyB,iBAJYC,IAAMC,eCAzBwC,mLAEb,OACIhD,EAAAC,EAAAC,cAACF,EAAAC,EAAMgC,SAAP,KACK7C,KAAKP,MAAMyB,iBAJSC,IAAMC,oICSrCyC,GAAO9E,IAAO+E,IAAV1E,WAAA,CAAAC,YAAA,OAAAC,YAAA,gBAAGP,CAAH,iBAGJgF,GAAehF,YAAOiF,KAAV5E,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGP,CAAH,sDAIL,SAAAU,GAAK,OAAIA,EAAMC,MAAMb,IAAIoF,OAAOC,OAAS,IAIhDC,GAAOpF,IAAO+E,IAAV1E,WAAA,CAAAC,YAAA,OAAAC,YAAA,gBAAGP,CAAH,kBAIJqF,GAAarF,YAAOsF,KAAVjF,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGP,CAAH,8CAOVuF,GAAQvF,YAAOwF,MAAVnF,WAAA,CAAAC,YAAA,QAAAC,YAAA,gBAAGP,CAAH,2DAIP,SAAAQ,GAAA,OAAAA,EAAEG,MAAiBb,IAAI2F,YAAYC,GAAG,QAMpCC,GAAiB3F,IAAO+E,IAAV1E,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGP,CAAH,2DAGhB,SAAAsE,GAAA,OAAAA,EAAE3D,MAAiBb,IAAI2F,YAAYC,GAAG,QAOpCE,GAAgB5F,IAAO+E,IAAV1E,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGP,CAAH,wCAGf,SAAA6F,GAAA,OAAAA,EAAElF,MAAiBb,IAAI2F,YAAYC,GAAG,QAYrBI,8MAKjBC,MAAQ,CACJC,mBAAoB,QAExBC,qBAAuB,SAAAC,GACnBC,EAAKC,SAAS,CAACJ,mBAAoBE,EAAMG,mBAE7CC,sBAAwB,WACpBH,EAAKC,SAAS,CAACJ,mBAAoB,gFAG/B,IAAAO,EAAAtF,KACG+E,EAAsB/E,KAAK8E,MAA3BC,mBACDQ,EAAmBC,QAAQT,GAEjC,OACInE,EAAAC,EAAAC,cAAC+C,GAAD,KACIjD,EAAAC,EAAAC,cAACiD,GAAD,CAAc0B,SAAS,SAASxD,MAAM,WAClCrB,EAAAC,EAAAC,cAAC4E,GAAA7E,EAAD,KACID,EAAAC,EAAAC,cAACwD,GAAD,CAAOvD,QAAQ,KAAKkB,MAAM,UAAU0D,QAAM,GACrC3F,KAAKP,MAAMmG,OAEa,OAA5B5F,KAAKP,MAAMoG,cACZjF,EAAAC,EAAAC,cAACsD,GAAD,CAAYnC,MAAM,UAAU6D,aAAW,cAAcrD,QAAS,SAAAsD,GAAC,OAAIT,EAAK7F,MAAMoG,cAAgBP,EAAK7F,MAAMoG,iBACrGjF,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,OAGJD,EAAAC,EAAAC,cAACqD,GAAD,MACAvD,EAAAC,EAAAC,cAAC4D,GAAD,KACK1E,KAAKP,MAAMyB,UAEhBN,EAAAC,EAAAC,cAAC6D,GAAD,KACI/D,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAYoF,gBAAc,OAAOxD,QAASzC,KAAKgF,qBAAsB/C,MAAM,WACvErB,EAAAC,EAAAC,cAACoF,GAAArF,EAAD,UAKhBD,EAAAC,EAAAC,cAACqF,GAAAtF,EAAD,CACIuF,SAAUrB,EACVsB,aAAc,CAACC,SAAU,MAAOC,WAAY,SAC5CC,gBAAiB,CAACF,SAAU,MAAOC,WAAY,SAC/C/G,KAAM+F,EACNvE,QAAShB,KAAKqF,uBAEbrF,KAAKP,MAAMgH,oBAjDItF,IAAMC,eClE1C,SAASsF,GAASC,GACdC,SAAShB,MAAQe,MAOAE,eACjB,SAAAA,EAAYpH,GAAM,IAAAyF,EAAA,OAAApF,OAAAC,EAAA,EAAAD,CAAAE,KAAA6G,GACd3B,EAAApF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+G,GAAAC,KAAA9G,KAAMP,IACNiH,GAASjH,EAAMkH,MAFDzB,yFAIQ6B,GACnBA,EAAUJ,OAAS3G,KAAKP,MAAMkH,MAC7BD,GAASK,EAAUJ,uCAIvB,MAAO,UAX4BxF,IAAMC,eCJpC4F,GAAgBjI,IAAO+E,IAAV1E,WAAA,CAAAC,YAAA,gBAAAC,YAAA,YAAGP,CAAH,qDAObkI,GAAelI,IAAO+E,IAAV1E,WAAA,CAAAC,YAAA,eAAAC,YAAA,YAAGP,CAAH,MAKZmI,GAAanI,IAAO+E,IAAV1E,WAAA,CAAAC,YAAA,aAAAC,YAAA,YAAGP,CAAH,uCAOVoI,GAAiBpI,IAAO+E,IAAV1E,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGP,CAAH,MAKdqI,GAAkBrI,IAAO+E,IAAV1E,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGP,CAAH,uDAgBPsI,oLAEb,OACIzG,EAAAC,EAAAC,cAACkG,GAAD,KACIpG,EAAAC,EAAAC,cAACwG,GAAD,CAAeX,KAAM3G,KAAKP,MAAM8H,WAChC3G,EAAAC,EAAAC,cAACmG,GAAD,KACIrG,EAAAC,EAAAC,cAAC0G,GAAD,CACI5B,MAAO5F,KAAKP,MAAMmG,MAClBC,aAAc7F,KAAKP,MAAMoG,aACzBY,WAAYzG,KAAKP,MAAMgH,YAEtBzG,KAAKP,MAAMgI,UAGpB7G,EAAAC,EAAAC,cAACoG,GAAD,KACItG,EAAAC,EAAAC,cAACqG,GAAD,KACKnH,KAAKP,MAAMiI,MAEhB9G,EAAAC,EAAAC,cAACsG,GAAD,KACKpH,KAAKP,MAAMyB,mBAnBAC,IAAMC,eAkC7BuG,GAAb,SAAArG,GAAA,SAAAqG,IAAA,OAAA7H,OAAAC,EAAA,EAAAD,CAAAE,KAAA2H,GAAA7H,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6H,GAAAxH,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAA6H,EAAArG,GAAAxB,OAAAQ,EAAA,EAAAR,CAAA6H,EAAA,EAAApH,IAAA,SAAAC,MAAA,WAEQ,OACII,EAAAC,EAAAC,cAACkG,GAAD,KACIpG,EAAAC,EAAAC,cAACwG,GAAD,CAAeX,KAAM3G,KAAKP,MAAM8H,WAChC3G,EAAAC,EAAAC,cAACmG,GAAD,KACIrG,EAAAC,EAAAC,cAAC0G,GAAD,CACI5B,MAAO5F,KAAKP,MAAMmG,MAClBC,aAAc,KACdY,WAAYzG,KAAKP,MAAMgH,YAEtBzG,KAAKP,MAAMgI,UAGpB7G,EAAAC,EAAAC,cAACoG,GAAD,KACItG,EAAAC,EAAAC,cAACsG,GAAD,KACKpH,KAAKP,MAAMyB,gBAhBpCyG,EAAA,CAAkCxG,IAAMC,uQCpExC,IAAMwG,GAAc,CAChB/J,QAASgK,KACT/J,QAASgK,KACTC,MAAOC,KACPC,KAAMC,MAaJC,GAAcpJ,YADI,SAAAQ,KAAEwB,QAAF,IAAcqH,EAAdtI,OAAAuI,GAAA,EAAAvI,CAAAP,EAAA,oBAAyBqB,EAAAC,EAAAC,cAACwH,GAAAzH,EAAuBuH,IACrDrJ,CAAHwJ,KACO,SAAAlF,GAAA,OAXR,SAACtC,EAAuBrD,GACpC,OAAOqD,GACP,IAAK,UAAW,OAAOrD,EAAQG,QAC/B,IAAK,QAAS,OAAOH,EAAQK,MAC7B,IAAK,OAAQ,OAAOL,EAAQE,aAC5B,IAAK,UAAW,OAAOF,EAAQI,SAMW0K,CAAtBnF,EAAEtC,QAAFsC,EAAW3D,MAAkCjE,KAAKiC,WA6C3D+K,GAlCD,SAAChJ,GAAsB,IAC1BiJ,EAA6BjJ,EAA7BiJ,QAAS1H,EAAoBvB,EAApBuB,QAASD,EAAWtB,EAAXsB,QACnBQ,EAAOqG,GAAY7G,GAEzB,OACIH,EAAAC,EAAAC,cAACqH,GAAD,CACIpH,QAASA,EACT4H,mBAAiB,kBACjBD,QACI9H,EAAAC,EAAAC,cAAA,QAAM8H,GAAG,kBAAkB9G,MAAO,CAAC+G,QAAS,OAAQC,WAAY,WAC5DlI,EAAAC,EAAAC,cAACS,EAAD,CAAMO,MAAO,CAACE,SAAU,GAAI+G,QAAS,GAAKhH,YAAa,MACtD2G,GAGTM,OAAQ,CACJpI,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CACIN,IAAI,QACJuF,aAAW,QACX7D,MAAM,UACNQ,QAASzB,GAETJ,EAAAC,EAAAC,cAACmI,GAAApI,EAAD,CAAWiB,MAAO,CAACE,SAAU,WC3C3CkH,GAAiE,CACnEC,OAAQ,GACRC,MAAO,IAGLC,GAAiE,CACnEpH,MAAO,QACPqH,KAAM,SAGJC,GAAU,SAAAhK,KAAE+J,KAAF/J,EAAQ0C,MAAR,IAAkBxC,EAAlBK,OAAAuI,GAAA,EAAAvI,CAAAP,EAAA,yBAAuDqB,EAAAC,EAAAC,cAAA,MAASrB,IAEhF8J,GAAQF,aAAeA,GAUvB,IAQeG,GARGzK,YAAOwK,IAAVnK,WAAA,CAAAC,YAAA,YAAAC,YAAA,YAAGP,CAAH,4FACE,SAAAsE,GAAA,IAAE3D,EAAF2D,EAAE3D,MAAF+J,EAAApG,EAASiG,YAAT,IAAAG,EAAgBJ,GAAaC,KAA7BG,EAAA,OAAuC/J,EAAMb,IAAIV,WAAWuL,QAAQR,GAAYI,KAGpF,SAAA1E,GAAA,IAAA+E,EAAA/E,EAAE3C,MAAF,MAA4C,gBAA5C,IAAA0H,EAAUN,GAAapH,MAAvB0H,GAAsD,UAAY,oIC1BzEC,GAAsB,SAAAnK,GAAK,OAAImB,EAAAC,EAAAC,cAAC+I,GAAAhJ,EAADf,OAAAgK,OAAA,CAAOC,UAAU,MAAStK,KAgChDuK,GA9BY,SAACvK,GAAmC,IACpDD,EAAwEC,EAAxED,KAAMyK,EAAkExK,EAAlEwK,SAAUC,EAAwDzK,EAAxDyK,KAAMtE,EAAkDnG,EAAlDmG,MAAO8C,EAA2CjJ,EAA3CiJ,QAASyB,EAAkC1K,EAAlC0K,aAAcC,EAAoB3K,EAApB2K,iBAC3D,OACIxJ,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CACI+I,oBAAqBA,GACrBU,aAAa,EACb9K,KAAMA,EACNwB,QAASiJ,EACTM,SAAU,MAET3E,GAAShF,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,KAAc+E,GACxBhF,EAAAC,EAAAC,cAAC2J,GAAA5J,EAAD,KAAgB6H,GAChB9H,EAAAC,EAAAC,cAAC4J,GAAA7J,EAAD,KACID,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAQ4B,QAASwH,EAAUhI,MAAM,WAAWmI,GAC5CxJ,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAQ4B,QAASyH,EAAMjI,MAAM,aAAakI,4ECzBpDS,GAAkB7L,YADA,SAAAQ,KAAEsL,WAAF,IAAiBpL,EAAjBK,OAAAuI,GAAA,EAAAvI,CAAAP,EAAA,uBAAkEqB,EAAAC,EAAAC,cAACgK,GAAAjK,EAAUpB,KAChFL,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAAGP,CAAH,+CACH,SAAAsE,GAAA,OAAAA,EAAEwH,aAuBdE,8MAWFjG,MAAqB,CACjBkG,UAAU,EACVC,UAAU,KAGdC,OAAS,SAACnF,GACNA,EAAEoF,kBACFpF,EAAEqF,iBAEF,IACI,IAAMC,EAAOC,KAAKC,MAAMxF,EAAEyF,aAAaC,QAAQ,SAC5CJ,EAAKK,QAAUxG,EAAKzF,MAAMiM,OAAQxG,EAAKzF,MAAMkM,QAAQzG,EAAKzF,MAAMiM,MAAOL,EAAKK,OAClF,MAAME,IACP1G,EAAKC,SAAS,CAAC8F,UAAU,OAG7BY,YAAc,SAAC9F,GACX,IAAM+F,EAAyB,CAC3BJ,MAAOxG,EAAKzF,MAAMiM,OAEtB3F,EAAEyF,aAAaO,QAAQ,OAAQT,KAAKU,UAAUF,IAC9C5G,EAAKC,SAAS,CAAC6F,UAAU,OAG7BiB,UAAY,SAAClG,GACTb,EAAKC,SAAS,CAAC6F,UAAU,OAG7BkB,YAAc,SAACnG,GACXb,EAAKC,SAAS,CAAC8F,UAAU,OAG7BkB,WAAa,SAACpG,GACVA,EAAEqF,oBAGNgB,YAAc,SAACrG,GACXb,EAAKC,SAAS,CAAC8F,UAAU,6EAGrB,IAAAoB,EAC2BrM,KAAKP,MAA7ByB,EADHmL,EACGnL,SAAU2J,EADbwB,EACaxB,WAEjB,OACIjK,EAAAC,EAAAC,cAAC8J,GAAD,CACIC,WAAYA,GAAc,UAC1ByB,UAAW,EACXxK,MAAO,CAEHyK,OAAQvM,KAAK8E,MAAMmG,SAAW,kBAAoB,SAEtDuB,WAAS,EACTX,YAAa7L,KAAK6L,YAClBI,UAAWjM,KAAKiM,UAChBC,YAAalM,KAAKkM,YAClBC,WAAYnM,KAAKmM,WACjBC,YAAapM,KAAKoM,YAClBlB,OAAQlL,KAAKkL,QAEZhK,UAtEIC,IAAMC,eAArB2J,GACK1B,aAAe,CAClBwB,WAAY,WA0EpB,IAAM4B,GAA6D,CAC/DC,MAAO,CAACC,KAAM,EAAGC,KAAM,IACvBzD,OAAQ,CAACwD,KAAM,EAAGC,KAAM,GACxBxD,MAAO,CAACuD,KAAM,EAAGC,KAAM,IAgBNC,8MAkBjBC,aAAe,SAACC,EAAgBC,GAC5B,IAAMC,EAAOnN,OAAAoN,GAAA,EAAApN,CAAOwF,EAAK7F,MAAMwN,SAC/BA,EAAQE,OAAOJ,EAAQ,EAAGE,EAAQE,OAAOH,EAAQ,GAAG,IACpD1H,EAAK7F,MAAM2N,cAAcH,4EAGrB,IAAAI,EAAArN,KACJ,OACIY,EAAAC,EAAAC,cAACwM,GAAAzM,EAAD,CACIyC,QAAStD,KAAKP,MAAM6D,QACpBqJ,KAAM,EACNY,WAAY,IACZzL,MAAO,CAACnB,MAAO,SAEdX,KAAKP,MAAMwN,QAAQO,IAAI,SAAA5I,EAAoB6I,GAApB,IAAEnE,EAAF1E,EAAE0E,KAASoE,EAAX5N,OAAAuI,GAAA,EAAAvI,CAAA8E,EAAA,iBACpBhE,EAAAC,EAAAC,cAAC6M,GAAA9M,EAADf,OAAAgK,OAAA,CAAcvJ,IAAKkN,GAAOhB,GAAQnD,IAC9B1I,EAAAC,EAAAC,cAAC8M,GAAD9N,OAAAgK,OAAA,GAAY4D,EAAZ,CACIhC,MAAO+B,EACP9B,QAAS0B,EAAKP,2BApCH3L,IAAMC,eAAxByL,GACVxD,aAAe,CAClB/F,QAAS,sECxHIuK,8MASjB/I,MAAe,CACXgJ,SAAS,KAGbC,OAAS,SAAChI,GACNb,EAAKC,SAAS,CAAC2I,SAAS,IADa,IAE9BC,EAAU7I,EAAKzF,MAAfsO,OACPA,GAAUA,EAAOhI,MAGrBiI,QAAU,SAACjI,GACPb,EAAKC,SAAS,CAAC2I,SAAS,IADc,IAE/BE,EAAW9I,EAAKzF,MAAhBuO,QACPA,GAAWA,EAAQjI,4EAInB,OACInF,EAAAC,EAAAC,cAACmN,GAAApN,EAADf,OAAAgK,OAAA,CACIoE,UAAWlO,KAAK8E,MAAMgJ,SAClB9N,KAAKP,MAFb,CAGIsO,OAAQ/N,KAAK+N,OACbC,QAAShO,KAAKgO,kBA/BW7M,IAAMC,eCQ/C,SAAS+M,GAAYlJ,GACjBA,EAAMmG,iBACNnG,EAAMkG,kBAENlG,EAAMmJ,YAAYC,2BDZDR,GACVxE,aAAe,CAClBiF,YAAa,SACbC,OAAQ,QACRC,WAAY,CACRC,eAAgB7N,EAAAC,EAAAC,cAAC4N,GAAA7N,EAAD,CAAgB4E,SAAS,SAAQ7E,EAAAC,EAAAC,cAAC6N,GAAA9N,EAAD,CAAYmB,SAAS,iBCY7D4M,8MAOjBC,UAA+C1N,IAAM2N,cAErDhK,MAAe,CACXgJ,SAAS,EACTtN,MAAO0E,EAAKzF,MAAMe,MAClBuO,UAAW7J,EAAKzF,SAWpBuP,KAAO,WAAQ9J,EAAK2J,UAAUI,SAAW/J,EAAK2J,UAAUI,QAAQD,UAEhEE,UAAY,SAACjK,GAET,GADAC,EAAKzF,MAAMyP,WAAahK,EAAKzF,MAAMyP,UAAUjK,IAC1CA,EAAMkK,iBAET,GAAGlK,EAAMmK,QACL,OAAOnK,EAAM1E,KACb,IAAK,IAGD2E,EAAK8J,OACL,MACJ,IAAK,IACDb,GAAYlJ,GACZC,EAAKC,SAAS,CAAC2I,SAAS,EAAOtN,MAAO0E,EAAKzF,MAAMe,OAAQ0E,EAAK8J,WAKlE,OAAO/J,EAAM1E,KACb,IAAK,QACD,GAAG2E,EAAKzF,MAAM4P,UAAY,MAC1BlB,GAAYlJ,GACZC,EAAK8J,OACL,MACJ,IAAK,SACDb,GAAYlJ,GACZC,EAAKC,SAAS,CAAC2I,SAAS,EAAOtN,MAAO0E,EAAKzF,MAAMe,OAAQ0E,EAAK8J,UAO1EhB,QAAU,SAACjI,GACPb,EAAKC,SAAS,CAAC2I,SAAS,IACxB5I,EAAKzF,MAAMuO,SAAW9I,EAAKzF,MAAMuO,QAAQjI,MAG7CgI,OAAS,SAAChI,GACFb,EAAKJ,MAAMgJ,UAEf5I,EAAKzF,MAAM6P,SAASpK,EAAKJ,MAAMtE,OAC/B0E,EAAKC,SAAS,CAAC2I,SAAS,IACxB5I,EAAKzF,MAAMsO,QAAU7I,EAAKzF,MAAMsO,OAAOhI,OAG3CuJ,SAAW,SAACrK,GACR,IAAMzE,EAAQyE,EAAM8H,OAAOvM,MAC3B0E,EAAKC,SAAS,CAAC3E,QAAOsN,SAAS,6EAG3B,IAAAzB,EACkGrM,KAAKP,MAA7F8P,EADVlD,EACGmD,MAA4DC,GAD/DpD,EACqBiD,SADrBjD,EAC6C7L,MAD7C6L,EAC+DoD,kBAAqBC,EADpF5P,OAAAuI,GAAA,EAAAvI,CAAAuM,EAAA,iDAEG7L,EAASR,KAAK8E,MAAdtE,MAEDmP,EAAUF,GAAmBzP,KAAKP,MAAMe,QAAUA,KAAyB+O,EAEjF,OACI3O,EAAAC,EAAAC,cAACmN,GAAApN,EAADf,OAAAgK,OAAA,GACQ4F,EADR,CAEIE,SAAU5P,KAAK6O,UACfrO,MAAOA,EACPwN,QAAShO,KAAKgO,QACdsB,SAAUtP,KAAKsP,SACfvB,OAAQ/N,KAAK+N,OACbmB,UAAWlP,KAAKkP,UAChBV,WAAY,CAAC1M,MAAO,CAAC+N,UAAWF,EAAU,SAAW,iEA5EjClQ,EAAuCqF,GAGnE,OAFkBA,EAAMiK,UAEXvO,QAAUf,EAAMe,MAAe,CAACA,MAAOf,EAAMe,MAAOuO,UAAWtP,GAErE,CAACsP,UAAWtP,UApBkB0B,IAAMC,8ECd7C0O,GAAgF,CAClFrL,GAAIsL,KACJC,KAAMC,KACNC,KAAMC,MA2BKhP,OAAMiP,KAAKC,YAfT,SAAA9Q,GAA+D,IAA7DwB,EAA6DxB,EAA7DwB,QAASrB,EAAoDH,EAApDG,MAAU4Q,EAA0CxQ,OAAAuI,GAAA,EAAAvI,CAAAP,EAAA,qBACtEgC,EAAOuO,GAAQ/O,GACfwP,EAXO,SAACxP,EAAmCrB,GACjD,OAAOqB,GACP,IAAK,KAAM,OAAOrB,EAAMjE,KAAKiC,QAAQG,QACrC,IAAK,OAAQ,OAAO6B,EAAMjE,KAAKiC,QAAQI,QACvC,IAAK,OAAQ,OAAO4B,EAAMjE,KAAKiC,QAAQK,MACvC,QAAS,QAMWyS,CAASzP,EAASrB,GACtC,OACIkB,EAAAC,EAAAC,cAACS,EAADzB,OAAAgK,OAAA,CACIyG,YAAaA,GACTD,0BC9BVG,GAAS,CACXC,aAAc9P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACd8N,YAAa/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACb+N,KAAMhQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACNgO,YAAajQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACbiO,QAASlQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACTkO,SAAUnQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACVmO,WAAYpQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACZoO,KAAMrQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACNqO,MAAOtQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACPsO,KAAMvQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACNuO,KAAMxQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACNwO,KAAMzQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACNyO,SAAU1Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACV0O,OAAQ3Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,sBAON2O,GAAQ,SAAC/R,GAAD,OAAuBgR,GAAOhR,EAAMsB,UAElDyQ,GAAMC,UAAY,CACd1Q,QAAS2Q,KAAUC,MAAM7R,OAAO8R,KAAKnB,MAG1Be,UClBMK,eAUjB,SAAAA,EAAYpS,GAAM,IAAAyF,EAAA,OAAApF,OAAAC,EAAA,EAAAD,CAAAE,KAAA6R,IACd3M,EAAApF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+R,GAAA/K,KAAA9G,KAAMP,KAHVqS,OAAc,KAIV5M,EAAKJ,MAAQ,CACTiN,MAAM,GAHI7M,mFAMC,IAAAI,EAAAtF,KACfA,KAAKmF,SAAS,CAAC4M,MAAM,IACrB/R,KAAK8R,OAASE,WAAW,WACrB1M,EAAKH,SAAS,CAAC4M,MAAM,KACtB/R,KAAKP,MAAMwS,SAAW,oDAGzBC,aAAalS,KAAK8R,yCAGlB,OAAG9R,KAAKP,MAAMsS,MAAQ/R,KAAK8E,MAAMiN,KACtB/R,KAAKP,MAAMyB,SAGflB,KAAKP,MAAM0S,YAAc,YA9BLhR,IAAMC,eCHpBgR,eAOjB,SAAAA,EAAY3S,GAAM,IAAAyF,EAAA,OAAApF,OAAAC,EAAA,EAAAD,CAAAE,KAAAoS,IACdlN,EAAApF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsS,GAAAtL,KAAA9G,KAAMP,KAPF4S,SAMU,EAAAnN,EAUlBoN,YAAc,WACVpN,EAAKC,SAAS,SAAAL,GAAK,MAAK,CAACyN,OAAQzN,EAAMyN,UAXzBrN,EAclBsN,QAAU,kBAAMtN,EAAKC,SAAS,CAACoN,OAAO,KAdpBrN,EAelBuN,SAAW,kBAAMvN,EAAKC,SAAS,CAACoN,OAAO,KAZnCrN,EAAKmN,IAAMlR,IAAM2N,YAEjB5J,EAAKJ,MAAQ,CACTyN,OAAO,GANGrN,wEAiBV,IAAAmH,EAC6BrM,KAAKP,MAA/ByB,EADHmL,EACGnL,SAAawR,EADhB5S,OAAAuI,GAAA,EAAAvI,CAAAuM,EAAA,cAGJ,OACIzL,EAAAC,EAAAC,cAAA,MAAAhB,OAAAgK,OAAA,CACIuI,IAAKrS,KAAKqS,IACVM,aAAc3S,KAAKwS,QACnBI,aAAc5S,KAAKyS,UACfC,GAEHxR,EAASlB,KAAK8E,MAAMyN,MAAOvS,KAAKqS,aAlCVlR,IAAMC,eCExByR,eAOjB,SAAAA,EAAYpT,GAAM,IAAAyF,EAAA,OAAApF,OAAAC,EAAA,EAAAD,CAAAE,KAAA6S,IACd3N,EAAApF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+S,GAAA/L,KAAA9G,KAAMP,KAWVqT,KAAO,kBAAM5N,EAAKC,SAAS,SAAAL,GACvB,OAAGI,EAAKzF,MAAMsT,QAAUjO,EAAM4G,MAAQ,GAAKxG,EAAKzF,MAAMsT,OAAejO,EAC9D,CAAC4G,MAAO5G,EAAM4G,MAAQ,MAdfxG,EAgBlB8N,KAAO,kBAAM9N,EAAKC,SAAS,SAAAL,GACvB,OAAGA,EAAM4G,MAAQ,EAAI,EAAU5G,EACxB,CAAC4G,MAAO5G,EAAM4G,MAAQ,MAhB7BxG,EAAKJ,MAAQ,CAAC4G,MAAOjM,EAAMiM,OAAS,GAFtBxG,wEAqBV,IAAAmH,EAC6BrM,KAAKP,MAA/ByB,EADHmL,EACGnL,SAAawR,EADhB5S,OAAAuI,GAAA,EAAAvI,CAAAuM,EAAA,cAGJ,OACIzL,EAAAC,EAAAC,cAAA,MAAS4R,EACJxR,EAASlB,KAAK8E,MAAM4G,MAAO1L,KAAK8S,KAAM9S,KAAKgT,0DArBxBjM,GAC5B,OAAGA,EAAUkM,eAAe,SACjB,CAACvH,MAAO3E,EAAU2E,OAEtB,YAhBqBvK,IAAMC,0OCD1C,IAEM8R,GAAOC,YAAHC,MAIJC,GAAmDC,YAN1B,SAAA/T,KAAEgU,KAAF,IAAWnL,EAAXtI,OAAAuI,GAAA,EAAAvI,CAAAP,EAAA,iBAA4CqB,EAAAC,EAAAC,cAAC0S,GAAA3S,EAAYuH,KAMlChJ,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGgU,CAAH,8wBAE5CJ,GACyB,SAAA7P,GAAA,OAAAA,EAAEkQ,KAAiB,EAAI,YAGhDL,GACyB,SAAAtO,GAAA,OAAAA,EAAE2O,KAAiB,EAAI,YAGhDL,GACyB,SAAAO,GAAA,OAAAA,EAAEF,KAAiB,EAAI,YAGhDL,GACyB,SAAAQ,GAAA,OAAAA,EAAEH,KAAiB,EAAI,YAGhDL,GACyB,SAAAS,GAAA,OAAAA,EAAEJ,KAAiB,EAAI,aA4C3CpS,OAAMiP,KAAK,SAAC3Q,GAAD,OACtBmB,EAAAC,EAAAC,cAACuS,GAADvT,OAAAgK,OAAA,GACQrK,EADR,CAEImU,QAAQ,YACRC,SAAS,UACTC,YAAY,MAEZlT,EAAAC,EAAAC,cAAA,QAAMiT,EAAE,8UAA8UnL,GAAG,UACzVhI,EAAAC,EAAAC,cAAA,QAAMiT,EAAE,8QAA8QnL,GAAG,UACzRhI,EAAAC,EAAAC,cAAA,QAAMiT,EAAE,6bAA6bnL,GAAG,UACxchI,EAAAC,EAAAC,cAAA,QAAMiT,EAAE,ySAAySnL,GAAG,UACpThI,EAAAC,EAAAC,cAAA,QAAMiT,EAAE,sSAAsSnL,GAAG,aCvF5SoL,GAAiB7S,IAAMiP,KAAK,SAAC3Q,GAAD,OACrCmB,EAAAC,EAAAC,cAAC0S,GAAA3S,EAADf,OAAAgK,OAAA,GAAarK,EAAb,CAAoBmU,QAAQ,kBACxBhT,EAAAC,EAAAC,cAAA,QAAMiT,EAAE,kDAAkDE,KAAK,YAC/DrT,EAAAC,EAAAC,cAAA,QAAMiT,EAAE,yEAAyEE,KAAK,YACtFrT,EAAAC,EAAAC,cAAA,QAAMiT,EAAE,kCAAkCE,KAAK,YAC/CrT,EAAAC,EAAAC,cAAA,QAAMiT,EAAE,qFAAqFE,KAAK,eAc3FC,GANQ,SAACzU,GAAD,OACnBmB,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAMiC,KAAK,2BAA2BiK,OAAO,SAASoH,IAAI,cACtDvT,EAAAC,EAAAC,cAACkT,GAADlU,OAAAgK,OAAA,CAAgB9H,SAAS,SAAYvC,EAAM6Q,mCCdtC8D,GAAajT,IAAMiP,KAAK,SAAC3Q,GAAD,OACjCmB,EAAAC,EAAAC,cAAC0S,GAAA3S,EAAYpB,EACTmB,EAAAC,EAAAC,cAAA,QAAMiT,EAAE,gZAoBDM,GAVI,SAAC5U,GAChB,OACImB,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAMiC,KAAI,gDAAAwR,OAAkD7U,EAAMyT,KAAN,IAAAoB,OAAiB7U,EAAMyT,MAAS,IAAMnG,OAAO,SAASoH,IAAI,cAClHvT,EAAAC,EAAAC,cAACyT,GAAA1T,EAAD,CAAS+E,MAAOnG,EAAM+U,QAAU/U,EAAM+U,QAAU,kBAC5C5T,EAAAC,EAAAC,cAACsT,GAADtU,OAAAgK,OAAA,CAAY9H,SAAUvC,EAAM6Q,WAAa7Q,EAAM6Q,UAAUtO,UAAY,SAAavC,EAAM6Q,yNCTxG,IAAMmE,GAAY1V,IAAO+E,IAAV4Q,MAiDAC,GAzCF,WACT,OACI/T,EAAAC,EAAAC,cAAC2T,GAAD,KACI7T,EAAAC,EAAAC,cAAC8T,GAAD,CAAarB,MAAI,EAACtR,MAAM,UAAUD,SAAS,UAAUF,MAAO,CAACE,SAAU,OACvEpB,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,KAAKkB,MAAM,UAAU6S,WAAS,GAAlD,yBAGAlU,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,KAAKgU,MAAM,SAAS9S,MAAM,gBAAgB6S,WAAS,GAAvE,qEACsElU,EAAAC,EAAAC,cAAA,WADtE,wEAEyEF,EAAAC,EAAAC,cAAA,YAEzEF,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMoU,WAAS,EAACC,QAAQ,UACpBtU,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,EAACC,GAAI,EAAGtT,MAAO,CAAC+G,QAAS,OAAQC,WAAY,SAAUuM,cAAe,WAC5EzU,EAAAC,EAAAC,cAACwU,GAAAzU,EAAD,CAAMoC,IAAE,EAACsS,QAAM,EAACzT,MAAO,CAAC0T,gBAAiB,UACrC5U,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAMiC,KAAK,2BAA2BiK,OAAO,SAASoH,IAAI,cACtDvT,EAAAC,EAAAC,cAACkT,GAAD,CAAgBlS,MAAO,CAACE,SAAU,SAG1CpB,EAAAC,EAAAC,cAACwU,GAAAzU,EAAD,CAAMoC,IAAE,EAACsS,QAAM,EAACzT,MAAO,CAAC0T,gBAAiB,UACrC5U,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,MAApB,4BAC6BH,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAMiC,KAAK,2BAA2BiK,OAAO,SAASoH,IAAI,cAA1D,WAIrCvT,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,EAACC,GAAI,EAAGtT,MAAO,CAAC+G,QAAS,OAAQC,WAAY,SAAUuM,cAAe,WAC5EzU,EAAAC,EAAAC,cAACwU,GAAAzU,EAAD,CAAMoC,IAAE,EAACsS,QAAM,EAACzT,MAAO,CAAC0T,gBAAiB,UACrC5U,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAMiC,KAAK,gDAAgDiK,OAAO,SAASoH,IAAI,cAC3EvT,EAAAC,EAAAC,cAACsT,GAAD,CAAYtS,MAAO,CAACE,SAAU,KAAMC,MAAM,cAGlDrB,EAAAC,EAAAC,cAACwU,GAAAzU,EAAD,CAAMoC,IAAE,EAACsS,QAAM,EAACzT,MAAO,CAAC0T,gBAAiB,WACrC5U,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,MAApB,kBACmBH,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAMiC,KAAK,gDAAgDiK,OAAO,SAASoH,IAAI,cAA/E,kPCjC9BsB,4DAAb,SAAA7V,GAAA,SAAA6V,IAAA,IAAAC,EAAAxQ,EAAApF,OAAAC,EAAA,EAAAD,CAAAE,KAAAyV,GAAA,QAAAE,EAAAvV,UAAA2S,OAAA6C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA1V,UAAA0V,GAAA,OAAA5Q,EAAApF,OAAAG,EAAA,EAAAH,CAAAE,MAAA0V,EAAA5V,OAAAI,EAAA,EAAAJ,CAAA2V,IAAA3O,KAAA3G,MAAAuV,EAAA,CAAA1V,MAAAsU,OAAAsB,MACIrW,KAAwC4B,IAAM2N,YADlD5J,EAWI6Q,UAAY,WACJ7Q,EAAK3F,KAAK0P,SACd+G,KAAMC,iBAAiB/Q,EAAK3F,KAAK0P,UAbzC/J,EAAA,OAAApF,OAAAO,EAAA,EAAAP,CAAA2V,EAAA7V,GAAAE,OAAAQ,EAAA,EAAAR,CAAA2V,EAAA,EAAAlV,IAAA,oBAAAC,MAAA,WAIQR,KAAK+V,cAJb,CAAAxV,IAAA,qBAAAC,MAAA,WAQQR,KAAK+V,cARb,CAAAxV,IAAA,SAAAC,MAAA,WAiBQ,OACII,EAAAC,EAAAC,cAAA,OAAKuR,IAAKrS,KAAKT,KAAM2W,UAAS,YAAA5B,OAActU,KAAKP,MAAM0W,WACnDvV,EAAAC,EAAAC,cAAA,QAAMoV,UAAS,YAAA5B,OAActU,KAAKP,MAAM0W,WACnCnW,KAAKP,MAAMyB,eApBhCuU,EAAA,CAA0BtU,IAAMC,0BCdjBgV,GAJCC,aAAkB,CAC9BC,SAAU,GACVC,SAAU,UCQOC,8MACjB/T,QAAU,SAACwC,GACPC,EAAKzF,MAAMgD,SAAWyC,EAAKzF,MAAMgD,QAAQwC,IAEtCA,EAAMkK,kBAAqBjK,EAAKzF,MAAMgX,KAGzCxR,EAAMmG,iBACNgL,GAAQM,KAAKxR,EAAKzF,MAAMgX,GAAGE,yFAGvB,IAAAtK,EACoCrM,KAAKP,MAAtCgX,EADHpK,EACGoK,GAAI3T,EADPuJ,EACOvJ,KAAM8T,EADbvK,EACauK,UAAcxO,EAD3BtI,OAAAuI,GAAA,EAAAvI,CAAAuM,EAAA,2BAEJ,OAAOzL,EAAAC,EAAAC,cAACiC,EAAAlC,EAADf,OAAAgK,OAAA,GACC1B,EADD,CAEHtF,KAAM2T,GAAMA,EAAGE,eAAiB7T,EAChC8T,UAAWA,GAAa,OACxBzC,IAA2B,WAAtBnU,KAAKP,MAAMsN,OAAsB,kBAAe8J,EACrDpU,QAASzC,KAAKyC,kBAlBQtB,IAAMC,eAuBlC0V,GAAa/X,YAAOyX,IAAVpX,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGP,CAAH,wCAQHgY,GAAS,SAACtX,GACnB,IAAMmJ,EAAE,IAAA0L,OAFU0C,OAAOC,SAASC,KAAKC,MAAM,KAAK,GAE1C,KAAA7C,OAAoB7U,EAAMmJ,GAAG+N,eACrC,OACI/V,EAAAC,EAAAC,cAACgW,GAAD,CAAYlO,GAAIA,EAAI6N,GAAI7N,GAAxB,MCxBKwO,GAAO,SAAC3X,GAAD,OAAWmB,EAAAC,EAAAC,cAACgK,GAAAjK,EAAD,CAAOiB,MAAO,CAACuV,QAAS,GAAIC,aAAc,KAAM7X,EAAMyB,WAcxEqW,GAAY,SAAC9X,GACtB,OACImB,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMoU,WAAS,EAACC,QAAQ,gBAAgBpM,WAAW,YAC/ClI,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,GACNvU,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,MACftB,EAAMyB,SADX,IACqBN,EAAAC,EAAAC,cAAC0W,GAAD,CAAQ5O,GAAInJ,EAAMyB,aAG1CzB,EAAMgY,SAAWhY,EAAMiY,SAClB9W,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,EAACC,GAAI,EAAGH,WAAS,EAAC3R,QAAS,GAAI4R,QAAQ,YAC9CzV,EAAMiY,UAAY9W,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,GAACvU,EAAAC,EAAAC,cAAC6W,GAAD,CAAY3V,SAAS,UAAUC,MAAM,YAAYiR,KAAI,8BAAAoB,OAAgC7U,EAAMiY,UAAYlD,QAAO,wBAAAF,OAA0B7U,EAAMyB,aAC3KzB,EAAMgY,SAAW7W,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,GAACvU,EAAAC,EAAAC,cAAC6W,GAAD,CAAY3V,SAAS,UAAUC,MAAM,UAAUiR,KAAI,uBAAAoB,OAAyB7U,EAAMgY,SAAWjD,QAAO,mBAAAF,OAAqB7U,EAAMyB,cAE9J,OAKL0W,GAAW,SAACnY,GAAD,OAAWmB,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,YAAY+T,WAAS,GAAErV,EAAMyB,WACvE2W,GAAc,SAACpY,GAAD,OACvBmB,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAACgW,UAAW,KACpBlX,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,aAApB,WACAH,EAAAC,EAAAC,cAACiX,GAAAlX,EAAD,MACAD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMoU,WAAS,EAAC3R,QAAS,GAAIwF,WAAW,UACnCrJ,EAAMyB,UAAY2U,MAAMmC,QAAQvY,EAAMyB,UACjCzB,EAAMyB,SAASsM,IAAI,SAACyK,EAAOxK,GAAR,OACjB7M,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,EAAC5U,IAAKkN,EAAG2H,GAAU,IAAN3H,GAAU,IAC5BwK,KAGPrX,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,EAACC,GAAI,IAAM3V,EAAMyB,aAMhCgX,GAAY,SAACzY,GAAD,OACrBmB,EAAAC,EAAAC,cAACqX,GAAAtX,EAAD,KACID,EAAAC,EAAAC,cAACsX,GAAAvX,EAAD,CAAuBwX,WAAYzX,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,OAC/BD,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,MAApB,UAEJH,EAAAC,EAAAC,cAACwX,GAAAzX,EAAD,KACID,EAAAC,EAAAC,cAACyX,GAAA1X,EAAD,KACID,EAAAC,EAAAC,cAAC0X,GAAA3X,EAAD,KACID,EAAAC,EAAAC,cAAC2X,GAAA5X,EAAD,KACID,EAAAC,EAAAC,cAAC4X,GAAA7X,EAAD,aACAD,EAAAC,EAAAC,cAAC4X,GAAA7X,EAAD,aACAD,EAAAC,EAAAC,cAAC4X,GAAA7X,EAAD,gBACAD,EAAAC,EAAAC,cAAC4X,GAAA7X,EAAD,sBAGRD,EAAAC,EAAAC,cAAC6X,GAAA9X,EAAD,KACKpB,EAAMyB,cAcd0X,GAAW,SAACnZ,GAAD,OACpBmB,EAAAC,EAAAC,cAAC2X,GAAA5X,EAAD,KACID,EAAAC,EAAAC,cAAC4X,GAAA7X,EAAD,KAAWD,EAAAC,EAAAC,cAAA,YAAOrB,EAAMoZ,OACxBjY,EAAAC,EAAAC,cAAC4X,GAAA7X,EAAD,KAAWD,EAAAC,EAAAC,cAAA,YAAOrB,EAAMqZ,OACxBlY,EAAAC,EAAAC,cAAC4X,GAAA7X,EAAD,KAAWD,EAAAC,EAAAC,cAAA,YAAOrB,EAAMsZ,UACxBnY,EAAAC,EAAAC,cAAC4X,GAAA7X,EAAD,KAAWD,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,KAAapB,EAAMuZ,gBAKzBC,GAAW,SAACxZ,GAAD,OACpBmB,EAAAC,EAAAC,cAACqX,GAAAtX,EAAD,KACID,EAAAC,EAAAC,cAACsX,GAAAvX,EAAD,CAAuBwX,WAAYzX,EAAAC,EAAAC,cAACoY,GAAArY,EAAD,OAC/BD,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,MAApB,cAAAuT,OAAwC7U,EAAM0W,SAA9C,OAEJvV,EAAAC,EAAAC,cAACwX,GAAAzX,EAAD,KACID,EAAAC,EAAAC,cAACqY,GAAS1Z,0BC7GD2Z,8MACjBtU,MAA2B,CACvB/D,QAAS,8EAGL,IAAAuE,EAAAtF,KACJ,OACIY,EAAAC,EAAAC,cAACuY,GAAD,KACIzY,EAAAC,EAAAC,cAACwY,GAAD,CAAW5B,SAAS,mBAAmBD,QAAQ,gBAA/C,YACA7W,EAAAC,EAAAC,cAACyY,GAAD,wDACoD3Y,EAAAC,EAAAC,cAAA,WADpD,wBAEyBF,EAAAC,EAAAC,cAAA,qBAFzB,OAE+CF,EAAAC,EAAAC,cAAA,2BAF/C,gDAIAF,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,UAAUC,KAAK,mBAAmBC,QAAQ,GAAGC,YAAY,KACxEpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,MAAMC,KAAK,eAAeC,QAAQ,GAAGC,YAAY,6CAEpEpY,EAAAC,EAAAC,cAAC4Y,GAAD,KACI9Y,EAAAC,EAAAC,cAAC6Y,GAAD,CAAU5Y,QAASf,KAAK8E,MAAM/D,QAASiB,SAAS,UAChDpB,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CACI+Y,QAAM,EACNpZ,MAAOR,KAAK8E,MAAM/D,QAClBuO,SAAU,SAAAvJ,GAAC,OAAIT,EAAKH,SAAS,CAACpE,QAASgF,EAAEgH,OAAOvM,SAChD8B,MAAM,WAEN1B,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,MAAhB,MACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,QAAhB,QACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,QAAhB,kBA3BkBW,IAAMC,eCG3B0Y,8MACjBhV,MAAwB,CACpB7C,MAAO,OACPqH,KAAM,WAGVyQ,aAAe,SAACxZ,GAAD,OAA+B,SAAC0E,GAAD,OAAiDC,EAAKC,SAALrF,OAAAka,GAAA,EAAAla,CAAA,GAAgBS,EAAM0E,EAAM8H,OAAOvM,kFAG9H,OACII,EAAAC,EAAAC,cAACuY,GAAD,KACIzY,EAAAC,EAAAC,cAACwY,GAAD,CAAW5B,SAAS,oBAAoBD,QAAQ,iBAAhD,aACA7W,EAAAC,EAAAC,cAACyY,GAAD,4CAGA3Y,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,QAAQC,KAAK,eAAeC,QAAQ,QAAQC,YAAY,KACvEpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,OAAOC,KAAK,iBAAiBC,QAAQ,SAASC,YAAY,KACzEpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,WAAWC,KAAK,kBAAkBC,QAAQ,GAAGC,YAAY,MAG5EpY,EAAAC,EAAAC,cAAC4Y,GAAD,KACI9Y,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMoU,WAAS,EAACnM,WAAW,SAASxF,QAAS,IACzC1C,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,GACNvU,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAACmY,gBAAsC,UAArBja,KAAK8E,MAAM7C,MAAoB,UAAY,UAAWoV,QAAS,KACzFzW,EAAAC,EAAAC,cAACoZ,GAAD,CACI5Q,KAAMtJ,KAAK8E,MAAMwE,KACjBrH,MAAOjC,KAAK8E,MAAM7C,OAFtB,UAMRrB,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,GACNvU,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,WAApB,iEAA4FH,EAAAC,EAAAC,cAAA,WAA5F,wEAGRF,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CACI+Y,QAAM,EACNtX,MAAM,OACN9B,MAAOR,KAAK8E,MAAMwE,KAClBgG,SAAUtP,KAAK+Z,aAAa,SAE5BnZ,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,UAAhB,UACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,SAAhB,UAEJI,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CACI+Y,QAAM,EACNtX,MAAM,QACN9B,MAAOR,KAAK8E,MAAM7C,MAClBqN,SAAUtP,KAAK+Z,aAAa,UAE5BnZ,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,SAAhB,SACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,QAAhB,kBAnDmBW,IAAMC,oCCJ3C+Y,GAA0D,CAC5Dtc,QAAS,oBACToK,KAAM,4BACNnK,QAAS,gCACTiK,MAAO,2BAGUqS,8MACjBtV,MAAQ,CACJ/D,QAAS,UACTvB,MAAM,EACNkJ,QAAS,uBAGb1H,QAAU,kBAAMkE,EAAKC,SAAS,CAAC3F,MAAM,OAErC6a,QAAU,SAACtZ,GACP,IAAM2H,EAAUyR,GAAepZ,GAC/B,OAAO,kBAAMmE,EAAKC,SAAS,CAAC3F,MAAM,EAAMkJ,UAAS3H,sFAIjD,OACIH,EAAAC,EAAAC,cAACuY,GAAD,KACIzY,EAAAC,EAAAC,cAACwY,GAAD,CAAW5B,SAAS,gBAAgBD,QAAQ,aAA5C,SACA7W,EAAAC,EAAAC,cAACyY,GAAD,oGACA3Y,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,UAAUC,KAAK,qBAAqBE,YAAY,kDAC/DpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,UAAUC,KAAK,mCAAmCE,YAAY,yFAC7EpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,UAAUC,KAAK,aAAaE,YAAY,2DAE3DpY,EAAAC,EAAAC,cAACwZ,GAAD,CAAUnE,SAAS,OAAnB,0mCAsCAvV,EAAAC,EAAAC,cAAC4Y,GAAD,KACI9Y,EAAAC,EAAAC,cAACyZ,GAAA1Z,EAAD,CACIrB,KAAMQ,KAAK8E,MAAMtF,KACjB6G,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBiU,iBAAkB,IAClBxZ,QAAShB,KAAKgB,SAEdJ,EAAAC,EAAAC,cAAC2Z,GAAD,CACIzZ,QAAShB,KAAKgB,QACd0H,QAAS1I,KAAK8E,MAAM4D,QACpB3H,QAASf,KAAK8E,MAAM/D,WAG5BH,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAQE,QAAQ,WAAW0B,QAASzC,KAAKqa,QAAQ,YAAjD,gBACAzZ,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAQE,QAAQ,WAAW0B,QAASzC,KAAKqa,QAAQ,SAAjD,aACAzZ,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAQE,QAAQ,WAAW0B,QAASzC,KAAKqa,QAAQ,YAAjD,gBACAzZ,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAQE,QAAQ,WAAW0B,QAASzC,KAAKqa,QAAQ,UAAjD,uBAjFmBlZ,IAAMC,eCZxBsZ,oLAEb,OACI9Z,EAAAC,EAAAC,cAACuY,GAAD,KACIzY,EAAAC,EAAAC,cAACwY,GAAD,CAAW5B,SAAS,sBAAsBD,QAAQ,mBAAlD,eACA7W,EAAAC,EAAAC,cAACyY,GAAD,0FACA3Y,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,cAAcC,KAAK,oBAAoBC,QAAQ,SAASC,YAAY,KACnFpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,SAASC,KAAK,mCAAmCC,QAAQ,QAAQC,YAAY,KAC5FpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,aAAaC,KAAK,0CAA0CC,QAAQ,sGAAsGC,YAAY,KACrMpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,MAAMC,KAAK,iBAAiBC,QAAQ,GAAGC,YAAY,+CAEtEpY,EAAAC,EAAAC,cAAC4Y,GAAD,KACI9Y,EAAAC,EAAAC,cAAC6Z,GAAD,eAbyBxZ,IAAMC,eCM9BwZ,8MACjB9V,MAAQ,CACJtE,MAAO,OACPgP,OAAO,EACPC,kBAAkB,KAGtBoL,QAAU,WACN3V,EAAKC,SAAS,CAAC3E,MAAO,8EAGlB,IAAA8E,EAAAtF,KACJ,OACIY,EAAAC,EAAAC,cAACuY,GAAD,KACIzY,EAAAC,EAAAC,cAACwY,GAAD,CAAW5B,SAAS,0BAA0BD,QAAQ,uBAAtD,mBACA7W,EAAAC,EAAAC,cAACyY,GAAD,0EACA3Y,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,QAAQC,KAAK,SAASC,QAAQ,GAAGC,YAAY,KAC5DpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,WAAWC,KAAK,0BAA0BC,QAAQ,GAAGC,YAAY,wIAChFpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,QAAQC,KAAK,qBAAqBC,QAAQ,QAAQC,YAAY,qDAC7EpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,mBAAmBC,KAAK,qBAAqBC,QAAQ,QAAQC,YAAY,wEACxFpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,MAAMC,KAAK,iBAAiBE,YAAY,+CAE3DpY,EAAAC,EAAAC,cAACqX,GAAAtX,EAAD,KACID,EAAAC,EAAAC,cAACsX,GAAAvX,EAAD,CAAuBwX,WAAYzX,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,OAC/BD,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,qBAEJD,EAAAC,EAAAC,cAACwX,GAAAzX,EAAD,KACID,EAAAC,EAAAC,cAAA,8EAC+EF,EAAAC,EAAAC,cAAA,WAD/E,4DAEyEF,EAAAC,EAAAC,cAAA,WAFzE,sEAGyFF,EAAAC,EAAAC,cAAA,WAHzF,kEAImFF,EAAAC,EAAAC,cAAA,YAEnFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yHAAmHF,EAAAC,EAAAC,cAAA,aAG3HF,EAAAC,EAAAC,cAAC4Y,GAAD,KACI9Y,EAAAC,EAAAC,cAACga,GAAD,CACIta,MAAOR,KAAK8E,MAAMtE,MAClBiP,iBAAkBzP,KAAK8E,MAAM2K,iBAC7BD,MAAOxP,KAAK8E,MAAM0K,MAClBF,SAAU,SAAC9O,GAAD,OAAmB8E,EAAKH,SAAS,CAAC3E,aAEhDI,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAQE,QAAQ,WAAW0B,QAAS,kBAAM6C,EAAKH,SAAS,CAAC3E,MAAO,WAAhE,SACAI,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAQE,QAAQ,WAAW0B,QAAS,kBAAM6C,EAAKH,SAAS,CAACqK,OAAQlK,EAAKR,MAAM0K,UAA5E,UAA6FxP,KAAK8E,MAAM0K,MAAMuL,YAC9Gna,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAQE,QAAQ,WAAW0B,QAAS,kBAAM6C,EAAKH,SAAS,CAACsK,kBAAmBnK,EAAKR,MAAM2K,qBAAvF,uBAAgIzP,KAAK8E,MAAM2K,iBAAiBsL,qBA/C/H5Z,IAAMC,eCLlC4Z,8MACjBlW,MAAQ,CACJmW,wBAAwB,KAG5BC,8BAAgC,WAC5BhW,EAAKC,SAAS,CAAC8V,wBAAwB,6EAGnC,IAAA3V,EAAAtF,KACJ,OACIY,EAAAC,EAAAC,cAACuY,GAAD,KACIzY,EAAAC,EAAAC,cAACwY,GAAD,CAAW5B,SAAS,6BAA6BD,QAAQ,0BAAzD,sBACA7W,EAAAC,EAAAC,cAACyY,GAAD,kDACA3Y,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,OAAOC,KAAK,UAAUC,QAAQ,GAAGC,YAAY,gBAC5DpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,QAAQC,KAAK,oBAAoBC,QAAQ,GAAGC,YAAY,iBACvEpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,UAAUC,KAAK,SAASC,QAAQ,GAAGC,YAAY,mBAC9DpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,eAAeC,KAAK,SAASC,QAAQ,GAAGC,YAAY,KACnEpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,mBAAmBC,KAAK,SAASC,QAAQ,GAAGC,YAAY,KACvEpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,OAAOC,KAAK,WAAWC,QAAQ,GAAGC,YAAY,KAC7DpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,WAAWC,KAAK,WAAWC,QAAQ,GAAGC,YAAY,MAErEpY,EAAAC,EAAAC,cAAC4Y,GAAD,KACI9Y,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAQE,QAAQ,WAAW0B,QAASzC,KAAKkb,+BAAzC,2BACAta,EAAAC,EAAAC,cAACqa,GAAD,CACI3b,KAAMQ,KAAK8E,MAAMmW,uBACjB9Q,aAAa,KACbC,iBAAiB,SACjBF,KAAM,kBAAM5E,EAAKH,SAAS,CAAC8V,wBAAwB,KACnDhR,SAAU,kBAAM3E,EAAKH,SAAS,CAAC8V,wBAAwB,KACvDvS,QAAQ,8BACR9C,MAAM,uCAhCsBzE,IAAMC,eCMrCga,oLAEb,OACIxa,EAAAC,EAAAC,cAACuY,GAAD,KACIzY,EAAAC,EAAAC,cAACwY,GAAD,CAAW7B,QAAQ,YAAYC,SAAS,iBAAxC,SACA9W,EAAAC,EAAAC,cAACyY,GAAD,sCACA3Y,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,UAAUC,KAAK,SAASC,QAAQ,GAAGC,YAAY,MAElEpY,EAAAC,EAAAC,cAAC4Y,GAAD,KACI9Y,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,MAChBH,EAAAC,EAAAC,cAACua,GAAD,CAAOta,QAAQ,UACfH,EAAAC,EAAAC,cAACua,GAAD,CAAOta,QAAQ,aACfH,EAAAC,EAAAC,cAACua,GAAD,CAAOta,QAAQ,mBAbAI,IAAMC,eCA9Bka,GAAA,kBAAO1a,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KAClBjC,EAAAC,EAAAC,cAACya,GAAD,MACA3a,EAAAC,EAAAC,cAAC0a,GAAD,MACA5a,EAAAC,EAAAC,cAAC2a,GAAD,MACA7a,EAAAC,EAAAC,cAAC4a,GAAD,MAEA9a,EAAAC,EAAAC,cAAC6a,GAAD,MACA/a,EAAAC,EAAAC,cAAC8a,GAAD,MACAhb,EAAAC,EAAAC,cAAC+a,GAAD,0FCViBC,oLAEb,OACIlb,EAAAC,EAAAC,cAACF,EAAAC,EAAMgC,SAAP,KACIjC,EAAAC,EAAAC,cAACib,GAAD,MACAnb,EAAAC,EAAAC,cAACkb,GAAD,MACApb,EAAAC,EAAAC,cAACmb,GAAD,cANmB9a,IAAMC,eAYnC8a,oLAEE,OACItb,EAAAC,EAAAC,cAACuY,GAAD,KACIzY,EAAAC,EAAAC,cAACwY,GAAD,CAAW5B,SAAS,YAAYD,QAAQ,aAAxC,SACA7W,EAAAC,EAAAC,cAACyY,GAAD,6GACA3Y,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,aAAaC,KAAK,qCAAqCC,QAAQ,GAAGC,YAAY,uDAC7FpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,UAAUC,KAAK,oBAAoBC,QAAQ,OAAOC,YAAY,qBAC7EpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,OAAOC,KAAK,qBAAqBC,QAAQ,QAAQC,YAAY,uBAC5EpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,WAAWC,KAAK,gBAAgBC,QAAQ,GAAGC,YAAY,iCAE1EpY,EAAAC,EAAAC,cAAC4Y,GAAD,KACI9Y,EAAAC,EAAAC,cAACqb,GAAD,CAAOhK,WAAW,wBACdvR,EAAAC,EAAAC,cAACsb,GAAAvb,EAAD,gBAdAM,IAAMC,eAsBxBib,oLAEE,OACIzb,EAAAC,EAAAC,cAACuY,GAAD,KACIzY,EAAAC,EAAAC,cAACwY,GAAD,CAAW5B,SAAS,YAAYD,QAAQ,iBAAxC,aACA7W,EAAAC,EAAAC,cAACyY,GAAD,4DACA3Y,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,WAAWC,KAAK,mDAAmDC,QAAQ,GAAGC,YAAY,+CAE7GpY,EAAAC,EAAAC,cAAC4Y,GAAD,KACI9Y,EAAAC,EAAAC,cAACwb,GAAD,KACK,SAAC/J,GAAD,OACG3R,EAAAC,EAAAC,cAACF,EAAAC,EAAMgC,SAAP,KACK0P,EACK3R,EAAAC,EAAAC,cAAA,OAAKP,IAAI,IAAIuB,MAAO,CAACmY,gBAAiB,UAAW5C,QAAS,GAAIpV,MAAO,OAAQsa,OAAQ,YAArF,uBACA3b,EAAAC,EAAAC,cAAA,OAAKP,IAAI,IAAIuB,MAAO,CAACuV,QAAS,GAAImF,OAAQ,SAA1C,wCAfVrb,IAAMC,eA0B5Bqb,oLAGE,OACI7b,EAAAC,EAAAC,cAACuY,GAAD,KACIzY,EAAAC,EAAAC,cAACwY,GAAD,CAAW5B,SAAS,YAAYD,QAAQ,cAAxC,UACA7W,EAAAC,EAAAC,cAACyY,GAAD,4IACA3Y,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,WAAWC,KAAK,kEAAkEC,QAAQ,GAAGC,YAAY,8CACxHpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,QAAQC,KAAK,oBAAoBC,QAAQ,GAAGC,YAAY,+CACvEpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,SAASC,KAAK,oBAAoBC,QAAQ,GAAGC,YAAY,8DAE5EpY,EAAAC,EAAAC,cAAC4Y,GAAD,KACI9Y,EAAAC,EAAAC,cAAC4b,GAAD,CAAQ3J,OAAQA,GACX,SAACrH,EAAOoH,EAAME,GAAd,OACGpS,EAAAC,EAAAC,cAACF,EAAAC,EAAMgC,SAAP,KACIjC,EAAAC,EAAAC,cAAC6b,GAAA9b,EAAD,CAAS+b,WAAYlR,GACjB9K,EAAAC,EAAAC,cAAC+b,GAAAhc,EAAD,CAAMN,IAAI,UACNK,EAAAC,EAAAC,cAACgc,GAAAjc,EAAD,gBAEJD,EAAAC,EAAAC,cAAC+b,GAAAhc,EAAD,CAAMN,IAAI,UACNK,EAAAC,EAAAC,cAACgc,GAAAjc,EAAD,gBAEJD,EAAAC,EAAAC,cAAC+b,GAAAhc,EAAD,CAAMN,IAAI,UACNK,EAAAC,EAAAC,cAACgc,GAAAjc,EAAD,iBAGRD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAQ4B,QAASuQ,EAAM+J,SAAUrR,GAAS,GAA1C,QACA9K,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAQ4B,QAASqQ,EAAMiK,SAAUrR,GA3B9C,GA2Ba,QACCA,GA5Bd,GA4BiC,oCA9B/BvK,IAAMC,eC3DhBD,OAAMiP,KAAK,SAAC3Q,GAAD,OACtBmB,EAAAC,EAAAC,cAAC0S,GAAA3S,EAADf,OAAAgK,OAAA,GACQrK,EADR,CAEImU,QAAQ,oBAERhT,EAAAC,EAAAC,cAAA,QACIiT,EAAG,+kBCTMiJ,oLAEb,OACIpc,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KACIjC,EAAAC,EAAAC,cAACmc,GAAD,MACArc,EAAAC,EAAAC,cAACoc,GAAD,cALmB/b,IAAMC,eAiBnC+b,8MACFrY,MAA0B,CACtB7C,MAAO,UACPD,SAAU,QACVuO,YAAa,MAGjBwJ,aAAe,SAAChN,GAAD,OAAqC,SAAC9H,GACjDC,EAAKC,SAALrF,OAAAka,GAAA,EAAAla,CAAA,GAAgBiN,EAAS9H,EAAM8H,OAAOvM,kFAItC,OACII,EAAAC,EAAAC,cAACuY,GAAD,KACIzY,EAAAC,EAAAC,cAACwY,GAAD,CAAW5B,SAAS,YAAYD,QAAQ,kBAAxC,QACA7W,EAAAC,EAAAC,cAACyY,GAAD,uBACA3Y,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,MAAMC,KAAK,eAAeE,YAAY,yDAEzDpY,EAAAC,EAAAC,cAAC4Y,GAAD,KACI9Y,EAAAC,EAAAC,cAACsc,GAAD,CACInb,MAAOjC,KAAK8E,MAAM7C,MAClBD,SAAUhC,KAAK8E,MAAM9C,SACrBuO,YAAavQ,KAAK8E,MAAMyL,cAE5B3P,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CACI+Y,QAAM,EACNtX,MAAM,QACN9B,MAAOR,KAAK8E,MAAM7C,MAClBqN,SAAUtP,KAAK+Z,aAAa,UAE5BnZ,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,WAAhB,WACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,WAAhB,WACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,aAAhB,aACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,WAAhB,WACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,UAAhB,UACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,YAAhB,YACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,SAAhB,UAEJI,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CACI+Y,QAAM,EACNtX,MAAM,WACN9B,MAAOR,KAAK8E,MAAM9C,SAClBsN,SAAUtP,KAAK+Z,aAAa,aAE5BnZ,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,SAAhB,SACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,WAAhB,WACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,SAAhB,UAGJI,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CACIyB,MAAM,cACNgM,YAAY,UACZ9N,MAAOR,KAAK8E,MAAMyL,YAClBjB,SAAUtP,KAAK+Z,aAAa,0BAtD7B5Y,IAAMC,eA8DvBic,8MACFvY,MAA0B,CACtB7C,MAAO,UACPD,SAAU,QACVuO,YAAa,MAGjBwJ,aAAe,SAAChN,GAAD,OAAqC,SAAC9H,GACjDK,EAAKH,SAALrF,OAAAka,GAAA,EAAAla,CAAA,GAAgBiN,EAAS9H,EAAM8H,OAAOvM,kFAItC,OACII,EAAAC,EAAAC,cAACuY,GAAD,KACIzY,EAAAC,EAAAC,cAACwY,GAAD,CAAW5B,SAAS,YAAYD,QAAQ,yBAAxC,gBACA7W,EAAAC,EAAAC,cAACyY,GAAD,+BACA3Y,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,OAAOC,KAAK,UAAUC,QAAQ,QAAQC,YAAY,wCACjEpY,EAAAC,EAAAC,cAAC2Y,GAAD,CAAUZ,KAAK,MAAMC,KAAK,eAAeE,YAAY,yDAEzDpY,EAAAC,EAAAC,cAAC4Y,GAAD,KACI9Y,EAAAC,EAAAC,cAAC8T,GAAD,CACI3S,MAAOjC,KAAK8E,MAAM7C,MAClBD,SAAUhC,KAAK8E,MAAM9C,SACrBuO,YAAavQ,KAAK8E,MAAMyL,cAE5B3P,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CACI+Y,QAAM,EACNtX,MAAM,QACN9B,MAAOR,KAAK8E,MAAM7C,MAClBqN,SAAUtP,KAAK+Z,aAAa,UAE5BnZ,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,WAAhB,WACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,WAAhB,WACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,aAAhB,aACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,WAAhB,WACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,UAAhB,UACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,YAAhB,YACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,SAAhB,UAEJI,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CACI+Y,QAAM,EACNtX,MAAM,WACN9B,MAAOR,KAAK8E,MAAM9C,SAClBsN,SAAUtP,KAAK+Z,aAAa,aAE5BnZ,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,SAAhB,SACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,WAAhB,WACAI,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAUL,MAAM,SAAhB,UAEJI,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CACIyB,MAAM,cACNgM,YAAY,UACZ9N,MAAOR,KAAK8E,MAAMyL,YAClBjB,SAAUtP,KAAK+Z,aAAa,0BAtDtB5Y,IAAMC,uDC1E9BqP,GAAS,CACXC,aAAc9P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACd8N,YAAa/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACb+N,KAAMhQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACNgO,YAAajQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACbiO,QAASlQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACTkO,SAAUnQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACVmO,WAAYpQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACZoO,KAAMrQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACNqO,MAAOtQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACPsO,KAAMvQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACNuO,KAAMxQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACNwO,KAAMzQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACNyO,SAAU1Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,qBACV0O,OAAQ3Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,sBAGNya,GAAUve,IAAO+E,IAAV1E,WAAA,CAAAC,YAAA,UAAAC,YAAA,YAAGP,CAAH,8CACK,SAAAQ,GAAA,OAAsC,EAAtCA,EAAEG,MAAiBb,IAAIyE,QAAQC,MAC5B,SAAAF,GAAA,OAAsC,EAAtCA,EAAE3D,MAAiBb,IAAIyE,QAAQC,OAG9Cga,GAAa,SAAC9d,GAAD,OAA4BmB,EAAAC,EAAAC,cAAC+T,GAAAhU,EAADf,OAAAgK,OAAA,CAAY/I,QAAQ,KAAK+T,WAAS,GAAKrV,KAChF+d,GAAY,SAAC/d,GAAD,OAA4BmB,EAAAC,EAAAC,cAAC+T,GAAAhU,EAADf,OAAAgK,OAAA,CAAY/I,QAAQ,QAAQ+T,WAAS,GAAKrV,EAA1C,CAAiDge,UAAU,UACnGC,GAAM,SAACje,GAAD,OAAmEmB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KAC3EjC,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,KAAK+T,WAAS,GAAlC,UAA4CrV,EAAMmG,OAClDhF,EAAAC,EAAAC,cAAC6c,GAAA9c,EAAD,CAAMyL,UAAW,GACb1L,EAAAC,EAAAC,cAAC8c,GAAA/c,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,MAApB,QACAH,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,QAAQ0c,UAAU,OAAOhe,EAAMyB,YAG3DN,EAAAC,EAAAC,cAAA,aAGE+c,GAAY,SAACpe,GAAD,OAAmEmB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KACjFjC,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,KAAK+T,WAAS,GAAlC,UAA4CrV,EAAMmG,OAClDhF,EAAAC,EAAAC,cAAC6c,GAAA9c,EAAD,CAAMyL,UAAW,GACb1L,EAAAC,EAAAC,cAAC8c,GAAA/c,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,QAAQ0c,UAAU,OAAOhe,EAAMyB,cAK1C4c,8MACjBC,OAAS,kBAAOnd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KACXqC,EAAK8Y,gBACL9Y,EAAK+Y,mBACL/Y,EAAKgZ,aACLhZ,EAAKiZ,yBAGVH,cAAgB,kBACZpd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KACIjC,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,KAAK+T,WAAS,GAAlC,cAGAlU,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,YAAY+T,WAAS,GACrClU,EAAAC,EAAAC,cAAA,SAAI,UADR,yEAMRmd,iBAAmB,kBACfrd,EAAAC,EAAAC,cAACwc,GAAD,KACI1c,EAAAC,EAAAC,cAACsd,GAAD,gBAAoBxd,EAAAC,EAAAC,cAAC0W,GAAD,CAAQ5O,GAAI,aAChChI,EAAAC,EAAAC,cAACud,GAAD,CAAWzY,MAAM,mBAAjB,uBACwBhF,EAAAC,EAAAC,cAACwd,GAAD,CAAM1H,UAAU,QAAQ9T,KAAK,8BAA8BiK,OAAO,UAAlE,4BADxB,gBAC+InM,EAAAC,EAAAC,cAAA,WAD/I,qCAEsCF,EAAAC,EAAAC,cAACwd,GAAD,CAAM1H,UAAU,QAAQ9T,KAAK,2BAA2BiK,OAAO,UAA/D,sBAAiGnM,EAAAC,EAAAC,cAAA,WAFvI,sDAGuDF,EAAAC,EAAAC,cAAA,2BAHvD,KAGiFF,EAAAC,EAAAC,cAACwd,GAAD,CAAM1H,UAAU,QAAQH,GAAG,UAA3B,kCAKzFyH,WAAa,kBACTtd,EAAAC,EAAAC,cAACwc,GAAD,KACI1c,EAAAC,EAAAC,cAACsd,GAAD,KACK3N,GAAOE,YADZ,kBAC4CF,GAAOC,aADnD,IACiE9P,EAAAC,EAAAC,cAAC0W,GAAD,CAAQ5O,GAAI,YAE7EhI,EAAAC,EAAAC,cAACyd,GAAD,CAAK3Y,MAAOhF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,0BAAZ,wBACyBjC,EAAAC,EAAAC,cAAA,WACrBF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAACqY,GAAD,CAAMhD,SAAS,MAAf,wNAMAvV,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAACqY,GAAD,CAAMhD,SAAS,MAAf,wGAQJvV,EAAAC,EAAAC,cAACyd,GAAD,CAAK3Y,MAAOhF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,oBAAqCjC,EAAAC,EAAAC,cAAA,kCAArC,eAAgFF,EAAAC,EAAAC,cAAA,iCAA5F,qFACsFF,EAAAC,EAAAC,cAAA,WADtF,yFAIAF,EAAAC,EAAAC,cAACyd,GAAD,CAAK3Y,MAAOhF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,kBAAqCjC,EAAAC,EAAAC,cAAA,2CAAjD,8CACgD2P,GAAOI,YAAYjQ,EAAAC,EAAAC,cAAA,WADnE,oBAEqBF,EAAAC,EAAAC,cAACwd,GAAD,CAAM1H,UAAU,QAAQ9T,KAAK,iFAAiFiK,OAAO,UAArH,SAErBnM,EAAAC,EAAAC,cAACyd,GAAD,CAAK3Y,MAAOhF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,sCAAZ,8GAC+GjC,EAAAC,EAAAC,cAAA,WAD/G,6GAORqd,mBAAqB,kBAAOvd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KACxBjC,EAAAC,EAAAC,cAACsd,GAAD,wBACoBxd,EAAAC,EAAAC,cAAA,qCADpB,IACwD2P,GAAOc,OAD/D,IACuE3Q,EAAAC,EAAAC,cAAC0W,GAAD,CAAQ5O,GAAG,kBAElFhI,EAAAC,EAAAC,cAAC0d,GAAD,0CAEI5d,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,0EACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,uFACAF,EAAAC,EAAAC,cAAA,mCAA0BF,EAAAC,EAAAC,cAAA,4BAC1BF,EAAAC,EAAAC,cAAA,sDAA6CF,EAAAC,EAAAC,cAAA,mCAA7C,KACAF,EAAAC,EAAAC,cAAA,2DACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,6EACAF,EAAAC,EAAAC,cAAA,kCAAyBF,EAAAC,EAAAC,cAAA,gBAAzB,8CACAF,EAAAC,EAAAC,cAAA,oDAA2CF,EAAAC,EAAAC,cAAA,8BAA3C,MAAyEF,EAAAC,EAAAC,cAAA,yBAAzE,2BAAuHF,EAAAC,EAAAC,cAAA,sBACvHF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBAAJ,2CAAiEF,EAAAC,EAAAC,cAAA,gCAAjE,KACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBAAJ,wBACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BAAJ,oBAAiDF,EAAAC,EAAAC,cAAA,YACjDF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BAAJ,0BACAF,EAAAC,EAAAC,cAAA,6BAAoBF,EAAAC,EAAAC,cAAA,yBAApB,KAA4CF,EAAAC,EAAAC,cAAA,sBAA5C,KAAiEF,EAAAC,EAAAC,cAAA,sBAAjE,cAKhBF,EAAAC,EAAAC,cAAA,uIAhGwBK,IAAMC,qTCnD9C,IAAMoH,GAAU,SAACvG,GAEb,OADevD,EAAW,KAAX,OACDuD,IAOZwc,GAAM1f,IAAO+E,IAAV4a,KACe,SAAAnf,GAAA,IAAE0C,EAAF1C,EAAE0C,MAAF,OAAA1C,EAASG,MAAiBjE,KAAKD,OAAOyG,KAMxD0c,GAAM5f,IAAO+E,IAAV8a,KAGE,SAAAvb,GAAA,IAAE/E,EAAF+E,EAAE/E,KAAMoB,EAAR2D,EAAQ3D,MAAR,OAAmBpB,EAAO,OAASoB,EAAMb,IAAInB,QAAQW,UAAUI,eAkB3DogB,GAfI,SAACpf,GAA2B,IACnCwC,EAAUxC,EAAVwC,MACR,OACIrB,EAAAC,EAAAC,cAAC2d,GAAD,CAAKxc,MAAOA,GAAZ,qBACuBA,EAAMrB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAC9BF,EAAAC,EAAAC,cAAC6d,GAAD,KAAMnW,GAAQvG,IACdrB,EAAAC,EAAAC,cAAC6d,GAAD,CAAKrgB,MAAI,GAAEkK,GAAQvG,wMC3B/B,IAAM6c,GAAc/f,IAAO+E,IAAVib,MAWIC,oLAEb,OACIpe,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KACIjC,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,MAApB,mBAGAH,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,aAApB,sBAGAH,EAAAC,EAAAC,cAACge,GAAD,KACKhf,OAAO8R,KAAKlT,EAAW,KAAX,QAA+B8O,IAAI,SAAAvL,GAAK,OACjDrB,EAAAC,EAAAC,cAACme,GAAD,CAAYhd,MAAOA,eAZRd,IAAMC,eCNrCqM,GAAI,EACFjS,GAASsE,OAAO8R,KAAKlT,EAAYjD,KAAKD,QACtCgV,GAAW,kBAAM9R,EAAYjD,KAAKD,OAAOA,GAAOiS,QAEhDyR,GAAK,kBACPte,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMoU,WAAS,EAACkK,KAAK,SAASrd,MAAO,CAACuV,QAAS,KAC3CzW,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,GACNvU,EAAAC,EAAAC,cAACoZ,GAAD,CAAWjY,MAAM,SAAjB,SAEJrB,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,EAACC,IAAE,GACTxU,EAAAC,EAAAC,cAAC6Y,GAAD,CAAU5Y,QAAQ,KAAKiB,SAAS,aAKvBod,8MACjBta,MAAe,CACXmI,QAAS,CACL,CACI3D,KAAM,QACNuB,WAAYnM,EAAYjD,KAAKD,OAAOkB,YACpCwE,SAAUN,EAAAC,EAAAC,cAACue,GAAD,OAEd,CACI/V,KAAM,QACNuB,WAAY2F,KACZtP,SAAUN,EAAAC,EAAAC,cAAA,uBAEd,CACIwI,KAAM,QACNuB,WAAY2F,KACZtP,SAAUN,EAAAC,EAAAC,cAAA,uBAEd,CACIwI,KAAM,QACNuB,WAAY2F,KACZtP,SAAUN,EAAAC,EAAAC,cAAA,uBAEd,CACIwI,KAAM,SACNuB,WAAY2F,KACZtP,SAAUN,EAAAC,EAAAC,cAAA,wBAEd,CACIwI,KAAM,QACNuB,WAAY2F,KACZtP,SAAUN,EAAAC,EAAAC,cAAA,uBAEd,CACIwI,KAAM,SACNuB,WAAY2F,KACZtP,SAAUN,EAAAC,EAAAC,cAAA,wBAEd,CACIwI,KAAM,SACNuB,WAAY2F,KACZtP,SAAUN,EAAAC,EAAAC,cAAA,wBAEd,CACIwI,KAAM,QACNuB,WAAY2F,KACZtP,SAAUN,EAAAC,EAAAC,cAAA,2BAKtB6K,QAAU,SAACsB,GACP/H,EAAKC,SAAS,CAAC8H,qFAIf,OACIrM,EAAAC,EAAAC,cAACuY,GAAD,KACIzY,EAAAC,EAAAC,cAACwY,GAAD,CAAW5B,SAAS,mCAAmCD,QAAQ,iBAA/D,aACA7W,EAAAC,EAAAC,cAACyY,GAAD,MACA3Y,EAAAC,EAAAC,cAAC0Y,GAAD,MAGA5Y,EAAAC,EAAAC,cAAC4Y,GAAD,KACI9Y,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CACR+G,QAAS,OACTyW,SAAU,OACVC,eAAgB,eAChBC,UAAW,OACXnI,QAAS,GACTmF,OAAQ,UAGR5b,EAAAC,EAAAC,cAAC2e,GAAD,CACIrS,cAAepN,KAAK2L,QACpB+T,SAAU,aACVzS,QAASjN,KAAK8E,MAAMmI,oBA5EL9L,IAAMC,eCrB5Bue,oLAEb,OACI/e,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KACIjC,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,MAApB,kBAGAH,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CAAYE,QAAQ,aAApB,gHAGAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8e,GAAD,cAZiBze,IAAMC,6IC0BjCye,GAAa,CACfthB,KAAM,CACF+D,MAAO,aACPF,SAAU,yBACV0d,MAAO,CACHnL,KAAMA,GACNmJ,WAAYA,GACZxC,WAAYA,GACZ0D,MAAOA,GACPlD,MAAOA,GACPkB,MAAOA,GACP2C,IAAKA,MAKXG,GAAQ,CACVnL,KAAMA,GACNmJ,WAAYA,GACZxC,WAAYA,GACZ0D,MAAOA,GACPlD,MAAOA,GACPkB,MAAOA,GACP2C,IAAKA,IAGHI,GAA2E,CAC7EpL,KAAMqL,KACNlC,WAAYmC,KACZ3E,WAAY4E,KACZlB,MAAOmB,KACPrE,MAAOsE,KACPpD,MAAOqD,KACPV,IAAKW,MASYjZ,8MACjBkZ,cAA2C,OAQ3Czb,MAAqB,CACjBmS,SAAUb,GAAQa,SAClBuJ,UAAU,EACVC,mBAAoB,MAGxBC,aAAe,SAACzJ,GACZ/R,EAAKC,SAAS,CAAC8R,gBAGnB0J,oBAAsB,WAAM,IACNC,EAAa1b,EAAKJ,MAA7BmS,SAAW2J,SACZ1N,EAAO0N,EAASC,MAAMD,EAASE,QAAQ,KAAO,GACpD,OAAOhhB,OAAO8R,KAAKkO,IAAOiB,KAAK,SAAAC,GAAI,OAAI9N,EAAK4N,QAAQE,EAAKrK,gBAAkB,KAAM,UAGrF9Q,aAAe,WACXX,EAAKC,SAAS,SAAAL,GAAK,MAAK,CAAC0b,UAAW1b,EAAM0b,eAG9CS,YAAc,kBAAM/b,EAAKC,SAAS,CAACqb,UAAU,OAE7CU,sBAAwB,SAACrI,GACrB3T,EAAKC,SAAS,SAAAL,GAAK,MAAK,CACpB2b,mBAAmB3gB,OAAAqhB,GAAA,EAAArhB,CAAA,GACZgF,EAAM2b,mBADK3gB,OAAAka,GAAA,EAAAla,CAAA,GAEb+Y,GAAQ/T,EAAM2b,mBAAmB5H,4FAhC1C7Y,KAAKugB,cAAgBnK,GAAQgL,OAAOphB,KAAK0gB,6DAGzC1gB,KAAKugB,eAAiBvgB,KAAKugB,iDAkCvB,IAAAjb,EAAAtF,KACE0H,EACF9G,EAAAC,EAAAC,cAACugB,EAAOxhB,KAAR,CAAaL,KAAMQ,KAAK8E,MAAM0b,SAAUxf,QAAShB,KAAKihB,aACjDnhB,OAAO8R,KAAKiO,IAAYrS,IAAI,SAAA8T,GACzB,IAAMC,EAAQ1B,GAAWyB,GAEzB,OACI1gB,EAAAC,EAAAC,cAACugB,EAAOhgB,UAAR,CACIO,SAAU0D,EAAKR,MAAM2b,mBAAmBa,GACxChf,MAAOif,EAAMjf,MACbJ,UAAU,EACVE,SAAUmf,EAAMnf,SAChBM,iBAAkB,kBAAM4C,EAAK4b,sBAAsBI,KAElDxhB,OAAO8R,KAAK2P,EAAMzB,OAAOtS,IAAI,SAAAwT,GAC1B,OACIpgB,EAAAC,EAAAC,cAACugB,EAAO7d,SAAR,CACIlB,MAAO0e,EACP9e,SAAUoD,EAAKqb,wBAA0BK,EACzCxf,KAAMue,GAASiB,GACfle,KAAM,SAAC0e,GACH,OACI5gB,EAAAC,EAAAC,cAACwd,GAAD,CAAM7H,GAAE,IAAAnC,OAAM0M,GAAQzgB,IAAKygB,GACtBQ,YAYvC/a,EACF7F,EAAAC,EAAAC,cAACugB,EAAO1d,WAAR,oBAIE8D,EACF7G,EAAAC,EAAAC,cAACugB,EAAOzd,QAAR,KACIhD,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMoU,WAAS,EAAC3R,QAAS,IACrB1C,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,GAACvU,EAAAC,EAAAC,cAAC2gB,GAAD,OACX7gB,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,CAAMsU,MAAI,GAACvU,EAAAC,EAAAC,cAAC6W,GAAD,SAKjB+J,EAAO5B,GAAM9f,KAAK2gB,uBAExB,OACI/f,EAAAC,EAAAC,cAACugB,EAAOha,OAAR,CACIK,KAAMA,EACNjB,WAAYA,EACZgB,QAASA,EACT7B,MAAM,kBACN2B,SAAS,kBACT1B,aAAc7F,KAAK6F,cAEnBjF,EAAAC,EAAAC,cAAC4gB,EAAD,cApGoBvgB,IAAMC,eChE1CugB,IAAS5D,OACLnd,EAAAC,EAAAC,cAACF,EAAAC,EAAMgC,SAAP,KACIjC,EAAAC,EAAAC,cAAC8gB,GAAA/gB,EAAD,MACAD,EAAAC,EAAAC,cAAC+gB,EAAA,iBAAD,CAAkBniB,MAAOA,EAAMzB,iBAC3B2C,EAAAC,EAAAC,cAACghB,EAAA,EAAD,CAAqBpiB,MAAOA,EAAMhB,aAC9BkC,EAAAC,EAAAC,cAACihB,GAAD,SAIZnb,SAASob,eAAe","file":"static/js/main.4cb33866.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles'\r\nimport 'styled-components'\r\n\r\nconst colorScheme = {\r\n    fiord: '#445566',\r\n    lynch: '#637b94',\r\n    dodgerBlue: '#11beff',\r\n    bayOfMany: '#224477',\r\n    easternBlue: '#22aabb',\r\n    apple: '#49bd39',\r\n    melrose: '#A3A4FB',\r\n    flamingo: '#f04b4b',\r\n    texasRose: '#ffb155',\r\n    dandelion: '#FFD966',\r\n    tundora: '#404040',\r\n    dustyGray: '#999999',\r\n    hippieBlue: '#6699bb',\r\n    emperor: '#555555',\r\n    silver: '#CCCCCC',\r\n    porcelain: '#E8E9EA',\r\n    wildSand: '#F6F6F6',\r\n    white: '#FFFFFF',\r\n    casper: '#AFC5D0'\r\n}\r\n\r\nconst colors = {\r\n    tfso: '#00c7f5',\r\n    baseColor: colorScheme.fiord,\r\n    baseLightColor: '#637b94',\r\n    baseLight2Color: '#8fa1b4',\r\n    baseLight3Color: '#bdc8d3',\r\n    baseLight4Color: '#ebeef1',\r\n    baseLight5Color: '#f4f6f8',\r\n    blueColor: colorScheme.dodgerBlue,\r\n    blueDarkColor: colorScheme.bayOfMany,\r\n    blueDesaturatedColor: colorScheme.hippieBlue,\r\n    grayBlueColor: colorScheme.casper,\r\n    tealColor: colorScheme.easternBlue,\r\n    greenColor: colorScheme.apple,\r\n    greenLightColor: 'rgba(73, 189, 57, 0.4)',\r\n    purpleColor: colorScheme.melrose,\r\n    redColor: colorScheme.flamingo,\r\n    redLightColor: 'rgba(240, 75, 75, 0.4)',\r\n    orangeColor: colorScheme.texasRose,\r\n    yellowColor: colorScheme.dandelion,\r\n    blackColor: colorScheme.tundora,\r\n    grayColor: colorScheme.dustyGray,\r\n    grayDarkColor: '#6E6E6E',\r\n    grayDarkerColor: '#454545',\r\n    grayLightColor: '#C4C4C4',\r\n    grayLighterColor: '#E6E6E6',\r\n    grayLightestColor: '#F7F7F7',\r\n    whiteColor: colorScheme.white,\r\n    whiteDarkColor: '#F7F7F7',\r\n    whiteDarkerColor: '#E6E6E6',\r\n    bodyBackgroundColor: '#F7F7F7',\r\n    listOverBackgroundColor: '#E6E6E6',\r\n    borderColor: '#C4C4C4',\r\n    tabBarColor: colorScheme.white\r\n}\r\n\r\nconst palette = {\r\n    primary: colors.baseColor,\r\n    primaryLight: colors.baseLightColor,\r\n    success: colors.greenColor,\r\n    warning: colors.orangeColor,\r\n    alert: colors.redColor,\r\n    delete: colors.redColor,\r\n}\r\n\r\nconst layout = {\r\n    containerMargin: '15px'\r\n}\r\n\r\nexport const materialuiTheme = createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    palette: {\r\n        secondary: {\r\n            dark: '#1b2c3c',\r\n            main: '#456',\r\n            light: '#708194'\r\n        },\r\n        primary: {\r\n            dark: '#0090cc',\r\n            main: '#11c0ff',\r\n            light: '#6df3ff',\r\n            contrastText: '#FFF'\r\n        }\r\n    }\r\n})\r\n\r\nexport const styledTheme = {\r\n    tfso: {\r\n        colors,\r\n        palette,\r\n        layout\r\n    },\r\n    mui: materialuiTheme, // Make the entire material-ui theme available to styled components as well\r\n}\r\n\r\nexport type TfsoTheme = typeof styledTheme\r\n\r\ndeclare module 'styled-components' {\r\n    export interface DefaultTheme extends TfsoTheme {}\r\n    export type WithTheme = { theme: DefaultTheme }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport List from '@material-ui/core/List'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Link from '@material-ui/core/Link'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ExpandLess from '@material-ui/icons/ExpandLess'\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\nimport styled from 'styled-components/macro'\r\nimport {withWidth} from '@material-ui/core'\r\nimport {WithWidth} from '@material-ui/core/withWidth'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\r\n\r\n/*\r\nTfso ikon\r\nHamburger til høyre - åpner/lukker hele menyen\r\n\r\nMeny skjult som default på mobil\r\nPage overlay på mobil\r\nMeny lukkes ved klikk på mobil\r\n\r\nMenuGroup\r\n- icon\r\n- label\r\n- href\r\n- subtitle\r\n- expand button\r\n- expanded true/false\r\n- selected true/false\r\n- children\r\n\r\nMenuItem\r\n- icon\r\n- label\r\n- href\r\n- selected true/false\r\n\r\n */\r\n\r\nconst StyledDrawer = styled(Drawer).attrs({\r\n    classes: {paper: 'MuiPaperStyle'}\r\n})`\r\n    &&{\r\n      width: ${({open}) => open ? 240 : 0}px;\r\n      height: 100%;\r\n      //transition: none;\r\n      //transform: none;\r\n      white-space: nowrap;\r\n      display: flex;\r\n      overflow-x: hidden;\r\n      background-color: ${props => props.theme.tfso.colors.baseLight5Color};\r\n      border: none;\r\n    }\r\n    \r\n    .MuiPaperStyle{\r\n      position: static;\r\n      overflow-x: hidden;\r\n      background-color: ${props => props.theme.tfso.colors.baseLight5Color};\r\n      border: none;\r\n    }\r\n`\r\n\r\nexport type MenuProps = {\r\n    open: boolean\r\n    onClose: () => void\r\n} & WithWidth\r\n\r\nexport default withWidth()(class Menu extends React.PureComponent<MenuProps>{\r\n    static propTypes = {\r\n        open: PropTypes.bool.isRequired,\r\n        onClose: PropTypes.func.isRequired\r\n    }\r\n\r\n    render(){\r\n        const isMobile = ['xs', 'sm'].includes(this.props.width)\r\n\r\n        return (\r\n            <StyledDrawer variant={isMobile ? 'temporary' : 'persistent'} open={this.props.open} onClose={this.props.onClose}>\r\n                <List>\r\n                    {this.props.children}\r\n                </List>\r\n            </StyledDrawer>\r\n        )\r\n    }\r\n})\r\n\r\nexport type MenuGroupProps = {\r\n    icon?: React.ComponentType<SvgIconProps>\r\n    subtitle: string\r\n    label: string\r\n    selected: boolean\r\n    href?: string | ((content: React.ReactChild) => React.ReactChild)\r\n    onToggleExpanded: () => void\r\n    expanded: boolean\r\n    children: React.ReactNode\r\n}\r\n\r\nexport class MenuGroup extends React.PureComponent<MenuGroupProps>{\r\n    render(){\r\n        const Icon = this.props.icon\r\n\r\n        const LinkContent = (\r\n            <ListItem divider={!this.props.expanded}>\r\n                {Icon &&\r\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'secondary'}/></ListItemIcon>\r\n                }\r\n                <ListItemText\r\n                    secondary={this.props.subtitle}\r\n                    primaryTypographyProps={{color: this.props.selected ? 'primary' : 'secondary'}}\r\n                >\r\n                    {this.props.label}\r\n                </ListItemText>\r\n                <ListItemSecondaryAction>\r\n                    <IconButton onClick={this.props.onToggleExpanded}>\r\n                        {this.props.expanded ? <ExpandLess /> : <ExpandMore />}\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        )\r\n\r\n        return (\r\n            <>\r\n                {typeof this.props.href === 'string'\r\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\r\n                    : this.props.href\r\n                        ? this.props.href(LinkContent)\r\n                        : LinkContent\r\n                }\r\n                <Collapse in={this.props.expanded} timeout=\"auto\">\r\n                    <List>\r\n                        {this.props.children}\r\n                    </List>\r\n                </Collapse>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport type MenuItemProps = {\r\n    icon?: React.ComponentType<SvgIconProps>\r\n    label: string\r\n    selected: boolean\r\n    href: string | ((content: React.ReactChild) => React.ReactChild)\r\n}\r\n\r\nconst NestedListItem = styled(ListItem)`&&{\r\n    padding-left: ${({theme}) => theme.mui.spacing.unit * 3}px;\r\n}`\r\n\r\nexport class MenuItem extends React.PureComponent<MenuItemProps>{\r\n    render(){\r\n        const Icon = this.props.icon\r\n        const LinkContent = (\r\n            <NestedListItem dense>\r\n                {Icon &&\r\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'secondary'}/></ListItemIcon>\r\n                }\r\n                <ListItemText primaryTypographyProps={{color: this.props.selected ? 'primary' : 'secondary'}}>{this.props.label}</ListItemText>\r\n            </NestedListItem>\r\n        )\r\n\r\n        return (\r\n            <>\r\n                {typeof this.props.href === 'string'\r\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\r\n                    : this.props.href(LinkContent)\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class MobileMenu extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class TopMenu extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport MoreIcon from '@material-ui/icons/MoreVert'\r\nimport styled from 'styled-components/macro'\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n`\r\nconst StyledAppBar = styled(AppBar)`\r\n&&{\r\n  background: white;\r\n  box-shadow: none;\r\n  z-index: ${props => props.theme.mui.zIndex.drawer + 1};\r\n}\r\n`\r\n\r\nconst Grow = styled.div`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst MenuButton = styled(IconButton)`\r\n&&{\r\n  margin-left: -12px;\r\n  margin-right: 20px;\r\n}\r\n`\r\n\r\nconst Title = styled(Typography)`\r\n&&{\r\n  margin-right: 20px;\r\n  display: none;\r\n  ${({theme}) => theme.mui.breakpoints.up('sm')}{\r\n    display: block;\r\n  }\r\n}\r\n`\r\n\r\nconst SectionDesktop = styled.div`\r\n&&{\r\n  display: none;\r\n  ${({theme}) => theme.mui.breakpoints.up('md')}{\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n}\r\n`\r\n\r\nconst SectionMobile = styled.div`\r\n&&{\r\n  display: flex;\r\n  ${({theme}) => theme.mui.breakpoints.up('md')}{\r\n    display: none;\r\n  }\r\n}\r\n`\r\n\r\nexport type TopBarProps = {\r\n    title: string\r\n    onMenuToggle: () => void | null\r\n    mobileMenu?: React.ReactNode\r\n}\r\n\r\nexport default class TopBar extends React.PureComponent<TopBarProps, any>{\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        mobileMenu: PropTypes.node.isRequired\r\n    }\r\n    state = {\r\n        mobileMoreAnchorEl: null\r\n    }\r\n    handleMobileMenuOpen = event => {\r\n        this.setState({mobileMoreAnchorEl: event.currentTarget})\r\n    }\r\n    handleMobileMenuClose = () => {\r\n        this.setState({mobileMoreAnchorEl: null})\r\n    }\r\n\r\n    render(){\r\n        const {mobileMoreAnchorEl} = this.state\r\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\r\n\r\n        return (\r\n            <Root>\r\n                <StyledAppBar position=\"static\" color=\"default\">\r\n                    <Toolbar>\r\n                        <Title variant=\"h6\" color=\"inherit\" noWrap>\r\n                            {this.props.title}\r\n                        </Title>\r\n                        {this.props.onMenuToggle !== null &&\r\n                        <MenuButton color=\"inherit\" aria-label=\"Open drawer\" onClick={e => this.props.onMenuToggle && this.props.onMenuToggle()}>\r\n                            <MenuIcon/>\r\n                        </MenuButton>\r\n                        }\r\n                        <Grow/>\r\n                        <SectionDesktop>\r\n                            {this.props.children}\r\n                        </SectionDesktop>\r\n                        <SectionMobile>\r\n                            <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\r\n                                <MoreIcon/>\r\n                            </IconButton>\r\n                        </SectionMobile>\r\n                    </Toolbar>\r\n                </StyledAppBar>\r\n                <Menu\r\n                    anchorEl={mobileMoreAnchorEl}\r\n                    anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                    transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                    open={isMobileMenuOpen}\r\n                    onClose={this.handleMobileMenuClose}\r\n                >\r\n                    {this.props.mobileMenu}\r\n                </Menu>\r\n            </Root>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nfunction setTitle(text){\r\n    document.title = text\r\n}\r\n\r\ntype Props = {\r\n    text: string\r\n}\r\n\r\nexport default class DocumentTitle extends React.PureComponent<Props>{\r\n    constructor(props){\r\n        super(props)\r\n        setTitle(props.text)\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.text !== this.props.text){\r\n            setTitle(nextProps.text)\r\n        }\r\n    }\r\n    render(){\r\n        return ''\r\n    }\r\n}","import React from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport TopBar from './Topbar'\r\nimport DocumentTitle from './DocumentTitle'\r\n\r\n// Wrap everything\r\nexport const LayoutWrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column; // Flex header and body from top to bottom\r\n`\r\n\r\n// Put topbar in here\r\nexport const LayoutHeader = styled.div`\r\n  \r\n`\r\n\r\n// Put everything below topbar here\r\nexport const LayoutBody = styled.div`\r\n  flex: 1; // Fill the rest of the page after header has taken its space\r\n  min-height: 0;\r\n  display: flex;\r\n`\r\n\r\n// Put menu here\r\nexport const LayoutBodyLeft = styled.div`\r\n\r\n`\r\n\r\n// Put your app here\r\nexport const LayoutBodyRight = styled.div`\r\n  flex: 1;\r\n  min-height: 0;\r\n  padding: 15px;\r\n  overflow-y: auto;\r\n`\r\n\r\ntype LayoutProps = {\r\n    title: string\r\n    docTitle: string\r\n    menu: React.ReactNode\r\n    mobileMenu: React.ReactNode\r\n    topMenu: React.ReactNode\r\n    onMenuToggle: Function\r\n}\r\n\r\nexport default class Layout extends React.PureComponent<LayoutProps>{\r\n    render(){\r\n        return (\r\n            <LayoutWrapper>\r\n                <DocumentTitle text={this.props.docTitle} />\r\n                <LayoutHeader>\r\n                    <TopBar\r\n                        title={this.props.title}\r\n                        onMenuToggle={this.props.onMenuToggle}\r\n                        mobileMenu={this.props.mobileMenu}\r\n                    >\r\n                        {this.props.topMenu}\r\n                    </TopBar>\r\n                </LayoutHeader>\r\n                <LayoutBody>\r\n                    <LayoutBodyLeft>\r\n                        {this.props.menu}\r\n                    </LayoutBodyLeft>\r\n                    <LayoutBodyRight>\r\n                        {this.props.children}\r\n                    </LayoutBodyRight>\r\n                </LayoutBody>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\ntype LayoutNoMenuProps = {\r\n    title: string\r\n    docTitle: string\r\n    mobileMenu: React.ReactNode\r\n    topMenu: React.ReactNode\r\n}\r\n\r\nexport class LayoutNoMenu extends React.PureComponent<LayoutNoMenuProps>{\r\n    render(){\r\n        return (\r\n            <LayoutWrapper>\r\n                <DocumentTitle text={this.props.docTitle} />\r\n                <LayoutHeader>\r\n                    <TopBar\r\n                        title={this.props.title}\r\n                        onMenuToggle={null}\r\n                        mobileMenu={this.props.mobileMenu}\r\n                    >\r\n                        {this.props.topMenu}\r\n                    </TopBar>\r\n                </LayoutHeader>\r\n                <LayoutBody>\r\n                    <LayoutBodyRight>\r\n                        {this.props.children}\r\n                    </LayoutBodyRight>\r\n                </LayoutBody>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport styled, {DefaultTheme} from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MuiSnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n}\r\n\r\nconst bgColor = (variant: AlertVariant, palette: DefaultTheme['tfso']['palette']) => {\r\n    switch(variant){\r\n    case 'success': return palette.success\r\n    case 'error': return palette.alert\r\n    case 'info': return palette.primaryLight\r\n    case 'warning': return palette.warning\r\n    }\r\n}\r\n\r\nconst SnackbarContent = ({variant, ...other}) => <MuiSnackbarContent {...other} />\r\nconst StyledSnack = styled(SnackbarContent)`&&{\r\n    background-color: ${({variant, theme}) => bgColor(variant, theme.tfso.palette)}\r\n}`\r\n\r\ntype AlertVariant = 'success' | 'warning' | 'error' | 'info'\r\n\r\nexport type AlertProps = {\r\n    message: React.ReactNode\r\n    onClose(): void\r\n    variant: AlertVariant\r\n}\r\n\r\nconst Alert = (props: AlertProps) => {\r\n    const {message, onClose, variant} = props\r\n    const Icon = variantIcon[variant]\r\n\r\n    return (\r\n        <StyledSnack\r\n            variant={variant}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" style={{display: 'flex', alignItems: 'center'}}>\r\n                    <Icon style={{fontSize: 20, opacity: 0.9, marginRight: 10}} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon style={{fontSize: 20}} />\r\n                </IconButton>,\r\n            ]}\r\n        />\r\n    )\r\n}\r\n\r\nAlert.propTypes = {\r\n    message: PropTypes.node.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\n\r\nexport type BigNumberProps = {\r\n    /**\r\n     * Choose `light` when you have a dark background, otherwise `dark`\r\n     * @default light\r\n     */\r\n    color?: 'light' | 'dark'\r\n\r\n    /**\r\n     * @default large\r\n     */\r\n    size?: 'medium' | 'large'\r\n    children: string | number\r\n}\r\n\r\nconst fontSizeMap: {[P in Required<BigNumberProps>['size']]: number} = {\r\n    medium: 32,\r\n    large: 48\r\n}\r\n\r\nconst defaultProps: Required<Pick<BigNumberProps, 'color' | 'size'>> = {\r\n    color: 'light',\r\n    size: 'large',\r\n}\r\n\r\nconst wrapper = ({size, color, ...props}: Required<BigNumberProps>) => <div {...props} />\r\n// TODO: These should be on the BigNumber component instead..\r\nwrapper.defaultProps = defaultProps\r\nwrapper.propTypes = {\r\n    color: PropTypes.oneOf(['light', 'dark']),\r\n    size: PropTypes.oneOf(['medium', 'large']),\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]).isRequired\r\n}\r\n\r\nconst BigNumber = styled(wrapper)`&&{\r\n    font-size: ${({theme, size = defaultProps.size}) => theme.mui.typography.pxToRem(fontSizeMap[size])};\r\n    line-height: normal;\r\n    letter-spacing: 0.08em;\r\n    color: ${({color = defaultProps.color}) => color === 'light' ? '#FFFFFF' : '#404040'};\r\n    white-space: nowrap\r\n}`\r\n\r\nexport default BigNumber as React.ComponentType<BigNumberProps>","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport Slide from '@material-ui/core/Slide'\r\n\r\nexport type ConfirmationDialogProps = {\r\n    open: boolean\r\n    title?: string\r\n    message: string\r\n    okButtonText: string\r\n    cancelButtonText: string\r\n    onOk: () => void\r\n    onCancel: () => void\r\n}\r\n\r\nconst TransitionComponent = props => <Slide direction='up' {...props} />\r\n\r\nconst ConfirmationDialog = (props: ConfirmationDialogProps) => {\r\n    const {open, onCancel, onOk, title, message, okButtonText, cancelButtonText} = props\r\n    return (\r\n        <Dialog\r\n            TransitionComponent={TransitionComponent}\r\n            keepMounted={false}\r\n            open={open}\r\n            onClose={onCancel}\r\n            maxWidth={'xs'}\r\n        >\r\n            {title && <DialogTitle>{title}</DialogTitle>}\r\n            <DialogContent>{message}</DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onCancel} color=\"primary\">{cancelButtonText}</Button>\r\n                <Button onClick={onOk} color=\"secondary\">{okButtonText}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    title: PropTypes.string,\r\n    message: PropTypes.string.isRequired,\r\n    okButtonText: PropTypes.string.isRequired,\r\n    cancelButtonText: PropTypes.string.isRequired,\r\n    onOk: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ConfirmationDialog","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\n\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport Paper, {PaperProps} from '@material-ui/core/Paper'\r\n\r\nconst BackgroundPaper = ({background, ...props}: { background: string } & PaperProps) => (<Paper {...props} />)\r\nconst WidgetContainer = styled(BackgroundPaper)`&&{\r\n    background: ${({background}) => background};\r\n    width: 100%;\r\n    height: 100%;\r\n}`\r\n\r\ntype WidgetSize = 'small' | 'medium' | 'large'\r\n\r\ntype WidgetBaseProps = {\r\n    index: number\r\n    background?: string\r\n    onOrder: (index: number, sourceIndex: number) => void\r\n    children: React.ReactChild // allow only one child\r\n}\r\n\r\ntype DragDropData = {\r\n    index: number\r\n}\r\n\r\ntype WidgetState = {\r\n    dragging: boolean\r\n    dragOver: boolean\r\n}\r\n\r\nclass Widget extends React.PureComponent<WidgetBaseProps, WidgetState>{\r\n    static defaultProps = {\r\n        background: 'inherit'\r\n    }\r\n    static propTypes = {\r\n        index: PropTypes.number.isRequired,\r\n        background: PropTypes.string,\r\n        onOrder: PropTypes.func.isRequired,\r\n        children: PropTypes.node.isRequired\r\n    }\r\n\r\n    state: WidgetState = {\r\n        dragging: false,\r\n        dragOver: false,\r\n    }\r\n\r\n    onDrop = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n\r\n        try{\r\n            const data = JSON.parse(e.dataTransfer.getData('text')) as DragDropData\r\n            if(data.index !== this.props.index){ this.props.onOrder(this.props.index, data.index) }\r\n        }catch(err){ }\r\n        this.setState({dragOver: false})\r\n    }\r\n\r\n    onDragStart = (e: React.DragEvent<HTMLDivElement | SVGSVGElement>) => {\r\n        const dragData: DragDropData = {\r\n            index: this.props.index\r\n        }\r\n        e.dataTransfer.setData('text', JSON.stringify(dragData))\r\n        this.setState({dragging: true})\r\n    }\r\n\r\n    onDragEnd = (e: React.DragEvent<HTMLDivElement | SVGSVGElement>) => {\r\n        this.setState({dragging: false})\r\n    }\r\n\r\n    onDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\r\n        this.setState({dragOver: true})\r\n    }\r\n\r\n    onDragOver = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    onDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\r\n        this.setState({dragOver: false})\r\n    }\r\n\r\n    render(){\r\n        const {children, background} = this.props\r\n\r\n        return (\r\n            <WidgetContainer\r\n                background={background || 'inherit'}\r\n                elevation={0}\r\n                style={{\r\n                    // TODO: other design??\r\n                    border: this.state.dragOver ? '2px dashed #333' : 'unset',\r\n                }}\r\n                draggable\r\n                onDragStart={this.onDragStart}\r\n                onDragEnd={this.onDragEnd}\r\n                onDragEnter={this.onDragEnter}\r\n                onDragOver={this.onDragOver}\r\n                onDragLeave={this.onDragLeave}\r\n                onDrop={this.onDrop}\r\n            >\r\n                {children}\r\n            </WidgetContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst sizeMap: {[P in WidgetSize]: {cols: number, rows: number}} = {\r\n    small: {cols: 1, rows: 0.5},\r\n    medium: {cols: 2, rows: 1},\r\n    large: {cols: 4, rows: 2}\r\n}\r\n\r\nexport type WidgetProps = {\r\n    size: WidgetSize\r\n    minSize?: WidgetSize\r\n} & Pick<WidgetBaseProps, 'background' | 'children'>\r\n\r\nexport type DashBoardProps = {\r\n    widgets: Array<WidgetProps>\r\n    onChangeOrder: (widgets: Array<WidgetProps>) => void\r\n    onRemove: (something) => void\r\n    spacing?: number // GridListProps['spacing']\r\n    children?: undefined // don't allow any children\r\n}\r\n\r\nexport default class DashBoard extends React.PureComponent<DashBoardProps>{\r\n    static defaultProps = {\r\n        spacing: 16\r\n    }\r\n\r\n    static propTypes = {\r\n        onChangeOrder: PropTypes.func.isRequired,\r\n        onRemove: PropTypes.func.isRequired,\r\n        spacing: PropTypes.number,\r\n        widgets: PropTypes.arrayOf(PropTypes.shape({\r\n            background: PropTypes.string,\r\n            children: PropTypes.node.isRequired,\r\n            minSize: PropTypes.oneOf(['small', 'medium', 'large']),\r\n            size: PropTypes.oneOf(['small', 'medium', 'large']).isRequired\r\n        })),\r\n        // children: PropTypes. //TODO: Check that children is undefined\r\n    }\r\n\r\n    onOrderArray = (target: number, source: number) => {\r\n        const widgets = [...this.props.widgets]\r\n        widgets.splice(target, 0, widgets.splice(source, 1)[0])\r\n        this.props.onChangeOrder(widgets)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <GridList\r\n                spacing={this.props.spacing}\r\n                cols={4}\r\n                cellHeight={250}\r\n                style={{width: '100%'}}\r\n            >\r\n                {this.props.widgets.map(({size, ...widget}, i) => (\r\n                    <GridListTile key={i} {...sizeMap[size]} >\r\n                        <Widget {...widget}\r\n                            index={i}\r\n                            onOrder={this.onOrderArray}\r\n                        />\r\n                    </GridListTile>\r\n                ))}\r\n            </GridList>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nexport type SearchFieldProps = TextFieldProps\r\n\r\ntype State = {\r\n    editing: boolean\r\n}\r\n\r\nexport default class SearchField extends React.PureComponent<SearchFieldProps, State>{\r\n    static defaultProps = {\r\n        placeholder: 'Search',\r\n        margin: 'dense',\r\n        InputProps: {\r\n            startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>\r\n        }\r\n    }\r\n\r\n    state: State = {\r\n        editing: false\r\n    }\r\n\r\n    onBlur = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: false})\r\n        const {onBlur} = this.props\r\n        onBlur && onBlur(e)\r\n    }\r\n\r\n    onFocus = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: true})\r\n        const {onFocus} = this.props\r\n        onFocus && onFocus(e)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <TextField\r\n                fullWidth={this.state.editing}\r\n                {...this.props}\r\n                onBlur={this.onBlur}\r\n                onFocus={this.onFocus}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\r\n\r\ntype Props = {\r\n    value: string\r\n    onChange: (value: string) => void\r\n    dirty?: boolean\r\n    enableDirtyCheck?: boolean\r\n}\r\n\r\ntype State = {\r\n    editing: boolean\r\n    value: string\r\n    prevProps: Props\r\n}\r\n\r\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>\r\n\r\nfunction handleEvent(event: React.KeyboardEvent<HTMLDivElement>){\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n    // the above only prevents other synthetic events, if we want to prevent global listeners too, we need to stop the propagation on the native event as well\r\n    event.nativeEvent.stopImmediatePropagation()\r\n}\r\n\r\nexport type TextFieldEditorProps = Props & Partial<Omit<TextFieldProps, 'value' | 'onChange'>>\r\n\r\nexport default class TextFieldEditor extends React.PureComponent<TextFieldEditorProps, State>{\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n        onChange: PropTypes.func.isRequired,\r\n        dirty: PropTypes.bool\r\n    }\r\n\r\n    _inputRef: React.RefObject<HTMLInputElement> = React.createRef()\r\n\r\n    state: State = {\r\n        editing: false,\r\n        value: this.props.value,\r\n        prevProps: this.props\r\n    }\r\n\r\n    static getDerivedStateFromProps(props: Readonly<TextFieldEditorProps>, state: Readonly<State>){\r\n        const prevProps = state.prevProps\r\n\r\n        if(prevProps.value !== props.value){ return {value: props.value, prevProps: props} }\r\n\r\n        return {prevProps: props}\r\n    }\r\n\r\n    blur = () => { this._inputRef.current && this._inputRef.current.blur() }\r\n\r\n    onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n        this.props.onKeyDown && this.props.onKeyDown(event)\r\n        if(event.defaultPrevented){ return }\r\n\r\n        if(event.ctrlKey){\r\n            switch(event.key){\r\n            case 's':\r\n            // this event should not be 'handled' here (eg. invoke handleEvent(event)), control may want to perform other actions on ctrl+s\r\n            // It should behave as a save changes in the control as well however\r\n                this.blur()\r\n                break\r\n            case 'z':\r\n                handleEvent(event)\r\n                this.setState({editing: false, value: this.props.value}, this.blur)\r\n                break\r\n            default: break\r\n            }\r\n        }else{\r\n            switch(event.key){\r\n            case 'Enter':\r\n                if(this.props.multiline){ break }\r\n                handleEvent(event)\r\n                this.blur()\r\n                break\r\n            case 'Escape':\r\n                handleEvent(event)\r\n                this.setState({editing: false, value: this.props.value}, this.blur)\r\n                break\r\n            default: break\r\n            }\r\n        }\r\n    }\r\n\r\n    onFocus = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: true})\r\n        this.props.onFocus && this.props.onFocus(e)\r\n    }\r\n\r\n    onBlur = (e: React.EventHandler<any>) => {\r\n        if(!this.state.editing){ return } // The method should be safe to call multiple times, but we don't want to raise the event multiple times if we dont need to\r\n\r\n        this.props.onChange(this.state.value)\r\n        this.setState({editing: false})\r\n        this.props.onBlur && this.props.onBlur(e)\r\n    }\r\n\r\n    onChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement | HTMLSelectElement>) => {\r\n        const value = event.target.value\r\n        this.setState({value, editing: true})\r\n    }\r\n\r\n    render(){\r\n        const {dirty: dirtyProp, onChange: onChangeProp, value: valueProp, enableDirtyCheck, ...otherProps} = this.props\r\n        const {value} = this.state\r\n\r\n        const isDirty = enableDirtyCheck ? this.props.value !== value || !!dirtyProp : !!dirtyProp\r\n\r\n        return (\r\n            <TextField\r\n                {...otherProps as any}\r\n                inputRef={this._inputRef}\r\n                value={value}\r\n                onFocus={this.onFocus}\r\n                onChange={this.onChange}\r\n                onBlur={this.onBlur}\r\n                onKeyDown={this.onKeyDown}\r\n                InputProps={{style: {fontStyle: isDirty ? 'italic' : 'normal'}}}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport {withTheme, DefaultTheme, WithTheme} from 'styled-components'\r\n\r\nimport TrendingUp from '@material-ui/icons/TrendingUp'\r\nimport TrendingFlat from '@material-ui/icons/TrendingFlat'\r\nimport TrendingDown from '@material-ui/icons/TrendingDown'\r\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\r\n\r\nexport type TrendingProps = {\r\n    variant: 'up' | 'down' | 'flat'\r\n} & SvgIconProps\r\n\r\nconst iconMap: {[P in TrendingProps['variant']]: React.ComponentType<SvgIconProps>} = {\r\n    up: TrendingUp,\r\n    flat: TrendingFlat,\r\n    down: TrendingDown,\r\n}\r\n\r\nconst getColor = (variant: TrendingProps['variant'], theme: DefaultTheme) => {\r\n    switch(variant){\r\n    case 'up': return theme.tfso.palette.success\r\n    case 'down': return theme.tfso.palette.warning\r\n    case 'flat': return theme.tfso.palette.alert\r\n    default: return undefined\r\n    }\r\n}\r\n\r\nconst trending = ({variant, theme, ...iconProps}: TrendingProps & WithTheme) => {\r\n    const Icon = iconMap[variant]\r\n    const nativeColor = getColor(variant, theme)\r\n    return (\r\n        <Icon\r\n            nativeColor={nativeColor}\r\n            {...iconProps}\r\n        />\r\n    )\r\n}\r\n\r\ntrending.propTypes = {\r\n    variant: PropTypes.oneOf(['up', 'down', 'flat']).isRequired\r\n}\r\n\r\nexport default React.memo(withTheme(trending))","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n// https://www.w3schools.com/charsets/ref_emoji.asp\r\nconst emojis = {\r\n    middleFinger: <>&#128405;</>,\r\n    indexFinger: <>&#128070;</>,\r\n    flex: <>&#128170;</>,\r\n    brokenHeart: <>&#128148;</>,\r\n    perfect: <>&#128076;</>,\r\n    thumbsUp: <>&#128077;</>,\r\n    thumbsDown: <>&#128078;</>,\r\n    clap: <>&#128079;</>,\r\n    heart: <>&#128152;</>,\r\n    fire: <>&#128293;</>,\r\n    bulb: <>&#128161;</>,\r\n    crap: <>&#128169;</>,\r\n    thinking: <>&#129300;</>,\r\n    rocket: <>&#128640;</>,\r\n}\r\n\r\nexport type EmojiProps = {\r\n    variant: keyof typeof emojis\r\n}\r\n\r\nconst Emoji = (props: EmojiProps) => emojis[props.variant]\r\n\r\nEmoji.propTypes = {\r\n    variant: PropTypes.oneOf(Object.keys(emojis))\r\n}\r\n\r\nexport default Emoji","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    beforeShow?: any\r\n    delayMs?: number\r\n    show?: boolean\r\n    children: React.ReactNode\r\n}\r\n\r\ntype State = {\r\n    show: boolean\r\n}\r\n\r\nexport default class Delay extends React.PureComponent<Props, State>{\r\n    static propTypes = {\r\n        beforeShow: PropTypes.node,\r\n        delayMs: PropTypes.number,\r\n        show: PropTypes.bool,\r\n        children: PropTypes.node.isRequired\r\n    }\r\n\r\n    _timer: any = null\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.setState({show: false})\r\n        this._timer = setTimeout(() => {\r\n            this.setState({show: true})\r\n        }, this.props.delayMs || 1000)\r\n    }\r\n    componentWillUnmount(){\r\n        clearTimeout(this._timer)\r\n    }\r\n    render(){\r\n        if(this.props.show || this.state.show){\r\n            return this.props.children\r\n        }\r\n\r\n        return this.props.beforeShow || null\r\n    }\r\n}","import React, {HTMLProps} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    children: (hover: boolean, ref: React.RefObject<any>) => React.ReactNode\r\n} & HTMLProps<HTMLDivElement>\r\n\r\ntype State = {\r\n    hover: boolean\r\n}\r\n\r\nexport default class Hoverable extends React.PureComponent<Props, State>{\r\n    private ref: React.RefObject<any>\r\n\r\n    static propTypes = {\r\n        children: PropTypes.func.isRequired\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.ref = React.createRef()\r\n\r\n        this.state = {\r\n            hover: false\r\n        }\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState(state => ({hover: !state.hover}))\r\n    }\r\n\r\n    hoverOn = () => this.setState({hover: true})\r\n    hoverOff = () => this.setState({hover: false})\r\n\r\n    render(){\r\n        const {children, ...restProps} = this.props\r\n\r\n        return (\r\n            <div\r\n                ref={this.ref}\r\n                onMouseEnter={this.hoverOn}\r\n                onMouseLeave={this.hoverOff}\r\n                {...restProps}\r\n            >\r\n                {children(this.state.hover, this.ref)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {HTMLProps} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    children: (tabIndex: number, next: () => void, prev: () => void) => React.ReactNode\r\n    index?: number\r\n    length?: number\r\n} & HTMLProps<HTMLDivElement>\r\n\r\ntype State = {\r\n    index: number\r\n}\r\n\r\nexport default class Wizard extends React.PureComponent<Props, State>{\r\n    static propTypes = {\r\n        children: PropTypes.func.isRequired,\r\n        index: PropTypes.number,\r\n        length: PropTypes.number\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {index: props.index || 0}\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps){\r\n        if(nextProps.hasOwnProperty('index')){\r\n            return {index: nextProps.index}\r\n        }\r\n        return null\r\n    }\r\n\r\n    next = () => this.setState(state => {\r\n        if(this.props.length && state.index + 1 >= this.props.length) return state\r\n        return {index: state.index + 1}\r\n    })\r\n    prev = () => this.setState(state => {\r\n        if(state.index - 1 < 0) return state\r\n        return {index: state.index - 1}\r\n    })\r\n\r\n    render(){\r\n        const {children, ...restProps} = this.props\r\n\r\n        return (\r\n            <div {...restProps}>\r\n                {children(this.state.index, this.next, this.prev)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Styled, {css} from 'styled-components/macro'\r\n\r\nexport type TfsoLoadingIconProps = {\r\n    /**\r\n     * @default infinite\r\n     */\r\n    once?: boolean\r\n} & SvgIconProps\r\n\r\nconst TfsoLoadingIconWrapper = ({once, ...other}: TfsoLoadingIconProps) => <SvgIcon {...other}/>\r\n\r\nconst path = css`\r\n    opacity: 1;\r\n    animation-delay: 1.5s;\r\n`\r\nconst StyledSvgIcon: React.ComponentType<SvgIconProps> = Styled(TfsoLoadingIconWrapper)`&&{\r\n    #path1{\r\n        ${path}\r\n        animation: fade-in1 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path2{\r\n        ${path}\r\n        animation: fade-in2 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path3{\r\n        ${path}\r\n        animation: fade-in3 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path4{\r\n        ${path}\r\n        animation: fade-in4 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path5{\r\n        ${path}\r\n        animation: fade-in5 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    @keyframes fade-in1 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 1; }\r\n        40% { opacity: 1; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in2 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 1; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in3 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in4 {\r\n        0%   { opacity:0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 0.2; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in5 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 0.2; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n}` as any // seems like returntype of styled-components adds string as a type of _ref.. dunnp why\r\n\r\nexport default React.memo((props: TfsoLoadingIconProps) => (\r\n    <StyledSvgIcon\r\n        {...props}\r\n        viewBox=\"0 0 37 23\"\r\n        fillRule='evenodd'\r\n        strokeWidth=\"1\"\r\n    >\r\n        <path d=\"M21.79 9.81C21.17789 8.5323532 19.886707 7.7195303 18.47 7.72 16.444136 7.7143752 14.803816 6.0724096 14.800223 4.0465408 14.79663 2.020672 16.431115 0.37289845 18.456947 0.36008776 20.482778 0.34727707 22.137972 1.9742478 22.16 4c-0.01782 1.4288443 0.793121 2.7388262 2.08 3.36-1.120033 0.4431782-2.006822 1.3299671-2.45 2.45l0 0z\" id=\"path5\"/>\r\n        <path d=\"m33.24 15.09c-1.427527 0.01209-2.733245-0.802525-3.35-2.09-0.443178 1.120033-1.329967 2.006822-2.45 2.45 1.275973 0.613987 2.088053 1.903991 2.09 3.32 0 2.032408 1.647592 3.68 3.68 3.68 2.032408 0 3.68-1.647592 3.68-3.68 0-2.032408-1.647592-3.68-3.68-3.68l0.03 0 0 0z\" id=\"path4\"/>\r\n        <path d=\"m14.79 11.41c0-2.0351693-1.649831-3.685-3.685-3.685-2.0351693 0-3.685 1.6498307-3.685 3.685 0 2.032408-1.6475921 3.68-3.68 3.68-2.0324079 0-3.68 1.647592-3.68 3.68 0 2.032408 1.6475921 3.68 3.68 3.68 2.0324079 0 3.68-1.647592 3.68-3.68-0.00119-1.719312 1.1882715-3.210312 2.864877-3.591141 1.676605-0.380829 3.39346 0.450022 4.135123 2.001141 0.443178-1.120033 1.329967-2.006822 2.45-2.45-1.27208-0.616837-2.079908-1.906255-2.08-3.32l0 0 0 0z\" id=\"path2\"/>\r\n        <path d=\"m25.84 7.73c-2.016889-0.0001192-3.658077 1.6232303-3.68 3.64l0 0.09c-0.02094 1.397916-0.830116 2.663946-2.09 3.27 1.120033 0.443178 2.006822 1.329967 2.45 2.45 0.613987-1.275973 1.903991-2.088053 3.32-2.09 2.035169 0 3.685-1.649831 3.685-3.685 0-2.0351693-1.649831-3.685-3.685-3.685l0 0.01 0 0z\" id=\"path3\"/>\r\n        <path d=\"m18.47 15.1c-2.031097 0.0055-3.673671 1.655547-3.669994 3.686649 0.0037 2.031101 1.652215 3.675171 3.683318 3.673336C20.514428 22.45815 22.159993 20.811104 22.16 18.78 22.162665 17.800536 21.774754 16.860421 21.082167 16.167833 20.389579 15.475246 19.449463 15.087335 18.47 15.09l0 0.01 0 0z\" id=\"path1\"/>\r\n    </StyledSvgIcon>\r\n))\r\n","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nexport const MaterialUiIcon = React.memo((props: SvgIconProps) => (\r\n    <SvgIcon {...props} viewBox=\"0 0 600 476.6\">\r\n        <path d=\"m0 259.8v-259.8l225 129.9v86.6l-150-86.6v173.2z\" fill=\"#00b0ff\"/>\r\n        <path d=\"m225 129.9 225-129.9v259.8l-150 86.6-75-43.3 150-86.6v-86.6l-150 86.6z\" fill=\"#0081cb\"/>\r\n        <path d=\"m225 303.1v86.6l150 86.6v-86.6z\" fill=\"#00b0ff\"/>\r\n        <path d=\"m375 476.3 225-129.9v-173.2l-75 43.3v86.6l-150 86.6zm150-346.4v-86.6l75-43.3v86.6z\" fill=\"#0081cb\"/>\r\n    </SvgIcon>\r\n))\r\n\r\nexport type MaterialUiLinkProps = {\r\n    iconProps?: SvgIconProps\r\n}\r\n\r\nconst MaterialUiLink = (props: MaterialUiLinkProps) => (\r\n    <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\r\n        <MaterialUiIcon fontSize='large' {...props.iconProps as any} />\r\n    </Link>\r\n)\r\n\r\nexport default MaterialUiLink\r\n","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Link from '@material-ui/core/Link'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nexport const GitHubIcon = React.memo((props: SvgIconProps) => (\r\n    <SvgIcon {...props}>\r\n        <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\r\n    </SvgIcon>\r\n))\r\n\r\nexport type GitHubLinkProps = {\r\n    path?: string\r\n    tooltip?: string\r\n    iconProps?: SvgIconProps\r\n}\r\n\r\nconst GitHubLink = (props: GitHubLinkProps) => {\r\n    return (\r\n        <Link href={`https://github.com/tfso/react-tfso-components${props.path ? `/${props.path}` : ''}`} target='_blank' rel='noreferrer' >\r\n            <Tooltip title={props.tooltip ? props.tooltip : 'View on GitHub'}>\r\n                <GitHubIcon fontSize={props.iconProps && props.iconProps.fontSize || 'large'} {...props.iconProps as any} />\r\n            </Tooltip>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default GitHubLink\r\n","import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Zoom from '@material-ui/core/Zoom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\r\nimport { MaterialUiIcon } from '../components/MaterialUiLink'\r\nimport { GitHubIcon } from '../components/GitHubLink'\r\n\r\n// TODO: this could be a Util HOC component\r\nconst CenterTop = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    height: 100%;\r\n`\r\n\r\nconst Home = () => {\r\n    return (\r\n        <CenterTop>\r\n            <TfsoLoading once color='primary' fontSize='inherit' style={{fontSize: 400}} />\r\n            <Typography variant='h3' color='primary' paragraph>\r\n                REACT-TFSO-COMPONENTS\r\n            </Typography>\r\n            <Typography variant='h6' align='center' color='textSecondary' paragraph>\r\n                Something something useful description something dark side (TODO) <br />\r\n                Supplementary React components based on Material-UI with Tfso styling<br />\r\n            </Typography>\r\n            <Grid container justify='center'>\r\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Zoom in appear style={{transitionDelay: '250ms'}} >\r\n                        <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\r\n                            <MaterialUiIcon style={{fontSize: 150}} />\r\n                        </Link>\r\n                    </Zoom>\r\n                    <Zoom in appear style={{transitionDelay: '750ms'}} >\r\n                        <Typography variant='h6'>\r\n                            Find standard components <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>here</Link>\r\n                        </Typography>\r\n                    </Zoom>\r\n                </Grid>\r\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Zoom in appear style={{transitionDelay: '500ms'}}>\r\n                        <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >\r\n                            <GitHubIcon style={{fontSize: 150}} color='primary' />\r\n                        </Link>\r\n                    </Zoom>\r\n                    <Zoom in appear style={{transitionDelay: '1000ms'}} >\r\n                        <Typography variant='h6'>\r\n                            View source on <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >GitHub</Link>\r\n                        </Typography>\r\n                    </Zoom>\r\n                </Grid>\r\n            </Grid>\r\n        </CenterTop>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport Prism from 'prismjs'\r\n\r\n// Load languages\r\nimport 'prismjs/components/prism-clike'\r\nimport 'prismjs/components/prism-css'\r\nimport 'prismjs/components/prism-markup'\r\nimport 'prismjs/components/prism-javascript'\r\nimport 'prismjs/components/prism-typescript'\r\nimport 'prismjs/components/prism-jsx'\r\nimport 'prismjs/components/prism-tsx'\r\n\r\n// Load style\r\nimport 'prismjs/themes/prism.css'\r\n\r\ntype CodeProps = {\r\n    language: 'js' | 'ts' | 'tsx' | 'jsx'\r\n    children: React.ReactElement\r\n}\r\n\r\nexport class Code extends React.PureComponent<CodeProps>{\r\n    _ref: React.RefObject<HTMLPreElement> = React.createRef()\r\n\r\n    componentDidMount(){\r\n        this.highlight()\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.highlight()\r\n    }\r\n\r\n    highlight = () => {\r\n        if(!this._ref.current){ return }\r\n        Prism.highlightElement(this._ref.current!)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <pre ref={this._ref} className={`language-${this.props.language}`}>\r\n                <code className={`language-${this.props.language}`}>\r\n                    {this.props.children}\r\n                </code>\r\n            </pre>\r\n        )\r\n    }\r\n}","import {createHashHistory} from 'history'\r\n\r\nconst history = createHashHistory({\r\n    basename: '',\r\n    hashType: 'slash',\r\n})\r\nexport default history","import React from 'react'\r\n\r\nimport history from '../history'\r\n\r\nimport MuiLink, {LinkProps as MuiLinkProps} from '@material-ui/core/Link'\r\nimport styled from 'styled-components/macro'\r\n\r\nexport type LinkProps = {\r\n    to?: string\r\n    children: React.ReactNode\r\n} & MuiLinkProps\r\n\r\nexport default class Link extends React.PureComponent<LinkProps>{\r\n    onClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.props.onClick && this.props.onClick(event)\r\n\r\n        if(event.defaultPrevented || !this.props.to){\r\n            return\r\n        }\r\n        event.preventDefault()\r\n        history.push(this.props.to.toLowerCase())\r\n    }\r\n\r\n    render(){\r\n        const {to, href, underline, ...other} = this.props\r\n        return <MuiLink\r\n            {...other}\r\n            href={to && to.toLowerCase() || href}\r\n            underline={underline || 'none'}\r\n            rel={this.props.target === '_blank' ? 'noreferrer' : undefined}\r\n            onClick={this.onClick}\r\n        />\r\n    }\r\n}\r\n\r\nconst AnchorLink = styled(Link)`&&{\r\n    opacity: 0.2;\r\n    :hover{\r\n        opacity: 1;\r\n    }\r\n}`\r\n\r\nconst getPage = () => window.location.hash.split('/')[1]\r\nexport const Anchor = (props: {id: string}) => {\r\n    const id = `/${getPage()}/${props.id.toLowerCase()}`\r\n    return (\r\n        <AnchorLink id={id} to={id}>#</AnchorLink>\r\n    )\r\n}","import React, {ReactChild} from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport CodeIcon from '@material-ui/icons/Code'\r\n\r\nimport GitHubLink from './GitHubLink'\r\nimport {Code} from './code'\r\nimport {Anchor} from './Link'\r\n\r\nexport const Demo = (props) => <Paper style={{padding: 15, marginBottom: 30}}>{props.children}</Paper>\r\n\r\nexport type DemoTitleProps = {\r\n    children: string\r\n    /**\r\n     * The path to the Demo component. `src/demo/demos/` will be appended in front of the path\r\n     */\r\n    demoPath?: string\r\n\r\n    /**\r\n     * The path to the Implementation of the component. `src/lib/` will be appended in front of the path\r\n     */\r\n    srcPath?: string\r\n}\r\nexport const DemoTitle = (props: DemoTitleProps) => {\r\n    return (\r\n        <Grid container justify='space-between' alignItems='baseline' >\r\n            <Grid item>\r\n                <Typography variant=\"h5\">\r\n                    {props.children} <Anchor id={props.children} />\r\n                </Typography>\r\n            </Grid>\r\n            {props.srcPath || props.demoPath\r\n                ? <Grid item xs={2} container spacing={16} justify='flex-end'>\r\n                    {props.demoPath && <Grid item><GitHubLink fontSize='default' color='secondary' path={`blob/master/src/demo/demos/${props.demoPath}`} tooltip={`View demo source for ${props.children}`} /></Grid>}\r\n                    {props.srcPath && <Grid item><GitHubLink fontSize='default' color='primary' path={`blob/master/src/lib/${props.srcPath}`} tooltip={`View source for ${props.children}`}/></Grid> }\r\n                </Grid>\r\n                : null\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\nexport const DemoHelp = (props) => <Typography variant='subtitle1' paragraph>{props.children}</Typography>\r\nexport const DemoContent = (props: { children: Array<ReactChild> | ReactChild}) => (\r\n    <div style={{marginTop: 30}}>\r\n        <Typography variant=\"subtitle1\" >Example</Typography>\r\n        <Divider />\r\n        <br />\r\n        <Grid container spacing={16} alignItems='center'>\r\n            {props.children && Array.isArray(props.children)\r\n                ? props.children.map((child, i) => (\r\n                    <Grid item key={i} xs={i === 0 ? 12 : false}>\r\n                        {child}\r\n                    </Grid>\r\n                ))\r\n                : <Grid item xs={12} >{props.children}</Grid>\r\n            }\r\n        </Grid>\r\n    </div>\r\n)\r\n\r\nexport const DemoProps = (props) => (\r\n    <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant='h6'>Props</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Default</TableCell>\r\n                        <TableCell>Description</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.children}\r\n                </TableBody>\r\n            </Table>\r\n        </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n)\r\n\r\nexport type DemoPropProps = {\r\n    name: string\r\n    type: string\r\n    default?: string\r\n    description?: string\r\n}\r\n\r\nexport const DemoProp = (props: DemoPropProps) => (\r\n    <TableRow>\r\n        <TableCell><code>{props.name}</code></TableCell>\r\n        <TableCell><code>{props.type}</code></TableCell>\r\n        <TableCell><code>{props.default}</code></TableCell>\r\n        <TableCell><Typography>{props.description}</Typography></TableCell>\r\n    </TableRow>\r\n)\r\n\r\ntype DemoCodeProps = Code['props']\r\nexport const DemoCode = (props: DemoCodeProps) => (\r\n    <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<CodeIcon />}>\r\n            <Typography variant='h6'>{`View Demo (${props.language})`}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n            <Code {...props} />\r\n        </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n)","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport Trending, {TrendingProps} from '../../lib/Trending'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\ntype TrendingDemoState = {\r\n    variant: TrendingProps['variant']\r\n}\r\n\r\nexport default class TrendingDemo extends React.PureComponent<{}, TrendingDemoState>{\r\n    state: TrendingDemoState = {\r\n        variant: 'up'\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='TrendingDemo.tsx' srcPath='Trending.tsx' >Trending</DemoTitle>\r\n                <DemoHelp>\r\n                    A colored icon indicating a trending direction. <br/>\r\n                    Tip: You can use the <code>color</code> or <code>nativeColor</code> property to override the color of the icon.\r\n                </DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='variant' type='up | down | flat' default='' description=''></DemoProp>\r\n                    <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Trending variant={this.state.variant} fontSize='large' />\r\n                    <TextField\r\n                        select\r\n                        value={this.state.variant}\r\n                        onChange={e => this.setState({variant: e.target.value as any})}\r\n                        label='variant'\r\n                    >\r\n                        <MenuItem value='up'>up</MenuItem>\r\n                        <MenuItem value='flat'>flat</MenuItem>\r\n                        <MenuItem value='down'>down</MenuItem>\r\n                    </TextField>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport BigNumber, {BigNumberProps} from '../../lib/BigNumber'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\ntype BigNumberState = {\r\n    color: BigNumberProps['color']\r\n    size: BigNumberProps['size']\r\n}\r\n\r\nexport default class BigNumberDemo extends React.PureComponent<{}, BigNumberState>{\r\n    state: BigNumberState = {\r\n        color: 'dark',\r\n        size: 'large',\r\n    }\r\n\r\n    handleChange = (key: keyof BigNumberState) => (event: React.ChangeEvent<HTMLSelectElement>) => this.setState({[key]: event.target.value} as any)\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='BigNumberDemo.tsx' srcPath='BigNumber.tsx' >BigNumber</DemoTitle>\r\n                <DemoHelp>\r\n                    A Big Number is a number stands out\r\n                </DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='color' type='light | dark' default='light' description=''></DemoProp>\r\n                    <DemoProp name='size' type='medium | large' default='larger' description=''></DemoProp>\r\n                    <DemoProp name='children' type='string | number' default='' description=''></DemoProp>\r\n                    {/* <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp> */}\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Grid container alignItems='center' spacing={32}>\r\n                        <Grid item>\r\n                            <div style={{backgroundColor: this.state.color === 'light' ? '#11beff' : 'inherit', padding: 10}}>\r\n                                <BigNumber\r\n                                    size={this.state.size}\r\n                                    color={this.state.color}\r\n                                >$123</BigNumber>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant='caption'>NB: The BigNumber component does not set the background color!<br /> The background color used here is just for illustrative purposes.</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <TextField\r\n                        select\r\n                        label='size'\r\n                        value={this.state.size}\r\n                        onChange={this.handleChange('size')}\r\n                    >\r\n                        <MenuItem value='medium'>medium</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                    >\r\n                        <MenuItem value='light'>light</MenuItem>\r\n                        <MenuItem value='dark'>dark</MenuItem>\r\n                    </TextField>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\n\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle, DemoCode} from '../components/demo'\r\n\r\nimport Alert, {AlertProps} from '../../lib/Alert'\r\n\r\nconst variantMessage: {[P in AlertProps['variant']]: string } = {\r\n    success: 'GRATE SUCCÉSS!',\r\n    info: 'Informational information',\r\n    warning: 'You better not do that, Brian',\r\n    error: 'That failed horribly...',\r\n}\r\n\r\nexport default class AlertDemo extends React.PureComponent<{}, {variant: AlertProps['variant'], message: string, open: boolean}>{\r\n    state = {\r\n        variant: 'success' as AlertProps['variant'],\r\n        open: false,\r\n        message: 'GRATE SUCCÉSS!'\r\n    }\r\n\r\n    onClose = () => this.setState({open: false})\r\n\r\n    onPress = (variant: AlertProps['variant']) => {\r\n        const message = variantMessage[variant]\r\n        return () => this.setState({open: true, message, variant})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='AlertDemo.tsx' srcPath='Alert.tsx' >Alert</DemoTitle>\r\n                <DemoHelp>A dismissable alert-box that can be used in a SnackBar or as a standard component in a page</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='message' type='string | ReactNode' description='The message string or Element to be displayed' />\r\n                    <DemoProp name='variant' type='success | error | info | warning' description='The variant of the alert. Icon and background-color is selected based on the variant' />\r\n                    <DemoProp name='onClose' type='() => void' description='Callback function invoked when the alert is dismissed' />\r\n                </DemoProps>\r\n                <DemoCode language='tsx'>\r\n                    {`import React from 'react'\r\nimport Alert from 'react-tfso-components/dist/Alert'\r\nimport Snacbar from '@material-ui/core/Snackbar'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nclass Alerter extends React.PureComponent<{}, {open: boolean}> {\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    onClose = () => this.setState({open: false})\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Snackbar\r\n                    open={this.state.open}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    autoHideDuration={2000}\r\n                    onClose={this.onClose}\r\n                >\r\n                    <Alert\r\n                        onClose={this.onClose}\r\n                        message='An unexpected error occured'\r\n                        variant='error'\r\n                    />\r\n                </Snackbar>\r\n                <Button variant='outlined' onClick={() => this.setState({open: true})}>Show Alert</Button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}`\r\n                    }\r\n                </DemoCode>\r\n                <DemoContent>\r\n                    <Snackbar\r\n                        open={this.state.open}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        autoHideDuration={2000}\r\n                        onClose={this.onClose}\r\n                    >\r\n                        <Alert\r\n                            onClose={this.onClose}\r\n                            message={this.state.message}\r\n                            variant={this.state.variant}\r\n                        />\r\n                    </Snackbar>\r\n                    <Button variant='outlined' onClick={this.onPress('success')}>Open Success</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('info')}>Open Info</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('warning')}>Open Warning</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('error')}>Open Error</Button>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport SearchField from '../../lib/SearchField'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\n\r\nexport default class SearchFieldDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='SearchFieldDemo.tsx' srcPath='SearchField.tsx' >SearchField</DemoTitle>\r\n                <DemoHelp>A TextField that gets full width on typing. It also has a search icon adornnment.</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='placeholder' type='string (optional)' default='Search' description=''></DemoProp>\r\n                    <DemoProp name='margin' type='none | dense | normal (optional)' default='dense' description=''></DemoProp>\r\n                    <DemoProp name='InputProps' type=\"TextFieldProps['InputProps'] (optional)\" default='{ startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>}' description=''></DemoProp>\r\n                    <DemoProp name='...' type='TextFieldProps' default='' description='Any other prop is spread to the TextField'></DemoProp>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <SearchField />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextFieldEditor from '../../lib/TextFieldEditor'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport default class TextFieldEditorDemo extends React.PureComponent{\r\n    state = {\r\n        value: 'demo',\r\n        dirty: false,\r\n        enableDirtyCheck: false\r\n    }\r\n\r\n    onReset = () => {\r\n        this.setState({value: ''})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='TextFieldEditorDemo.tsx' srcPath='TextFieldEditor.tsx' >TextFieldEditor</DemoTitle>\r\n                <DemoHelp>A wrapper around material-ui's TextField with some added features</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='value' type='string' default='' description='' />\r\n                    <DemoProp name='onChange' type='(value: string) => void' default='' description='Invoked when the user has finished editing the value (editor looses focus by clicking or tabbing away, pressing the Enter or ctrl+s' />\r\n                    <DemoProp name='dirty' type='boolean (optional)' default='false' description='If true, it is rendered in italic after onChange' />\r\n                    <DemoProp name='enableDirtyCheck' type='boolean (optional)' default='false' description='If true, the component will do internal dirty checking when editing' />\r\n                    <DemoProp name='...' type='TextFieldProps' description='Any other prop is spread to the TextField' />\r\n                </DemoProps>\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} >\r\n                        <Typography>Keybindings</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <code>\r\n                                ctrl + s:&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is NOT handled!)<br/>\r\n                                ctrl + z:&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\r\n                                Enter:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is handled)<br/>\r\n                                Escape:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\r\n                        </code>\r\n                        <br/>\r\n                        <i>When the event is handled `preventDefault()` and `stopPropagation()` is invoked on the `React.KeyboardEvent`</i><br/>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <DemoContent>\r\n                    <TextFieldEditor\r\n                        value={this.state.value}\r\n                        enableDirtyCheck={this.state.enableDirtyCheck}\r\n                        dirty={this.state.dirty}\r\n                        onChange={(value: string) => this.setState({value})}\r\n                    />\r\n                    <Button variant='outlined' onClick={() => this.setState({value: 'demo'})}>Reset</Button>\r\n                    <Button variant='outlined' onClick={() => this.setState({dirty: !this.state.dirty})}>Dirty: {this.state.dirty.toString()}</Button>\r\n                    <Button variant='outlined' onClick={() => this.setState({enableDirtyCheck: !this.state.enableDirtyCheck})}>Enable dirty check: {this.state.enableDirtyCheck.toString()}</Button>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport ConfirmationDialog from '../../lib/ConfirmationDialog'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\n\r\nexport default class ConfirmationDialogDemo extends React.PureComponent{\r\n    state = {\r\n        openConfirmationDialog: false\r\n    }\r\n\r\n    onClickOpenConfirmationDialog = () => {\r\n        this.setState({openConfirmationDialog: true})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='ConfirmationDialogDemo.tsx' srcPath='ConfirmationDialog.tsx' >ConfirmationDialog</DemoTitle>\r\n                <DemoHelp>A Dialog containing Ok and Cancel buttons</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show dialog\" />\r\n                    <DemoProp name=\"title\" type=\"string (optional)\" default=\"\" description=\"Dialog title\" />\r\n                    <DemoProp name=\"message\" type=\"string\" default=\"\" description=\"Dialog content\" />\r\n                    <DemoProp name=\"okButtonText\" type=\"string\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"onOk\" type=\"function\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Button variant='outlined' onClick={this.onClickOpenConfirmationDialog}>Open ConfirmationDialog</Button>\r\n                    <ConfirmationDialog\r\n                        open={this.state.openConfirmationDialog}\r\n                        okButtonText='Ok'\r\n                        cancelButtonText='Cancel'\r\n                        onOk={() => this.setState({openConfirmationDialog: false})}\r\n                        onCancel={() => this.setState({openConfirmationDialog: false})}\r\n                        message='Confirmation dialog message'\r\n                        title='Confirmation dialog title'\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\r\nimport Emoji from '../../lib/Emoji'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\ntype State = {\r\n    // variant\r\n}\r\n\r\nexport default class EmojiDemo extends React.PureComponent<{}, State>{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle srcPath='Emoji.tsx' demoPath='EmojiDemo.tsx'>Emoji</DemoTitle>\r\n                <DemoHelp>A simple html Emoji component</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='variant' type='string' default='' description=''/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Typography variant=\"h2\">\r\n                        <Emoji variant='heart' />\r\n                        <Emoji variant='thumbsUp' />\r\n                        <Emoji variant='fire' />\r\n                    </Typography>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport TrendingDemo from '../demos/TrendingDemo'\r\nimport BigNumberDemo from '../demos/BigNumberDemo'\r\nimport AlertDemo from '../demos/AlertDemo'\r\nimport SearchFieldDemo from '../demos/SearchFieldDemo'\r\nimport TextFieldEditorDemo from '../demos/TextFieldEditorDemo'\r\nimport ConfirmationDialogDemo from '../demos/ConfirmationDialogDemo'\r\nimport EmojiDemo from '../demos/EmojiDemo'\r\n// import DashBoardDemo from '../demos/DashBoardDemo'\r\n\r\nexport default () => (<>\r\n    <EmojiDemo />\r\n    <AlertDemo />\r\n    <BigNumberDemo />\r\n    <ConfirmationDialogDemo />\r\n    {/* <DashBoardDemo /> */}\r\n    <SearchFieldDemo />\r\n    <TextFieldEditorDemo />\r\n    <TrendingDemo />\r\n</>)","import React from 'react'\r\nimport {Delay, Hoverable, Wizard} from '../../lib'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport Step from '@material-ui/core/Step'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Button from '@material-ui/core/Button'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\n\r\nexport default class Utils extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <DelayDemo />\r\n                <HoverableDemo />\r\n                <WizardDemo />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nclass DelayDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Delay.tsx'>Delay</DemoTitle>\r\n                <DemoHelp>Shows the component inside after a set delay. Can be used to only show loaders if exceptionally slow</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"beforeShow\" type=\"React element or string (optional)\" default=\"\" description=\"What you want to show before the delay is finished\" />\r\n                    <DemoProp name=\"delayMs\" type=\"Number (optional)\" default=\"1000\" description=\"Delay time in ms\" />\r\n                    <DemoProp name=\"show\" type=\"Boolean (optional)\" default=\"false\" description=\"Force show content\" />\r\n                    <DemoProp name=\"children\" type=\"React element\" default=\"\" description=\"Content to show after delay\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Delay beforeShow=\"Waiting for delay...\">\r\n                        <CircularProgress />\r\n                    </Delay>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass HoverableDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Hoverable.tsx'>Hoverable</DemoTitle>\r\n                <DemoHelp>A HOC that passes hover true/false as a render prop</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(hover: boolean, ref: RefObject) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Hoverable>\r\n                        {(hover) => (\r\n                            <React.Fragment>\r\n                                {hover\r\n                                    ? <div key=\"1\" style={{backgroundColor: '#6699bb', padding: 15, color: '#FFF', cursor: 'pointer'}}>You're hovering me!</div>\r\n                                    : <div key=\"2\" style={{padding: 15, height: '100%'}}>Hover your mouse over me</div>\r\n                                }\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Hoverable>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass WizardDemo extends React.PureComponent{\r\n    render(){\r\n        const length = 3\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Wizard.tsx'>Wizard</DemoTitle>\r\n                <DemoHelp>A HOC that passes an index and next/prev functions in a render prop. Can be used along with material ui stepper or any other wizard</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(index: number, next: function, prev: function) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                    <DemoProp name=\"index\" type=\"number (optional)\" default=\"\" description=\"Force the current index to a certain value\" />\r\n                    <DemoProp name=\"length\" type=\"number (optional)\" default=\"\" description=\"The max length. The index will always be lower than this\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Wizard length={length + 1}>\r\n                        {(index, next, prev) => (\r\n                            <React.Fragment>\r\n                                <Stepper activeStep={index}>\r\n                                    <Step key=\"Step 1\">\r\n                                        <StepLabel>Step 1</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 2\">\r\n                                        <StepLabel>Step 2</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 3\">\r\n                                        <StepLabel>Step 3</StepLabel>\r\n                                    </Step>\r\n                                </Stepper>\r\n                                <div>\r\n                                    <Button onClick={prev} disabled={index <= 0}>Prev</Button>\r\n                                    <Button onClick={next} disabled={index >= length}>Next</Button>\r\n                                    {index >= length && 'All steps completed!'}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Wizard>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\n\r\n// Original icon colors: TODO: Use these?\r\n// blue: #00B8F3\r\n// white: #fff\r\n\r\nexport type TfsoIconProps = {} & SvgIconProps\r\n\r\nexport default React.memo((props: TfsoIconProps) => (\r\n    <SvgIcon\r\n        {...props}\r\n        viewBox='0 0 50.59 30.35'\r\n    >\r\n        <path\r\n            d={'M33.22,9.62A6,6,0,0,0,29.85,13a5.06,5.06,0,0,0-4.56-2.87,5.06,5.06,0,1,1,5.06-5.06A5.06,5.06,0,0,0,33.22,9.62ZM45.53,20.23A5.06,5.06,0,0,1,41,17.36a6,6,0,0,1-3.36,3.37,5.06,5.06,0,0,1,2.87,4.56,5.06,5.06,0,1,0,5.06-5.06Zm-25.3-5.06a5.06,5.06,0,1,0-10.12,0,5.06,5.06,0,0,1-5.06,5.06,5.06,5.06,0,1,0,5.06,5.06,5.06,5.06,0,0,1,9.62-2.19,6,6,0,0,1,3.37-3.37A5.06,5.06,0,0,1,20.23,15.18Zm15.18-5.06a5.06,5.06,0,0,0-5.06,5v.13a5.06,5.06,0,0,1-2.87,4.5,6,6,0,0,1,3.37,3.36,5.06,5.06,0,0,1,4.56-2.87,5.06,5.06,0,0,0,0-10.12ZM25.29,20.23a5.06,5.06,0,1,0,5.06,5.06A5.06,5.06,0,0,0,25.29,20.23Z'}\r\n        />\r\n    </SvgIcon>\r\n))","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\r\nimport Tfso, {TfsoIconProps} from '../../lib/icons/Tfso'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nexport default class Icons extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <>\r\n                <TfsoDemo />\r\n                <TfsoLoadingDemo />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\ntype TfsoLogoDemoState = {\r\n    color: TfsoIconProps['color']\r\n    fontSize: TfsoIconProps['fontSize']\r\n    nativeColor: TfsoIconProps['nativeColor']\r\n}\r\n\r\nclass TfsoDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\r\n    state:TfsoLogoDemoState = {\r\n        color: 'primary',\r\n        fontSize: 'large',\r\n        nativeColor: ''\r\n    }\r\n\r\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/Tfso.tsx'>Tfso</DemoTitle>\r\n                <DemoHelp>Tfso logo icon</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Tfso\r\n                        color={this.state.color}\r\n                        fontSize={this.state.fontSize}\r\n                        nativeColor={this.state.nativeColor}\r\n                    />\r\n                    <TextField\r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                    >\r\n                        <MenuItem value='inherit' >inherit</MenuItem>\r\n                        <MenuItem value='primary' >primary</MenuItem>\r\n                        <MenuItem value='secondary' >secondary</MenuItem>\r\n                        <MenuItem value='default' >default</MenuItem>\r\n                        <MenuItem value='action' >action</MenuItem>\r\n                        <MenuItem value='disabled' >disabled</MenuItem>\r\n                        <MenuItem value='error' >error</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='fontSize'\r\n                        value={this.state.fontSize}\r\n                        onChange={this.handleChange('fontSize')}\r\n                    >\r\n                        <MenuItem value='small'>small</MenuItem>\r\n                        <MenuItem value='default'>default</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n\r\n                    </TextField>\r\n                    <TextField\r\n                        label='nativeColor'\r\n                        placeholder='#00B8F3'\r\n                        value={this.state.nativeColor}\r\n                        onChange={this.handleChange('nativeColor')}\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass TfsoLoadingDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\r\n    state:TfsoLogoDemoState = {\r\n        color: 'primary',\r\n        fontSize: 'large',\r\n        nativeColor: ''\r\n    }\r\n\r\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/TfsoLoading.tsx'>Tfso Loading</DemoTitle>\r\n                <DemoHelp>Tfso logo loading icon</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='once' type='boolean' default='false' description='If true, the icon will animate once'/>\r\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <TfsoLoading\r\n                        color={this.state.color}\r\n                        fontSize={this.state.fontSize}\r\n                        nativeColor={this.state.nativeColor}\r\n                    />\r\n                    <TextField\r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                    >\r\n                        <MenuItem value='inherit' >inherit</MenuItem>\r\n                        <MenuItem value='primary' >primary</MenuItem>\r\n                        <MenuItem value='secondary' >secondary</MenuItem>\r\n                        <MenuItem value='default' >default</MenuItem>\r\n                        <MenuItem value='action' >action</MenuItem>\r\n                        <MenuItem value='disabled' >disabled</MenuItem>\r\n                        <MenuItem value='error' >error</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='fontSize'\r\n                        value={this.state.fontSize}\r\n                        onChange={this.handleChange('fontSize')}\r\n                    >\r\n                        <MenuItem value='small'>small</MenuItem>\r\n                        <MenuItem value='default'>default</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        label='nativeColor'\r\n                        placeholder='#00B8F3'\r\n                        value={this.state.nativeColor}\r\n                        onChange={this.handleChange('nativeColor')}\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport styled from 'styled-components/macro'\r\n\r\nimport Typography, {TypographyProps} from '@material-ui/core/Typography'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport {Code} from '../components/code'\r\nimport Link, {Anchor} from '../components/Link'\r\n\r\n// https://www.w3schools.com/charsets/ref_emoji.asp\r\nconst emojis = {\r\n    middleFinger: <>&#128405;</>,\r\n    indexFinger: <>&#128070;</>,\r\n    flex: <>&#128170;</>,\r\n    brokenHeart: <>&#128148;</>,\r\n    perfect: <>&#128076;</>,\r\n    thumbsUp: <>&#128077;</>,\r\n    thumbsDown: <>&#128078;</>,\r\n    clap: <>&#128079;</>,\r\n    heart: <>&#128152;</>,\r\n    fire: <>&#128293;</>,\r\n    bulb: <>&#128161;</>,\r\n    crap: <>&#128169;</>,\r\n    thinking: <>&#129300;</>,\r\n    rocket: <>&#128640;</>\r\n}\r\n\r\nconst Section = styled.div`&&{\r\n    margin-top: ${({theme}) => theme.mui.spacing.unit * 4}px;\r\n    margin-bottom: ${({theme}) => theme.mui.spacing.unit * 2}px;\r\n}`\r\n\r\nconst SubHeading = (props: TypographyProps) => <Typography variant='h4' paragraph {...props} />\r\nconst Paragraph = (props: TypographyProps) => <Typography variant='body1' paragraph {...props} component='div'/>\r\nconst Tip = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\r\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\r\n    <Card elevation={0}>\r\n        <CardContent>\r\n            <Typography variant='h6'>Why?</Typography>\r\n            <Typography variant='body1' component='div'>{props.children}</Typography>\r\n        </CardContent>\r\n    </Card>\r\n    <br />\r\n</>)\r\n\r\nconst Guideline = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\r\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\r\n    <Card elevation={0}>\r\n        <CardContent>\r\n            <Typography variant='body1' component='div'>{props.children}</Typography>\r\n        </CardContent>\r\n    </Card>\r\n</>)\r\n\r\nexport default class Guidelines extends React.PureComponent{\r\n    render = () => (<>\r\n        {this.renderHeading()}\r\n        {this.renderGuidelines()}\r\n        {this.renderTips()}\r\n        {this.renderContributing()}\r\n    </>)\r\n\r\n    renderHeading = () => (\r\n        <>\r\n            <Typography variant='h2' paragraph>\r\n                Guidelines\r\n            </Typography>\r\n            <Typography variant='subtitle1' paragraph>\r\n                <b>{'{WIP} '}</b>Some general guidelines for developing React applications in TFSO\r\n            </Typography>\r\n        </>\r\n    )\r\n\r\n    renderGuidelines = () => (\r\n        <Section>\r\n            <SubHeading>General <Anchor id={'general'}/></SubHeading>\r\n            <Guideline title='Material Design'>\r\n                We strive to follow <Link underline='hover' href='https://material.io/design/' target='_blank'>Google's Material Design</Link> principles. <br />\r\n                Use components and icons from the <Link underline='hover' href='https://material-ui.com/' target='_blank'>MaterialUi package</Link><br />\r\n                This package also provides a theme to be used with <code>material-ui</code>, <Link underline='hover' to='/theme'>get started using it here</Link>\r\n            </Guideline>\r\n        </Section>\r\n    )\r\n\r\n    renderTips = () => (\r\n        <Section>\r\n            <SubHeading>\r\n                {emojis.indexFinger} Do's &amp; Don'ts {emojis.middleFinger} <Anchor id={'dodont'} />\r\n            </SubHeading>\r\n            <Tip title={<>Specific imports</>}>\r\n                Reducing bundle size!<br />\r\n                <b>Bad:</b>\r\n                <Code language='js'>\r\n                    {\r\n                        `import { Button } from '@material-ui/core' // All of material-ui/core will be included in the bundle!\r\nimport { Alert } from 'react-tfso-components' // All of react-tfso-components will be included in the bundle!`\r\n                    }\r\n                </Code>\r\n                <b>Good:</b>\r\n                <Code language='js'>\r\n                    {\r\n                        `import Button from '@material-ui/core/Button'\r\nimport Alert from 'react-tfso-components/dist/Alert'`\r\n                    }\r\n                </Code>\r\n            </Tip>\r\n\r\n            <Tip title={<>{/* emojis.thumbsUp */}Extend from <code>React.PureComponet</code> instead of <code>React.Component</code></>}>\r\n                Your components should never mutate the state directly or have mutable properties.<br/>\r\n                Hence they are pure, and should extend React.PureComponent, which is more performant.\r\n            </Tip>\r\n            <Tip title={<>{/* emojis.thumbsDown */}Don't use <code>componentWillReceiveProps</code></>}>\r\n                It's deprecated and going away in React 17 {emojis.brokenHeart}<br />\r\n                More information <Link underline='hover' href='https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops' target='_blank'>here</Link>\r\n            </Tip>\r\n            <Tip title={<>{/* emojis.thumbsDown */}Avoid copying props to state</>}>\r\n                ...unless you absolutely need to, there are legit reasons, however there is most likely a better solution. <br />\r\n                Perhaps you should invoke a callback provided by props and let the parent component handle something?\r\n            </Tip>\r\n        </Section>\r\n    )\r\n\r\n    renderContributing = () => (<>\r\n        <SubHeading>\r\n            Contributing to <code>react-tfso-components</code> {emojis.rocket} <Anchor id='contributing' />\r\n        </SubHeading>\r\n        <Paragraph>\r\n            Components in this package should:\r\n            <ul>\r\n                <li>Be written in typescript or provide type declarations (d.ts)</li>\r\n                <li>Be composible</li>\r\n                <li>Not be specific to a domain/usage (they should be as generic as possible)</li>\r\n                <li>Validate props using `<code>prop-types`</code></li>\r\n                <li>Be Pure (function component or extending <code>React.PureComponent</code>)</li>\r\n                <li>Have descriptive and easy to understand Props:\r\n                    <ul>\r\n                        <li>Use commonly known verbs/names</li>\r\n                        <li>Function props should begin with 'on', (onFocus, onChange etc.)</li>\r\n                        <li>Boolean props should <i>not</i> begin with 'is', (open instead of isOpen)</li>\r\n                        <li>Boolean props should be optional, (eg. <code>open?: boolean</code>), <code>undefined</code> should be evaluated as <code>false</code></li>\r\n                        <li><code>children</code> should always be explicitly typed (eg: <code>children: string</code>)</li>\r\n                        <li><code>children</code> should be defined as\r\n                            <ul>\r\n                                <li><code>React.ReactCild</code> for single child<br /></li>\r\n                                <li><code>React.ReactNode</code> for multiple children</li>\r\n                                <li>primitive type (<code>undefined</code>, <code>string</code>, <code>number</code> etc.)</li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li>Have a demo with documentation so that developers can easily find and use your component</li>\r\n            </ul>\r\n        </Paragraph>\r\n    </>)\r\n}","import React from 'react'\r\nimport styled, { DefaultTheme } from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport {styledTheme} from '../../lib/theme/index'\r\n\r\nconst bgColor = (color: '') => {\r\n    const colors = styledTheme['tfso']['colors']\r\n    return colors[color]\r\n}\r\n\r\nexport type ThemeColorProps = {\r\n    color: React.ReactNode\r\n}\r\n\r\nconst Box = styled.div`\r\n    background-color: ${({color, theme}) => theme.tfso.colors[color] };\r\n    width: 230px;\r\n    height: 230px;\r\n    text-align: center;\r\n`\r\n\r\nconst Txt = styled.div`\r\n  font-size: 2em;\r\n  line-height: 2em;\r\n  color: ${({dark, theme}) => dark ? \"#000\" : theme.mui.palette.secondary.contrastText}\r\n`\r\n\r\nconst ThemeColor = (props: ThemeColorProps) => {\r\n    const { color } = props\r\n    return (\r\n        <Box color={color}>\r\n            theme.tfso.colors.{color}<br/><br/>\r\n            <Txt>{bgColor(color)}</Txt>\r\n            <Txt dark>{bgColor(color)}</Txt>\r\n        </Box>\r\n    )\r\n}\r\n\r\nThemeColor.propTypes = {\r\n    color: PropTypes.node.isRequired\r\n}\r\n\r\nexport default ThemeColor","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport styled from 'styled-components'\r\nimport ThemeColor from '../components/ThemeColor'\r\nimport {styledTheme} from '../../lib/theme/index'\r\n\r\nconst ThemeColors = styled.div`\r\n  clear: both;\r\n  > div{\r\n    float: left;\r\n      :hover{\r\n        width: 460px;\r\n        height: 230px;\r\n      }\r\n  }\r\n`\r\n\r\nexport default class Theme extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <>\r\n                <Typography variant='h2'>\r\n                    Theme &amp; Styling\r\n                </Typography>\r\n                <Typography variant='subtitle1'>\r\n                    There is more TODO\r\n                </Typography>\r\n                <ThemeColors>\r\n                    {Object.keys(styledTheme['tfso']['colors']).map(color => (\r\n                        <ThemeColor color={color}/>\r\n                    ))}\r\n                </ThemeColors>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\r\nimport DashBoard, {WidgetProps} from '../../lib/DashBoard'\r\nimport {styledTheme} from '../../lib/theme'\r\nimport {BigNumber, Trending} from '../../lib'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\ntype State = {\r\n    widgets: Array<WidgetProps>\r\n}\r\n\r\nlet i = 0\r\nconst colors = Object.keys(styledTheme.tfso.colors)\r\nconst getColor = () => styledTheme.tfso.colors[colors[i++]]\r\n\r\nconst W1 = () => (\r\n    <Grid container wrap='nowrap' style={{padding: 10}}>\r\n        <Grid item>\r\n            <BigNumber color='light' >$123</BigNumber>\r\n        </Grid>\r\n        <Grid item xs>\r\n            <Trending variant='up' fontSize='large'></Trending>\r\n        </Grid>\r\n    </Grid>\r\n)\r\n\r\nexport default class DashBoardDemo extends React.PureComponent<{}, State>{\r\n    state: State = {\r\n        widgets: [\r\n            {\r\n                size: 'small',\r\n                background: styledTheme.tfso.colors.orangeColor,\r\n                children: <W1 />\r\n            },\r\n            {\r\n                size: 'small',\r\n                background: getColor(),\r\n                children: <div>Small 2</div>\r\n            },\r\n            {\r\n                size: 'small',\r\n                background: getColor(),\r\n                children: <div>Small 3</div>\r\n            },\r\n            {\r\n                size: 'small',\r\n                background: getColor(),\r\n                children: <div>Small 4</div>\r\n            },\r\n            {\r\n                size: 'medium',\r\n                background: getColor(),\r\n                children: <div>Medium 5</div>\r\n            },\r\n            {\r\n                size: 'large',\r\n                background: getColor(),\r\n                children: <div>large 7</div>\r\n            },\r\n            {\r\n                size: 'medium',\r\n                background: getColor(),\r\n                children: <div>Medium 5</div>\r\n            },\r\n            {\r\n                size: 'medium',\r\n                background: getColor(),\r\n                children: <div>Medium 6</div>\r\n            },\r\n            {\r\n                size: 'large',\r\n                background: getColor(),\r\n                children: <div>large 7</div>\r\n            }\r\n        ]\r\n    }\r\n\r\n    onOrder = (widgets: Array<WidgetProps>) => {\r\n        this.setState({widgets})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='ComponentsDemo/DashBoardDemo.tsx' srcPath='DashBoard.Tsx'>DashBoard</DemoTitle>\r\n                <DemoHelp></DemoHelp>\r\n                <DemoProps>\r\n                    {/* <DemoProp /> */}\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                        justifyContent: 'space-around',\r\n                        overflowX: 'auto',\r\n                        padding: 10,\r\n                        height: '400px',\r\n                        // backgroundColor: '#eee'\r\n                    }} >\r\n                        <DashBoard\r\n                            onChangeOrder={this.onOrder}\r\n                            onRemove={() => {}}\r\n                            widgets={this.state.widgets}\r\n                        />\r\n                    </div>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DashBoardDemo from '../demos/DashBoardDemo'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nexport default class Lab extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <>\r\n                <Typography variant='h2'>\r\n                    Components Lab\r\n                </Typography>\r\n                <Typography variant='subtitle1'>\r\n                    The components you find here are Works in Progress and are subjec to breaking changes and/or future removal.\r\n                </Typography>\r\n                <br />\r\n                <br />\r\n                <DashBoardDemo />\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport {layout} from '../lib'\r\n\r\nimport Home from './pages/Home'\r\nimport Components from './pages/Components'\r\nimport Utils from './pages/Utils'\r\nimport Icons from './pages/Icons'\r\nimport GitHubLink from './components/GitHubLink'\r\nimport MaterialUiLink from './components/MaterialUiLink'\r\nimport Guidelines from './pages/Guidelines'\r\nimport Theme from './pages/Theme'\r\nimport Lab from './pages/Lab'\r\n\r\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport CodeIcon from '@material-ui/icons/Code'\r\nimport StyleIcon from '@material-ui/icons/Style'\r\nimport BuildIcon from '@material-ui/icons/Build'\r\nimport StraightenIcon from '@material-ui/icons/Straighten'\r\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact'\r\nimport FontDownloadIcon from '@material-ui/icons/FontDownload'\r\nimport history from './history'\r\nimport {Location, UnregisterCallback} from 'history'\r\nimport Link from './components/Link'\r\n\r\nconst menuGroups = {\r\n    main: {\r\n        label: 'Everything',\r\n        subtitle: 'This is all the things',\r\n        pages: {\r\n            Home: Home,\r\n            Guidelines: Guidelines,\r\n            Components: Components,\r\n            Theme: Theme,\r\n            Utils: Utils,\r\n            Icons: Icons,\r\n            Lab: Lab,\r\n        }\r\n    }\r\n}\r\n\r\nconst pages = {\r\n    Home: Home,\r\n    Guidelines: Guidelines,\r\n    Components: Components,\r\n    Theme: Theme,\r\n    Utils: Utils,\r\n    Icons: Icons,\r\n    Lab: Lab,\r\n}\r\n\r\nconst pageIcon: {[P in keyof typeof pages]: React.ComponentType<SvgIconProps>} = {\r\n    Home: HomeIcon,\r\n    Guidelines: StraightenIcon,\r\n    Components: ViewCompactIcon,\r\n    Theme: StyleIcon,\r\n    Utils: BuildIcon,\r\n    Icons: FontDownloadIcon,\r\n    Lab: CodeIcon,\r\n}\r\n\r\ntype LayoutState = {\r\n    menuOpen: boolean,\r\n    location: Location<any>\r\n    menuGroupsExpanded: any\r\n}\r\n\r\nexport default class Layout extends React.PureComponent<{}, LayoutState>{\r\n    _unsubHistory: UnregisterCallback | null = null\r\n    componentDidMount(){\r\n        this._unsubHistory = history.listen(this.onNavigation)\r\n    }\r\n    componentWillUnmount(){\r\n        this._unsubHistory && this._unsubHistory()\r\n    }\r\n\r\n    state: LayoutState = {\r\n        location: history.location,\r\n        menuOpen: true,\r\n        menuGroupsExpanded: {}\r\n    }\r\n\r\n    onNavigation = (location: Location<any>) => {\r\n        this.setState({location})\r\n    }\r\n\r\n    getSelectedPageName = () => {\r\n        const {location: {pathname}} = this.state\r\n        const path = pathname.slice(pathname.indexOf('#') + 1)\r\n        return Object.keys(pages).find(page => path.indexOf(page.toLowerCase()) > -1) || 'Home'\r\n    }\r\n\r\n    onMenuToggle = () => {\r\n        this.setState(state => ({menuOpen: !state.menuOpen}))\r\n    }\r\n\r\n    onCloseMenu = () => this.setState({menuOpen: false})\r\n\r\n    onToggleGroupExpanded = (name) => {\r\n        this.setState(state => ({\r\n            menuGroupsExpanded: {\r\n                ...state.menuGroupsExpanded,\r\n                [name]: !state.menuGroupsExpanded[name]\r\n            }\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        const menu = (\r\n            <layout.Menu open={this.state.menuOpen} onClose={this.onCloseMenu}>\r\n                {Object.keys(menuGroups).map(groupName => {\r\n                    const group = menuGroups[groupName]\r\n\r\n                    return (\r\n                        <layout.MenuGroup\r\n                            expanded={this.state.menuGroupsExpanded[groupName]}\r\n                            label={group.label}\r\n                            selected={false}\r\n                            subtitle={group.subtitle}\r\n                            onToggleExpanded={() => this.onToggleGroupExpanded(groupName)}\r\n                        >\r\n                            {Object.keys(group.pages).map(page => {\r\n                                return (\r\n                                    <layout.MenuItem\r\n                                        label={page}\r\n                                        selected={this.getSelectedPageName() === page}\r\n                                        icon={pageIcon[page]}\r\n                                        href={(content) => {\r\n                                            return (\r\n                                                <Link to={`/${page}`} key={page}>\r\n                                                    {content}\r\n                                                </Link>\r\n                                            )\r\n                                        }}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </layout.MenuGroup>\r\n                    )\r\n                })}\r\n            </layout.Menu>\r\n        )\r\n        const mobileMenu = (\r\n            <layout.MobileMenu>\r\n                Mobile menu\r\n            </layout.MobileMenu>\r\n        )\r\n        const topMenu = (\r\n            <layout.TopMenu>\r\n                <Grid container spacing={16}>\r\n                    <Grid item><MaterialUiLink /></Grid>\r\n                    <Grid item><GitHubLink /></Grid>\r\n                </Grid>\r\n            </layout.TopMenu>\r\n        )\r\n\r\n        const Page = pages[this.getSelectedPageName()]\r\n\r\n        return (\r\n            <layout.Layout\r\n                menu={menu}\r\n                mobileMenu={mobileMenu}\r\n                topMenu={topMenu}\r\n                title=\"Tfso Components\"\r\n                docTitle=\"Tfso Components\"\r\n                onMenuToggle={this.onMenuToggle}\r\n            >\r\n                <Page />\r\n            </layout.Layout>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport {theme} from '../lib'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport {ThemeProvider as StyledThemeProvider} from 'styled-components'\r\nimport {MuiThemeProvider} from '@material-ui/core/styles'\r\nimport Layout from './Layout'\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <MuiThemeProvider theme={theme.materialuiTheme}>\r\n            <StyledThemeProvider theme={theme.styledTheme}>\r\n                <Layout />\r\n            </StyledThemeProvider>\r\n        </MuiThemeProvider>\r\n    </React.Fragment>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}