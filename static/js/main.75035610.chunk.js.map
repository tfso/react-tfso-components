{"version":3,"sources":["lib/theme/index.ts","lib/layout/Menu.tsx","lib/icons/Tfso.tsx","lib/layout/Topbar.tsx","lib/layout/DocumentTitle.tsx","lib/ScreenSize.tsx","lib/layout/Layout.tsx","lib/layout/ProfileCard.tsx","lib/Delay.tsx","lib/InfiniteScroll.tsx","lib/layout/Notify.tsx","lib/Alert.tsx","lib/BigNumber.tsx","lib/ConfirmationDialog.tsx","lib/SearchField.tsx","lib/TextFieldEditor.tsx","lib/Trending.tsx","lib/Emoji.tsx","lib/ListPicker.tsx","lib/Hoverable.tsx","lib/Wizard.tsx","lib/icons/TfsoLoading.tsx","demo/components/MaterialUiLink.tsx","demo/components/GitHubLink.tsx","demo/pages/Home.tsx","demo/components/code.tsx","demo/components/demo.tsx","demo/pages/Icons.tsx","demo/history.ts","demo/components/Link.tsx","demo/pages/Guidelines.tsx","demo/components/ThemeColor.tsx","demo/pages/Theme.tsx","demo/demos/TrendingDemo.tsx","demo/demos/BigNumberDemo.tsx","demo/demos/AlertDemo.tsx","demo/demos/SearchFieldDemo.tsx","demo/demos/TextFieldEditorDemo.tsx","demo/demos/ConfirmationDialogDemo.tsx","demo/demos/ListPickerDemo.tsx","demo/demos/EmojiDemo.tsx","lib/GridLayout.tsx","demo/demos/GridLayoutDemo.tsx","demo/demos/HoverableDemo.tsx","demo/demos/DelayDemo.tsx","demo/demos/WizardDemo.tsx","demo/demos/ScreenSizeDemo.tsx","demo/demos/ProfileCardDemo.tsx","demo/demos/NotifyDemo.tsx","demo/demos/InfiniteScrollDemo.tsx","demo/Layout.tsx","demo/index.tsx"],"names":["colorScheme","colors","tfso","base","baseLight","baseLight1","baseLight2","baseLight3","baseLight4","baseLight5","blue","blueDark","blueDesaturated","grayBlue","teal","green","greenLight","purple","red","redLight","orange","yellow","black","gray","grayDark","grayDarker","grayLight","grayLighter","grayLightest","white","whiteDark","whiteDarker","bodyBackground","listOverBackground","border","tabBar","menu","menuExpanded","menuExpandedDivider","menuItem","menuItemText","menuItemSelectedText","notification","blueGrey","notificationHover","palette","primary","primaryLight","success","warning","alert","delete","loudInfo","materialuiTheme","createMuiTheme","typography","useNextVariants","secondary","dark","main","light","contrastText","styledTheme","layout","containerMargin","mui","StyledDrawer","styled","Drawer","attrs","classes","paper","withConfig","displayName","componentId","_ref","open","props","theme","zIndex","drawer","_ref2","_ref3","StyledChip","_ref4","color","Object","objectWithoutProperties","react_default","a","createElement","Chip_default","_ref5","getColor","_ref6","_ref7","pxToRem","StyledListItemText","ListItemText","Menu","variant","this","mobile","elevation","onClose","List_default","disablePadding","style","paddingBottom","children","React","PureComponent","MenuContent","Fragment","ListItemSecondaryText","Typography","_ref8","MenuIcon","ListItemIcon","_ref9","MenuGroupListItem","_ref10","expanded","ListItem_default","_ref11","_ref12","_ref13","_ref14","MenuGroupExpandLess","ExpandLess","_ref15","MenuGroupExpandMore","ExpandMore","_ref16","MenuGroup","_React$PureComponent2","_getPrototypeOf2","_this","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onToggleExpanded","e","stopPropagation","inherits","createClass","key","value","_this$props","subtitle","label","Icon","icon","ContainerProps","top","position","divider","onClick","button","disableRipple","disableTouchRipple","fontSize","primaryTypographyProps","Collapse_default","in","timeout","Tooltip_default","title","enterDelay","noWrap","ListItemSecondaryAction_default","IconButton_default","dense","Divider_default","RootListItem","ListItem","selected","_ref17","_ref18","_ref19","_ref20","_ref21","MenuRootItem","_React$PureComponent3","LinkContent","chipLabel","chipColor","href","Link_default","NestedListItem","_ref22","_ref23","_ref24","MenuItem","_React$PureComponent4","Tfso","memo","SvgIcon_default","assign","viewBox","d","StyledAppBar","AppBar","Wrapper","div","Left","LeftMobile","Right","MenuButton","IconButton","ToolbarRight","TopBar","homeUrl","underline","icons_Tfso","Typography_default","component","paddingLeft","Toolbar_default","onMenuToggle","aria-label","Menu_default","TopMenuContent","setTitle","text","document","DocumentTitle","nextProps","tablet","desktop","getScreenSize","width","includes","ScreenSize","withWidth","withScreenSize","Component","screenSize","LayoutWrapper","LayoutHeader","LayoutBody","LayoutBodyLeft","LayoutBodyRight","_React$PureComponent","Layout","state","menuOpen","onCloseMenu","setState","menuIsOpen","onClickContent","DocumentTitle_DocumentTitle","docTitle","Topbar_TopBar","topMenuContent","Menu_Menu","menuContent","CustomCard","Card","CustomCardContent","CardContent","ProfileCardContent","ProfileTypography","ProfileAvatar","Avatar","spacing","unit","CustomCloseIconButton","RightPanel","TransitionComponent","Slide_default","direction","ProfileCard","onSignOut","renderContent","src","identity","profile","thumb","data","firstName","lastName","identifier","CardActions_default","ProfileCard_Right","Button_default","size","signOutText","desktopDialog","Popover_default","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","mobileDialog","Dialog_default","keepMounted","fullScreen","fullWidth","maxWidth","Close_default","lib_ScreenSize","Delay","_timer","show","_this2","setTimeout","delayMs","clearTimeout","beforeShow","defaultProps","throttle","fn","running","window","requestAnimationFrame","InfiniteScroll","_reachedTreshold","_lastScrollTop","_mounted","createRef","onScroll","node","current","clientHeight","scrollTop","scrollHeight","_this$props$threshold","threshold","onReachEnd","onReachThreshold","thresholdPoint","thresholdReachable","reachedTreshold","reachedEnd","scrollTo","height","overflowY","ref","treshold","CloseIconButton","_templateObject","ReadListItem","read","_templateObject2","action","hover","MobileToolbarWrapper","_templateObject3","NotificationItem","anchor","useRef","_React$useState","useState","_React$useState2","slicedToArray","onMenu","useCallback","callback","event","onClickAction","secondaryText","useMemo","date","Math","floor","abs","getTime","Date","now","toLocaleDateString","undefined","day","month","year","toLocaleTimeString","hour","minute","id","ContainerComponent","avatar","ListItemAvatar_default","ListItemText_default","core_Menu_default","disableAutoFocusItem","MenuListProps","MenuItem_default","onToggleMarkRead","toggleMarkUnreadTitle","toggleMarkReadTitle","actions","map","i","buttonRef","MoreVert_default","Notifier","_anchorEl","onOpen","renderNotifyer","count","Badge_default","badgeContent","max","NotificationsActive_default","IconProps","NotificationsNone_default","renderToolbar","disableGutters","marginRight","Grid_default","container","justify","alignItems","wrap","item","xs","onReadAll","readAllButtonText","renderLoading","Spacer","loading","Delay_Delay","LinearProgress_default","InfiniteScroll_InfiniteScroll","onLoadMore","PaperProps","DialogContent_default","renderMobile","renderDesktop","variantIcon","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","StyledSnack","other","SnackbarContent_default","Alert_templateObject","bgColor","Alert","message","aria-describedby","display","opacity","fontSizeMap","medium","large","wrapper","BigNumber","_ref2$size","_ref3$color","ConfirmationDialog","onCancel","onOk","okButtonText","cancelButtonText","DialogTitle_default","DialogActions_default","SearchField","editing","onBlur","onFocus","TextField_default","handleEvent","preventDefault","nativeEvent","stopImmediatePropagation","placeholder","margin","InputProps","startAdornment","InputAdornment_default","Search_default","TextFieldEditor","_inputRef","prevProps","blur","onKeyDown","defaultPrevented","ctrlKey","multiline","onChange","target","dirtyProp","dirty","enableDirtyCheck","otherProps","isDirty","inputRef","fontStyle","iconMap","up","TrendingUp","flat","TrendingFlat","down","TrendingDown","withTheme","iconProps","nativeColor","emojis","middleFinger","indexFinger","flex","brokenHeart","perfect","thumbsUp","thumbsDown","clap","heart","fire","bulb","crap","thinking","rocket","Emoji","propTypes","PropTypes","oneOf","keys","AvatarColor","ListPicker_templateObject","CustomDialogTitle","ListPicker_templateObject2","ListPicker","_listRef","filterValue","focusValue","onFilter","keyCode","focus","onSelect","_this3","renderLinearProgress","renderItems","SearchField_SearchField","searchLabel","MenuList_default","options","filter","option","toLowerCase","indexOf","toLocaleLowerCase","disabled","avatarColor","split","slice","words","Hoverable","toggleHover","hoverOn","hoverOff","restProps","onMouseEnter","onMouseLeave","Wizard","next","index","prev","hasOwnProperty","path","css","TfsoLoading_templateObject","StyledSvgIcon","once","TfsoLoading","fillRule","strokeWidth","MaterialUiIcon","fill","MaterialUiLink","rel","GitHubIcon","GitHubLink","tooltip","CenterTop","Home_templateObject","Home","icons_TfsoLoading","paragraph","align","flexDirection","Zoom_default","appear","transitionDelay","Code","highlight","Prism","highlightElement","className","language","Demo","Paper_default","padding","marginBottom","DemoTitle","srcPath","demoPath","components_GitHubLink","DemoHelp","DemoContent","marginTop","isArray","child","DemoProps","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","overflowX","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","DemoProp","required","name","type","default","description","DemoCode","Code_default","code_Code","Icons","Icons_TfsoDemo","Icons_TfsoLoadingDemo","TfsoDemo","handleChange","defineProperty","demo_Demo","demo_DemoTitle","demo_DemoHelp","demo_DemoProps","demo_DemoProp","demo_DemoContent","select","TfsoLoadingDemo","history","createHashHistory","basename","hashType","Link","to","push","AnchorLink","Anchor","location","hash","Section","SubHeading","Paragraph","Tip","Card_default","CardContent_default","Guideline","Guidelines","render","renderHeading","renderGuidelines","renderTips","renderContributing","Guidelines_SubHeading","Link_Anchor","Guidelines_Guideline","Link_Link","Guidelines_Tip","Guidelines_Paragraph","Box","ThemeColor_templateObject","Txt","ThemeColor_templateObject2","ThemeColor","ThemeColors","Theme_templateObject","Theme","components_ThemeColor","TrendingDemo","Trending","BigNumberDemo","backgroundColor","lib_BigNumber","variantMessage","AlertDemo","onPress","demo_DemoCode","Snackbar_default","autoHideDuration","lib_Alert","SearchFieldDemo","TextFieldEditorDemo","onReset","TextFieldEditor_TextFieldEditor","toString","ConfirmationDialogDemo","openConfirmationDialog","onClickOpenConfirmationDialog","lib_ConfirmationDialog","DemoDisplay","ListPickerDemo_templateObject","ListPickerDemo","selectedOption","buttonType","t","handleColor","onSwitch","lib_ListPicker","InputLabel_default","shrink","htmlFor","Select_default","EmojiDemo","lib_Emoji","ReactGridLayout","WidthProvider","RGL","GridItemContainer","gridItemWidthNumberMap","1","2","3","4","5","6","7","8","9","10","11","12","onequarter","onethird","half","twothirds","threequarters","full","numberGridItemWithMap","toGridItemWidth","w","min","trunc","toGridItemHeight","gridItemPositionToLayout","x","col","y","row","h","minH","minHeight","minW","minWidth","maxH","maxHeight","maxW","isDraggable","draggable","isResizable","resizable","static","layoutToGridItemPosition","GridLayout","_layoutWasChangedWorkaround","onLayoutChange","layouts","validateItemLayout","onDragResizeStop","oldItem","newItem","isEqual","items","_this$props$margin","rglLayout","values","cols","rowHeight","compactType","containerPadding","autoSize","measureBeforeMount","useCSSTransforms","preventCollision","onResizeStop","onDragStop","Item","GridLayoutDemo_templateObject","getContrastText","h5","fontWeight","fontFamily","GridLayoutDemo","onMouseDown","console","log","addItemId","addColor","addDraggable","addResizable","addStatic","addHeight","addWidth","addCol","addRow","onAddItem","_this$state","content","JSON","stringify","replace","itemLayout","Number","toConsumableArray","checked","GridLayout_GridLayout","FormControlLabel_default","control","Switch_default","inputProps","HoverableDemo","Hoverable_Hoverable","cursor","DelayDemo","CircularProgress_default","WizardDemo","Wizard_Wizard","Stepper_default","activeStep","Step_default","StepLabel_default","ScreenSizeDemo","ProfileCardDemo","license","client","user","culture","timeZone","country","created","modified","gender","birthDate","locationCoordinates","visibility","locale","timeZoneOffset","handleClick","currentTarget","onClient","onProfile","onSettings","onRequests","onHelp","Boolean","aria-owns","aria-haspopup","ProfileCard_ProfileCard","inset","ListItemIcon_default","Settings_default","SwapHoriz_default","Help_default","NotifyDemo","generateNotifications","readCount","random","makeItem","setHours","getHours","seen","onRead","Avatar_default","Email_default","Chat_default","VpnKey_default","Security_default","SupervisorAccount_default","onSeen","notifications","n","objectSpread","asyncToGenerator","regenerator_default","mark","_callee","_context","stop","reset","sort","b","Notify_NotificationItem","Notify_Notifier","renderNotifications","makeItems","startIndex","InfiniteScrollDemo","menuGroups","home","HomeIcon","guidelines","StraightenIcon","components","ViewCompactIcon","emoji","bignumber","confirmationdialog","listpicker","searchfield","textfieldeditor","trending","StyleIcon","notify","profilecard","topbar","utils","BuildIcon","delay","hoverable","infinitescroll","wizard","screensize","icons","FontDownloadIcon","labs","CodeIcon","accessDenied","gridlayout","_unsubHistory","menuGroupsExpanded","onNavigation","getSelected","pathname","_path$split","_path$split2","group","onToggleGroupExpanded","expandSelected","listen","layout_namespaceObject","groupName","itemName","Layout_ClientSwitcher","clientName","components_MaterialUiLink","Layout_Profile","Page","_Page","ClientSwitcher","Profile","_this4","SvgIcon_SvgIcon_default","ReactDOM","CssBaseline_default","styles","styled_components_browser_esm","Layout_Layout","getElementById"],"mappings":"4tBAMMA,EACK,UADLA,EASS,UATTA,EAkBK,UAILC,EAAS,CACXC,KAAM,UACNC,KAAMH,EACNI,UAAW,UACXC,WAAY,UACZC,WAAY,UACZC,WAAY,UACZC,WAAY,UACZC,WAAY,UACZC,KA5BY,UA6BZC,SA5BW,UA6BXC,gBApBY,UAqBZC,SAfQ,UAgBRC,KA9Ba,UA+BbC,MA9BO,UA+BPC,WAAY,yBACZC,OA/BS,UAgCTC,IA/BU,UAgCVC,SAAU,yBACVC,OAAQpB,EACRqB,OAhCW,UAiCXC,MAhCS,UAiCTC,KAhCW,UAiCXC,SAAU,UACVC,WAAY,UACZC,UAAW,UACXC,YAAa,UACbC,aAAc,UACdC,MAAO7B,EACP8B,UAAW,UACXC,YAAa,UACbC,eAAgB,UAChBC,mBAAoB,UACpBC,OAAQ,UACRC,OAAQnC,EACRoC,KAAMpC,EACNqC,aAAc,UACdC,oBAAqBtC,EACrBuC,SAAU,UACVC,aAAcxC,EACdyC,qBAAsBzC,EACtB0C,aAAcC,IAAS,IACvBC,kBAAmBD,IAAS,MAG1BE,EAAU,CACZC,QAAS7C,EAAOE,KAChB4C,aAAc9C,EAAOG,UACrB4C,QAAS/C,EAAOc,MAChBkC,QAAShD,EAAOmB,OAChB8B,MAAOjD,EAAOiB,IACdiC,OAAQlD,EAAOiB,IACfkC,SAAUnD,EAAOS,MAOR2C,EAAkBC,yBAAe,CAC1CC,WAAY,CACRC,iBAAiB,GAErBX,QAAS,CACLY,UAAW,CACPC,KAAM,UACNC,KAAM,OACNC,MAAO,WAEXd,QAAS,CACLY,KAAM,UACNC,KAAM,UACNC,MAAO,UACPC,aAAc,WAKbC,EAAc,CACvB5D,KAAM,CACFD,SACA4C,UACAkB,OA3BO,CACXC,gBAAiB,SA4BjBC,IAAKZ,2TC3FHa,GAAeC,YAAOC,KAAQC,MAAM,CACtCC,QAAS,CAACC,MAAO,mBADHC,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGP,CAAH,ihBAIH,SAAAQ,GAAA,OAAAA,EAAEC,KAAiB,IAAM,GAGvB,SAAAC,GAAK,OAAIA,EAAMC,MAAMb,IAAIc,OAAOC,OAAS,GAahC,SAAAC,GAAA,OAAAA,EAAEH,MAAiB5E,KAAKD,OAAOmC,MAC1C,SAAA8C,GAAA,OAAAA,EAAEJ,MAAiB5E,KAAKD,OAAOuC,eAmCxC2C,GAAahB,YADC,SAAAiB,KAAEC,MAAF,IAAuBR,EAAvBS,OAAAC,EAAA,EAAAD,CAAAF,EAAA,kBAAkCI,EAAAC,EAAAC,cAACC,EAAAF,EAASZ,KAChDL,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGP,CAAH,kEACQ,SAAAyB,GAAA,OAXP,SAACP,EAAkBxC,GAChC,OAAOwC,GACP,IAAK,UAAW,OAAOxC,EAAQG,QAC/B,IAAK,QAAS,OAAOH,EAAQK,MAC7B,IAAK,OAAQ,OAAOL,EAAQO,SAC5B,IAAK,UAAW,OAAOP,EAAQI,SAMS4C,CAApBD,EAAEP,MAAFO,EAASd,MAAiC5E,KAAK2C,UAC1D,SAAAiD,KAAET,MAAF,OAAAS,EAAShB,MAAiB5E,KAAKD,OAAO4B,OAClC,SAAAkE,GAAA,OAAAA,EAAEjB,MAAiBb,IAAIV,WAAWyC,QAAQ,MAIrDC,GAAqB9B,YAAO+B,KAAV1B,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGP,CAAH,iBAWHgC,oLASb,OACIX,EAAAC,EAAAC,cAACxB,GAAD,CAAckC,QAASC,KAAKxB,MAAMyB,OAAS,YAAc,aAAcC,UAAW,EAAG3B,KAAMyB,KAAKxB,MAAMD,KAAM4B,QAASH,KAAKxB,MAAM2B,SAC5HhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAMJ,MAAM,UAAUqB,gBAAc,EAACC,MAAO,CAACC,cAAe,MACvDP,KAAKxB,MAAMgC,kBAZEC,IAAMC,eAmB3BC,GAAc,SAAAnC,GAAK,OAAIW,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KAAGpC,EAAMgC,WAEvCK,GAAwB/C,YAAOgD,KAAV3C,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGP,CAAH,mBACd,SAAAiD,GAAA,OAAAA,EAAEtC,MAAiB5E,KAAKD,OAAOyB,YAGtC2F,GAAWlD,YAAOmD,KAAV9C,WAAA,CAAAC,YAAA,WAAAC,YAAA,gBAAGP,CAAH,kCACD,SAAAoD,GAAA,OAAAA,EAAEzC,MAAiB5E,KAAKD,OAAOuC,eAetCgF,GAAoBrD,YAFF,SAAAsD,KAAEC,SAAF,IAAe7C,EAAfS,OAAAC,EAAA,EAAAD,CAAAmC,EAAA,qBAA+DjC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAaZ,KAE9EL,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGP,CAAH,gHACC,SAAAyD,GAAA,IAAE9C,EAAF8C,EAAE9C,MAAF,OAAA8C,EAASF,SAAyB5C,EAAM5E,KAAKD,OAAOoC,aAAeyC,EAAM5E,KAAKD,OAAOmC,MAEjF,SAAAyF,GAAA,IAAE/C,EAAF+C,EAAE/C,MAAF,OAAA+C,EAASH,SAAyB5C,EAAM5E,KAAKD,OAAOoC,aAAeyC,EAAM5E,KAAKD,OAAOmC,MAEpG,SAAA0F,GAAA,OAAAA,EAAEhD,MAAiB5E,KAAKD,OAAOuC,cAEhB,SAAAuF,GAAA,OAAAA,EAAEjD,MAAiB5E,KAAKD,OAAOsC,WAIrDyF,GAAsB7D,YAAO8D,KAAVzD,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGP,CAAH,mBACZ,SAAA+D,GAAA,OAAAA,EAAEpD,MAAiB5E,KAAKD,OAAOuC,eAGtC2F,GAAsBhE,YAAOiE,KAAV5D,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGP,CAAH,mBACZ,SAAAkE,GAAA,OAAAA,EAAEvD,MAAiB5E,KAAKD,OAAOuC,eAG/B8F,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAe,KAAAiC,GAAA,QAAAK,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAP,EAAAnD,OAAA2D,EAAA,EAAA3D,CAAAe,MAAAmC,EAAAlD,OAAA4D,EAAA,EAAA5D,CAAAgD,IAAAa,KAAAC,MAAAZ,EAAA,CAAAnC,MAAAgD,OAAAP,MAUIQ,iBAAmB,SAAAC,GAEfA,EAAEC,kBACFf,EAAK5D,MAAMyE,oBAbnBb,EAAA,OAAAnD,OAAAmE,EAAA,EAAAnE,CAAAgD,EAAAC,GAAAjD,OAAAoE,EAAA,EAAApE,CAAAgD,EAAA,EAAAqB,IAAA,SAAAC,MAAA,WAgBY,IAAAC,EACsDxD,KAAKxB,MAAxD6C,EADHmC,EACGnC,SAAUoC,EADbD,EACaC,SAAUC,EADvBF,EACuBE,MAAOlD,EAD9BgD,EAC8BhD,SAAgBmD,EAD9CH,EACwCI,KAC5C,OACIzE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACIzB,EAAAC,EAAAC,cAAC8B,GAAD,CACI0C,eAAgB,CACZvD,MAAO,CACHwD,IAAK,EACLC,SAAU1C,EAAW,SAAW,WAChC3C,OAAQ2C,EAAW,EAAI,SAG/B2C,SAAU3C,EACVA,SAAUA,EACV4C,QAASjE,KAAKiD,iBACdiB,QAAM,EACNC,eAAa,EACbC,oBAAkB,GAElBjF,EAAAC,EAAAC,cAAC2B,GAAD,KAAU7B,EAAAC,EAAAC,cAACsE,EAAD,CAAMU,SAAS,WACzBlF,EAAAC,EAAAC,cAACO,GAAD,CAAoB0E,uBAAwB,CAACtF,MAAO,YAC/C0E,EACDvE,EAAAC,EAAAC,cAACkF,EAAAnF,EAAD,CAAUoF,IAAKnD,EAAUoD,QAAQ,QAC7BtF,EAAAC,EAAAC,cAACqF,GAAAtF,EAAD,CAASuF,MAAOlB,EAAUmB,WAAY,KAClCzF,EAAAC,EAAAC,cAACwB,GAAD,CAAuBd,QAAQ,UAAU8E,QAAM,GAC1CpB,MAKjBtE,EAAAC,EAAAC,cAACyF,EAAA1F,EAAD,KACID,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CAAY6E,QAASjE,KAAKiD,iBAAkBkB,eAAa,EAACC,oBAAkB,GACvE/C,EAAWlC,EAAAC,EAAAC,cAACsC,GAAD,MAA0BxC,EAAAC,EAAAC,cAACyC,GAAD,SAIlD3C,EAAAC,EAAAC,cAACkF,EAAAnF,EAAD,CAAUoF,GAAInD,EAAUoD,QAAQ,QAC5BtF,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAM4F,OAAK,EAAC3E,gBAAc,GACrBG,GAEJa,GAAYlC,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,YAxDjC6C,EAAA,CAA+BxB,IAAMC,eAyE/BwE,GAAepH,YAAOqH,KAAUnH,MAAM,CAACC,QAAS,CAACmH,SAAU,qBAA/CjH,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGP,CAAH,uIACM,SAAAuH,GAAA,OAAAA,EAAE5G,MAAiB5E,KAAKD,OAAOmC,MAC1C,SAAAuJ,GAAA,OAAAA,EAAE7G,MAAiB5E,KAAKD,OAAOuC,cAEhB,SAAAoJ,GAAA,OAAAA,EAAE9G,MAAiB5E,KAAKD,OAAOmC,MAC1C,SAAAyJ,GAAA,OAAAA,EAAE/G,MAAiB5E,KAAKD,OAAOwC,sBAGpB,SAAAqJ,GAAA,OAAAA,EAAEhH,MAAiB5E,KAAKD,OAAOsC,WAI9CwJ,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAzG,OAAAoD,EAAA,EAAApD,CAAAe,KAAA0F,GAAAzG,OAAA2D,EAAA,EAAA3D,CAAAe,KAAAf,OAAA4D,EAAA,EAAA5D,CAAAyG,GAAA3C,MAAA/C,KAAAuC,YAAA,OAAAtD,OAAAmE,EAAA,EAAAnE,CAAAyG,EAAAC,GAAA1G,OAAAoE,EAAA,EAAApE,CAAAyG,EAAA,EAAApC,IAAA,SAAAC,MAAA,WAYQ,IAAMI,EAAO3D,KAAKxB,MAAMoF,KAElBgC,EACFzG,EAAAC,EAAAC,cAAC6F,GAAD,CACI5E,MAAO,CACHwD,IAAK,EACLpF,OAAQ,GAEZsF,SAAO,EACPE,QAAM,EACNC,eAAa,EACbC,oBAAkB,EAClBgB,SAAUpF,KAAKxB,MAAM4G,UAErBjG,EAAAC,EAAAC,cAAC2B,GAAD,KAAU7B,EAAAC,EAAAC,cAACsE,EAAD,CAAMU,SAAS,WACzBlF,EAAAC,EAAAC,cAACO,GAAD,CAAoB0E,uBAAwB,CAACtF,MAAO,YAC/CgB,KAAKxB,MAAMkF,MACZvE,EAAAC,EAAAC,cAACwB,GAAD,CAAuBd,QAAQ,UAAU8E,QAAM,GAC1C7E,KAAKxB,MAAMiF,WAGnBzD,KAAKxB,MAAMqH,WACR1G,EAAAC,EAAAC,cAACP,GAAD,CAAYE,MAAOgB,KAAKxB,MAAMsH,UAAWpC,MAAO1D,KAAKxB,MAAMqH,aAKvE,OACI1G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KAC4B,kBAApBZ,KAAKxB,MAAMuH,KACb5G,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAAM2G,KAAM/F,KAAKxB,MAAMuH,MAAOH,GAC9B5F,KAAKxB,MAAMuH,KACP/F,KAAKxB,MAAMuH,KAAKH,GAChBA,OA7CtBF,EAAA,CAAkCjF,IAAMC,eA6DlCuF,GAAiBnI,YAAOqH,KAAVhH,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGP,CAAH,wFAEI,SAAAoI,GAAA,OAAAA,EAAEzH,MAAiB5E,KAAKD,OAAOoC,cAC1C,SAAAmK,GAAA,IAAEf,EAAFe,EAAEf,SAAU3G,EAAZ0H,EAAY1H,MAAZ,OAAuB2G,EAAW3G,EAAM5E,KAAKD,OAAOwC,qBAAuBqC,EAAM5E,KAAKD,OAAOuC,cAE9E,SAAAiK,GAAA,OAAAA,EAAE3H,MAAiB5E,KAAKD,OAAOmC,OAI9CsK,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAApH,OAAAoD,EAAA,EAAApD,CAAAe,KAAAqG,GAAApH,OAAA2D,EAAA,EAAA3D,CAAAe,KAAAf,OAAA4D,EAAA,EAAA5D,CAAAoH,GAAAtD,MAAA/C,KAAAuC,YAAA,OAAAtD,OAAAmE,EAAA,EAAAnE,CAAAoH,EAAAC,GAAArH,OAAAoE,EAAA,EAAApE,CAAAoH,EAAA,EAAA/C,IAAA,SAAAC,MAAA,WAWQ,IAAMI,EAAO3D,KAAKxB,MAAMoF,KAElBgC,EACFzG,EAAAC,EAAAC,cAAC4G,GAAD,CAAgBb,SAAUpF,KAAKxB,MAAM4G,UAChCzB,GAAQxE,EAAAC,EAAAC,cAAC2B,GAAD,KAAU7B,EAAAC,EAAAC,cAACsE,EAAD,CAAMU,SAAS,WAClClF,EAAAC,EAAAC,cAACO,GAAD,CAAoB0E,uBAAwB,CAACtF,MAAO,UAAW6F,QAAQ,IAClE7E,KAAKxB,MAAMkF,OAEf1D,KAAKxB,MAAMqH,WACR1G,EAAAC,EAAAC,cAACP,GAAD,CAAYE,MAAOgB,KAAKxB,MAAMsH,UAAWpC,MAAO1D,KAAKxB,MAAMqH,aAIvE,OACI1G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACgC,kBAApBZ,KAAKxB,MAAMuH,KACb5G,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAAM2G,KAAM/F,KAAKxB,MAAMuH,MAAOH,GAC9B5F,KAAKxB,MAAMuH,KAAKH,QA5BtCS,EAAA,CAA8B5F,IAAMC,iGC7S9B6F,GAAO9F,IAAM+F,KAAK,SAAChI,GAAD,OACpBW,EAAAC,EAAAC,cAACoH,GAAArH,EAADH,OAAAyH,OAAA,GACQlI,EADR,CAEImI,QAAQ,oBAERxH,EAAAC,EAAAC,cAAA,QACIuH,EAAG,+kBAKfL,GAAKnI,YAAc,WACJmI,UCVTM,GAAe/I,YAAOgJ,MAAV3I,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGP,CAAH,wDAEL,SAAAU,GAAK,OAAIA,EAAMC,MAAMb,IAAIc,OAAOC,OAAS,IAIhDoI,GAAUjJ,IAAOkJ,IAAV7I,WAAA,CAAAC,YAAA,UAAAC,YAAA,gBAAGP,CAAH,uCAIPmJ,GAAOnJ,IAAOkJ,IAAV7I,WAAA,CAAAC,YAAA,OAAAC,YAAA,gBAAGP,CAAH,6IAGY,SAAAQ,GAAA,OAAAA,EAAEG,MAAiB5E,KAAKD,OAAOmC,OAO/CmL,GAAapJ,YAAOmJ,IAAV9I,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGP,CAAH,wBAGVqJ,GAAQrJ,IAAOkJ,IAAV7I,WAAA,CAAAC,YAAA,QAAAC,YAAA,gBAAGP,CAAH,wBAILsJ,GAAatJ,YAAOuJ,KAAVlJ,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGP,CAAH,8CAKVwJ,GAAexJ,IAAOkJ,IAAV7I,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGP,CAAH,8EAaGyJ,oLAOT,IAAAnF,EAAApC,KACEwH,EAAU,sBAEhB,OACIrI,EAAAC,EAAAC,cAACwH,GAAD,CAAc9C,SAAS,WAAW/E,MAAM,UAAUkB,UAAW,GACzDf,EAAAC,EAAAC,cAAC0H,GAAD,KACK/G,KAAKxB,MAAMyB,OAEJd,EAAAC,EAAAC,cAAC6H,GAAD,KACI/H,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAAM2G,KAAMyB,EAASC,UAAU,QAC3BtI,EAAAC,EAAAC,cAACqI,GAAD,CAAU1I,MAAM,UAAUqF,SAAS,YAK3ClF,EAAAC,EAAAC,cAAC4H,GAAD,KACI9H,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAAM2G,KAAMyB,EAASC,UAAU,QAC3BtI,EAAAC,EAAAC,cAACqI,GAAD,CAAU1I,MAAM,UAAUqF,SAAS,WAEvClF,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYwI,UAAU,KAAK7H,QAAQ,KAAKf,MAAM,UAAUsB,MAAO,CAACuH,YAAa,IACzE1I,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAAM2G,KAAMyB,EAASC,UAAU,OAAOzI,MAAM,WAA5C,mBAKhBG,EAAAC,EAAAC,cAAC8H,GAAD,KACIhI,EAAAC,EAAAC,cAACyI,GAAA1I,EAAD,CAASW,QAAQ,SACZC,KAAKxB,MAAMuJ,cACZ5I,EAAAC,EAAAC,cAAC+H,GAAD,CAAYpI,MAAM,UAAUgJ,aAAW,cAAc/D,QAAS,SAAAf,GAAC,OAAId,EAAK5D,MAAMuJ,cAAgB3F,EAAK5D,MAAMuJ,iBACrG5I,EAAAC,EAAAC,cAAC4I,GAAA7I,EAAD,OAGJD,EAAAC,EAAAC,cAACiI,GAAD,KACKtH,KAAKxB,MAAMgC,qBAxCRC,IAAMC,eAsD7BwH,GAAb,SAAAhG,GAAA,SAAAgG,IAAA,OAAAjJ,OAAAoD,EAAA,EAAApD,CAAAe,KAAAkI,GAAAjJ,OAAA2D,EAAA,EAAA3D,CAAAe,KAAAf,OAAA4D,EAAA,EAAA5D,CAAAiJ,GAAAnF,MAAA/C,KAAAuC,YAAA,OAAAtD,OAAAmE,EAAA,EAAAnE,CAAAiJ,EAAAhG,GAAAjD,OAAAoE,EAAA,EAAApE,CAAAiJ,EAAA,EAAA5E,IAAA,SAAAC,MAAA,WAMQ,OACIpE,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACKZ,KAAKxB,MAAMgC,cAR5B0H,EAAA,CAAoCzH,IAAMC,eC5G1C,SAASyH,GAASC,GACdC,SAAS1D,MAAQyD,MAOAE,eACjB,SAAAA,EAAY9J,GAAM,IAAA4D,EAAA,OAAAnD,OAAAoD,EAAA,EAAApD,CAAAe,KAAAsI,GACdlG,EAAAnD,OAAA2D,EAAA,EAAA3D,CAAAe,KAAAf,OAAA4D,EAAA,EAAA5D,CAAAqJ,GAAAxF,KAAA9C,KAAMxB,IACN2J,GAAS3J,EAAM4J,MAFDhG,yFAIQmG,GACnBA,EAAUH,OAASpI,KAAKxB,MAAM4J,MAC7BD,GAASI,EAAUH,uCAIvB,MAAO,UAX4B3H,IAAMC,6CCW3CT,kBAAS,CAAC,KAAM,OAChBuI,GAAS,CAAC,KAAM,MAChBC,GAAU,CAAC,KAAM,KAAM,MAEvBC,GAAgB,SAAAC,GAAK,MAAK,CAC5B1I,OAAQA,GAAO2I,SAASD,GACxBH,OAAQA,GAAOI,SAASD,GACxBF,QAASA,GAAQG,SAASD,KAGxBE,GAAaC,OAAY,SAACtK,GAAD,OAA4BA,EAAMgC,SAASkI,GAAclK,EAAMmK,UAEvF,SAASI,GAAkDC,GAC9D,OAAO,SAACxK,GACJ,OACIW,EAAAC,EAAAC,cAACwJ,GAAD,KACK,SAACI,GAAD,OAAgB9J,EAAAC,EAAAC,cAAC2J,EAAD/J,OAAAyH,OAAA,GAAelI,EAAf,CAAsByK,WAAYA,QAM5D,IAaQJ,MC/CFK,GAAgBpL,IAAOkJ,IAAV7I,WAAA,CAAAC,YAAA,gBAAAC,YAAA,YAAGP,CAAH,qDAObqL,GAAerL,IAAOkJ,IAAV7I,WAAA,CAAAC,YAAA,eAAAC,YAAA,YAAGP,CAAH,MAKZsL,GAAatL,IAAOkJ,IAAV7I,WAAA,CAAAC,YAAA,aAAAC,YAAA,YAAGP,CAAH,uCAOVuL,GAAiBvL,IAAOkJ,IAAV7I,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGP,CAAH,MAKdwL,GAAkBxL,IAAOkJ,IAAV7I,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGP,CAAH,uDAmBbiL,MAAc,SAAAQ,GAAA,SAAAC,IAAA,IAAArH,EAAAC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAe,KAAAwJ,GAAA,QAAAlH,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAP,EAAAnD,OAAA2D,EAAA,EAAA3D,CAAAe,MAAAmC,EAAAlD,OAAA4D,EAAA,EAAA5D,CAAAuK,IAAA1G,KAAAC,MAAAZ,EAAA,CAAAnC,MAAAgD,OAAAP,MAOzBgH,MAAqB,CACjBC,SAAU,MARWtH,EAWzBuH,YAAc,kBAAMvH,EAAKwH,SAAS,CAACF,UAAU,KAXpBtH,EAYzB2F,aAAe,kBAAM3F,EAAKwH,SAAS,SAAAH,GAAK,MAAK,CAACC,UAAWtH,EAAKyH,iBAZrCzH,EAmBzB0H,eAAiB,WACV1H,EAAK5D,MAAMyK,WAAWhJ,QAAUmC,EAAKyH,cACpCzH,EAAKuH,eArBYvH,EAAA,OAAAnD,OAAAmE,EAAA,EAAAnE,CAAAuK,EAAAD,GAAAtK,OAAAoE,EAAA,EAAApE,CAAAuK,EAAA,EAAAlG,IAAA,aAAAC,MAAA,WAcrB,OAA2B,OAAxBvD,KAAKyJ,MAAMC,UACF1J,KAAKxB,MAAMyK,WAAWhJ,OAE3BD,KAAKyJ,MAAMC,WAjBG,CAAApG,IAAA,SAAAC,MAAA,WA0BrB,OACIpE,EAAAC,EAAAC,cAAC6J,GAAD,KACI/J,EAAAC,EAAAC,cAAC0K,GAAD,CAAe3B,KAAMpI,KAAKxB,MAAMwL,SAAW,qBAC3C7K,EAAAC,EAAAC,cAAC8J,GAAD,KACIhK,EAAAC,EAAAC,cAAC4K,GAAD,CACIlC,aAAc/H,KAAK+H,aACnB9H,OAAQD,KAAKxB,MAAMyK,WAAWhJ,QAE7BD,KAAKxB,MAAM0L,iBAGpB/K,EAAAC,EAAAC,cAAC+J,GAAD,KACIjK,EAAAC,EAAAC,cAACgK,GAAD,CAAgBpF,QAASjE,KAAK8J,gBAC1B3K,EAAAC,EAAAC,cAAC8K,GAAD,CAAMlK,OAAQD,KAAKxB,MAAMyK,WAAWhJ,OAAQ1B,KAAMyB,KAAK6J,aAAc1J,QAASH,KAAK2J,aAC9E3J,KAAKxB,MAAM4L,cAGpBjL,EAAAC,EAAAC,cAACiK,GAAD,KACKtJ,KAAKxB,MAAMgC,gBA5CPgJ,EAAA,CAAsB/I,IAAMC,qMCtBnD2J,GAAavM,YAAOwM,MAAVnM,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGP,CAAH,0CAOVyM,GAAoBzM,YAAO0M,MAAVrM,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGP,CAAH,oCAOjB2M,GAAqB3M,YAAO0M,MAAVrM,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGP,CAAH,0DAGF,SAAAQ,GAAA,IAAEG,EAAFH,EAAEG,MAAF,OAAAH,EAASU,OAAoBP,EAAM5E,KAAKD,OAAOmC,OAG/D2O,GAAoB5M,YAAOgD,KAAV3C,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGP,CAAH,kBAEV,SAAAc,GAAA,OAAAA,EAAEH,MAAiBb,IAAIpB,QAAQC,QAAQe,eAI9CmN,GAAgB7M,YAAO8M,MAAVzM,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGP,CAAH,6CAIJ,SAAAe,GAAA,OAAAA,EAAEJ,MAAiBb,IAAIiN,QAAQC,OAGxCC,GAAwBjN,YAAOuJ,KAAVlJ,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGP,CAAH,2DAKb,SAAAiB,GAAA,OAAAA,EAAEN,MAAiBb,IAAIpB,QAAQC,QAAQe,eAI/CwN,GAAalN,IAAOkJ,IAAV7I,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGP,CAAH,kCAEH,SAAAyB,GAAA,OAAAA,EAAEd,MAAiBb,IAAIiN,QAAQC,OAGtC3D,GAAQrJ,IAAOkJ,IAAV7I,WAAA,CAAAC,YAAA,QAAAC,YAAA,gBAAGP,CAAH,qCAKLmN,GAAsB,SAAAzM,GAAK,OAAIW,EAAAC,EAAAC,cAAC6L,GAAA9L,EAADH,OAAAyH,OAAA,CAAOyE,UAAU,QAAW3M,KAE5C4M,8MAQjBjL,QAAU,WACNiC,EAAK5D,MAAM2B,aAGfkL,UAAY,WACRjJ,EAAK5D,MAAM6M,eAGfC,cAAgB,kBACZnM,EAAAC,EAAAC,cAACgL,GAAD,KACIlL,EAAAC,EAAAC,cAACoL,GAAD,KACItL,EAAAC,EAAAC,cAACsL,GAAD,CAAeY,IAAKnJ,EAAK5D,MAAMgN,SAASC,QAAQC,MAAMC,KAAM3D,aAAY5F,EAAK5D,MAAMgN,SAASC,QAAQG,YACpGzM,EAAAC,EAAAC,cAAC2L,GAAD,KACI7L,EAAAC,EAAAC,cAACqL,GAAD,CAAmB3K,QAAQ,MAAMqC,EAAK5D,MAAMgN,SAASC,QAAQG,UAAY,IAAMxJ,EAAK5D,MAAMgN,SAASC,QAAQI,UAC3G1M,EAAAC,EAAAC,cAACqL,GAAD,CAAmB3K,QAAQ,SAASqC,EAAK5D,MAAMgN,SAASC,QAAQK,cAGxE3M,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,MACAD,EAAAC,EAAAC,cAACkL,GAAD,KACKnI,EAAK5D,MAAMgC,UAEhBrB,EAAAC,EAAAC,cAAC0M,GAAA3M,EAAD,KACID,EAAAC,EAAAC,cAAC2M,GAAD,KACI7M,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQW,QAAQ,WAAWmM,KAAK,QAAQlN,MAAM,YAAYiF,QAAS7B,EAAKiJ,WACnEjJ,EAAK5D,MAAM2N,yFAQ5B,IAAMC,EACFjN,EAAAC,EAAAC,cAACgN,GAAAjN,EAAD,CACIkN,SAAUtM,KAAKxB,MAAM8N,SACrBC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBlO,KAAMyB,KAAKxB,MAAMD,KACjB4B,QAASH,KAAKG,SAEbH,KAAKsL,iBAIRqB,EACFxN,EAAAC,EAAAC,cAACuN,GAAAxN,EAAD,CACI6L,oBAAqBA,GACrB4B,aAAa,EACbC,YAAY,EACZvO,KAAMyB,KAAKxB,MAAMD,KACjB4B,QAASH,KAAKG,QACd4M,WAAS,EACTC,SAAS,MAET7N,EAAAC,EAAAC,cAAC0L,GAAD,CAAuB9G,QAASjE,KAAKxB,MAAM2B,QAAS6H,aAAW,SAC3D7I,EAAAC,EAAAC,cAAC4N,GAAA7N,EAAD,OAEHY,KAAKsL,iBAId,OACInM,EAAAC,EAAAC,cAAC6N,GAAD,KACK,SAAAzN,GAAA,OAAAA,EAAEQ,OAAqB0M,EAAeP,WA7Ed3L,IAAMC,iPChE1ByM,8MAWjBC,OAAc,OACd3D,MAAQ,CACJ4D,MAAM,sFAES,IAAAC,EAAAtN,KACfA,KAAKoN,OAASG,WAAW,WACrBD,EAAK1D,SAAS,CAACyD,MAAM,KACtBrN,KAAKxB,MAAMgP,SAAW,oDAGzBC,aAAazN,KAAKoN,yCAGlB,OAAGpN,KAAKxB,MAAM6O,MAAQrN,KAAKyJ,MAAM4D,KACtBrN,KAAKxB,MAAMgC,SAGfR,KAAKxB,MAAMkP,YAAc,YA5BLjN,IAAMC,eAApByM,GAOVQ,aAAe,CAClBH,QAAS,KCzBjB,IAAMI,GAAW,SAACC,GACd,IAAIC,GAAU,EACd,OAAO,WAAoB,QAAAxL,EAAAC,UAAAC,OAAhBC,EAAgB,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAhBF,EAAgBE,GAAAJ,UAAAI,GACnBmL,IAEAC,OAAOC,sBAAsB,WACzBH,EAAGpL,GACHqL,GAAU,IAEdA,GAAU,KAqCDG,8MA+BjBC,kBAAmB,IACnBC,eAAiB,IACjBC,UAAW,IAEX9P,KAAwCmC,IAAM4N,cAU9CC,SAAWV,GAAS,WAChB,GAAIxL,EAAKgM,SAAT,CAEA,IAAMG,EAAOnM,EAAK9D,KAAKkQ,QACvB,GAAID,EAAJ,CAJsB,IAMfE,EAAyCF,EAAzCE,aAAcC,EAA2BH,EAA3BG,UAAWC,EAAgBJ,EAAhBI,aAChC,KAAGF,GAAgBE,GAAnB,CAPsB,IAAAnL,EASkCpB,EAAK5D,MATvCoQ,EAAApL,EASfqL,iBATe,IAAAD,EASH,GATGA,EASEE,EATFtL,EASEsL,WAAYC,EATdvL,EAScuL,iBAC9BC,EAAiBL,EAAeF,EAAeA,EAAeI,EAC9DI,EAAqBR,EAAeO,EACpCE,EAAkBR,GAAaM,EAC/BG,EAAaT,EAAYD,IAAiBE,EAEhD,GAAGD,GAAatM,EAAK+L,eAIjB,OAFA/L,EAAK+L,eAAiBO,OACtBtM,EAAK8L,iBAAmBgB,GAG5B9M,EAAK+L,eAAiBO,EAGnBQ,KACK9M,EAAK8L,mBAAqBe,GAAsBE,IAChDJ,GAAoBA,IAExB3M,EAAK8L,kBAAmB,GACnB9L,EAAK8L,mBACV9L,EAAK8L,kBAAmB,GAIzBiB,GACCL,GAAcA,4FA1ClB,IAAMP,EAAOvO,KAAK1B,KAAKkQ,QACnBD,IACJA,EAAKa,UAAYb,EAAKa,SAAS,CAACtL,IAAK,IAErC9D,KAAKoO,UAAW,oCA2ChB,OACIjP,EAAAC,EAAAC,cAAA,OAAKiB,MAAO,CAAC+O,OAAQrP,KAAKxB,MAAM6Q,QAAU,aAAcC,UAAW,QAASC,IAAKvP,KAAK1B,KAAMgQ,SAAUtO,KAAKsO,UACtGtO,KAAKxB,MAAMgC,iBAvFgBC,IAAMC,6cAA7BuN,GACVN,aAAe,CAClB6B,SAAU,GACVH,OAAQ,cClBhB,IAAMpE,GAAsB,SAAAzM,GAAK,OAAIW,EAAAC,EAAAC,cAAC6L,GAAA9L,EAADH,OAAAyH,OAAA,CAAOyE,UAAU,QAAW3M,KAE3DiR,GAAkB3R,YAAOuJ,IAAPvJ,CAAH4R,KAER,SAAApR,GAAA,OAAAA,EAAEG,MAAiBb,IAAIiN,QAAQC,MACjC,SAAAlM,GAAA,OAAAA,EAAEH,MAAiBb,IAAIiN,QAAQC,OAIpC6E,GAAe7R,YADG,SAAAe,KAAE+Q,KAAF,IAAWpR,EAAXS,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,iBAAwDM,EAAAC,EAAAC,cAACiC,EAAAlC,EAAaZ,IACzEV,CAAH+R,KACM,SAAA9Q,GAAA,IAAE6Q,EAAF7Q,EAAE6Q,KAAMnR,EAARM,EAAQN,MAAR,OAAmBmR,EAAO,UAAYnR,EAAM5E,KAAKD,OAAOyC,cAEpD,SAAAkD,GAAA,IAAEqQ,EAAFrQ,EAAEqQ,KAAMnR,EAARc,EAAQd,MAAR,OAAmBmR,EAAOnR,EAAMb,IAAIpB,QAAQsT,OAAOC,MAAQtR,EAAM5E,KAAKD,OAAO2C,oBAInGyT,GAAuBlS,IAAOkJ,IAAViJ,MA6EpBC,GAAmB,SAAC1R,GACtB,IAAM2R,EAAS1P,IAAM2P,SADkCC,EAE7B5P,IAAM6P,SAAS,CAAC5G,UAAU,IAFG6G,EAAAtR,OAAAuR,GAAA,EAAAvR,CAAAoR,EAAA,GAEhD5G,EAFgD8G,EAAA,GAEzC3G,EAFyC2G,EAAA,GAIjDE,EAAShQ,IAAMiQ,YAAY,SAAChH,EAAmBiH,GAApB,OAA8C,SAACC,GAC5EA,EAAMzN,kBACNyG,EAAS,CAACF,aACViH,GAAYA,MACb,IACGE,EAAgBpQ,IAAMiQ,YAAY,SAACZ,GAAD,OAAwBW,GAAO,EAAOX,IAAS,CAACW,IAElFK,EAAgBrQ,IAAMsQ,QAAQ,kBAlFJC,EAkFqCxS,EAAMwS,KAjF7DC,KAAKC,MAAMD,KAAKE,IAAIH,EAAKI,UAAYC,KAAKC,OAAS,OACjD,GACVN,EAAKO,wBAAmBC,EAAW,CAACC,IAAK,UAAWC,MAAO,OAAQC,KAAM,YACzEX,EAAKY,wBAAmBJ,EAAW,CAACK,KAAM,UAAWC,OAAQ,YAJpC,IAACd,GAkFkD,CAACxS,EAAMwS,OAEzF,OACI7R,EAAAC,EAAAC,cAACsQ,GAAD,CACIoC,GAAIvT,EAAMuT,GACV7N,QAAM,EACND,QAASzF,EAAMyF,QACfD,SAAO,EACP4L,KAAMpR,EAAMoR,KACZoC,mBAAoBxT,EAAMwT,oBAEzBxT,EAAMyT,QAAU9S,EAAAC,EAAAC,cAAC6S,GAAA9S,EAAD,KAAiBZ,EAAMyT,QACxC9S,EAAAC,EAAAC,cAAC8S,EAAA/S,EAAD,CAAchC,UAAW0T,GACpBtS,EAAMgC,UAEXrB,EAAAC,EAAAC,cAAC+S,GAAAhT,EAAD,CACIiT,sBAAoB,EACpBC,cAAe,CAACjS,gBAAgB,GAChC9B,KAAMkL,EAAMC,SACZ4C,SAAU6D,EAAO3B,QACjBrO,QAASsQ,GAAO,IAEhBtR,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAU6E,QAAS4M,EAAcrS,EAAMgU,mBAAoBhU,EAAMoR,KAAOpR,EAAMiU,sBAAwBjU,EAAMkU,qBAC3GlU,EAAMmU,SAAWnU,EAAMmU,QACnBC,IAAI,SAAC9C,EAAQ+C,GAAT,OAAe1T,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUkE,IAAKuP,EAAG5O,QAAS4M,EAAcf,EAAOA,SAAUA,EAAOnL,UAG7FxF,EAAAC,EAAAC,cAACyF,EAAA1F,EAAD,KACID,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CAAY6E,QAASwM,GAAO,GAAOqC,UAAW3C,GAC1ChR,EAAAC,EAAAC,cAAC0T,GAAA3T,EAAD,CAAUiF,SAAS,cAgFlB2O,8MAcjBC,UAAgDxS,IAAM4N,cAEtD6E,OAAS,WACL9Q,EAAK5D,MAAM0U,YAGf/S,QAAU,WACNiC,EAAK5D,MAAM2B,aAGfgT,eAAiB,kBACbhU,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CAAY0T,UAAW1Q,EAAK6Q,UAAWhP,QAAS7B,EAAK8Q,QAChD9Q,EAAK5D,MAAM4U,MAAQ,EACdjU,EAAAC,EAAAC,cAACgU,GAAAjU,EAAD,CAAOJ,MAAM,QAAQsU,aAAclR,EAAK5D,MAAM4U,MAAOG,IAAK,GAAGpU,EAAAC,EAAAC,cAACmU,GAAApU,EAA4BgD,EAAK5D,MAAMiV,YACrGtU,EAAAC,EAAAC,cAACqU,GAAAtU,EAA0BgD,EAAK5D,MAAMiV,eAKpDE,cAAgB,SAAC1T,GAAD,OACZd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACIzB,EAAAC,EAAAC,cAACyI,GAAA1I,EAAD,CAASW,QAAQ,QAAQ6T,eAAgB3T,EAAQK,MAAO,CAACuT,YAAa5T,EAAS,GAAK,IAChFd,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM2U,WAAS,EAACC,QAAQ,gBAAgBC,WAAW,WAAWpJ,QAAS,EAAGqJ,KAAK,UAC3E/U,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM+U,MAAI,EAACC,IAAE,GACTjV,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAASE,EAAS,YAAc,aAA5C,kBAEJd,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM+U,MAAI,GACNhV,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQ6E,QAAS7B,EAAK5D,MAAM6V,UAAWtU,QAAQ,OAAOmM,KAAK,QAAQlN,MAAM,UAAU+N,WAAS,GACvF3K,EAAK5D,MAAM8V,sBAK3BlS,EAAKmS,gBACNpV,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,UAiDRmV,cAAgB,WACZ,IAAMC,EAASrV,EAAAC,EAAAC,cAAA,OAAKiB,MAAO,CAAC+O,OAAQ,KACpC,OACIjN,EAAK5D,MAAMiW,QACPtV,EAAAC,EAAAC,cAACqV,GAAD,CAAOlH,QAAS,IAAKE,WAAY8G,GAC7BrV,EAAAC,EAAAC,cAACsV,GAAAvV,EAAD,CAAgBJ,MAAM,eAE1BwV,gFApDEvU,GACV,OACId,EAAAC,EAAAC,cAACuV,GAAD,CAAgBvF,OAAQpP,OAASuR,EAAY,IAAK3C,UAAW,GAAKE,iBAAkB/O,KAAKxB,MAAMqW,YAC3F1V,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAM4F,OAAK,EAAC3E,gBAAc,GACrBL,KAAKxB,MAAMgC,mDAOxB,OACIrB,EAAAC,EAAAC,cAACgN,GAAAjN,EAAD,CACIb,KAAMyB,KAAKxB,MAAMD,KACjB4B,QAASH,KAAKG,QACdmM,SAAUtM,KAAKiT,UAAUzE,QACzBjC,aAAc,CAACE,WAAY,QAASD,SAAU,UAC9CE,gBAAiB,CAACF,SAAU,MAAOC,WAAY,SAC/CqI,WAAY,CAACxU,MAAO,CAACqI,MAAO,OAE3B3I,KAAK2T,eAAc,GACnB3T,KAAKsL,eAAc,2CAM5B,OACInM,EAAAC,EAAAC,cAACuN,GAAAxN,EAAD,CACI6L,oBAAqBA,GACrB1M,KAAMyB,KAAKxB,MAAMD,KACjB4B,QAASH,KAAKG,QACd2M,YAAU,GAEV3N,EAAAC,EAAAC,cAAC2Q,GAAD,KACKhQ,KAAK2T,eAAc,GACpBxU,EAAAC,EAAAC,cAACoQ,GAAD,CAAiBxL,QAASjE,KAAKG,SAAShB,EAAAC,EAAAC,cAAC4N,GAAA7N,EAAD,QAE5CD,EAAAC,EAAAC,cAAC0V,GAAA3V,EAAD,KACKY,KAAKsL,eAAc,sCAiB5B,IAAAgC,EAAAtN,KACJ,OACIb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACKZ,KAAKmT,iBACNhU,EAAAC,EAAAC,cAAC6N,GAAD,KACK,SAAAzN,GAAA,OAAAA,EAAEQ,OAAqBqN,EAAK0H,eAAiB1H,EAAK2H,0BAjHjCxU,IAAMC,iOC3O5C,IAAMwU,GAAc,CAChBvY,QAASwY,KACTvY,QAASwY,KACTC,MAAOC,KACPC,KAAMC,MAaJC,GAAc3X,YADI,SAAAQ,KAAEyB,QAAF,IAAc2V,EAAdzW,OAAAC,EAAA,EAAAD,CAAAX,EAAA,oBAAyBa,EAAAC,EAAAC,cAACsW,GAAAvW,EAAuBsW,IACrD5X,CAAH8X,KACO,SAAAhX,GAAA,OAXR,SAACmB,EAAuBvD,GACpC,OAAOuD,GACP,IAAK,UAAW,OAAOvD,EAAQG,QAC/B,IAAK,QAAS,OAAOH,EAAQK,MAC7B,IAAK,OAAQ,OAAOL,EAAQE,aAC5B,IAAK,UAAW,OAAOF,EAAQI,SAMWiZ,CAAtBjX,EAAEmB,QAAFnB,EAAWH,MAAkC5E,KAAK2C,WA6C3DsZ,GAlCD,SAACtX,GAAsB,IAC1BuX,EAA6BvX,EAA7BuX,QAAS5V,EAAoB3B,EAApB2B,QAASJ,EAAWvB,EAAXuB,QACnB4D,EAAOuR,GAAYnV,GAEzB,OACIZ,EAAAC,EAAAC,cAACoW,GAAD,CACI1V,QAASA,EACTiW,mBAAiB,kBACjBD,QACI5W,EAAAC,EAAAC,cAAA,QAAM0S,GAAG,kBAAkBzR,MAAO,CAAC2V,QAAS,OAAQhC,WAAY,WAC5D9U,EAAAC,EAAAC,cAACsE,EAAD,CAAMrD,MAAO,CAAC+D,SAAU,GAAI6R,QAAS,GAAKrC,YAAa,MACtDkC,GAGTjG,OAAQ,CACJ3Q,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CACIkE,IAAI,QACJ0E,aAAW,QACXhJ,MAAM,UACNiF,QAAS9D,GAEThB,EAAAC,EAAAC,cAAC4N,GAAA7N,EAAD,CAAWkB,MAAO,CAAC+D,SAAU,WC3C3C8R,GAAiE,CACnEC,OAAQ,GACRC,MAAO,IAGL1I,GAAiE,CACnE3O,MAAO,QACPkN,KAAM,SAGJoK,GAAU,SAAAhY,KAAE4N,KAAF5N,EAAQU,MAAR,IAAkBR,EAAlBS,OAAAC,EAAA,EAAAD,CAAAX,EAAA,yBAAuDa,EAAAC,EAAAC,cAAA,MAASb,IAEhF8X,GAAQ3I,aAAeA,GAUvB,IAQe4I,GARGzY,YAAOwY,IAAVnY,WAAA,CAAAC,YAAA,YAAAC,YAAA,YAAGP,CAAH,4FACE,SAAAc,GAAA,IAAEH,EAAFG,EAAEH,MAAF+X,EAAA5X,EAASsN,YAAT,IAAAsK,EAAgB7I,GAAazB,KAA7BsK,EAAA,OAAuC/X,EAAMb,IAAIV,WAAWyC,QAAQwW,GAAYjK,KAGpF,SAAArN,GAAA,IAAA4X,EAAA5X,EAAEG,MAAF,MAA4C,gBAA5C,IAAAyX,EAAU9I,GAAa3O,MAAvByX,GAAsD,UAAY,sDC1BzExL,GAAsB,SAAAzM,GAAK,OAAIW,EAAAC,EAAAC,cAAC6L,GAAA9L,EAADH,OAAAyH,OAAA,CAAOyE,UAAU,MAAS3M,KAgChDkY,GA9BY,SAAClY,GAAmC,IACpDD,EAAwEC,EAAxED,KAAMoY,EAAkEnY,EAAlEmY,SAAUC,EAAwDpY,EAAxDoY,KAAMjS,EAAkDnG,EAAlDmG,MAAOoR,EAA2CvX,EAA3CuX,QAASc,EAAkCrY,EAAlCqY,aAAcC,EAAoBtY,EAApBsY,iBAC3D,OACI3X,EAAAC,EAAAC,cAACuN,GAAAxN,EAAD,CACI6L,oBAAqBA,GACrB4B,aAAa,EACbtO,KAAMA,EACN4B,QAASwW,EACT3J,SAAU,MAETrI,GAASxF,EAAAC,EAAAC,cAAC0X,GAAA3X,EAAD,KAAcuF,GACxBxF,EAAAC,EAAAC,cAAC0V,GAAA3V,EAAD,KAAgB2W,GAChB5W,EAAAC,EAAAC,cAAC2X,GAAA5X,EAAD,KACID,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQ6E,QAAS0S,EAAU3X,MAAM,WAAW8X,GAC5C3X,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQ6E,QAAS2S,EAAM5X,MAAM,aAAa6X,oECxBrCI,8MASjBxN,MAAe,CACXyN,SAAS,KAGbC,OAAS,SAACjU,GACNd,EAAKwH,SAAS,CAACsN,SAAS,IADa,IAE9BC,EAAU/U,EAAK5D,MAAf2Y,OACPA,GAAUA,EAAOjU,MAGrBkU,QAAU,SAAClU,GACPd,EAAKwH,SAAS,CAACsN,SAAS,IADc,IAE/BE,EAAWhV,EAAK5D,MAAhB4Y,QACPA,GAAWA,EAAQlU,4EAInB,OACI/D,EAAAC,EAAAC,cAACgY,GAAAjY,EAADH,OAAAyH,OAAA,CACIqG,UAAW/M,KAAKyJ,MAAMyN,SAClBlX,KAAKxB,MAFb,CAGI2Y,OAAQnX,KAAKmX,OACbC,QAASpX,KAAKoX,kBA/BW3W,IAAMC,eCQ/C,SAAS4W,GAAY1G,GACjBA,EAAM2G,iBACN3G,EAAMzN,kBAENyN,EAAM4G,YAAYC,2BDZDR,GACVtJ,aAAe,CAClB+J,YAAa,SACbC,OAAQ,QACRC,WAAY,CACRC,eAAgB1Y,EAAAC,EAAAC,cAACyY,GAAA1Y,EAAD,CAAgB2E,SAAS,SAAQ5E,EAAAC,EAAAC,cAAC0Y,GAAA3Y,EAAD,CAAYiF,SAAS,iBCY7D2T,8MAOjBC,UAA+CxX,IAAM4N,cAErD5E,MAAe,CACXyN,SAAS,EACT3T,MAAOnB,EAAK5D,MAAM+E,MAClB2U,UAAW9V,EAAK5D,SAWpB2Z,KAAO,WAAQ/V,EAAK6V,UAAUzJ,SAAWpM,EAAK6V,UAAUzJ,QAAQ2J,UAEhEC,UAAY,SAACxH,GAET,GADAxO,EAAK5D,MAAM4Z,WAAahW,EAAK5D,MAAM4Z,UAAUxH,IAC1CA,EAAMyH,iBAET,GAAGzH,EAAM0H,QACL,OAAO1H,EAAMtN,KACb,IAAK,IAGDlB,EAAK+V,OACL,MACJ,IAAK,IACDb,GAAY1G,GACZxO,EAAKwH,SAAS,CAACsN,SAAS,EAAO3T,MAAOnB,EAAK5D,MAAM+E,OAAQnB,EAAK+V,WAKlE,OAAOvH,EAAMtN,KACb,IAAK,QACD,GAAGlB,EAAK5D,MAAM+Z,UAAY,MAC1BjB,GAAY1G,GACZxO,EAAK+V,OACL,MACJ,IAAK,SACDb,GAAY1G,GACZxO,EAAKwH,SAAS,CAACsN,SAAS,EAAO3T,MAAOnB,EAAK5D,MAAM+E,OAAQnB,EAAK+V,UAO1Ef,QAAU,SAAClU,GACPd,EAAKwH,SAAS,CAACsN,SAAS,IACxB9U,EAAK5D,MAAM4Y,SAAWhV,EAAK5D,MAAM4Y,QAAQlU,MAG7CiU,OAAS,SAACjU,GACFd,EAAKqH,MAAMyN,UAEf9U,EAAK5D,MAAMga,SAASpW,EAAKqH,MAAMlG,OAC/BnB,EAAKwH,SAAS,CAACsN,SAAS,IACxB9U,EAAK5D,MAAM2Y,QAAU/U,EAAK5D,MAAM2Y,OAAOjU,OAG3CsV,SAAW,SAAC5H,GACR,IAAMrN,EAAQqN,EAAM6H,OAAOlV,MAC3BnB,EAAKwH,SAAS,CAACrG,QAAO2T,SAAS,6EAG3B,IAAA1T,EACkGxD,KAAKxB,MAA7Fka,EADVlV,EACGmV,MAA4DC,GAD/DpV,EACqBgV,SADrBhV,EAC6CD,MAD7CC,EAC+DoV,kBAAqBC,EADpF5Z,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,iDAEGD,EAASvD,KAAKyJ,MAAdlG,MAEDuV,EAAUF,GAAmB5Y,KAAKxB,MAAM+E,QAAUA,KAAyBmV,EAEjF,OACIvZ,EAAAC,EAAAC,cAACgY,GAAAjY,EAADH,OAAAyH,OAAA,GACQmS,EADR,CAEIE,SAAU/Y,KAAKiY,UACf1U,MAAOA,EACP6T,QAASpX,KAAKoX,QACdoB,SAAUxY,KAAKwY,SACfrB,OAAQnX,KAAKmX,OACbiB,UAAWpY,KAAKoY,UAChBR,WAAY,CAACtX,MAAO,CAAC0Y,UAAWF,EAAU,SAAW,iEA5EjCta,EAAuCiL,GAGnE,OAFkBA,EAAMyO,UAEX3U,QAAU/E,EAAM+E,MAAe,CAACA,MAAO/E,EAAM+E,MAAO2U,UAAW1Z,GAErE,CAAC0Z,UAAW1Z,UApBkBiC,IAAMC,8ECd7CuY,GAAgF,CAClFC,GAAIC,KACJC,KAAMC,KACNC,KAAMC,MA2BK9Y,OAAM+F,KAAKgT,YAfT,SAAAlb,GAA+D,IAA7DyB,EAA6DzB,EAA7DyB,QAAStB,EAAoDH,EAApDG,MAAUgb,EAA0Cxa,OAAAC,EAAA,EAAAD,CAAAX,EAAA,qBACtEqF,EAAOsV,GAAQlZ,GACf2Z,EAXO,SAAC3Z,EAAmCtB,GACjD,OAAOsB,GACP,IAAK,KAAM,OAAOtB,EAAM5E,KAAK2C,QAAQG,QACrC,IAAK,OAAQ,OAAO8B,EAAM5E,KAAK2C,QAAQI,QACvC,IAAK,OAAQ,OAAO6B,EAAM5E,KAAK2C,QAAQK,MACvC,QAAS,QAMW2C,CAASO,EAAStB,GACtC,OACIU,EAAAC,EAAAC,cAACsE,EAAD1E,OAAAyH,OAAA,CACIgT,YAAaA,GACTD,0BC9BVE,GAAS,CACXC,aAAcza,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACdiZ,YAAa1a,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACbkZ,KAAM3a,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACNmZ,YAAa5a,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACboZ,QAAS7a,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACTqZ,SAAU9a,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACVsZ,WAAY/a,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACZuZ,KAAMhb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACNwZ,MAAOjb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACPyZ,KAAMlb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACN0Z,KAAMnb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACN2Z,KAAMpb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACN4Z,SAAUrb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACV6Z,OAAQtb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,sBAON8Z,GAAQ,SAAClc,GAAD,OAAuBmb,GAAOnb,EAAMuB,UAElD2a,GAAMC,UAAY,CACd5a,QAAS6a,KAAUC,MAAM5b,OAAO6b,KAAKnB,MAG1Be,kSCOf,IAAMK,GAAcjd,YAAO8M,KAAP9M,CAAHkd,KACO,SAAA1c,GAAA,IAAEG,EAAFH,EAAEG,MAAF,OAAAH,EAASU,OAAoBP,EAAM5E,KAAKD,OAAOmC,MAC1D,SAAA6C,GAAA,OAAAA,EAAEH,MAAiBb,IAAIpB,QAAQC,QAAQe,eAG9Cyd,GAAoBnd,IAAOkJ,IAAVkU,MAMjBjQ,GAAsB,SAAAzM,GAAK,OAAIW,EAAAC,EAAAC,cAAC6L,GAAA9L,EAADH,OAAAyH,OAAA,CAAOyE,UAAU,QAAW3M,KAGlDuK,MAAc,SAAAQ,GAAA,SAAA4R,IAAA,IAAAhZ,EAAAC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAe,KAAAmb,GAAA,QAAA7Y,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAP,EAAAnD,OAAA2D,EAAA,EAAA3D,CAAAe,MAAAmC,EAAAlD,OAAA4D,EAAA,EAAA5D,CAAAkc,IAAArY,KAAAC,MAAAZ,EAAA,CAAAnC,MAAAgD,OAAAP,MAazBwV,UAA4CxX,IAAM4N,YAbzBjM,EAczBgZ,SAA8C3a,IAAM4N,YAd3BjM,EAezBqH,MAAe,CACX4R,YAAa,GACbC,WAAY,IAjBSlZ,EA4BzBmZ,SAAW,SAAC3K,GACRxO,EAAKwH,SAAS,CAACyR,YAAazK,EAAM6H,OAAOlV,SA7BpBnB,EA+BzBgW,UAAY,SAACxH,GACJA,GAA2B,KAAlBA,EAAM4K,SAGpBpZ,EAAKgZ,SAAS5M,SAAWpM,EAAKgZ,SAAS5M,QAAQiN,SAnC1BrZ,EAsCzBsZ,SAAW,SAACnY,GACRnB,EAAK5D,MAAMkd,SAASnY,IAvCCnB,EA0CzBjC,QAAU,WACNiC,EAAK5D,MAAMmY,YA3CUvU,EAAA,OAAAnD,OAAAmE,EAAA,EAAAnE,CAAAkc,EAAA5R,GAAAtK,OAAAoE,EAAA,EAAApE,CAAAkc,EAAA,EAAA7X,IAAA,qBAAAC,MAAA,SAoBN2U,GAAU,IAAA5K,EAAAtN,KACrBkY,EAAU3Z,OAAQyB,KAAKxB,MAAMD,MAASyB,KAAKxB,MAAMyK,WAAWhJ,QAC5DsN,WAAW,WACPD,EAAK2K,UAAUzJ,SAAWlB,EAAK2K,UAAUzJ,QAAQiN,SAClD,KAxBc,CAAAnY,IAAA,SAAAC,MAAA,WA8CjB,IAAAoY,EAAA3b,KACE4b,EACFzc,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACEZ,KAAKxB,MAAMiW,SACLtV,EAAAC,EAAAC,cAACsV,GAAAvV,EAAD,OAKNyc,EACF1c,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KAEIzB,EAAAC,EAAAC,cAACyc,GAAD,CACIpE,YAAa1X,KAAKxB,MAAMud,YACxBhD,SAAU/Y,KAAKiY,UACfO,SAAUxY,KAAKub,SACfhY,MAAOvD,KAAKyJ,MAAM4R,YAClBjD,UAAWpY,KAAKoY,YAGpBjZ,EAAAC,EAAAC,cAEI2c,GAAA5c,EAFJ,CAEamQ,IAAKvP,KAAKob,UAClBpb,KAAKxB,MAAMyd,QACPC,OAAO,SAAAC,GAAM,OAAIA,EAAOzY,MAAM0Y,cAAcC,QAAQV,EAAKlS,MAAM4R,YAAYiB,sBAAwB,GAAKH,EAAO5Y,MAAM8Y,QAAQV,EAAKlS,MAAM4R,YAAYiB,sBAAwB,IAC5K1J,IAAI,SAACuJ,EAAQtJ,GAAT,OACD1T,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CACImd,SAAUJ,EAAO5Y,OAASoY,EAAKnd,MAAM+d,SACrCnX,SAAU+W,EAAO5Y,OAASoY,EAAKnd,MAAM4G,SACrC9B,IAAKuP,EACL5O,QAAS,WAAQ0X,EAAKD,SAASS,EAAO5Y,SAEtCpE,EAAAC,EAAAC,cAAC0b,GAAD,CAAa/b,MAAO2c,EAAKnd,MAAMge,aAC3Brd,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,UAAUf,MAAM,WAC/Bmd,EAAOzY,MAAM+Y,MAAM,KACfC,MAAM,EAAG,GACT9J,IAAI,SAAC+J,GAAD,OACDA,EAAM,OAKtBxd,EAAAC,EAAAC,cAAC8S,EAAA/S,EAAD,CAAc3C,QAAS0f,EAAOzY,aAQhD0I,EACFjN,EAAAC,EAAAC,cAACgN,GAAAjN,EAAD,CACIkN,SAAUtM,KAAKxB,MAAM8N,SACrBC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBlO,KAAMyB,KAAKxB,MAAMD,KACjB4B,QAASH,KAAKG,SAEbyb,EACDzc,EAAAC,EAAAC,cAAC0V,GAAA3V,EAAD,KACKyc,IAKPlP,EACFxN,EAAAC,EAAAC,cAACuN,GAAAxN,EAAD,CACI6L,oBAAqBA,GACrB4B,aAAa,EACbC,YAAY,EACZvO,KAAMyB,KAAKxB,MAAMD,KACjB4B,QAASH,KAAKG,QACd4M,WAAS,EACTC,SAAS,MAER4O,EACDzc,EAAAC,EAAAC,cAAC4b,GAAD,KACI9b,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CAAY6E,QAASjE,KAAKG,QAAS6H,aAAW,SAC1C7I,EAAAC,EAAAC,cAAC4N,GAAA7N,EAAD,QAGRD,EAAAC,EAAAC,cAAC0V,GAAA3V,EAAD,KACKyc,IAMb,OADiB7b,KAAKxB,MAAMyK,WAArBhJ,OACS0M,EAAeP,MA5IV+O,EAAA,CAA0B1a,IAAMC,gBC1CxCkc,eAOjB,SAAAA,EAAYpe,GAAM,IAAA4D,EAAA,OAAAnD,OAAAoD,EAAA,EAAApD,CAAAe,KAAA4c,IACdxa,EAAAnD,OAAA2D,EAAA,EAAA3D,CAAAe,KAAAf,OAAA4D,EAAA,EAAA5D,CAAA2d,GAAA9Z,KAAA9C,KAAMxB,KAPF+Q,SAMU,EAAAnN,EAUlBya,YAAc,WACVza,EAAKwH,SAAS,SAAAH,GAAK,MAAK,CAACsG,OAAQtG,EAAMsG,UAXzB3N,EAclB0a,QAAU,kBAAM1a,EAAKwH,SAAS,CAACmG,OAAO,KAdpB3N,EAelB2a,SAAW,kBAAM3a,EAAKwH,SAAS,CAACmG,OAAO,KAZnC3N,EAAKmN,IAAM9O,IAAM4N,YAEjBjM,EAAKqH,MAAQ,CACTsG,OAAO,GANG3N,wEAiBV,IAAAoB,EAC6BxD,KAAKxB,MAA/BgC,EADHgD,EACGhD,SAAawc,EADhB/d,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,cAGJ,OACIrE,EAAAC,EAAAC,cAAA,MAAAJ,OAAAyH,OAAA,CACI6I,IAAKvP,KAAKuP,IACV0N,aAAcjd,KAAK8c,QACnBI,aAAcld,KAAK+c,UACfC,GAEHxc,EAASR,KAAKyJ,MAAMsG,MAAO/P,KAAKuP,aAlCV9O,IAAMC,eCExByc,eAOjB,SAAAA,EAAY3e,GAAM,IAAA4D,EAAA,OAAAnD,OAAAoD,EAAA,EAAApD,CAAAe,KAAAmd,IACd/a,EAAAnD,OAAA2D,EAAA,EAAA3D,CAAAe,KAAAf,OAAA4D,EAAA,EAAA5D,CAAAke,GAAAra,KAAA9C,KAAMxB,KAWV4e,KAAO,kBAAMhb,EAAKwH,SAAS,SAAAH,GACvB,OAAGrH,EAAK5D,MAAMgE,QAAUiH,EAAM4T,MAAQ,GAAKjb,EAAK5D,MAAMgE,OAAeiH,EAC9D,CAAC4T,MAAO5T,EAAM4T,MAAQ,MAdfjb,EAgBlBkb,KAAO,kBAAMlb,EAAKwH,SAAS,SAAAH,GACvB,OAAGA,EAAM4T,MAAQ,EAAI,EAAU5T,EACxB,CAAC4T,MAAO5T,EAAM4T,MAAQ,MAhB7Bjb,EAAKqH,MAAQ,CAAC4T,MAAO7e,EAAM6e,OAAS,GAFtBjb,wEAqBV,IAAAoB,EAC6BxD,KAAKxB,MAA/BgC,EADHgD,EACGhD,SAAawc,EADhB/d,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,cAGJ,OACIrE,EAAAC,EAAAC,cAAA,MAAS2d,EACJxc,EAASR,KAAKyJ,MAAM4T,MAAOrd,KAAKod,KAAMpd,KAAKsd,0DArBxB/U,GAC5B,OAAGA,EAAUgV,eAAe,SACjB,CAACF,MAAO9U,EAAU8U,OAEtB,YAhBqB5c,IAAMC,iMCD1C,IAEM8c,GAAOC,YAAHC,MAIJC,GAAgB7f,YANS,SAAAQ,KAAEsf,KAAF,IAAWlI,EAAXzW,OAAAC,EAAA,EAAAD,CAAAX,EAAA,iBAA4Ca,EAAAC,EAAAC,cAACoH,GAAArH,EAAYsW,KAMrEvX,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGP,CAAH,8wBAET0f,GACyB,SAAA5e,GAAA,OAAAA,EAAEgf,KAAiB,EAAI,YAGhDJ,GACyB,SAAA3e,GAAA,OAAAA,EAAE+e,KAAiB,EAAI,YAGhDJ,GACyB,SAAAze,GAAA,OAAAA,EAAE6e,KAAiB,EAAI,YAGhDJ,GACyB,SAAAje,GAAA,OAAAA,EAAEqe,KAAiB,EAAI,YAGhDJ,GACyB,SAAA/d,GAAA,OAAAA,EAAEme,KAAiB,EAAI,aA4CpDC,GAAcpd,IAAM+F,KAAK,SAAChI,GAAD,OAC3BW,EAAAC,EAAAC,cAACse,GAAD1e,OAAAyH,OAAA,GACQlI,EADR,CAEImI,QAAQ,YACRmX,SAAS,UACTC,YAAY,MAEZ5e,EAAAC,EAAAC,cAAA,QAAMuH,EAAE,8UAA8UmL,GAAG,UACzV5S,EAAAC,EAAAC,cAAA,QAAMuH,EAAE,8QAA8QmL,GAAG,UACzR5S,EAAAC,EAAAC,cAAA,QAAMuH,EAAE,6bAA6bmL,GAAG,UACxc5S,EAAAC,EAAAC,cAAA,QAAMuH,EAAE,ySAAySmL,GAAG,UACpT5S,EAAAC,EAAAC,cAAA,QAAMuH,EAAE,sSAAsSmL,GAAG,aAIzT8L,GAAYzf,YAAc,kBACXyf,UC5FFG,GAAiBvd,IAAM+F,KAAK,SAAChI,GAAD,OACrCW,EAAAC,EAAAC,cAACoH,GAAArH,EAADH,OAAAyH,OAAA,GAAalI,EAAb,CAAoBmI,QAAQ,kBACxBxH,EAAAC,EAAAC,cAAA,QAAMuH,EAAE,kDAAkDqX,KAAK,YAC/D9e,EAAAC,EAAAC,cAAA,QAAMuH,EAAE,yEAAyEqX,KAAK,YACtF9e,EAAAC,EAAAC,cAAA,QAAMuH,EAAE,kCAAkCqX,KAAK,YAC/C9e,EAAAC,EAAAC,cAAA,QAAMuH,EAAE,qFAAqFqX,KAAK,eAc3FC,GANQ,SAAC1f,GAAD,OACnBW,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAAM2G,KAAK,2BAA2B0S,OAAO,SAAS0F,IAAI,cACtDhf,EAAAC,EAAAC,cAAC2e,GAAD/e,OAAAyH,OAAA,CAAgBrC,SAAS,SAAY7F,EAAMib,cCdtC2E,GAAa3d,IAAM+F,KAAK,SAAChI,GAAD,OACjCW,EAAAC,EAAAC,cAACoH,GAAArH,EAAYZ,EACTW,EAAAC,EAAAC,cAAA,QAAMuH,EAAE,gZAoBDyX,GAVI,SAAC7f,GAChB,OACIW,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAAM2G,KAAI,gDAAA/C,OAAkDxE,EAAMgf,KAAN,IAAAxa,OAAiBxE,EAAMgf,MAAS,IAAM/E,OAAO,SAAS0F,IAAI,cAClHhf,EAAAC,EAAAC,cAACqF,GAAAtF,EAAD,CAASuF,MAAOnG,EAAM8f,QAAU9f,EAAM8f,QAAU,kBAC5Cnf,EAAAC,EAAAC,cAAC+e,GAADnf,OAAAyH,OAAA,CAAYrC,SAAU7F,EAAMib,WAAajb,EAAMib,UAAUpV,UAAY,SAAa7F,EAAMib,yNCTxG,IAAM8E,GAAYzgB,IAAOkJ,IAAVwX,MAiDAC,GAzCF,WACT,OACItf,EAAAC,EAAAC,cAACkf,GAAD,KACIpf,EAAAC,EAAAC,cAACqf,GAAD,CAAad,MAAI,EAAC5e,MAAM,UAAUqF,SAAS,UAAU/D,MAAO,CAAC+D,SAAU,OACvElF,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,KAAKf,MAAM,UAAU2f,WAAS,GAAlD,yBAGAxf,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,KAAK6e,MAAM,SAAS5f,MAAM,gBAAgB2f,WAAS,GAAvE,qEACsExf,EAAAC,EAAAC,cAAA,WADtE,wEAEyEF,EAAAC,EAAAC,cAAA,YAEzEF,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM2U,WAAS,EAACC,QAAQ,UACpB7U,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM+U,MAAI,EAACC,GAAI,EAAG9T,MAAO,CAAC2V,QAAS,OAAQhC,WAAY,SAAU4K,cAAe,WAC5E1f,EAAAC,EAAAC,cAACyf,GAAA1f,EAAD,CAAMoF,IAAE,EAACua,QAAM,EAACze,MAAO,CAAC0e,gBAAiB,UACrC7f,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAAM2G,KAAK,2BAA2B0S,OAAO,SAAS0F,IAAI,cACtDhf,EAAAC,EAAAC,cAAC2e,GAAD,CAAgB1d,MAAO,CAAC+D,SAAU,SAG1ClF,EAAAC,EAAAC,cAACyf,GAAA1f,EAAD,CAAMoF,IAAE,EAACua,QAAM,EAACze,MAAO,CAAC0e,gBAAiB,UACrC7f,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,MAApB,4BAC6BZ,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAAM2G,KAAK,2BAA2B0S,OAAO,SAAS0F,IAAI,cAA1D,WAIrChf,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM+U,MAAI,EAACC,GAAI,EAAG9T,MAAO,CAAC2V,QAAS,OAAQhC,WAAY,SAAU4K,cAAe,WAC5E1f,EAAAC,EAAAC,cAACyf,GAAA1f,EAAD,CAAMoF,IAAE,EAACua,QAAM,EAACze,MAAO,CAAC0e,gBAAiB,UACrC7f,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAAM2G,KAAK,gDAAgD0S,OAAO,SAAS0F,IAAI,cAC3Ehf,EAAAC,EAAAC,cAAC+e,GAAD,CAAY9d,MAAO,CAAC+D,SAAU,KAAMrF,MAAM,cAGlDG,EAAAC,EAAAC,cAACyf,GAAA1f,EAAD,CAAMoF,IAAE,EAACua,QAAM,EAACze,MAAO,CAAC0e,gBAAiB,WACrC7f,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,MAApB,kBACmBZ,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAAM2G,KAAK,gDAAgD0S,OAAO,SAAS0F,IAAI,cAA/E,kPCjC9Bc,4DAAb,SAAA1V,GAAA,SAAA0V,IAAA,IAAA9c,EAAAC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAe,KAAAif,GAAA,QAAA3c,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAP,EAAAnD,OAAA2D,EAAA,EAAA3D,CAAAe,MAAAmC,EAAAlD,OAAA4D,EAAA,EAAA5D,CAAAggB,IAAAnc,KAAAC,MAAAZ,EAAA,CAAAnC,MAAAgD,OAAAP,MACInE,KAAwCmC,IAAM4N,YADlDjM,EAWI8c,UAAY,WACJ9c,EAAK9D,KAAKkQ,SACd2Q,KAAMC,iBAAiBhd,EAAK9D,KAAKkQ,UAbzCpM,EAAA,OAAAnD,OAAAmE,EAAA,EAAAnE,CAAAggB,EAAA1V,GAAAtK,OAAAoE,EAAA,EAAApE,CAAAggB,EAAA,EAAA3b,IAAA,oBAAAC,MAAA,WAIQvD,KAAKkf,cAJb,CAAA5b,IAAA,qBAAAC,MAAA,WAQQvD,KAAKkf,cARb,CAAA5b,IAAA,SAAAC,MAAA,WAiBQ,OACIpE,EAAAC,EAAAC,cAAA,OAAKkQ,IAAKvP,KAAK1B,KAAM+gB,UAAS,YAAArc,OAAchD,KAAKxB,MAAM8gB,WACnDngB,EAAAC,EAAAC,cAAA,QAAMggB,UAAS,YAAArc,OAAchD,KAAKxB,MAAM8gB,WACnCtf,KAAKxB,MAAMgC,eApBhCye,EAAA,CAA0Bxe,IAAMC,gBCCnB6e,GAAO,SAAC/gB,GAAD,OAAWW,EAAAC,EAAAC,cAACmgB,GAAApgB,EAAD,CAAOkB,MAAO,CAACmf,QAAS,GAAIC,aAAc,KAAMlhB,EAAMgC,WAcxEmf,GAAY,SAACnhB,GACtB,OACIW,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM2U,WAAS,EAACC,QAAQ,gBAAgBC,WAAW,YAC/C9U,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM+U,MAAI,GACNhV,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,MACfvB,EAAMgC,WAGdhC,EAAMohB,SAAWphB,EAAMqhB,SAClB1gB,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM+U,MAAI,EAACC,IAAE,EAACL,WAAS,EAAClJ,QAAS,GAAImJ,QAAQ,WAAWE,KAAK,UAC1D1V,EAAMqhB,UAAY1gB,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM+U,MAAI,GAAChV,EAAAC,EAAAC,cAACygB,GAAD,CAAYrG,UAAW,CAACpV,SAAU,UAAWrF,MAAO,aAAcwe,KAAI,8BAAAxa,OAAgCxE,EAAMqhB,UAAYvB,QAAO,wBAAAtb,OAA0BxE,EAAMgC,aAC5LhC,EAAMohB,SAAWzgB,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM+U,MAAI,GAAChV,EAAAC,EAAAC,cAACygB,GAAD,CAAYrG,UAAW,CAACpV,SAAU,UAAWrF,MAAO,WAAYwe,KAAI,uBAAAxa,OAAyBxE,EAAMohB,SAAWtB,QAAO,mBAAAtb,OAAqBxE,EAAMgC,cAE/K,OAKLuf,GAAW,SAACvhB,GAAD,OAAWW,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,YAAY4e,WAAS,GAAEngB,EAAMgC,WACvEwf,GAAc,SAACxhB,GAAD,OACvBW,EAAAC,EAAAC,cAAA,OAAKiB,MAAO,CAAC2f,UAAW,KACpB9gB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,aAApB,WACAZ,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,MACAD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM2U,WAAS,EAAClJ,QAAS,GAAIoJ,WAAW,UACnCzV,EAAMgC,UAAYkC,MAAMwd,QAAQ1hB,EAAMgC,UACjChC,EAAMgC,SAASoS,IAAI,SAACuN,EAAOtN,GAAR,OACjB1T,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM+U,MAAI,EAAC7Q,IAAKuP,EAAGuB,GAAU,IAANvB,GAAU,IAC5BsN,KAGPhhB,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM+U,MAAI,EAACC,GAAI,IAAM5V,EAAMgC,aAWhC4f,GAAY,SAAC5hB,GAAD,OACrBW,EAAAC,EAAAC,cAACghB,GAAAjhB,EAAD,KACID,EAAAC,EAAAC,cAACihB,GAAAlhB,EAAD,CAAuBmhB,WAAYphB,EAAAC,EAAAC,cAACmhB,EAAAphB,EAAD,OAC/BD,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,MAAMvB,EAAMmG,OAAS,UAE7CxF,EAAAC,EAAAC,cAACohB,GAAArhB,EAAD,CAAuBkB,MAAO,CAACogB,UAAW,SACtCvhB,EAAAC,EAAAC,cAACshB,GAAAvhB,EAAD,KACID,EAAAC,EAAAC,cAACuhB,GAAAxhB,EAAD,KACID,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,KACID,EAAAC,EAAAC,cAACyhB,GAAA1hB,EAAD,aACAD,EAAAC,EAAAC,cAACyhB,GAAA1hB,EAAD,aACAD,EAAAC,EAAAC,cAACyhB,GAAA1hB,EAAD,gBACAD,EAAAC,EAAAC,cAACyhB,GAAA1hB,EAAD,sBAGRD,EAAAC,EAAAC,cAAC0hB,GAAA3hB,EAAD,KACKZ,EAAMgC,cAedwgB,GAAW,SAACxiB,GAAD,OACpBW,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,KACID,EAAAC,EAAAC,cAACyhB,GAAA1hB,EAAD,KAAWD,EAAAC,EAAAC,cAAA,eAAA2D,OAAUxE,EAAMyiB,SAAW,KAAO,IAAlCje,OAAuCxE,EAAM0iB,QACxD/hB,EAAAC,EAAAC,cAACyhB,GAAA1hB,EAAD,KAAWD,EAAAC,EAAAC,cAAA,YAAOb,EAAM2iB,OACxBhiB,EAAAC,EAAAC,cAACyhB,GAAA1hB,EAAD,KAAWD,EAAAC,EAAAC,cAAA,YAAOb,EAAM4iB,UACxBjiB,EAAAC,EAAAC,cAACyhB,GAAA1hB,EAAD,KAAWD,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,KAAaZ,EAAM6iB,gBAKzBC,GAAW,SAAC9iB,GAAD,OACpBW,EAAAC,EAAAC,cAACghB,GAAAjhB,EAAD,KACID,EAAAC,EAAAC,cAACihB,GAAAlhB,EAAD,CAAuBmhB,WAAYphB,EAAAC,EAAAC,cAACkiB,GAAAniB,EAAD,OAC/BD,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,MAApB,cAAAiD,OAAwCxE,EAAM8gB,SAA9C,OAEJngB,EAAAC,EAAAC,cAACohB,GAAArhB,EAAD,KACID,EAAAC,EAAAC,cAACmiB,GAAShjB,MCrHDijB,oLAEb,OACItiB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACIzB,EAAAC,EAAAC,cAACqiB,GAAD,MACAviB,EAAAC,EAAAC,cAACsiB,GAAD,cALmBlhB,IAAMC,eAiBnCkhB,8MACFnY,MAA0B,CACtBzK,MAAO,UACPqF,SAAU,QACVqV,YAAa,MAGjBmI,aAAe,SAACpJ,GAAD,OAAqC,SAAC7H,GACjDxO,EAAKwH,SAAL3K,OAAA6iB,GAAA,EAAA7iB,CAAA,GAAgBwZ,EAAS7H,EAAM6H,OAAOlV,kFAItC,OACIpE,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,YAAYD,QAAQ,kBAAxC,QACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,uBACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,MAAMC,KAAK,eAAeE,YAAY,yDAEzDliB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAACqI,GAAD,CACI1I,MAAOgB,KAAKyJ,MAAMzK,MAClBqF,SAAUrE,KAAKyJ,MAAMpF,SACrBqV,YAAa1Z,KAAKyJ,MAAMiQ,cAE5Bva,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CACIijB,QAAM,EACN3e,MAAM,QACNH,MAAOvD,KAAKyJ,MAAMzK,MAClBwZ,SAAUxY,KAAK6hB,aAAa,UAE5B1iB,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,WAAhB,WACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,WAAhB,WACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,aAAhB,aACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,WAAhB,WACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,UAAhB,UACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,YAAhB,YACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,SAAhB,UAEJpE,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CACIijB,QAAM,EACN3e,MAAM,WACNH,MAAOvD,KAAKyJ,MAAMpF,SAClBmU,SAAUxY,KAAK6hB,aAAa,aAE5B1iB,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,SAAhB,SACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,WAAhB,WACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,SAAhB,UAGJpE,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CACIsE,MAAM,cACNgU,YAAY,UACZnU,MAAOvD,KAAKyJ,MAAMiQ,YAClBlB,SAAUxY,KAAK6hB,aAAa,0BAtD7BphB,IAAMC,eA8DvB4hB,8MACF7Y,MAA0B,CACtBzK,MAAO,UACPqF,SAAU,QACVqV,YAAa,MAGjBmI,aAAe,SAACpJ,GAAD,OAAqC,SAAC7H,GACjDtD,EAAK1D,SAAL3K,OAAA6iB,GAAA,EAAA7iB,CAAA,GAAgBwZ,EAAS7H,EAAM6H,OAAOlV,kFAItC,OACIpE,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,YAAYD,QAAQ,yBAAxC,gBACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,+BACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,OAAOC,KAAK,UAAUC,QAAQ,QAAQC,YAAY,wCACjEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,MAAMC,KAAK,eAAeE,YAAY,yDAEzDliB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAACqf,GAAD,CACI1f,MAAOgB,KAAKyJ,MAAMzK,MAClBqF,SAAUrE,KAAKyJ,MAAMpF,SACrBqV,YAAa1Z,KAAKyJ,MAAMiQ,cAE5Bva,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CACIijB,QAAM,EACN3e,MAAM,QACNH,MAAOvD,KAAKyJ,MAAMzK,MAClBwZ,SAAUxY,KAAK6hB,aAAa,UAE5B1iB,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,WAAhB,WACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,WAAhB,WACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,aAAhB,aACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,WAAhB,WACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,UAAhB,UACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,YAAhB,YACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,SAAhB,UAEJpE,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CACIijB,QAAM,EACN3e,MAAM,WACNH,MAAOvD,KAAKyJ,MAAMpF,SAClBmU,SAAUxY,KAAK6hB,aAAa,aAE5B1iB,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,SAAhB,SACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,WAAhB,WACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,SAAhB,UAEJpE,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CACIsE,MAAM,cACNgU,YAAY,UACZnU,MAAOvD,KAAKyJ,MAAMiQ,YAClBlB,SAAUxY,KAAK6hB,aAAa,0BAtDtBphB,IAAMC,yBChFrB6hB,GAJCC,aAAkB,CAC9BC,SAAU,GACVC,SAAU,UCQOC,8MACjB1e,QAAU,SAAC2M,GACPxO,EAAK5D,MAAMyF,SAAW7B,EAAK5D,MAAMyF,QAAQ2M,IAEtCA,EAAMyH,kBAAqBjW,EAAK5D,MAAMokB,KAGzChS,EAAM2G,iBACNgL,GAAQM,KAAKzgB,EAAK5D,MAAMokB,GAAGxG,yFAGvB,IAAA5Y,EACoCxD,KAAKxB,MAAtCokB,EADHpf,EACGof,GAAI7c,EADPvC,EACOuC,KAAM0B,EADbjE,EACaiE,UAAciO,EAD3BzW,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,2BAEJ,OAAOrE,EAAAC,EAAAC,cAAC2G,EAAA5G,EAADH,OAAAyH,OAAA,GACCgP,EADD,CAEH3P,KAAM6c,GAAMA,EAAGxG,eAAiBrW,EAChC0B,UAAWA,GAAa,OACxB0W,IAA2B,WAAtBne,KAAKxB,MAAMia,OAAsB,kBAAejH,EACrDvN,QAASjE,KAAKiE,kBAlBQxD,IAAMC,eAuBlCoiB,GAAahlB,YAAO6kB,IAAVxkB,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGP,CAAH,wCAQHilB,GAAS,SAACvkB,GACnB,IAAMuT,EAAE,IAAA/O,OAFU+K,OAAOiV,SAASC,KAAKxG,MAAM,KAAK,GAE1C,KAAAzZ,OAAoBxE,EAAMuT,GAAGqK,eACrC,OACIjd,EAAAC,EAAAC,cAACyjB,GAAD,CAAY/Q,GAAIA,EAAI6Q,GAAI7Q,GAAxB,MCnCF4H,GAAS,CACXC,aAAcza,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACdiZ,YAAa1a,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACbkZ,KAAM3a,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACNmZ,YAAa5a,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACboZ,QAAS7a,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACTqZ,SAAU9a,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACVsZ,WAAY/a,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACZuZ,KAAMhb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACNwZ,MAAOjb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACPyZ,KAAMlb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACN0Z,KAAMnb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACN2Z,KAAMpb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACN4Z,SAAUrb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,qBACV6Z,OAAQtb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,sBAGNsiB,GAAUplB,IAAOkJ,IAAV7I,WAAA,CAAAC,YAAA,UAAAC,YAAA,YAAGP,CAAH,8CACK,SAAAQ,GAAA,OAAsC,EAAtCA,EAAEG,MAAiBb,IAAIiN,QAAQC,MAC5B,SAAAlM,GAAA,OAAsC,EAAtCA,EAAEH,MAAiBb,IAAIiN,QAAQC,OAG9CqY,GAAa,SAAC3kB,GAAD,OAA4BW,EAAAC,EAAAC,cAACsI,EAAAvI,EAADH,OAAAyH,OAAA,CAAY3G,QAAQ,KAAK4e,WAAS,GAAKngB,KAChF4kB,GAAY,SAAC5kB,GAAD,OAA4BW,EAAAC,EAAAC,cAACsI,EAAAvI,EAADH,OAAAyH,OAAA,CAAY3G,QAAQ,QAAQ4e,WAAS,GAAKngB,EAA1C,CAAiDoJ,UAAU,UACnGyb,GAAM,SAAC7kB,GAAD,OAAmEW,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KAC3EzB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,KAAK4e,WAAS,GAAlC,UAA4CngB,EAAMmG,OAClDxF,EAAAC,EAAAC,cAACikB,GAAAlkB,EAAD,CAAMc,UAAW,GACbf,EAAAC,EAAAC,cAACkkB,GAAAnkB,EAAD,KACID,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,MAApB,QACAZ,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,QAAQ6H,UAAU,OAAOpJ,EAAMgC,YAG3DrB,EAAAC,EAAAC,cAAA,aAGEmkB,GAAY,SAAChlB,GAAD,OAAmEW,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACjFzB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,KAAK4e,WAAS,GAAlC,UAA4CngB,EAAMmG,OAClDxF,EAAAC,EAAAC,cAACikB,GAAAlkB,EAAD,CAAMc,UAAW,GACbf,EAAAC,EAAAC,cAACkkB,GAAAnkB,EAAD,KACID,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,QAAQ6H,UAAU,OAAOpJ,EAAMgC,cAK1CijB,8MACjBC,OAAS,kBAAOvkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACXwB,EAAKuhB,gBACLvhB,EAAKwhB,mBACLxhB,EAAKyhB,aACLzhB,EAAK0hB,yBAGVH,cAAgB,kBACZxkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACIzB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,KAAK4e,WAAS,GAAlC,cAGAxf,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,YAAY4e,WAAS,GACrCxf,EAAAC,EAAAC,cAAA,SAAI,UADR,yEAMRukB,iBAAmB,kBACfzkB,EAAAC,EAAAC,cAAC6jB,GAAD,KACI/jB,EAAAC,EAAAC,cAAC0kB,GAAD,gBAAoB5kB,EAAAC,EAAAC,cAAC2kB,GAAD,CAAQjS,GAAI,aAChC5S,EAAAC,EAAAC,cAAC4kB,GAAD,CAAWtf,MAAM,mBAAjB,uBACwBxF,EAAAC,EAAAC,cAAC6kB,GAAD,CAAMzc,UAAU,QAAQ1B,KAAK,8BAA8B0S,OAAO,UAAlE,4BADxB,gBAC+ItZ,EAAAC,EAAAC,cAAA,WAD/I,qCAEsCF,EAAAC,EAAAC,cAAC6kB,GAAD,CAAMzc,UAAU,QAAQ1B,KAAK,2BAA2B0S,OAAO,UAA/D,sBAAiGtZ,EAAAC,EAAAC,cAAA,WAFvI,sDAGuDF,EAAAC,EAAAC,cAAA,2BAHvD,KAGiFF,EAAAC,EAAAC,cAAC6kB,GAAD,CAAMzc,UAAU,QAAQmb,GAAG,UAA3B,kCAKzFiB,WAAa,kBACT1kB,EAAAC,EAAAC,cAAC6jB,GAAD,KACI/jB,EAAAC,EAAAC,cAAC0kB,GAAD,KACKpK,GAAOE,YADZ,kBAC4CF,GAAOC,aADnD,IACiEza,EAAAC,EAAAC,cAAC2kB,GAAD,CAAQjS,GAAI,YAE7E5S,EAAAC,EAAAC,cAAC8kB,GAAD,CAAKxf,MAAOxF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,0BAAZ,wBACyBzB,EAAAC,EAAAC,cAAA,WACrBF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAACmiB,GAAD,CAAMlC,SAAS,MAAf,wNAMAngB,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAACmiB,GAAD,CAAMlC,SAAS,MAAf,wGAQJngB,EAAAC,EAAAC,cAAC8kB,GAAD,CAAKxf,MAAOxF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,oBAAqCzB,EAAAC,EAAAC,cAAA,mCAArC,eAAiFF,EAAAC,EAAAC,cAAA,iCAA7F,qFACsFF,EAAAC,EAAAC,cAAA,WADtF,yFAIAF,EAAAC,EAAAC,cAAC8kB,GAAD,CAAKxf,MAAOxF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,kBAAqCzB,EAAAC,EAAAC,cAAA,2CAAjD,8CACgDsa,GAAOI,YAAY5a,EAAAC,EAAAC,cAAA,WADnE,oBAEqBF,EAAAC,EAAAC,cAAC6kB,GAAD,CAAMzc,UAAU,QAAQ1B,KAAK,iFAAiF0S,OAAO,UAArH,SAErBtZ,EAAAC,EAAAC,cAAC8kB,GAAD,CAAKxf,MAAOxF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,sCAAZ,8GAC+GzB,EAAAC,EAAAC,cAAA,WAD/G,6GAORykB,mBAAqB,kBAAO3kB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACxBzB,EAAAC,EAAAC,cAAC0kB,GAAD,wBACoB5kB,EAAAC,EAAAC,cAAA,qCADpB,IACwDsa,GAAOc,OAD/D,IACuEtb,EAAAC,EAAAC,cAAC2kB,GAAD,CAAQjS,GAAG,kBAElF5S,EAAAC,EAAAC,cAAC+kB,GAAD,0CAEIjlB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,0EACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,uFACAF,EAAAC,EAAAC,cAAA,mCAA0BF,EAAAC,EAAAC,cAAA,4BAC1BF,EAAAC,EAAAC,cAAA,sDAA6CF,EAAAC,EAAAC,cAAA,mCAA7C,KACAF,EAAAC,EAAAC,cAAA,2DACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,6EACAF,EAAAC,EAAAC,cAAA,kCAAyBF,EAAAC,EAAAC,cAAA,gBAAzB,8CACAF,EAAAC,EAAAC,cAAA,oDAA2CF,EAAAC,EAAAC,cAAA,8BAA3C,MAAyEF,EAAAC,EAAAC,cAAA,yBAAzE,2BAAuHF,EAAAC,EAAAC,cAAA,sBACvHF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBAAJ,2CAAiEF,EAAAC,EAAAC,cAAA,gCAAjE,KACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBAAJ,wBACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BAAJ,oBAAiDF,EAAAC,EAAAC,cAAA,YACjDF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BAAJ,0BACAF,EAAAC,EAAAC,cAAA,6BAAoBF,EAAAC,EAAAC,cAAA,yBAApB,KAA4CF,EAAAC,EAAAC,cAAA,sBAA5C,KAAiEF,EAAAC,EAAAC,cAAA,sBAAjE,cAKhBF,EAAAC,EAAAC,cAAA,uIAhGwBoB,IAAMC,qTClD9C,IAAMmV,GAAU,SAAC7W,GAEb,OADevB,EAAW,KAAX,OACDuB,IAOZqlB,GAAMvmB,IAAOkJ,IAAVsd,KACe,SAAAhmB,GAAA,IAAEU,EAAFV,EAAEU,MAAF,OAAAV,EAASG,MAAiB5E,KAAKD,OAAOoF,KAMxDulB,GAAMzmB,IAAOkJ,IAAVwd,KAGE,SAAA5lB,GAAA,IAAEvB,EAAFuB,EAAEvB,KAAMoB,EAARG,EAAQH,MAAR,OAAmBpB,EAAO,OAASoB,EAAMb,IAAIpB,QAAQY,UAAUI,eAkB3DinB,GAfI,SAACjmB,GAA2B,IACpCQ,EAASR,EAATQ,MACP,OACIG,EAAAC,EAAAC,cAACglB,GAAD,CAAKrlB,MAAOA,GAAZ,qBACuBA,EAAMG,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAC9BF,EAAAC,EAAAC,cAACklB,GAAD,KAAM1O,GAAQ7W,IACdG,EAAAC,EAAAC,cAACklB,GAAD,CAAKlnB,MAAI,GAAEwY,GAAQ7W,wMC3B/B,IAAM0lB,GAAc5mB,IAAOkJ,IAAV2d,MAWIC,oLAEb,OACIzlB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACIzB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,MAApB,mBAGAZ,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,aAApB,sBAGAZ,EAAAC,EAAAC,cAACqlB,GAAD,KACKzlB,OAAO6b,KAAKrd,EAAW,KAAX,QAA+BmV,IAAI,SAAA5T,GAAK,OACjDG,EAAAC,EAAAC,cAACwlB,GAAD,CAAYvhB,IAAKtE,EAAOA,MAAOA,eAZpByB,IAAMC,uLCPpBokB,8MACjBrb,MAA2B,CACvB1J,QAAS,8EAGL,IAAAuN,EAAAtN,KACJ,OACIb,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,mBAAmBD,QAAQ,gBAA/C,YACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,wDACoD9iB,EAAAC,EAAAC,cAAA,WADpD,wBAEyBF,EAAAC,EAAAC,cAAA,qBAFzB,OAE+CF,EAAAC,EAAAC,cAAA,2BAF/C,gDAIAF,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,UAAUC,KAAK,mBAAmBC,QAAQ,GAAGC,YAAY,KACxEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,MAAMC,KAAK,eAAeC,QAAQ,GAAGC,YAAY,6CAEpEliB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAAC0lB,GAAD,CAAUhlB,QAASC,KAAKyJ,MAAM1J,QAASsE,SAAS,UAChDlF,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CACIijB,QAAM,EACN9e,MAAOvD,KAAKyJ,MAAM1J,QAClByY,SAAU,SAAAtV,GAAC,OAAIoK,EAAK1D,SAAS,CAAC7J,QAASmD,EAAEuV,OAAOlV,SAChDG,MAAM,WAENvE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,MAAhB,MACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,QAAhB,QACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,QAAhB,kBA3BkB9C,IAAMC,eCG3BskB,8MACjBvb,MAAwB,CACpBzK,MAAO,OACPkN,KAAM,WAGV2V,aAAe,SAACve,GAAD,OAA+B,SAACsN,GAAD,OAAiDxO,EAAKwH,SAAL3K,OAAA6iB,GAAA,EAAA7iB,CAAA,GAAgBqE,EAAMsN,EAAM6H,OAAOlV,kFAG9H,OACIpE,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,oBAAoBD,QAAQ,iBAAhD,aACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,4CAGA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,QAAQC,KAAK,eAAeC,QAAQ,QAAQC,YAAY,KACvEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,OAAOC,KAAK,iBAAiBC,QAAQ,SAASC,YAAY,KACzEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAK,kBAAkBC,QAAQ,GAAGC,YAAY,MAG5EliB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM2U,WAAS,EAACE,WAAW,SAASpJ,QAAS,IACzC1L,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM+U,MAAI,GACNhV,EAAAC,EAAAC,cAAA,OAAKiB,MAAO,CAAC2kB,gBAAsC,UAArBjlB,KAAKyJ,MAAMzK,MAAoB,UAAY,UAAWygB,QAAS,KACzFtgB,EAAAC,EAAAC,cAAC6lB,GAAD,CACIhZ,KAAMlM,KAAKyJ,MAAMyC,KACjBlN,MAAOgB,KAAKyJ,MAAMzK,OAFtB,UAMRG,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAM+U,MAAI,GACNhV,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,WAApB,iEAA4FZ,EAAAC,EAAAC,cAAA,WAA5F,wEAGRF,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CACIijB,QAAM,EACN3e,MAAM,OACNH,MAAOvD,KAAKyJ,MAAMyC,KAClBsM,SAAUxY,KAAK6hB,aAAa,SAE5B1iB,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,UAAhB,UACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,SAAhB,UAEJpE,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CACIijB,QAAM,EACN3e,MAAM,QACNH,MAAOvD,KAAKyJ,MAAMzK,MAClBwZ,SAAUxY,KAAK6hB,aAAa,UAE5B1iB,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,SAAhB,SACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,QAAhB,kBAnDmB9C,IAAMC,oCCJ3CykB,GAA0D,CAC5DxoB,QAAS,oBACT4Y,KAAM,4BACN3Y,QAAS,gCACTyY,MAAO,2BAGU+P,8MACjB3b,MAAQ,CACJ1J,QAAS,UACTxB,MAAM,EACNwX,QAAS,uBAGb5V,QAAU,kBAAMiC,EAAKwH,SAAS,CAACrL,MAAM,OAErC8mB,QAAU,SAACtlB,GACP,IAAMgW,EAAUoP,GAAeplB,GAC/B,OAAO,kBAAMqC,EAAKwH,SAAS,CAACrL,MAAM,EAAMwX,UAAShW,sFAIjD,OACIZ,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,gBAAgBD,QAAQ,aAA5C,SACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,oGACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,UAAUC,KAAK,qBAAqBE,YAAY,kDAC/DliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,UAAUC,KAAK,mCAAmCE,YAAY,yFAC7EliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,UAAUC,KAAK,aAAaE,YAAY,2DAE3DliB,EAAAC,EAAAC,cAACimB,GAAD,CAAUhG,SAAS,OAAnB,0mCAsCAngB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAACkmB,GAAAnmB,EAAD,CACIb,KAAMyB,KAAKyJ,MAAMlL,KACjBgO,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhB+Y,iBAAkB,IAClBrlB,QAASH,KAAKG,SAEdhB,EAAAC,EAAAC,cAAComB,GAAD,CACItlB,QAASH,KAAKG,QACd4V,QAAS/V,KAAKyJ,MAAMsM,QACpBhW,QAASC,KAAKyJ,MAAM1J,WAG5BZ,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQW,QAAQ,WAAWkE,QAASjE,KAAKqlB,QAAQ,YAAjD,gBACAlmB,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQW,QAAQ,WAAWkE,QAASjE,KAAKqlB,QAAQ,SAAjD,aACAlmB,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQW,QAAQ,WAAWkE,QAASjE,KAAKqlB,QAAQ,YAAjD,gBACAlmB,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQW,QAAQ,WAAWkE,QAASjE,KAAKqlB,QAAQ,UAAjD,uBAjFmB5kB,IAAMC,eCZxBglB,oLAEb,OACIvmB,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,sBAAsBD,QAAQ,mBAAlD,eACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,0FACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,cAAcC,KAAK,oBAAoBC,QAAQ,SAASC,YAAY,KACnFliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,SAASC,KAAK,mCAAmCC,QAAQ,QAAQC,YAAY,KAC5FliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,aAAaC,KAAK,0CAA0CC,QAAQ,sGAAsGC,YAAY,KACrMliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,MAAMC,KAAK,iBAAiBC,QAAQ,GAAGC,YAAY,+CAEtEliB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAACyc,GAAD,eAbyBrb,IAAMC,eCM9BilB,8MACjBlc,MAAQ,CACJlG,MAAO,OACPoV,OAAO,EACPC,kBAAkB,KAGtBgN,QAAU,WACNxjB,EAAKwH,SAAS,CAACrG,MAAO,8EAGlB,IAAA+J,EAAAtN,KACJ,OACIb,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,0BAA0BD,QAAQ,uBAAtD,mBACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,0EACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,QAAQC,KAAK,SAASC,QAAQ,GAAGC,YAAY,KAC5DliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAK,0BAA0BC,QAAQ,GAAGC,YAAY,wIAChFliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,QAAQC,KAAK,qBAAqBC,QAAQ,QAAQC,YAAY,qDAC7EliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,mBAAmBC,KAAK,qBAAqBC,QAAQ,QAAQC,YAAY,wEACxFliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,MAAMC,KAAK,iBAAiBE,YAAY,+CAE3DliB,EAAAC,EAAAC,cAACghB,GAAAjhB,EAAD,KACID,EAAAC,EAAAC,cAACihB,GAAAlhB,EAAD,CAAuBmhB,WAAYphB,EAAAC,EAAAC,cAACmhB,EAAAphB,EAAD,OAC/BD,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,qBAEJD,EAAAC,EAAAC,cAACohB,GAAArhB,EAAD,KACID,EAAAC,EAAAC,cAAA,8EAC+EF,EAAAC,EAAAC,cAAA,WAD/E,4DAEyEF,EAAAC,EAAAC,cAAA,WAFzE,sEAGyFF,EAAAC,EAAAC,cAAA,WAHzF,kEAImFF,EAAAC,EAAAC,cAAA,YAEnFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yHAAmHF,EAAAC,EAAAC,cAAA,aAG3HF,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAACwmB,GAAD,CACItiB,MAAOvD,KAAKyJ,MAAMlG,MAClBqV,iBAAkB5Y,KAAKyJ,MAAMmP,iBAC7BD,MAAO3Y,KAAKyJ,MAAMkP,MAClBH,SAAU,SAACjV,GAAD,OAAmB+J,EAAK1D,SAAS,CAACrG,aAEhDpE,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQW,QAAQ,WAAWkE,QAAS,kBAAMqJ,EAAK1D,SAAS,CAACrG,MAAO,WAAhE,SACApE,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQW,QAAQ,WAAWkE,QAAS,kBAAMqJ,EAAK1D,SAAS,CAAC+O,OAAQrL,EAAK7D,MAAMkP,UAA5E,UAA6F3Y,KAAKyJ,MAAMkP,MAAMmN,YAC9G3mB,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQW,QAAQ,WAAWkE,QAAS,kBAAMqJ,EAAK1D,SAAS,CAACgP,kBAAmBtL,EAAK7D,MAAMmP,qBAAvF,uBAAgI5Y,KAAKyJ,MAAMmP,iBAAiBkN,qBA/C/HrlB,IAAMC,eCLlCqlB,8MACjBtc,MAAQ,CACJuc,wBAAwB,KAG5BC,8BAAgC,WAC5B7jB,EAAKwH,SAAS,CAACoc,wBAAwB,6EAGnC,IAAA1Y,EAAAtN,KACJ,OACIb,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,6BAA6BD,QAAQ,0BAAzD,sBACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,kDACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,OAAOC,KAAK,UAAUC,QAAQ,GAAGC,YAAY,gBAC5DliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,QAAQC,KAAK,oBAAoBC,QAAQ,GAAGC,YAAY,iBACvEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,UAAUC,KAAK,SAASC,QAAQ,GAAGC,YAAY,mBAC9DliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,eAAeC,KAAK,SAASC,QAAQ,GAAGC,YAAY,KACnEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,mBAAmBC,KAAK,SAASC,QAAQ,GAAGC,YAAY,KACvEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,OAAOC,KAAK,WAAWC,QAAQ,GAAGC,YAAY,KAC7DliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAK,WAAWC,QAAQ,GAAGC,YAAY,MAErEliB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQW,QAAQ,WAAWkE,QAASjE,KAAKimB,+BAAzC,2BACA9mB,EAAAC,EAAAC,cAAC6mB,GAAD,CACI3nB,KAAMyB,KAAKyJ,MAAMuc,uBACjBnP,aAAa,KACbC,iBAAiB,SACjBF,KAAM,kBAAMtJ,EAAK1D,SAAS,CAACoc,wBAAwB,KACnDrP,SAAU,kBAAMrJ,EAAK1D,SAAS,CAACoc,wBAAwB,KACvDjQ,QAAQ,8BACRpR,MAAM,uCAhCsBlE,IAAMC,+ICI1D,IAAMylB,GAAcroB,IAAOkJ,IAAVof,MAIIC,8MACjBpT,UAAgDxS,IAAM4N,cACtD5E,MAAQ,CACJ6c,oBAAgB9U,EAChBpM,SAAU,OACVmhB,WAAY,UACZhoB,MAAM,EACNS,MAAO,UACPyV,SAAS,EACTwH,QAAS,CAAC,CACN1Y,MAAO,QACPG,MAAO,4BACR,CACCH,MAAO,SACPG,MAAO,uBACR,CACCH,MAAO,YACPG,MAAO,sBACR,CACCH,MAAO,YACPG,MAAO,yBACR,CACCH,MAAO,cACPG,MAAO,yBACR,CACCH,MAAO,WACPG,MAAO,4BAIfuiB,8BAAgC,WAC5B7jB,EAAKwH,SAAS,CACVrL,MAAM,EACNkW,SAAS,IAGblH,WAAW,SAACiZ,GACRpkB,EAAKwH,SAAS,CACV6K,SAAS,KAEd,QAGPoN,aAAe,SAACjR,GACZxO,EAAKwH,SAAS,CACVxE,SAAUwL,EAAM6H,OAAOlV,WAI/BkjB,YAAc,SAAC7V,GACXxO,EAAKwH,SAAS,CACV5K,MAAO4R,EAAM6H,OAAOlV,WAI5BmjB,SAAU,SAACnjB,GACPnB,EAAKwH,SAAS,CAAC0c,eAAgB/iB,IAC/BnB,EAAKuU,cAGTA,SAAU,WACNvU,EAAKwH,SAAS,CAACrL,MAAM,6EAGjB,IAAA+O,EAAAtN,KACJ,OACIb,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,qBAAqBD,QAAQ,kBAAjD,cACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,yGACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,OAAOC,KAAK,UAAUC,QAAQ,GAAGC,YAAY,yBAC5DliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,UAAUC,KAAK,4CAA4CE,YAAY,8BACtFliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAK,SAASC,QAAQ,GAAGC,YAAY,kCAC/DliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAK,SAASC,QAAQ,GAAGC,YAAY,iCAC/DliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,mBAAmBC,KAAK,SAASC,QAAQ,GAAGC,YAAY,2BACvEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAK,WAAWC,QAAQ,GAAGC,YAAY,sCACjEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAK,WAAWC,QAAQ,GAAGC,YAAY,2BACjEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,cAAcC,KAAK,SAASC,QAAQ,GAAGC,YAAY,+CAClEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,UAAUC,KAAK,OAAOC,QAAQ,GAAGC,YAAY,yDAEhEliB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAACsnB,GAAD,CACIra,SAAUtM,KAAKiT,UAAUzE,QACzBjQ,KAAMyB,KAAKyJ,MAAMlL,KACjBuY,iBAAiB,SACjBiF,YAAY,cACZpF,SAAU3W,KAAK2W,SACf+E,SAAU1b,KAAK0mB,SACfzK,QAASjc,KAAKyJ,MAAMwS,QACpBM,SAAS,YACTnX,SAAUpF,KAAKyJ,MAAMrE,SACrBoX,YAAiC,WAApBxc,KAAKyJ,MAAMzK,MAAqB,GAAKgB,KAAKyJ,MAAMzK,MAC7DyV,QAASzU,KAAKyJ,MAAMgL,UAExBtV,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQW,QAAQ,WAAW+S,UAAW9S,KAAKiT,UAAWhP,QAASjE,KAAKimB,+BAApE,aACA9mB,EAAAC,EAAAC,cAACunB,GAAAxnB,EAAD,CAAYynB,QAAM,EAACC,QAAQ,yBAA3B,eAGA3nB,EAAAC,EAAAC,cAAC0nB,GAAA3nB,EAAD,CACIoZ,SAAUxY,KAAKymB,YACfljB,MAAOvD,KAAKyJ,MAAMzK,OAElBG,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUkE,IAAI,UAAUC,MAAM,WAA9B,WACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUkE,IAAI,QAAQC,MAAM,SAA5B,SACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUkE,IAAI,SAASC,MAAM,UAA7B,UACApE,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUkE,IAAI,SAASC,MAAM,UAA7B,WAEJpE,EAAAC,EAAAC,cAACunB,GAAAxnB,EAAD,CAAYynB,QAAM,EAACC,QAAQ,yBAA3B,gBAGA3nB,EAAAC,EAAAC,cAAC0nB,GAAA3nB,EAAD,CACIoZ,SAAUxY,KAAK6hB,aACfte,MAAOvD,KAAKyJ,MAAMrE,UAElBjG,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAUmE,MAAM,QAAhB,QACEvD,KAAKyJ,MAAMwS,QACRrJ,IAAI,SAACuJ,EAAQtJ,GAAT,OACD1T,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CACIkE,IAAKuP,EACLtP,MAAO4Y,EAAO5Y,OAEb4Y,EAAOzY,UAKvB1D,KAAKyJ,OAASzJ,KAAKyJ,MAAM6c,eACpBnnB,EAAAC,EAAAC,cAAC8mB,GAAD,2BAAiCnmB,KAAKyJ,MAAM6c,eAA5C,IACEtmB,KAAKyJ,MAAMwS,QACNrJ,IAAI,SAACuJ,GACF,GAAGA,EAAO5Y,OAAS+J,EAAK7D,MAAM6c,eAC1B,MAAO,IAAMnK,EAAOzY,MAAQ,OAG1C,YAtIkBjD,IAAMC,eCF7BsmB,oLAEb,OACI7nB,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWpC,QAAQ,YAAYC,SAAS,iBAAxC,SACA1gB,EAAAC,EAAAC,cAAC4iB,GAAD,sCACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,UAAUC,KAAK,SAASC,QAAQ,GAAGC,YAAY,MAElEliB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYW,QAAQ,MAChBZ,EAAAC,EAAAC,cAAC4nB,GAAD,CAAOlnB,QAAQ,UACfZ,EAAAC,EAAAC,cAAC4nB,GAAD,CAAOlnB,QAAQ,aACfZ,EAAAC,EAAAC,cAAC4nB,GAAD,CAAOlnB,QAAQ,mBAbAU,IAAMC,yDCCvCwmB,kBAAkBC,yBAAcC,OAGhCC,GAAoBvpB,YADF,SAAAQ,KAAE2mB,gBAAF,IAAsBzmB,EAAtBS,OAAAC,EAAA,EAAAD,CAAAX,EAAA,4BAA4Ea,EAAAC,EAAAC,cAACmgB,GAAApgB,EAAUZ,KACxFL,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAGP,CAAH,qDACC,SAAAc,GAAA,OAAAA,EAAEqmB,kBAQpBqC,GAAyD,CAACC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,WAAc,EAAGC,SAAY,EAAGC,KAAQ,EAAGC,UAAa,EAAGC,cAAiB,EAAGC,KAAQ,IAC/NC,GAAsD,CAAClB,EAAG,EAAGC,EAAG,EAAGC,EAAG,aAAcC,EAAG,WAAYC,EAAG,EAAGC,EAAG,OAAQC,EAAG,EAAGC,EAAG,YAAaC,EAAG,gBAAiBC,GAAI,GAAIC,GAAI,GAAIC,GAAI,QAElLQ,GAAkB,SAACC,GAAD,YAAiDnX,IAANmX,OAAkBnX,EAAYiX,GAAsBxX,KAAK2X,IAAI,EAAG3X,KAAK4X,MAAMF,MACxIG,GAAmB,SAACH,GAAD,YAAkDnX,IAANmX,OAAkBnX,EAAYP,KAAK2X,IAAI,GAAI3X,KAAK4X,MAAMF,KAErHI,GAA2B,SAAChlB,GAAD,MAAyC,CACtE8O,EAAG9O,EAASgO,GACZiX,EAAGjlB,EAASklB,IACZC,EAAGnlB,EAASolB,IACZC,EAAGrlB,EAASsL,OACZsZ,EAAGrB,GAAuBvjB,EAAS4E,OACnC0gB,KAAMtlB,EAASulB,UACfC,KAAMxlB,EAASylB,UAAYlC,GAAuBvjB,EAASylB,gBAAahY,EACxEiY,KAAM1lB,EAAS2lB,UACfC,KAAM5lB,EAASiJ,UAAYsa,GAAuBvjB,EAASiJ,gBAAawE,EACxEoY,iBAAoCpY,IAAvBzN,EAAS8lB,WAA0B9lB,EAAS8lB,UACzDC,iBAAoCtY,IAAvBzN,EAASgmB,WAA0BhmB,EAASgmB,UACzDC,OAAQjmB,EAASimB,SAGfC,GAA2B,SAACvsB,GAAD,MAAuC,CACpEqU,GAAIrU,EAAOmV,EACXoW,IAAKvrB,EAAOsrB,EACZG,IAAKzrB,EAAOwrB,EACZvgB,MAAO+f,GAAgBhrB,EAAOirB,GAC9BtZ,OAAQyZ,GAAiBprB,EAAO0rB,GAChCE,UAAWR,GAAiBprB,EAAO2rB,MACnCG,SAAUd,GAAgBhrB,EAAO6rB,MACjCG,UAAWZ,GAAiBprB,EAAO+rB,MACnCzc,SAAU0b,GAAgBhrB,EAAOisB,MACjCE,UAAWnsB,EAAOksB,YAClBG,UAAWrsB,EAAOosB,YAClBE,OAAQtsB,EAAOssB,SAmCEE,8MA6BjBC,6BAA8B,IAM9BC,eAAiB,SAACC,GAA2B,IAClCD,EAAkBhoB,EAAK5D,MAAvB4rB,eACPA,GACIhoB,EAAK+nB,6BACLC,EAAeC,EAAQzX,IAAIqX,KAC/B7nB,EAAK+nB,6BAA8B,KAGvCG,mBAAqB,eAmBrBC,iBAAmB,SAAC7sB,EAAkB8sB,EAAiBC,GACnDroB,EAAK+nB,6BAA+BO,KAAQF,EAASC,uFA/BrDzqB,KAAKsqB,sDAkCD,IAAA9mB,EACiCxD,KAAKxB,MAAnCmsB,EADHnnB,EACGmnB,MAAOjtB,EADV8F,EACU9F,OADVktB,EAAApnB,EACkBmU,cADlB,IAAAiT,EAC2B,GAD3BA,EAEEC,EAAY5rB,OAAO6rB,OAAOptB,GAAQkV,IAAImW,IAE5C,OACI5pB,EAAAC,EAAAC,cAAC6nB,GAAD,CACI7H,UAAU,SACV0L,KAAM,GACNC,UAAW,GACXttB,OAAQmtB,EACRI,YAAa,WACbtT,OAAQ,CAACA,EAAQA,GACjBuT,iBAAkB,CAAC,EAAG,GACtBC,UAAQ,EACRC,oBAAkB,EAElBC,kBAAgB,EAChBC,kBAAkB,EAClBlB,eAAgBpqB,KAAKoqB,eACrBmB,aAAcvrB,KAAKuqB,iBACnBiB,WAAYxrB,KAAKuqB,kBAEhBI,EAAM/X,IAAI,SAAA/T,GAAA,IAAEkT,EAAFlT,EAAEkT,GAAIkT,EAANpmB,EAAMomB,gBAAiBzkB,EAAvB3B,EAAuB2B,SAAvB,OACPrB,EAAAC,EAAAC,cAACgoB,GAAD,CACI/jB,IAAKyO,EACLkT,gBAAiBA,GAAmB,WAEnCzkB,aA7FeC,IAAMC,eAAzBwpB,GACVvc,aAAyC,CAC5CgK,OAAQ,qUCnFhB,IACM8T,GAAO3tB,YADO,SAAAQ,KAAE2mB,gBAAF,IAAsBzmB,EAAtBS,OAAAC,EAAA,EAAAD,CAAAX,EAAA,4BAAmGa,EAAAC,EAAAC,cAAA,MAASb,IACnHV,CAAH4tB,KAMG,SAAA9sB,GAAA,IAAEH,EAAFG,EAAEH,MAAOwmB,EAATrmB,EAASqmB,gBAAT,OAA8BxmB,EAAMb,IAAIpB,QAAQmvB,gBAAgB1G,IAC5D,SAAApmB,GAAA,OAAAA,EAAEJ,MAAiBb,IAAIV,WAAW0uB,GAAGvnB,UACnC,SAAAtF,GAAA,OAAAA,EAAEN,MAAiBb,IAAIV,WAAW0uB,GAAGC,YACrC,SAAAtsB,GAAA,OAAAA,EAAEd,MAAiBb,IAAIV,WAAW0uB,GAAGE,aAiBnCC,8MACjBtiB,MAAe,CACXkhB,MAAO,CACH,CACI5Y,GAAI,IACJkT,gBAAiB,OACjBzkB,SAAUrB,EAAAC,EAAAC,cAACosB,GAAD,CAAMxG,gBAAiB,QAAvB,MAEd,CACIlT,GAAI,IACJkT,gBAAiB,OACjBzkB,SAAUrB,EAAAC,EAAAC,cAACosB,GAAD,CAAMxG,gBAAiB,QAAvB,sBAEd,CACIlT,GAAI,IACJkT,gBAAiB,OACjBzkB,SAAUrB,EAAAC,EAAAC,cAACosB,GAAD,CAAMxG,gBAAiB,QAAvB,iBAEN9lB,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQ4sB,YAAa,SAAC9oB,GAAD,OAAOA,EAAEC,mBAAmBc,QAAS,SAACf,GAAD,OAAO+oB,QAAQC,IAAI,iBAA7E,YAGR,CACIna,GAAI,IACJkT,gBAAiB,OACjBzkB,SAAUrB,EAAAC,EAAAC,cAACosB,GAAD,CAAMxG,gBAAiB,QAAvB,OAGlBvnB,OAAQ,CACJ,CACIqU,GAAI,IACJpJ,MAAO,aACP0G,OAAQ,EACR4Z,IAAK,EACLE,IAAK,EACLU,WAAW,EACXE,WAAW,GAEf,CACIhY,GAAI,IACJpJ,MAAO,aACP0G,OAAQ,EACR4Z,IAAK,EACLE,IAAK,EACLa,QAAQ,GAEZ,CACIjY,GAAI,IACJpJ,MAAO,aACP0G,OAAQ,EACR4Z,IAAK,EACLE,IAAK,EACLU,WAAW,GAEf,CACI9X,GAAI,IACJpJ,MAAO,OACP0G,OAAQ,EACR4Z,IAAK,EACLE,IAAK,EACLY,WAAW,EACXF,WAAW,IAGnBsC,UAAW,EACXC,SAAU,OACVC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,UAAW,EACXC,SAAU,EACVC,OAAQ,EACRC,OAAQ,KAGZC,UAAY,WAAM,IAAAC,EAaVzqB,EAAKqH,MAXMsI,EAFD8a,EAEVV,UACUlH,EAHA4H,EAGVT,SACcvC,EAJJgD,EAIVR,aACctC,EALJ8C,EAKVP,aACAC,EANUM,EAMVN,UACU5jB,EAPAkkB,EAOVJ,SACWpd,EARDwd,EAQVL,UACQvD,EATE4D,EASVH,OACQvD,EAVE0D,EAUVF,OACAhC,EAXUkC,EAWVlC,MACAjtB,EAZUmvB,EAYVnvB,OAGEovB,EAAUC,KAAKC,UAAU,CAACnD,YAAWE,YAAWC,OAAQuC,QAAY/a,EAAW,GAAGyb,QAAQ,iBAAkB,OAC5G9Y,EAAO,CACTpC,GAAIA,EAAG+T,WACPb,kBACAzkB,SAAUrB,EAAAC,EAAAC,cAACosB,GAAD,CAAMxG,gBAAiBA,GAAvB,GAAAjiB,OAA4C+O,EAA5C,MAAA/O,OAAmD8pB,EAAnD,OAGRI,EAAa,CACfnb,GAAIA,EAAG+T,WACPnd,MAAOwkB,OAAOxkB,GACd0G,OAAQ8d,OAAO9d,GACfwa,YACAE,YACAC,OAAQuC,EACRtD,MACAE,IAAKF,EAAMtgB,EAAQ,GAAKwgB,EAAM,EAAIA,GAGhCuD,EAASzD,EAAMtgB,EACrBvG,EAAKwH,SAAS,CACV+gB,MAAK,GAAA3nB,OAAA/D,OAAAmuB,GAAA,EAAAnuB,CAAM0rB,GAAN,CAAaxW,IAClBzW,OAAM,GAAAsF,OAAA/D,OAAAmuB,GAAA,EAAAnuB,CAAMvB,GAAN,CAAcwvB,IACpBf,UAAW/pB,EAAKqH,MAAM0iB,UAAY,EAClCO,OAAQA,GAAU,GAAK,EAAIA,EAC3BC,OAAmB,IAAXD,EAAevD,EAAM9Z,EAAS4Z,EAAMtgB,EAAQ,GAAKwgB,EAAM,EAAIA,OAI3EtH,aAAe,SAACve,GAAD,OAAsB,SAACsN,EAA4Cyc,GAC9E,IAAI9pB,EACJ,OAAOD,GACP,IAAK,YACL,IAAK,eACL,IAAK,eACDC,IAAU8pB,EACV,MACJ,IAAK,WACL,IAAK,YACD9pB,EAAQ4pB,OAAOvc,EAAM6H,OAAOlV,OAC5B,MACJ,QACIA,EAAQqN,EAAM6H,OAAOlV,MAGzBnB,EAAKwH,SAAL3K,OAAA6iB,GAAA,EAAA7iB,CAAA,GAAgBqE,EAAMC,8EAItB,OACIpE,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWpC,QAAQ,iBAAiBC,SAAS,sBAA7C,cACA1gB,EAAAC,EAAAC,cAAC4iB,GAAD,qDAAuD9iB,EAAAC,EAAAC,cAAC6kB,GAAD,CAAMne,KAAK,6CAA6C0S,OAAO,UAA/D,sBACvDtZ,EAAAC,EAAAC,cAAC6iB,GAAD,CAAWvd,MAAM,mBACbxF,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,SAASC,KAAK,SAASC,QAAQ,KAAKC,YAAY,iCAC/DliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,iBAAiBC,KAAK,uCAAuCC,QAAQ,GAAGC,YAAY,KAC5GliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,QAAQC,KAAK,aAAaC,QAAQ,GAAGC,YAAY,KACzEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,SAASC,KAAK,qBAAqBC,QAAQ,GAAGC,YAAY,MAEtFliB,EAAAC,EAAAC,cAAC6iB,GAAD,CAAWvd,MAAM,YACbxF,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,KAAKC,KAAK,SAASC,QAAQ,GAAGC,YAAY,oFAClEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,kBAAkBC,KAAK,SAASC,QAAQ,UAAUC,YAAY,oCAC7EliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,WAAWC,KAAK,kBAAkBC,QAAQ,GAAGC,YAAY,MAErFliB,EAAAC,EAAAC,cAAC6iB,GAAD,CAAWvd,MAAM,oBACbxF,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,KAAKC,KAAK,SAASC,QAAQ,GAAGC,YAAY,qDAClEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,MAAMC,KAAK,SAASC,QAAQ,GAAGC,YAAY,2CACnEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,MAAMC,KAAK,SAASC,QAAQ,GAAGC,YAAY,wCACnEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,QAAQC,KAAI,iIAAoIC,QAAQ,GAAGC,YAAY,+BAC/LliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,SAASC,KAAK,SAASC,QAAQ,GAAGC,YAAY,6BACtEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,YAAYC,KAAK,UAAUC,QAAQ,QAAQC,YAAY,sDACtEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,YAAYC,KAAK,UAAUC,QAAQ,QAAQC,YAAY,qCACtEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,SAASC,KAAK,UAAUC,QAAQ,QAAQC,YAAY,yFACnEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAI,iIAAoIC,QAAQ,GAAGC,YAAY,+BACzLliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,YAAYC,KAAK,SAASC,QAAQ,GAAGC,YAAY,6BAChEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAI,iIAAoIC,QAAQ,GAAGC,YAAY,+BACzLliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,YAAYC,KAAK,SAASC,QAAQ,GAAGC,YAAY,8BAEpEliB,EAAAC,EAAAC,cAAC4iB,GAAD,2JACuJ9iB,EAAAC,EAAAC,cAAA,WACnJF,EAAAC,EAAAC,cAAA,yDAEJF,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAACiuB,GAAD,CACI3C,MAAO3qB,KAAKyJ,MAAMkhB,MAClBjtB,OAAQsC,KAAKyJ,MAAM/L,SAEvByB,EAAAC,EAAAC,cAACkuB,GAAAnuB,EAAD,CAAkBsE,MAAM,SAAS8pB,QAASruB,EAAAC,EAAAC,cAACouB,GAAAruB,EAAD,CAAQiuB,QAASrtB,KAAKyJ,MAAM8iB,UAAW/T,SAAUxY,KAAK6hB,aAAa,iBAC7G1iB,EAAAC,EAAAC,cAACkuB,GAAAnuB,EAAD,CAAkBsE,MAAM,YAAY8pB,QAASruB,EAAAC,EAAAC,cAACouB,GAAAruB,EAAD,CAAQiuB,QAASrtB,KAAKyJ,MAAM6iB,aAAc9T,SAAUxY,KAAK6hB,aAAa,oBACnH1iB,EAAAC,EAAAC,cAACkuB,GAAAnuB,EAAD,CAAkBsE,MAAM,YAAY8pB,QAASruB,EAAAC,EAAAC,cAACouB,GAAAruB,EAAD,CAAQiuB,QAASrtB,KAAKyJ,MAAM4iB,aAAc7T,SAAUxY,KAAK6hB,aAAa,oBACnH1iB,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CAAWsE,MAAM,QAAQH,MAAOvD,KAAKyJ,MAAMgjB,SAAUjU,SAAUxY,KAAK6hB,aAAa,YAAaV,KAAK,SAASuM,WAAY,CAACna,IAAK,GAAIqV,IAAK,KACvIzpB,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CAAWsE,MAAM,SAASH,MAAOvD,KAAKyJ,MAAM+iB,UAAWhU,SAAUxY,KAAK6hB,aAAa,aAAcV,KAAK,SAASuM,WAAY,CAACna,IAAK,EAAGqV,IAAK,KACzIzpB,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CAAWsE,MAAM,kBAAkBH,MAAOvD,KAAKyJ,MAAM2iB,SAAU5T,SAAUxY,KAAK6hB,aAAa,cAC3F1iB,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQ6E,QAASjE,KAAK4sB,UAAW5tB,MAAM,UAAUe,QAAQ,aAAzD,qBArLwBU,IAAMC,eClC7BitB,oLAEb,OACIxuB,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,YAAYD,QAAQ,iBAAxC,aACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,4DACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAK,mDAAmDC,QAAQ,GAAGC,YAAY,+CAE7GliB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAACuuB,GAAD,KACK,SAAC7d,GAAD,OACG5Q,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACKmP,EACK5Q,EAAAC,EAAAC,cAAA,OAAKiE,IAAI,IAAIhD,MAAO,CAAC2kB,gBAAiB,UAAWxF,QAAS,GAAIzgB,MAAO,OAAQ6uB,OAAQ,YAArF,uBACA1uB,EAAAC,EAAAC,cAAA,OAAKiE,IAAI,IAAIhD,MAAO,CAACmf,QAAS,GAAIpQ,OAAQ,SAA1C,wCAfK5O,IAAMC,oCCC5BotB,oLAEb,OACI3uB,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,YAAYD,QAAQ,aAAxC,SACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,6GACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,aAAaC,KAAK,qCAAqCC,QAAQ,GAAGC,YAAY,uDAC7FliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,UAAUC,KAAK,oBAAoBC,QAAQ,OAAOC,YAAY,qBAC7EliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,OAAOC,KAAK,qBAAqBC,QAAQ,QAAQC,YAAY,uBAC5EliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAK,gBAAgBC,QAAQ,GAAGC,YAAY,iCAE1EliB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAACqV,GAAD,CAAOhH,WAAW,wBACdvO,EAAAC,EAAAC,cAAC0uB,GAAA3uB,EAAD,gBAdeqB,IAAMC,8ECGxBstB,oLAGb,OACI7uB,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,YAAYD,QAAQ,cAAxC,UACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,4IACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAK,kEAAkEC,QAAQ,GAAGC,YAAY,8CACxHliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,QAAQC,KAAK,oBAAoBC,QAAQ,GAAGC,YAAY,+CACvEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,SAASC,KAAK,oBAAoBC,QAAQ,GAAGC,YAAY,8DAE5EliB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAAC4uB,GAAD,CAAQzrB,OAAQA,GACX,SAAC6a,EAAOD,EAAME,GAAd,OACGne,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACIzB,EAAAC,EAAAC,cAAC6uB,GAAA9uB,EAAD,CAAS+uB,WAAY9Q,GACjBle,EAAAC,EAAAC,cAAC+uB,GAAAhvB,EAAD,CAAMkE,IAAI,UACNnE,EAAAC,EAAAC,cAACgvB,GAAAjvB,EAAD,gBAEJD,EAAAC,EAAAC,cAAC+uB,GAAAhvB,EAAD,CAAMkE,IAAI,UACNnE,EAAAC,EAAAC,cAACgvB,GAAAjvB,EAAD,gBAEJD,EAAAC,EAAAC,cAAC+uB,GAAAhvB,EAAD,CAAMkE,IAAI,UACNnE,EAAAC,EAAAC,cAACgvB,GAAAjvB,EAAD,iBAGRD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQ6E,QAASqZ,EAAMf,SAAUc,GAAS,GAA1C,QACAle,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQ6E,QAASmZ,EAAMb,SAAUc,GA3B9C,GA2Ba,QACCA,GA5Bd,GA4BiC,oCA9BhB5c,IAAMC,eCJzB4tB,oLAEb,OACInvB,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,iBAAiBD,QAAQ,kBAA7C,cACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,8GACA9iB,EAAAC,EAAAC,cAAC+iB,GAAD,gFAEIjjB,EAAAC,EAAAC,cAAC6N,GAAD,KACK,SAACjE,GACE,OACI9J,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACAzB,EAAAC,EAAAC,cAAA,sBAAc4J,EAAWhJ,OAAO6lB,YAChC3mB,EAAAC,EAAAC,cAAA,sBAAc4J,EAAWT,OAAOsd,YAChC3mB,EAAAC,EAAAC,cAAA,uBAAe4J,EAAWR,QAAQqd,wBAdtBrlB,IAAMC,oCCgB7B6tB,8MACjB9kB,MAAQ,CACJ6C,SAAU,KACVd,SAAU,CACNgjB,QAAS,4DACThjB,SAAU,CACNuG,GAAI,wCAER0c,OAAQ,CACJ1c,GAAI,kBACJmP,KAAM,qCAEVwN,KAAM,CACF3c,GAAI,QAERtG,QAAS,CACLsG,GAAI,uCACJnG,UAAW,OACXC,SAAU,aACVC,WAAY,iBACZ6iB,QAAS,QACTrP,SAAU,KACVsP,SAAU,oBACVC,QAAS,KACTC,QAAS,gCACTC,SAAU,gCACVC,OAAQ,OACRC,UAAW,aACXjM,SAAU,aACVkM,oBAAqB,iCACrBC,WAAY,SACZzjB,MAAO,CAACC,KAAM,o1TAElByjB,OAAQ,CACJP,QAAS,KACTF,QAAS,QACTrP,SAAU,KACV+P,eAAgB,WAChBT,SAAU,yBAKtBU,YAAc,SAAA1e,GACVxO,EAAKwH,SAAS,CACV0C,SAAUsE,EAAM2e,mBAIxBlkB,UAAY,WACR4gB,QAAQC,IAAI,eAGhBxF,SAAW,WACPuF,QAAQC,IAAI,cAGhBsD,SAAW,WACPvD,QAAQC,IAAI,mBAGhB/rB,QAAU,WACNiC,EAAKwH,SAAS,CACV0C,SAAU,UAIlBmjB,UAAY,WACRxD,QAAQC,IAAI,gBAEhBwD,WAAa,WACTzD,QAAQC,IAAI,iBAEhByD,WAAa,WACT1D,QAAQC,IAAI,iBAGhB0D,OAAS,WACL3D,QAAQC,IAAI,oFAGR,IAAA5e,EAAAtN,KACGsM,EAAYtM,KAAKyJ,MAAjB6C,SACD/N,EAAOsxB,QAAQvjB,GACrB,OACInN,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWpC,QAAQ,kBAAkBC,SAAS,uBAA9C,gBACA1gB,EAAAC,EAAAC,cAAC4iB,GAAD,gBACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,OAAOC,KAAK,UAAUC,QAAQ,GAAGC,YAAY,KAC5DliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,UAAUC,KAAK,WAAWC,QAAQ,GAAGC,YAAY,KAChEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,YAAYC,KAAK,WAAWC,QAAQ,GAAGC,YAAY,KAClEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,cAAcC,KAAK,SAASE,YAAY,6BACvDliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAK,cAAcC,QAAQ,GAAGC,YAAY,kCACpEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,WAAWC,KAAK,kBAAkBC,QAAQ,GAAGC,YAAY,iDAE5EliB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CACI0wB,YAAWvxB,EAAO,qBAAkBiT,EACpCue,gBAAc,OACdhwB,QAAQ,YACRkE,QAASjE,KAAKsvB,aAJlB,gBAQAnwB,EAAAC,EAAAC,cAAC2wB,GAAD,CAAaxkB,SAAUxL,KAAKyJ,MAAM+B,SAAUW,YAAY,WAAW5N,KAAMA,EAAM4B,QAASH,KAAKG,QAASkL,UAAWrL,KAAKqL,UAAWiB,SAAUA,GACvInN,EAAAC,EAAAC,cAAC6N,GAAD,KACK,SAAA5O,GAAA,IAAE2B,EAAF3B,EAAE2B,OAAF,OACGd,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAM4F,OAAQ/E,GACVd,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAU8E,QAAM,EAACD,QAASqJ,EAAKmiB,WAC3BtwB,EAAAC,EAAAC,cAAC8S,EAAA/S,EAAD,CAAc6wB,OAAK,EAACxzB,QAAQ,aAEhC0C,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAU8E,QAAM,EAACD,QAASqJ,EAAKqiB,YAC3BxwB,EAAAC,EAAAC,cAAC8S,EAAA/S,EAAD,CAAc6wB,OAAK,EAACxzB,QAAQ,qBAEhC0C,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAU8E,QAAM,EAACF,SAAO,EAACC,QAASqJ,EAAKoiB,YACnCvwB,EAAAC,EAAAC,cAACqF,GAAAtF,EAAD,CAASuF,MAAM,oBACXxF,EAAAC,EAAAC,cAAC6wB,EAAA9wB,EAAD,KACID,EAAAC,EAAAC,cAAC8wB,GAAA/wB,EAAD,CAAciF,SAAS,YAG/BlF,EAAAC,EAAAC,cAAC8S,EAAA/S,EAAD,CAAc6wB,OAAK,EAACxzB,QAAQ,cAE/BwD,GAAUd,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAU4E,SAAO,EAACE,QAAM,GAC/B/E,EAAAC,EAAAC,cAACqF,GAAAtF,EAAD,CAASuF,MAAM,iBACXxF,EAAAC,EAAAC,cAAC6wB,EAAA9wB,EAAD,CAAc6E,QAASqJ,EAAKoZ,UACxBvnB,EAAAC,EAAAC,cAAC+wB,GAAAhxB,EAAD,QAGRD,EAAAC,EAAAC,cAAC8S,EAAA/S,EAAD,CAAc6E,QAASqJ,EAAKkiB,SAAUS,OAAK,EAACxzB,QAAS6Q,EAAK7D,MAAM+B,SAASijB,OAAOvN,KAAM9jB,UAAU,iBAEpG+B,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAU8E,QAAM,EAACF,SAAO,EAACC,QAASqJ,EAAKsiB,QACnCzwB,EAAAC,EAAAC,cAACqF,GAAAtF,EAAD,CAASuF,MAAM,WACXxF,EAAAC,EAAAC,cAAC6wB,EAAA9wB,EAAD,KACID,EAAAC,EAAAC,cAACgxB,GAAAjxB,EAAD,CAAUiF,SAAS,YAG3BlF,EAAAC,EAAAC,cAAC8S,EAAA/S,EAAD,CAAc3C,QAAQ,uBAzIjBgE,IAAMC,2KCA9B4vB,eACjB,SAAAA,EAAY9xB,GAAM,IAAA4D,EAAA,OAAAnD,OAAAoD,EAAA,EAAApD,CAAAe,KAAAswB,IACdluB,EAAAnD,OAAA2D,EAAA,EAAA3D,CAAAe,KAAAf,OAAA4D,EAAA,EAAA5D,CAAAqxB,GAAAxtB,KAAA9C,KAAMxB,KASV+xB,sBAAwB,WACpB,IAAIjtB,EAAM,EACJktB,EAAY,EAAoB,EAAhBvf,KAAKwf,SACrBC,EAAW,SAAClwB,EAA4ByR,GAC1C,IAAIjB,EAAO,IAAIK,KACfL,EAAK2f,SAAS3f,EAAK4f,WAAmB,GAANttB,EAAW2N,KAAKwf,UAChD,IAAM7gB,EAAOtM,GAAOktB,EACdK,EAAOvtB,GAAO,EACdyO,EAAE,GAAA/O,OAAM4M,EAAO,IAAM,IAAnB,KAAA5M,OAA0BM,KAClC,MAAO,CACHsM,OACAihB,KAAMA,EACN9e,KACAf,OACAxQ,WACAyR,SACAhO,QAAS,kBAAMgoB,QAAQC,IAAI,uBAAwBna,IACnDS,iBAAkBpQ,EAAK0uB,OAAO/e,GAC9BW,oBAAqB,eACrBD,sBAAuB,mBAG/B,MAAO,CACHie,EAASvxB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,sBAA0BD,EAAAC,EAAAC,cAAA,0BAAkCF,EAAAC,EAAAC,cAAC0xB,GAAA3xB,EAAD,CAAQkB,MAAO,CAAC2kB,gBAAiB,YAAY9lB,EAAAC,EAAAC,cAAC2xB,GAAA5xB,EAAD,QAClHsxB,EAASvxB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,KAAYD,EAAAC,EAAAC,cAAA,uBAAZ,wBAAgEF,EAAAC,EAAAC,cAAC0xB,GAAA3xB,EAAD,CAAQkB,MAAO,CAAC2kB,gBAAiB,UAAU9lB,EAAAC,EAAAC,cAAC4xB,GAAA7xB,EAAD,QACpHsxB,EAASvxB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,kBAAsBD,EAAAC,EAAAC,cAAA,+BAAtB,mBAAmEF,EAAAC,EAAAC,cAAA,mCAAwCF,EAAAC,EAAAC,cAAC0xB,GAAA3xB,EAAD,CAAQkB,MAAO,CAAC2kB,gBAAiB,SAAS9lB,EAAAC,EAAAC,cAAC6xB,GAAA9xB,EAAD,QAC9JsxB,EAASvxB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,+CAAiED,EAAAC,EAAAC,cAAC0xB,GAAA3xB,EAAD,YAC1EsxB,EAASvxB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,4BAAgCD,EAAAC,EAAAC,cAAA,oCAAyCF,EAAAC,EAAAC,cAAC0xB,GAAA3xB,EAAD,CAAQkB,MAAO,CAAC2kB,gBAAiB,WAAW9lB,EAAAC,EAAAC,cAAC8xB,GAAA/xB,EAAD,QAC9HsxB,EAASvxB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,KAAYD,EAAAC,EAAAC,cAAA,iBAAZ,wBAA4CF,EAAAC,EAAAC,cAAA,yBAAiCF,EAAAC,EAAAC,cAAC0xB,GAAA3xB,EAAD,CAAQkB,MAAO,CAAC2kB,gBAAiB,WAAW9lB,EAAAC,EAAAC,cAAC8xB,GAAA/xB,EAAD,QAClIsxB,EAASvxB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,8CAAkDD,EAAAC,EAAAC,cAAA,wBAC3DqxB,EAASvxB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,sDAAwED,EAAAC,EAAAC,cAAC0xB,GAAA3xB,EAAD,KAAQD,EAAAC,EAAAC,cAAC+xB,GAAAhyB,EAAD,QACzFsxB,EAASvxB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,oCAAsDD,EAAAC,EAAAC,cAAC0xB,GAAA3xB,EAAD,aAC/DsxB,EAASvxB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,kBAAsBD,EAAAC,EAAAC,cAAA,iCAAtB,mBAAiEF,EAAAC,EAAAC,cAAA,kBAA0BF,EAAAC,EAAAC,cAAC0xB,GAAA3xB,EAAD,CAAQkB,MAAO,CAAC2kB,gBAAiB,SAAS9lB,EAAAC,EAAAC,cAAC6xB,GAAA9xB,EAAD,QAC9IsxB,EAASvxB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,2CAA6DD,EAAAC,EAAAC,cAAC0xB,GAAA3xB,EAAD,YACtEsxB,EAASvxB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,KAAYD,EAAAC,EAAAC,cAAA,0BAAZ,wBAAqDF,EAAAC,EAAAC,cAAA,wBAAgCF,EAAAC,EAAAC,cAAC0xB,GAAA3xB,EAAD,CAAQkB,MAAO,CAAC2kB,gBAAiB,WAAW9lB,EAAAC,EAAAC,cAAC8xB,GAAA/xB,EAAD,QAC1IsxB,EAASvxB,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,6BAAiCD,EAAAC,EAAAC,cAAA,mCAAjC,uBA7CC+C,EAuDlB8Q,OAAS,WACL9Q,EAAKwH,SAAS,CAAC6K,SAAS,EAAMlW,MAAM,IACpCgP,WAAW,kBAAMnL,EAAKwH,SAAS,CAAC6K,SAAS,GAAQrS,EAAKivB,SAAS,MAzDjDjvB,EA4DlBivB,OAAS,WACDjvB,EAAKqH,MAAMlL,MAIf6D,EAAKwH,SAAS,SAAAH,GAAK,MAAK,CACpB6nB,cAAe7nB,EAAM6nB,cAAc1e,IAAI,SAAA2e,GAAC,OAAAtyB,OAAAuyB,GAAA,EAAAvyB,CAAA,GAASsyB,EAAT,CAAYV,MAAM,UAlEhDzuB,EAsElBjC,QAAU,WACNiC,EAAKwH,SAAS,CAACrL,MAAM,KAvEP6D,EA0ElB0uB,OAAS,SAAC/e,GAAD,OAAgB,kBAAM3P,EAAKwH,SAAS,SAAAH,GAAK,MAAK,CACnD6nB,cAAe7nB,EAAM6nB,cAAc1e,IAAI,SAAA2e,GAAC,OAAIA,EAAExf,KAAOA,EAAT9S,OAAAuyB,GAAA,EAAAvyB,CAAA,GAAkBsyB,EAAlB,CAAqB3hB,MAAO2hB,EAAE3hB,OAAQ2hB,SA3EpEnvB,EA8ElBiS,UAAY,WACRjS,EAAKwH,SAAS,SAAAH,GAAK,MAAK,CACpB6nB,cAAe7nB,EAAM6nB,cAAc1e,IAAI,SAAA2e,GAAC,OAAAtyB,OAAAuyB,GAAA,EAAAvyB,CAAA,GAASsyB,EAAT,CAAY3hB,MAAM,UAhFhDxN,EAoFlByS,WApFkB5V,OAAAwyB,GAAA,EAAAxyB,CAAAyyB,GAAAtyB,EAAAuyB,KAoFL,SAAAC,IAAA,OAAAF,GAAAtyB,EAAA8U,KAAA,SAAA2d,GAAA,cAAAA,EAAAvU,KAAAuU,EAAAzU,MAAA,OACThb,EAAKwH,SAAS,CAAC6K,SAAS,IACxBlH,WAAW,kBAAMnL,EAAKwH,SAAS,CAAC6K,SAAS,GAAQrS,EAAKivB,SAAS,KAFtD,wBAAAQ,EAAAC,SAAAF,MApFKxvB,EAyFlB2vB,MAAQ,WACJ3vB,EAAKwH,SAAS,CAAC0nB,cAAelvB,EAAKmuB,2BAvFnCnuB,EAAKqH,MAAQ,CACTlL,MAAM,EACN+yB,cAAelvB,EAAKmuB,wBACpB9b,SAAS,GANCrS,qFAkDd,OAAOpC,KAAKyJ,MAAM6nB,cACbU,KAAK,SAAC5yB,EAAG6yB,GAAJ,OAAUA,EAAEjhB,KAAKI,UAAYhS,EAAE4R,KAAKI,YACzCwB,IAAI,SAAA2e,GAAC,OAAIpyB,EAAAC,EAAAC,cAAC6yB,GAADjzB,OAAAyH,OAAA,CAAkBpD,IAAKiuB,EAAExf,IAAQwf,uCA0C/C,OACIpyB,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,CAAWnC,SAAS,iBAAiBD,QAAQ,cAA7C,UACAzgB,EAAAC,EAAAC,cAAC4iB,GAAD,kEACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,CAAWvd,MAAM,YACbxF,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,QAAQC,KAAK,SAASC,QAAQ,GAAGC,YAAY,mCACrEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,UAAUC,KAAK,UAAUC,QAAQ,QAAQC,YAAY,gCACpEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,OAAOC,KAAK,UAAUC,QAAQ,GAAGC,YAAY,2CACrEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,oBAAoBC,KAAK,GAAGC,QAAQ,GAAGC,YAAY,oDAC3EliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,SAASC,KAAK,aAAaC,QAAQ,GAAGC,YAAY,gGAC1EliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,YAAYC,KAAK,aAAaC,QAAQ,GAAGC,YAAY,mEAC7EliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,aAAaC,KAAK,sBAAsBC,QAAQ,GAAGC,YAAY,wEACvFliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,UAAUC,KAAK,aAAaC,QAAQ,GAAGC,YAAY,uFAC3EliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,YAAYC,KAAK,eAAeC,QAAQ,GAAGC,YAAY,yCACtEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,WAAWC,KAAK,kBAAkBC,QAAQ,GAAGC,YAAY,kFAErFliB,EAAAC,EAAAC,cAAC6iB,GAAD,CAAWvd,MAAM,oBACbxF,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,KAAKC,KAAK,SAASE,YAAY,0CACvDliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,OAAOC,KAAK,OAAOE,YAAY,2CACvDliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,OAAOC,KAAK,UAAUC,QAAQ,QAAQC,YAAY,4DACjEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,OAAOC,KAAK,UAAUC,QAAQ,QAAQC,YAAY,uDACjEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,UAAUC,KAAK,aAAaE,YAAY,2DAChEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,mBAAmBC,KAAK,aAAaE,YAAY,kEACzEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,sBAAsBC,KAAK,SAASE,YAAY,wEACxEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,wBAAwBC,KAAK,SAASE,YAAY,oEAC1EliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,SAASC,KAAK,qBAAqBE,YAAY,yDAC9DliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,UAAUC,KAAK,wCAAwCE,YAAY,iGAClFliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,WAAWC,KAAK,mBAAmBE,YAAY,mCAE3EliB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAAC8yB,GAAD,CACI5zB,KAAMyB,KAAKyJ,MAAMlL,KACjB+V,kBAAkB,mBAClBlB,MAAOpT,KAAKyJ,MAAM6nB,cAAcpV,OAAO,SAAAqV,GAAC,OAAKA,EAAEV,OAAMruB,OACrD0Q,OAAQlT,KAAKkT,OACb/S,QAASH,KAAKG,QACd0U,WAAY7U,KAAK6U,WACjBR,UAAWrU,KAAKqU,UAChBI,QAASzU,KAAKyJ,MAAMgL,SAEnBzU,KAAKoyB,uBAEVjzB,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQ6E,QAASjE,KAAK+xB,OAAtB,kBAzIoBtxB,IAAMC,eCTxC2xB,GAAY,WAEd,IAF+C,IAAhCC,EAAgC/vB,UAAAC,OAAA,QAAAgP,IAAAjP,UAAA,GAAAA,UAAA,GAAnB,EAAG6Q,EAAgB7Q,UAAAC,OAAA,QAAAgP,IAAAjP,UAAA,GAAAA,UAAA,GAAR,IACjCooB,EAAuB,GACrB9X,EAAIyf,EAAYzf,EAAIyf,EAAalf,EAAOP,IAC5C8X,EAAM9H,KAAK1jB,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAUkE,IAAKuP,EAAG7O,SAAO,GAAE6O,IAE1C,OAAO8X,GAGU4H,8MACjB9oB,MAAe,CACXkhB,MAAO0H,QAGXtjB,wCAAmB,SAAA6iB,IAAA,OAAAF,GAAAtyB,EAAA8U,KAAA,SAAA2d,GAAA,cAAAA,EAAAvU,KAAAuU,EAAAzU,MAAA,OACfhb,EAAKwH,SAAS,SAAAH,GAAK,MAAK,CAACkhB,MAAK,GAAA3nB,OAAA/D,OAAAmuB,GAAA,EAAAnuB,CAAMwK,EAAMkhB,OAAZ1rB,OAAAmuB,GAAA,EAAAnuB,CAAsBozB,GAAU5oB,EAAMkhB,MAAMnoB,aAD3D,wBAAAqvB,EAAAC,SAAAF,8EAKf,OACIzyB,EAAAC,EAAAC,cAAC0iB,GAAD,KACI5iB,EAAAC,EAAAC,cAAC2iB,GAAD,uBACA7iB,EAAAC,EAAAC,cAAC4iB,GAAD,iFACA9iB,EAAAC,EAAAC,cAAC6iB,GAAD,KACI/iB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,YAAYC,KAAK,kBAAkBC,QAAQ,MAAMC,YAAY,yHAC5EliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,SAASC,KAAK,kBAAkBC,QAAQ,aAAaC,YAAY,uCAChFliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,mBAAmBC,KAAK,aAAaE,YAAY,2DAChEliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUjB,KAAK,aAAaC,KAAK,aAAaE,YAAY,yDAC1DliB,EAAAC,EAAAC,cAAC8iB,GAAD,CAAUlB,UAAQ,EAACC,KAAK,WAAWC,KAAK,qBAE5ChiB,EAAAC,EAAAC,cAAC+iB,GAAD,KACIjjB,EAAAC,EAAAC,cAACuV,GAAD,CACIvF,OAAQ,IACRR,UAAW,GACXE,iBAAkB/O,KAAK+O,kBAEvB5P,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,KACKY,KAAKyJ,MAAMkhB,iBA5BQlqB,IAAMC,eC4BhD8xB,GAAa,CACfC,KAAM,CACF/uB,MAAO,kBACPD,SAAU,sBACVG,KAAM8uB,KACN9qB,UAAW6W,IAEfkU,WAAY,CACRjvB,MAAO,aACPD,SAAU,kBACVG,KAAMgvB,KACNhrB,UAAW6b,IAEfoP,WAAY,CACRnvB,MAAO,aACPD,SAAU,iBACVG,KAAMkvB,KACNnI,MAAO,CACHoI,MAAO,CACHrvB,MAAO,QACPkE,UAAWof,GACXnhB,UAAW,MACXC,UAAW,WAEfjJ,MAAO,CACH6G,MAAO,QACPkE,UAAWwd,IAEf4N,UAAW,CACPtvB,MAAO,YACPkE,UAAWod,IAEfiO,mBAAoB,CAChBvvB,MAAO,+BACPkE,UAAWme,GACXlgB,UAAW,MACXC,UAAW,WAEfotB,WAAY,CACRxvB,MAAO,aACPkE,UAAWye,IAEf8M,YAAa,CACTzvB,MAAO,cACPkE,UAAW8d,IAEf0N,gBAAiB,CACb1vB,MAAO,kBACPkE,UAAW+d,IAEf0N,SAAU,CACN3vB,MAAO,WACPkE,UAAWkd,MAIvBxkB,MAAO,CACHoD,MAAO,QACPD,SAAU,eACVG,KAAM0vB,KACN3I,MAAO,CACHjtB,OAAQ,CACJgG,MAAO,SACPkE,UAAW,kBAAMzI,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,WAAT,+BAErBtD,KAAM,CACF2H,MAAO,OACPkE,UAAW,kBAAMzI,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,WAAT,0BAErBk0B,OAAQ,CACJ7vB,MAAO,SACPkE,UAAW0oB,GACXzqB,UAAW,MACXC,UAAW,QAEf0tB,YAAa,CACT9vB,MAAO,cACPkE,UAAW2mB,IAEf9vB,MAAO,CACHiF,MAAO,QACPkE,UAAWgd,IAEf6O,OAAQ,CACJ/vB,MAAO,SACPkE,UAAW,kBAAMzI,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,WAAT,wBAI7Bq0B,MAAO,CACHhwB,MAAO,QACPD,SAAU,UACVG,KAAM+vB,KACNhJ,MAAO,CACHiJ,MAAO,CACHlwB,MAAO,QACPkE,UAAWkmB,IAEf+F,UAAW,CACPnwB,MAAO,YACPkE,UAAW+lB,IAEfmG,eAAgB,CACZpwB,MAAO,iBACPkE,UAAW2qB,IAEfwB,OAAQ,CACJrwB,MAAO,SACPkE,UAAWomB,IAEfgG,WAAY,CACRtwB,MAAO,aACPkE,UAAW0mB,MAIvB2F,MAAO,CACHvwB,MAAO,QACPD,SAAU,WACVmE,UAAW6Z,GACX7d,KAAMswB,KACNruB,UAAW,MACXC,UAAW,QAEfquB,KAAM,CACFzwB,MAAO,OACPD,SAAU,oBACVG,KAAMwwB,KACNC,cAAc,EACd1J,MAAO,CACH2J,WAAY,CACR5wB,MAAO,aACPkE,UAAWmkB,IAEfwH,OAAQ,CACJ7vB,MAAO,SACPkE,UAAW0oB,OAMrB9kB,GAAW,CACbgjB,QAAS,4DACThjB,SAAU,CACNuG,GAAI,wCAER0c,OAAQ,CACJ1c,GAAI,kBACJmP,KAAM,gCAEVwN,KAAM,CACF3c,GAAI,QAERtG,QAAS,CACLsG,GAAI,uCACJnG,UAAW,OACXC,SAAU,aACVC,WAAY,iBACZ6iB,QAAS,QACTrP,SAAU,KACVsP,SAAU,oBACVC,QAAS,KACTC,QAAS,gCACTC,SAAU,gCACVC,OAAQ,OACRC,UAAW,aACXjM,SAAU,aACVkM,oBAAqB,iCACrBC,WAAY,SACZzjB,MAAO,CAACC,KAAM,o1TAElByjB,OAAQ,CACJP,QAAS,KACTF,QAAS,QACTrP,SAAU,KACV+P,eAAgB,WAChBT,SAAU,sBASGplB,8MACjB+qB,cAA2C,OAS3C9qB,MAAqB,CACjBuZ,SAAUT,GAAQS,SAClBwR,mBAAoB,MAGxBC,aAAe,SAACzR,GACZ5gB,EAAKwH,SAAS,CAACoZ,gBAGnB0R,YAAc,WAAM,IACEC,EAAavyB,EAAKqH,MAA7BuZ,SAAW2R,SADFC,EAEHD,EAASjY,MAAMiY,EAAStY,QAAQ,KAAO,GACzBI,MAAM,KAHjBoY,EAAA51B,OAAAuR,GAAA,EAAAvR,CAAA21B,EAAA,GAKhB,MAAO,CAACE,MALQD,EAAA,IAKQ,OAAQ1gB,KALhB0gB,EAAA,OAapBE,sBAAwB,SAAC7T,GACrB9e,EAAKwH,SAAS,SAAAH,GAAK,MAAK,CACpB+qB,mBAAmBv1B,OAAAuyB,GAAA,EAAAvyB,CAAA,GACZwK,EAAM+qB,mBADKv1B,OAAA6iB,GAAA,EAAA7iB,CAAA,GAEbiiB,GAAQzX,EAAM+qB,mBAAmBtT,4FAjC1ClhB,KAAKg1B,iBACLh1B,KAAKu0B,cAAgBhS,GAAQ0S,OAAOj1B,KAAKy0B,6DAGzCz0B,KAAKu0B,eAAiBv0B,KAAKu0B,yDAoBf,IACLO,EAAS90B,KAAK00B,cAAdI,MACP90B,KAAK+0B,sBAAsBD,oCAYvB,IAAAxnB,EAAAtN,KACEoK,EACFjL,EAAAC,EAAAC,cAAC61B,EAAOv0B,YAAR,KACK1B,OAAO6b,KAAK0X,IAAY5f,IAAI,SAAAuiB,GACzB,IAAML,EAAQtC,GAAW2C,GACzB,OAAGL,EAAMltB,UAEDzI,EAAAC,EAAAC,cAAC61B,EAAOxvB,aAAR,CACIpC,IAAKwxB,EAAMpxB,MACXA,MAAOoxB,EAAMpxB,MACb0B,SAAUkI,EAAKonB,cAAcI,QAAUK,EACvCvxB,KAAMkxB,EAAMlxB,KACZH,SAAUqxB,EAAMrxB,SAChBoC,UAAYivB,EAAMjvB,UAClBC,UAAYgvB,EAAMhvB,UAClBC,KAAM,SAAC+mB,GACH,OACI3tB,EAAAC,EAAAC,cAAC6kB,GAAD,CAAMtB,GAAE,IAAA5f,OAAMmyB,GAAa7xB,IAAK6xB,GAC3BrI,MASrB3tB,EAAAC,EAAAC,cAAC61B,EAAOjzB,UAAR,CACIZ,WAAYiM,EAAK7D,MAAM+qB,mBAAmBW,GAC1C7xB,IAAKwxB,EAAMpxB,MACXA,MAAOoxB,EAAMpxB,MACbE,KAAMkxB,EAAMlxB,KACZH,SAAUqxB,EAAMrxB,SAChBR,iBAAkB,kBAAMqK,EAAKynB,sBAAsBI,KAElDl2B,OAAO6b,KAAKga,EAAMnK,OAAOqH,KAAK,SAAC5yB,EAAG6yB,GAAJ,OAAU7yB,EAAI6yB,EAAI,GAAK,IAAGrf,IAAI,SAAAwiB,GACzD,IAAMjhB,EAAO2gB,EAAMnK,MAAMyK,GACnBhwB,EAAWkI,EAAKonB,cACtB,OACIv1B,EAAAC,EAAAC,cAAC61B,EAAO7uB,SAAR,CACI/C,IAAK6Q,EAAKzQ,MACVA,MAAOyQ,EAAKzQ,MACZ0B,SAAUA,EAAS+O,OAASihB,GAAYhwB,EAAS0vB,QAAUK,EAC3DvxB,KAAMuQ,EAAKvQ,KACXiC,UAAYsO,EAAKtO,UACjBC,UAAYqO,EAAKrO,UACjBC,KAAM,SAAC+mB,GACH,OACI3tB,EAAAC,EAAAC,cAAC6kB,GAAD,CAAMtB,GAAE,IAAA5f,OAAMmyB,EAAN,KAAAnyB,OAAmBoyB,GAAY9xB,IAAK8xB,EAAU3tB,UAAW,SAC5DqlB,YAYvC5iB,EACF/K,EAAAC,EAAAC,cAAC61B,EAAOhtB,eAAR,KACI/I,EAAAC,EAAAC,cAAC6N,GAAD,KACK,SAAA5O,GAAA,OAAAA,EAAE2B,OAEO,KACAd,EAAAC,EAAAC,cAACg2B,GAAD,CAAgBC,WAAY9pB,GAASijB,OAAOvN,SAG1D/hB,EAAAC,EAAAC,cAAA,OAAKiB,MAAO,CAACmf,QAAS,YAAYtgB,EAAAC,EAAAC,cAACk2B,GAAD,OAClCp2B,EAAAC,EAAAC,cAAA,OAAKiB,MAAO,CAACmf,QAAS,YAAYtgB,EAAAC,EAAAC,cAACygB,GAAD,OAClC3gB,EAAAC,EAAAC,cAACm2B,GAAD,OAIFpwB,EAAWpF,KAAK00B,cAChBI,EAAQtC,GAAWptB,EAAS0vB,OAE9BhI,EAA2B,YAC/B,GAAGgI,EAAMltB,UAAU,CACf,IAAM6tB,EAAOX,EAAMltB,UACnBklB,EAAU3tB,EAAAC,EAAAC,cAACo2B,EAAD,WACR,GAAGX,EAAMnK,OAASmK,EAAMnK,MAAMvlB,EAAS+O,MAAM,CAC/C,IAAMshB,EAAOX,EAAMnK,MAAMvlB,EAAS+O,MAAMvM,UACxCklB,EAAU3tB,EAAAC,EAAAC,cAACq2B,EAAD,MAGd,OACIv2B,EAAAC,EAAAC,cAAC61B,EAAO1rB,OAAR,CACIY,YAAaA,EACbF,eAAgBA,EAChBF,SAAS,mBAER8iB,UAvImBrsB,IAAMC,eA6IpCi1B,8MACFlsB,MAAQ,CACJlL,MAAM,EACN+N,SAAU,QAGd4G,OAAS,SAAChQ,GAAD,OAAOyY,EAAK/R,SAAS,CAACrL,MAAM,EAAM+N,SAAUpJ,EAAEqsB,mBACvDpvB,QAAU,kBAAMwb,EAAK/R,SAAS,CAACrL,MAAM,EAAO+N,SAAU,gFASlD,OACInN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACIzB,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQ6E,QAASjE,KAAKkT,QAASlT,KAAKxB,MAAM82B,YAC1Cn2B,EAAAC,EAAAC,cAACsnB,GAAD,CACIra,SAAUtM,KAAKyJ,MAAM6C,SACrB/N,KAAMyB,KAAKyJ,MAAMlL,KACjBuY,iBAAiB,SACjBiF,YAAY,cACZpF,SAAU3W,KAAKG,QACfub,SAAU1b,KAAKG,QACf8b,QAhBI,CACZ,CAAC1Y,MAAO,IAAKG,MAAO,UACpB,CAACH,MAAO,IAAKG,MAAO,UACpB,CAACH,MAAO,IAAKG,MAAO,UACpB,CAACH,MAAO,IAAKG,MAAO,WAaZ8Y,YAAa,oBA3BJ/b,IAAMC,eAkC7Bk1B,8MACFnsB,MAAQ,CACJlL,MAAM,EACN+N,SAAU,QAGd4G,OAAS,SAAChQ,GAAD,OAAO2yB,EAAKjsB,SAAS,CAACrL,MAAM,EAAM+N,SAAUpJ,EAAEqsB,mBACvDpvB,QAAU,kBAAM01B,EAAKjsB,SAAS,CAACrL,MAAM,EAAO+N,SAAU,gFAGlD,OACInN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACIzB,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAQ6E,QAASjE,KAAKkT,OAAQhH,KAAK,SAC/B/M,EAAAC,EAAAC,cAAC0xB,GAAA3xB,EAAD,CAAQmM,IAAKC,GAASC,QAAQC,MAAMC,QAExCxM,EAAAC,EAAAC,cAAC61B,EAAO9pB,YAAR,CACIkB,SAAUtM,KAAKyJ,MAAM6C,SACrB/N,KAAMyB,KAAKyJ,MAAMlL,KACjB4B,QAASH,KAAKG,QACdkL,UAAW,aACXG,SAAUA,GACVW,YAAY,WAEZhN,EAAAC,EAAAC,cAAC6N,GAAD,KACK,SAAAtO,GAAA,IAAEqB,EAAFrB,EAAEqB,OAAF,OACGd,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAM4F,OAAQ/E,GACVd,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAU8E,QAAM,GACZ/E,EAAAC,EAAAC,cAAC8S,EAAA/S,EAAD,CAAc6wB,OAAK,EAACxzB,QAAQ,aAEhC0C,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAU8E,QAAM,GACZ/E,EAAAC,EAAAC,cAAC8S,EAAA/S,EAAD,CAAc6wB,OAAK,EAACxzB,QAAQ,qBAEhC0C,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAU8E,QAAM,EAACF,SAAO,GACpB7E,EAAAC,EAAAC,cAACqF,GAAAtF,EAAD,CAASuF,MAAM,oBACXxF,EAAAC,EAAAC,cAAC6wB,EAAA9wB,EAAD,KACID,EAAAC,EAAAC,cAACy2B,GAAA12B,EAAD,CAAciF,SAAS,YAG/BlF,EAAAC,EAAAC,cAAC8S,EAAA/S,EAAD,CAAc6wB,OAAK,EAACxzB,QAAQ,cAE/BwD,GAAUd,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAU4E,SAAO,EAACE,QAAM,GAC/B/E,EAAAC,EAAAC,cAACqF,GAAAtF,EAAD,CAASuF,MAAM,iBACXxF,EAAAC,EAAAC,cAAC6wB,EAAA9wB,EAAD,KACID,EAAAC,EAAAC,cAAC+wB,GAAAhxB,EAAD,QAGRD,EAAAC,EAAAC,cAACg2B,GAAD,CAAgBC,WAAY9pB,GAASijB,OAAOvN,QAEhD/hB,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAU8E,QAAM,EAACF,SAAO,GACpB7E,EAAAC,EAAAC,cAACqF,GAAAtF,EAAD,CAASuF,MAAM,WACXxF,EAAAC,EAAAC,cAAC6wB,EAAA9wB,EAAD,KACID,EAAAC,EAAAC,cAACgxB,GAAAjxB,EAAD,CAAUiF,SAAS,YAG3BlF,EAAAC,EAAAC,cAAC8S,EAAA/S,EAAD,CAAc3C,QAAQ,sBAtDpCgE,IAAMC,eChZ5Bq1B,IAASrS,OACLvkB,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACIzB,EAAAC,EAAAC,cAAC22B,GAAA52B,EAAD,MACAD,EAAAC,EAAAC,cAAC42B,EAAA,iBAAD,CAAkBx3B,MAAOA,EAAMzB,iBAC3BmC,EAAAC,EAAAC,cAAC62B,EAAA,EAAD,CAAqBz3B,MAAOA,EAAMhB,aAC9B0B,EAAAC,EAAAC,cAAC82B,GAAD,SAIZ9tB,SAAS+tB,eAAe","file":"static/js/main.75035610.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles'\nimport 'styled-components'\nimport './index.css'\n\nimport blueGrey from '@material-ui/core/colors/blueGrey'\n\nconst colorScheme = {\n    fiord: '#445566',\n    lynch: '#637b94',\n    dodgerBlue: '#11beff',\n    bayOfMany: '#224477',\n    easternBlue: '#22aabb',\n    apple: '#49bd39',\n    melrose: '#A3A4FB',\n    flamingo: '#f04b4b',\n    texasRose: '#ffb155',\n    dandelion: '#FFD966',\n    tundora: '#404040',\n    dustyGray: '#999999',\n    hippieBlue: '#6699bb',\n    emperor: '#555555',\n    silver: '#CCCCCC',\n    porcelain: '#E8E9EA',\n    wildSand: '#F6F6F6',\n    white: '#FFFFFF',\n    casper: '#AFC5D0'\n}\n\nconst colors = {\n    tfso: '#00c7f5',\n    base: colorScheme.fiord,\n    baseLight: '#586E85',\n    baseLight1: '#637b94',\n    baseLight2: '#8fa1b4',\n    baseLight3: '#bdc8d3',\n    baseLight4: '#ebeef1',\n    baseLight5: '#f4f6f8',\n    blue: colorScheme.dodgerBlue,\n    blueDark: colorScheme.bayOfMany,\n    blueDesaturated: colorScheme.hippieBlue,\n    grayBlue: colorScheme.casper,\n    teal: colorScheme.easternBlue,\n    green: colorScheme.apple,\n    greenLight: 'rgba(73, 189, 57, 0.4)',\n    purple: colorScheme.melrose,\n    red: colorScheme.flamingo,\n    redLight: 'rgba(240, 75, 75, 0.4)',\n    orange: colorScheme.texasRose,\n    yellow: colorScheme.dandelion,\n    black: colorScheme.tundora,\n    gray: colorScheme.dustyGray,\n    grayDark: '#6E6E6E',\n    grayDarker: '#454545',\n    grayLight: '#C4C4C4',\n    grayLighter: '#E6E6E6',\n    grayLightest: '#F7F7F7',\n    white: colorScheme.white,\n    whiteDark: '#F7F7F7',\n    whiteDarker: '#E6E6E6',\n    bodyBackground: '#F7F7F7',\n    listOverBackground: '#E6E6E6',\n    border: '#C4C4C4',\n    tabBar: colorScheme.white,\n    menu: colorScheme.fiord,\n    menuExpanded: '#3A4857',\n    menuExpandedDivider: colorScheme.texasRose,\n    menuItem: '#526578',\n    menuItemText: colorScheme.white,\n    menuItemSelectedText: colorScheme.texasRose,\n    notification: blueGrey['50'],\n    notificationHover: blueGrey['100'],\n}\n\nconst palette = {\n    primary: colors.base,\n    primaryLight: colors.baseLight,\n    success: colors.green,\n    warning: colors.orange,\n    alert: colors.red,\n    delete: colors.red,\n    loudInfo: colors.blue\n}\n\nconst layout = {\n    containerMargin: '15px'\n}\n\nexport const materialuiTheme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        secondary: {\n            dark: '#1b2c3c',\n            main: '#456',\n            light: '#708194'\n        },\n        primary: {\n            dark: '#0090cc',\n            main: '#11c0ff',\n            light: '#6df3ff',\n            contrastText: '#FFF'\n        }\n    }\n})\n\nexport const styledTheme = {\n    tfso: {\n        colors,\n        palette,\n        layout\n    },\n    mui: materialuiTheme, // Make the entire material-ui theme available to styled components as well\n}\n\nexport type TfsoTheme = typeof styledTheme\n\ndeclare module 'styled-components' {\n    export interface DefaultTheme extends TfsoTheme {}\n    export type WithTheme = { theme: DefaultTheme }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport List from '@material-ui/core/List'\nimport Drawer from '@material-ui/core/Drawer'\nimport Link from '@material-ui/core/Link'\nimport Collapse from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport styled from 'styled-components/macro'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItem, {ListItemProps} from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport {DefaultTheme} from 'styled-components'\n\nconst StyledDrawer = styled(Drawer).attrs({\n    classes: {paper: 'MuiPaperStyle'}\n})`\n    &&{\n      width: ${({open}) => open ? 240 : 0}px;\n      height: 100%;\n      position: relative; // Needed for z-index\n      z-index: ${props => props.theme.mui.zIndex.drawer + 2}; // One higher than the topbar, to cover the shadow\n    }\n    \n    a, a:hover{\n        text-decoration: none\n    };\n    \n    li:focus{\n     outline: none;\n    }\n    \n    .MuiPaperStyle{\n      position: static;\n      background-color: ${({theme}) => theme.tfso.colors.menu};\n      color: ${({theme}) => theme.tfso.colors.menuItemText};\n    }\n    \n    .MuiPaperStyle ::-webkit-scrollbar {\n        width: 7px;\n        background-color: transparent;\n    }\n    \n    .MuiPaperStyle ::-webkit-scrollbar-thumb {\n        border-radius: 10px;\n        background-color: rgba(255,255,255, 0.2);\n    }\n    \n    .MuiPaperStyle ::-webkit-scrollbar-thumb:hover{\n        background-color: rgba(255,255,255, 0.5);\n    }\n    \n    .MuiPaperStyle ::-webkit-scrollbar-track {\n        border-radius: 10px;\n        background-color: transparent;\n    }\n    \n` as typeof Drawer\n\ntype ChipColor = 'success' | 'error' | 'info' | 'warning'\nconst getColor = (color: ChipColor, palette: DefaultTheme['tfso']['palette']) => {\n    switch(color){\n    case 'success': return palette.success\n    case 'error': return palette.alert\n    case 'info': return palette.loudInfo\n    case 'warning': return palette.warning\n    }\n}\n\nconst ChipWrapper = ({color: ChipColor, ...props}) => <Chip {...props} />\nconst StyledChip = styled(ChipWrapper)`&&{\n    background-color: ${({color, theme}) => getColor(color, theme.tfso.palette)};\n    color: ${({color, theme}) => theme.tfso.colors.white};\n    font-size: ${({theme}) => theme.mui.typography.pxToRem(10)}; \n    height: 22px;\n}`\n\nconst StyledListItemText = styled(ListItemText)`&&{\n  flex: 1; //Ie fix\n}` as typeof ListItemText\n\nexport type MenuProps = {\n    open: boolean\n    onClose: () => void\n    mobile: boolean\n    children: React.ReactNode\n}\n\nexport default class Menu extends React.PureComponent<MenuProps>{\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onClose: PropTypes.func.isRequired,\n        mobile: PropTypes.bool.isRequired,\n        children: PropTypes.node.isRequired\n    }\n\n    render(){\n        return (\n            <StyledDrawer variant={this.props.mobile ? 'temporary' : 'persistent'} elevation={0} open={this.props.open} onClose={this.props.onClose}>\n                <List color=\"inherit\" disablePadding style={{paddingBottom: 100}}>\n                    {this.props.children}\n                </List>\n            </StyledDrawer>\n        )\n    }\n}\n\nexport const MenuContent = props => <>{props.children}</>\n\nconst ListItemSecondaryText = styled(Typography)`&&{\n    color: ${({theme}) => theme.tfso.colors.grayLight};\n}` as typeof Typography\n\nconst MenuIcon = styled(ListItemIcon)`&&{\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n    margin-right: 0;\n}` as typeof ListItemIcon\n\nexport type MenuGroupProps = {\n    icon: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    onToggleExpanded: () => void\n    expanded: boolean\n    children: React.ReactNode\n}\n\nconst ListItemWrapper = ({expanded, ...props}: ListItemProps & {expanded: boolean}) => <ListItem {...props} />\n\nconst MenuGroupListItem = styled(ListItemWrapper)`&&{\n    background-color: ${({theme, expanded}) => expanded ? theme.tfso.colors.menuExpanded : theme.tfso.colors.menu};\n    :focus {\n        background-color: ${({theme, expanded}) => expanded ? theme.tfso.colors.menuExpanded : theme.tfso.colors.menu};\n    }\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n    :focus :hover, :hover {\n        background-color: ${({theme}) => theme.tfso.colors.menuItem};\n    };\n}` as typeof ListItemWrapper\n\nconst MenuGroupExpandLess = styled(ExpandLess)`&&{\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n}` as typeof ExpandLess\n\nconst MenuGroupExpandMore = styled(ExpandMore)`&&{\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n}` as typeof ExpandMore\n\nexport class MenuGroup extends React.PureComponent<MenuGroupProps>{\n    static propTypes = {\n        icon: PropTypes.elementType.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        onToggleExpanded: PropTypes.func.isRequired,\n        expanded: PropTypes.bool.isRequired,\n        children: PropTypes.node.isRequired,\n    }\n\n    onToggleExpanded = e => {\n        // Stop propagation to let parent layout close mobile menu on clicks that do navigation\n        e.stopPropagation()\n        this.props.onToggleExpanded()\n    }\n\n    render(){\n        const {expanded, subtitle, label, children, icon: Icon} = this.props\n        return (\n            <>\n                <MenuGroupListItem\n                    ContainerProps={{\n                        style: {\n                            top: 0,\n                            position: expanded ? 'sticky' : 'relative',\n                            zIndex: expanded ? 1 : 'auto',\n                        }\n                    }}\n                    divider={!expanded}\n                    expanded={expanded}\n                    onClick={this.onToggleExpanded}\n                    button\n                    disableRipple\n                    disableTouchRipple\n                >\n                    <MenuIcon><Icon fontSize='small' /></MenuIcon>\n                    <StyledListItemText primaryTypographyProps={{color: 'inherit'}}>\n                        {label}\n                        <Collapse in={!expanded} timeout='auto'>\n                            <Tooltip title={subtitle} enterDelay={500}>\n                                <ListItemSecondaryText variant='caption' noWrap>\n                                    {subtitle}\n                                </ListItemSecondaryText>\n                            </Tooltip>\n                        </Collapse>\n                    </StyledListItemText>\n                    <ListItemSecondaryAction>\n                        <IconButton onClick={this.onToggleExpanded} disableRipple disableTouchRipple>\n                            {expanded ? <MenuGroupExpandLess /> : <MenuGroupExpandMore />}\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </MenuGroupListItem>\n                <Collapse in={expanded} timeout=\"auto\">\n                    <List dense disablePadding>\n                        {children}\n                    </List>\n                    {expanded && <Divider />}\n                </Collapse>\n            </>\n        )\n    }\n}\n\nexport type MenuRootItemProps = {\n    icon: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    chipLabel?: string\n    chipColor?: ChipColor\n    selected: boolean\n    href?: string | ((content: React.ReactChild) => React.ReactChild)\n}\n\nconst RootListItem = styled(ListItem).attrs({classes: {selected: 'styled-selected'}})`&&{\n    background-color: ${({theme}) => theme.tfso.colors.menu};\n    color: ${({theme}) => theme.tfso.colors.menuItemText};    \n    &&.styled-selected {\n        background-color: ${({theme}) => theme.tfso.colors.menu};\n        color: ${({theme}) => theme.tfso.colors.menuItemSelectedText};\n    };\n    :focus :hover, :hover {\n        background-color: ${({theme}) => theme.tfso.colors.menuItem};\n    };\n}` as typeof ListItem\n\nexport class MenuRootItem extends React.PureComponent<MenuRootItemProps>{\n    static propTypes = {\n        icon: PropTypes.elementType.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired,\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        chipLabel: PropTypes.string,\n        chipColor: PropTypes.oneOf(['success', 'info', 'warning', 'error']),\n    }\n\n    render(){\n        const Icon = this.props.icon\n\n        const LinkContent = (\n            <RootListItem\n                style={{\n                    top: 0,\n                    zIndex: 1,\n                }}\n                divider\n                button\n                disableRipple\n                disableTouchRipple\n                selected={this.props.selected}\n            >\n                <MenuIcon><Icon fontSize='small' /></MenuIcon>\n                <StyledListItemText primaryTypographyProps={{color: 'inherit'}}>\n                    {this.props.label}\n                    <ListItemSecondaryText variant='caption' noWrap>\n                        {this.props.subtitle}\n                    </ListItemSecondaryText>\n                </StyledListItemText>\n                {this.props.chipLabel &&\n                    <StyledChip color={this.props.chipColor} label={this.props.chipLabel}/>\n                }\n            </RootListItem>\n        )\n\n        return (\n            <>\n            {typeof this.props.href === 'string'\n                ? <Link href={this.props.href}>{LinkContent}</Link>\n                : this.props.href\n                    ? this.props.href(LinkContent)\n                    : LinkContent\n            }\n            </>\n        )\n    }\n}\n\nexport type MenuItemProps = {\n    icon?: React.ComponentType<SvgIconProps>\n    label: string\n    selected: boolean\n    href: string | ((content: React.ReactChild) => React.ReactChild)\n    chipLabel?: string\n    chipColor?: 'warning' | 'information'\n}\n\nconst NestedListItem = styled(ListItem)`&&{\n    padding-left: 52px;\n    background-color: ${({theme}) => theme.tfso.colors.menuExpanded};\n    color: ${({selected, theme}) => selected ? theme.tfso.colors.menuItemSelectedText : theme.tfso.colors.menuItemText};\n    :hover {\n        background-color: ${({theme}) => theme.tfso.colors.menu};\n    };\n}` as typeof ListItem\n\nexport class MenuItem extends React.PureComponent<MenuItemProps>{\n    static propTypes = {\n        icon: PropTypes.elementType,\n        label: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired,\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        chipLabel: PropTypes.string,\n        chipColor: PropTypes.oneOf(['success', 'info', 'warning', 'error']),\n    }\n\n    render(){\n        const Icon = this.props.icon\n\n        const LinkContent = (\n            <NestedListItem selected={this.props.selected}>\n                {Icon && <MenuIcon><Icon fontSize='small' /></MenuIcon>}\n                <StyledListItemText primaryTypographyProps={{color: 'inherit', noWrap: true}}>\n                    {this.props.label}\n                </StyledListItemText>\n                {this.props.chipLabel &&\n                    <StyledChip color={this.props.chipColor} label={this.props.chipLabel}/>\n                }\n            </NestedListItem>\n        )\n        return (\n            <>\n                {typeof this.props.href === 'string'\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\n                    : this.props.href(LinkContent)\n                }\n            </>\n        )\n    }\n}","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\n\n// Original icon colors: TODO: Use these?\n// blue: #00B8F3\n// white: #fff\n\nexport type TfsoIconProps = {} & SvgIconProps\nconst Tfso = React.memo((props: TfsoIconProps) => (\n    <SvgIcon\n        {...props}\n        viewBox='0 0 50.59 30.35'\n    >\n        <path\n            d={'M33.22,9.62A6,6,0,0,0,29.85,13a5.06,5.06,0,0,0-4.56-2.87,5.06,5.06,0,1,1,5.06-5.06A5.06,5.06,0,0,0,33.22,9.62ZM45.53,20.23A5.06,5.06,0,0,1,41,17.36a6,6,0,0,1-3.36,3.37,5.06,5.06,0,0,1,2.87,4.56,5.06,5.06,0,1,0,5.06-5.06Zm-25.3-5.06a5.06,5.06,0,1,0-10.12,0,5.06,5.06,0,0,1-5.06,5.06,5.06,5.06,0,1,0,5.06,5.06,5.06,5.06,0,0,1,9.62-2.19,6,6,0,0,1,3.37-3.37A5.06,5.06,0,0,1,20.23,15.18Zm15.18-5.06a5.06,5.06,0,0,0-5.06,5v.13a5.06,5.06,0,0,1-2.87,4.5,6,6,0,0,1,3.37,3.36,5.06,5.06,0,0,1,4.56-2.87,5.06,5.06,0,0,0,0-10.12ZM25.29,20.23a5.06,5.06,0,1,0,5.06,5.06A5.06,5.06,0,0,0,25.29,20.23Z'}\n        />\n    </SvgIcon>\n))\n\nTfso.displayName = 'TfsoIcon'\nexport default Tfso as typeof SvgIcon","import React from 'react'\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport styled from 'styled-components/macro'\nimport TfsoIcon from '../icons/Tfso'\n\nconst StyledAppBar = styled(AppBar)`&&{\n  background: white;\n  z-index: ${props => props.theme.mui.zIndex.drawer + 1}; // Higher than other drawers\n  position: relative; // Needed for z-index and shadow\n}` as typeof AppBar\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n`\nconst Left = styled.div`&&{\n  max-width: 240px; // IE hack\n  flex: 0 0 240px;\n  background-color: ${({theme}) => theme.tfso.colors.menu};\n  color: #fff;\n  padding-left: 10px;\n  padding-right: 10px;\n  display: flex;\n  align-items: center;\n}`\nconst LeftMobile = styled(Left)`&&{\n  flex: 0 1 auto;\n}`\nconst Right = styled.div`&&{\n  flex: 1 1 auto;\n}`\n\nconst MenuButton = styled(IconButton)`&&{\n  margin-left: -12px;\n  margin-right: 20px;\n}` as typeof IconButton\n\nconst ToolbarRight = styled.div`&&{\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}`\n\nexport type TopBarProps = {\n    onMenuToggle?: () => void\n    mobile: boolean\n    children?: React.ReactNode\n}\n\nexport default class TopBar extends React.PureComponent<TopBarProps>{\n    static propTypes = {\n        onMenuToggle: PropTypes.func,\n        mobile: PropTypes.bool.isRequired,\n        children: PropTypes.node\n    }\n\n    render(){\n        const homeUrl = '/modules/dashboard/'\n\n        return (\n            <StyledAppBar position=\"relative\" color=\"default\" elevation={1}>\n                <Wrapper>\n                    {this.props.mobile\n                        ? (\n                            <LeftMobile>\n                                <Link href={homeUrl} underline='none'>\n                                    <TfsoIcon color=\"primary\" fontSize=\"large\" />\n                                </Link>\n                            </LeftMobile>\n                        )\n                        : (\n                            <Left>\n                                <Link href={homeUrl} underline='none'>\n                                    <TfsoIcon color=\"primary\" fontSize=\"large\" />\n                                </Link>\n                                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" style={{paddingLeft: 7}}>\n                                    <Link href={homeUrl} underline='none' color='inherit'>24SevenOffice</Link>\n                                </Typography>\n                            </Left>\n                        )\n                    }\n                    <Right>\n                        <Toolbar variant=\"dense\">\n                            {this.props.onMenuToggle &&\n                            <MenuButton color=\"inherit\" aria-label=\"Open drawer\" onClick={e => this.props.onMenuToggle && this.props.onMenuToggle()}>\n                                <MenuIcon/>\n                            </MenuButton>\n                            }\n                            <ToolbarRight>\n                                {this.props.children}\n                            </ToolbarRight>\n                        </Toolbar>\n                    </Right>\n                </Wrapper>\n            </StyledAppBar>\n        )\n    }\n}\n\nexport type TopMenuContentProps = {\n    children: React.ReactNode\n}\n\nexport class TopMenuContent extends React.PureComponent<TopMenuContentProps>{\n    static propTypes = {\n        children: PropTypes.node.isRequired\n    }\n\n    render(){\n        return (\n            <React.Fragment>\n                {this.props.children}\n            </React.Fragment>\n        )\n    }\n}","import React from 'react'\n\nfunction setTitle(text){\n    document.title = text\n}\n\ntype Props = {\n    text: string\n}\n\nexport default class DocumentTitle extends React.PureComponent<Props>{\n    constructor(props){\n        super(props)\n        setTitle(props.text)\n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps.text !== this.props.text){\n            setTitle(nextProps.text)\n        }\n    }\n    render(){\n        return ''\n    }\n}","import React from 'react'\nimport withWidth, {WithWidth} from '@material-ui/core/withWidth'\nimport useTheme from '@material-ui/styles/useTheme'\nimport {unstable_useMediaQuery as useMediaQuery} from '@material-ui/core/useMediaQuery'\n\ntype Omit<T, K extends string> = Pick<T, Exclude<keyof T, K>>\n\nexport type ScreenSizeData = {\n    mobile: boolean\n    tablet: boolean\n    desktop: boolean\n}\n\nexport type InjectedScreenSizeProps = {\n    screenSize: ScreenSizeData\n}\n\nexport type ScreenSizeProps = {\n    children: (screenSize: ScreenSizeData) => any\n} & WithWidth\n\nconst mobile = ['xs', 'sm']\nconst tablet = ['sm', 'md']\nconst desktop = ['md', 'lg', 'xl']\n\nconst getScreenSize = width => ({\n    mobile: mobile.includes(width),\n    tablet: tablet.includes(width),\n    desktop: desktop.includes(width)\n})\n\nconst ScreenSize = withWidth()((props: ScreenSizeProps) => props.children(getScreenSize(props.width)))\n\nexport function withScreenSize<P extends InjectedScreenSizeProps>(Component: React.ComponentType<P>): React.ComponentType<Omit<P, keyof InjectedScreenSizeProps>>{\n    return (props: any) => {\n        return (\n            <ScreenSize>\n                {(screenSize) => <Component {...props} screenSize={screenSize} />}\n            </ScreenSize>\n        )\n    }\n}\n\nexport const useScreenSize = () => {\n    const theme = useTheme()\n\n    const width = [...theme.breakpoints.keys]\n        .reverse()\n        .reduce((output, key) => {\n            const matches = useMediaQuery(theme.breakpoints.only(key))\n            return !output && matches ? key : output\n        }, null) || 'xs'\n\n    return getScreenSize(width)\n}\n\nexport default ScreenSize","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\nimport TopBar from './Topbar'\nimport DocumentTitle from './DocumentTitle'\nimport Menu from './Menu'\nimport {withScreenSize, ScreenSizeData} from '../ScreenSize'\n\n// Wrap everything\nexport const LayoutWrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column; // Flex header and body from top to bottom\n`\n\n// Put topbar in here\nexport const LayoutHeader = styled.div`\n  \n`\n\n// Put everything below topbar here\nexport const LayoutBody = styled.div`\n  flex: 1; // Fill the rest of the page after header has taken its space\n  min-height: 0;\n  display: flex;\n`\n\n// Put menu here\nexport const LayoutBodyLeft = styled.div`\n\n`\n\n// Put your app here\nexport const LayoutBodyRight = styled.div`\n  flex: 1;\n  min-height: 0;\n  padding: 15px;\n  overflow-y: auto;\n`\n\ntype LayoutProps = {\n    docTitle: string\n    menuContent?: React.ReactNode\n    topMenuContent?: React.ReactNode\n} & {\n    screenSize: ScreenSizeData\n}\n\ntype LayoutState = {\n    menuOpen: boolean | null\n}\n\nexport default withScreenSize(class Layout extends React.PureComponent<LayoutProps, LayoutState>{\n    static propTypes = {\n        docTitle: PropTypes.string.isRequired,\n        menuContent: PropTypes.node,\n        topMenuContent: PropTypes.node\n    }\n\n    state: LayoutState = {\n        menuOpen: null\n    }\n\n    onCloseMenu = () => this.setState({menuOpen: false})\n    onMenuToggle = () => this.setState(state => ({menuOpen: !this.menuIsOpen()}))\n    menuIsOpen(){\n        if(this.state.menuOpen === null){\n            return !this.props.screenSize.mobile\n        }\n        return this.state.menuOpen\n    }\n    onClickContent = () => {\n        if(this.props.screenSize.mobile && this.menuIsOpen()){\n            this.onCloseMenu()\n        }\n    }\n\n    render(){\n        return (\n            <LayoutWrapper>\n                <DocumentTitle text={this.props.docTitle + ' - 24SevenOffice'} />\n                <LayoutHeader>\n                    <TopBar\n                        onMenuToggle={this.onMenuToggle}\n                        mobile={this.props.screenSize.mobile}\n                    >\n                        {this.props.topMenuContent}\n                    </TopBar>\n                </LayoutHeader>\n                <LayoutBody>\n                    <LayoutBodyLeft onClick={this.onClickContent}>\n                        <Menu mobile={this.props.screenSize.mobile} open={this.menuIsOpen()} onClose={this.onCloseMenu}>\n                            {this.props.menuContent}\n                        </Menu>\n                    </LayoutBodyLeft>\n                    <LayoutBodyRight>\n                        {this.props.children}\n                    </LayoutBodyRight>\n                </LayoutBody>\n            </LayoutWrapper>\n        )\n    }\n})","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\nimport Popover from '@material-ui/core/Popover'\nimport Divider from '@material-ui/core/Divider'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport ScreenSize from '../ScreenSize'\n\nexport type ProfileCardProps = {\n    open: boolean\n    onClose: () => void\n    onSignOut: () => void\n\n    children?: React.ReactNode\n    identity: any\n    signOutText: string\n    anchorEl?: null | HTMLElement\n}\n\ntype State = {}\n\nconst CustomCard = styled(Card)`\n  &&{\n    box-shadow: none;\n    min-width: 200px;\n  } \n` as typeof Card\n\nconst CustomCardContent = styled(CardContent)`\n  &&{\n    padding: 0;\n    box-shadow: none;\n  }\n` as typeof CardContent\n\nconst ProfileCardContent = styled(CardContent)`\n  display: flex;\n  align-items: center;\n  background-color: ${({theme, color}) => color || theme.tfso.colors.menu};\n` as typeof CardContent\n\nconst ProfileTypography = styled(Typography)`\n  &&{\n    color: ${({theme}) => theme.mui.palette.primary.contrastText}\n  }\n` as typeof Typography\n\nconst ProfileAvatar = styled(Avatar)`\n    &&{\n     width: 60px;\n     height: 60px;\n     margin: ${({theme}) => theme.mui.spacing.unit}px;  \n    }\n` as typeof Avatar\nconst CustomCloseIconButton = styled(IconButton)`\n  &&{\n     position: absolute;\n     right: 0;\n     margin: 0 auto;\n     color: ${({theme}) => theme.mui.palette.primary.contrastText};\n  }\n` as typeof IconButton\n\nconst RightPanel = styled.div`\n  flex: 1 0 auto;\n  padding: ${({theme}) => theme.mui.spacing.unit}px;;\n`\n\nconst Right = styled.div`\n  text-align: right;\n  flex: 1 0 auto;\n`\n\nconst TransitionComponent = props => <Slide direction='down' {...props} />\n\nexport default class ProfileCard extends React.PureComponent<ProfileCardProps, State>{\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onClose: PropTypes.func.isRequired,\n        // identity: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n        signOutText: PropTypes.string.isRequired\n    }\n\n    onClose = () => {\n        this.props.onClose()\n    }\n\n    onSignOut = () => {\n        this.props.onSignOut()\n    }\n\n    renderContent = () => (\n        <CustomCard>\n            <ProfileCardContent>\n                <ProfileAvatar src={this.props.identity.profile.thumb.data} aria-label={this.props.identity.profile.firstName} />\n                <RightPanel>\n                    <ProfileTypography variant='h6'>{this.props.identity.profile.firstName + ' ' + this.props.identity.profile.lastName}</ProfileTypography>\n                    <ProfileTypography variant='body2'>{this.props.identity.profile.identifier}</ProfileTypography>\n                </RightPanel>\n            </ProfileCardContent>\n            <Divider />\n            <CustomCardContent>\n                {this.props.children}\n            </CustomCardContent>\n            <CardActions>\n                <Right>\n                    <Button variant=\"outlined\" size=\"small\" color=\"secondary\" onClick={this.onSignOut}>\n                        {this.props.signOutText}\n                    </Button>\n                </Right>\n            </CardActions>\n        </CustomCard>\n    )\n\n    render(){\n        const desktopDialog = (\n            <Popover\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                open={this.props.open}\n                onClose={this.onClose}\n            >\n                {this.renderContent()}\n            </Popover>\n        )\n\n        const mobileDialog = (\n            <Dialog\n                TransitionComponent={TransitionComponent}\n                keepMounted={false}\n                fullScreen={true}\n                open={this.props.open}\n                onClose={this.onClose}\n                fullWidth\n                maxWidth='sm'\n            >\n                <CustomCloseIconButton onClick={this.props.onClose} aria-label=\"Close\">\n                    <CloseIcon />\n                </CustomCloseIconButton>\n                {this.renderContent()}\n            </Dialog>\n        )\n\n        return (\n            <ScreenSize>\n                {({mobile}) => mobile ? mobileDialog : desktopDialog}\n            </ScreenSize>\n        )\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport type DelayProps = {\n    beforeShow?: React.ReactNode\n    /**\n     * @default 1000\n     */\n    delayMs?: number\n    /**\n     * @deprecated ??\n     */\n    show?: boolean\n    children: React.ReactNode\n}\n\ntype State = {\n    show: boolean\n}\n\nexport default class Delay extends React.PureComponent<DelayProps, State>{\n    static propTypes = {\n        beforeShow: PropTypes.node,\n        delayMs: PropTypes.number,\n        show: PropTypes.bool,\n        children: PropTypes.node.isRequired\n    }\n    static defaultProps = {\n        delayMs: 1000\n    }\n\n    _timer: any = null\n    state = {\n        show: false\n    }\n    componentDidMount(){\n        this._timer = setTimeout(() => {\n            this.setState({show: true})\n        }, this.props.delayMs || 1000)\n    }\n    componentWillUnmount(){\n        clearTimeout(this._timer)\n    }\n    render(){\n        if(this.props.show || this.state.show){\n            return this.props.children\n        }\n\n        return this.props.beforeShow || null\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst throttle = (fn: (...args: any[]) => void) => {\n    let running = false\n    return (...args: any[]) => {\n        if(!running){\n            // TODO: Use timeout if RAF is unavailable\n            window.requestAnimationFrame(() => {\n                fn(args)\n                running = false\n            })\n            running = true\n        }\n    }\n}\n\nexport type InfiniteScrollProps = {\n    /**\n     * Invoked when the bottom of the scrollcontainer is reached\n     * Must be async, to prevent choppy scrolling\n     */\n    onReachEnd?: () => Promise<void>\n\n    /**\n     * Invoked when the treshold distance to the bottom of the scrollcontainer is reached\n     * Must be async, to prevent choppy scrolling\n     */\n    onReachThreshold?: () => Promise<void>\n\n    /**\n     * A number >= 0 and < 1\n     * Defines in percentage (factor) of the viewable containers height the distance from the bottom where the threshold is\n     * @default 0.1\n     */\n    threshold?: number\n\n    /**\n     * The height of the container\n     * @default 'calc(100%)'\n     */\n    height?: string | number\n\n    /**\n     * Children, whatever you want\n     */\n    children: React.ReactNode\n}\n\nexport default class InfiniteScroll extends React.PureComponent<InfiniteScrollProps>{\n    static defaultProps = {\n        treshold: 0.1,\n        height: 'calc(100%)'\n    }\n\n    static propTypes = {\n        onReachEnd: PropTypes.func,\n        onReachThreshold: PropTypes.func,\n        threshold: function(props: InfiniteScrollProps, propName: string, componentName: string){\n            const propValue = props[propName]\n            if(propValue === undefined){\n                return\n            }\n\n            const propType = typeof propValue\n            if(propType !== 'number'){\n                return new Error(`Invalid prop \\`${propName}\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`, expected a number.`)\n            }\n            if(propValue >= 1 || propValue < 0){\n                return new Error(`Invalied prop ${propValue} of value \\`${propName}\\` supplied to \\`${componentName}\\`, expected a number < 1 and >= 0.`)\n            }\n        },\n        height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        children: PropTypes.node.isRequired,\n    }\n\n    // Initially we must assume that the end is nigh\n    // Lest we prematurely raise the event\n    // (Because the children may not be spawned, and the clientHeight may be less than the scrollHeight)\n    // Also, keeping this 'state' as regular ol class members, since we don't actually want a re-render after mutating these\n    _reachedTreshold = true\n    _lastScrollTop = 0\n    _mounted = false\n\n    _ref: React.RefObject<HTMLDivElement> = React.createRef()\n\n    componentDidMount(){\n        const node = this._ref.current\n        if(!node){ return }\n        node.scrollTo && node.scrollTo({top: 0}) // Dunno why, but for some reason the node is scrolled to bottom when mounting\n\n        this._mounted = true\n    }\n\n    onScroll = throttle(() => {\n        if(!this._mounted){ return }\n\n        const node = this._ref.current\n        if(!node){ return }\n\n        const {clientHeight, scrollTop, scrollHeight} = node\n        if(clientHeight >= scrollHeight){ return }\n\n        const {threshold = 0.1, onReachEnd, onReachThreshold} = this.props\n        const thresholdPoint = scrollHeight - clientHeight - clientHeight * threshold\n        const thresholdReachable = clientHeight < thresholdPoint\n        const reachedTreshold = scrollTop >= thresholdPoint\n        const reachedEnd = scrollTop + clientHeight === scrollHeight\n\n        if(scrollTop <= this._lastScrollTop){\n            // Scrolling up\n            this._lastScrollTop = scrollTop\n            this._reachedTreshold = reachedTreshold\n            return\n        }\n        this._lastScrollTop = scrollTop\n\n        // Reaching the treshold can occur multiple times, handle differently\n        if(reachedTreshold){\n            if(!this._reachedTreshold || !thresholdReachable && reachedEnd){\n                onReachThreshold && onReachThreshold()\n            }\n            this._reachedTreshold = true\n        }else if(this._reachedTreshold){\n            this._reachedTreshold = false\n        }\n\n        // Reaching the end can only occur once\n        if(reachedEnd){\n            onReachEnd && onReachEnd()\n        }\n    })\n\n    render(){\n        return (\n            <div style={{height: this.props.height || 'calc(100%)', overflowY: 'auto'}} ref={this._ref} onScroll={this.onScroll}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive'\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone'\nimport CloseIcon from '@material-ui/icons/Close'\nimport MoreIcon from '@material-ui/icons/MoreVert'\n\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Popover from '@material-ui/core/Popover'\nimport Badge from '@material-ui/core/Badge'\nimport List from '@material-ui/core/List'\nimport ListItem, {ListItemProps} from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport IconButton from '@material-ui/core/IconButton'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\n\nimport ScreenSize from '../ScreenSize'\nimport Delay from '../Delay'\nimport InfiniteScroll from '../InfiniteScroll'\n\nconst TransitionComponent = props => <Slide direction='down' {...props} />\n\nconst CloseIconButton = styled(IconButton)`&&{\n    position: absolute;\n    right: ${({theme}) => theme.mui.spacing.unit}px;\n    top: ${({theme}) => theme.mui.spacing.unit}px;\n}` as typeof IconButton\n\nconst ListItemWrapper = ({read, ...props}: ListItemProps & {read?: boolean}) => <ListItem {...props} />\nconst ReadListItem = styled(ListItemWrapper)`&&{\n    background-color: ${({read, theme}) => read ? 'inherit' : theme.tfso.colors.notification};\n    :hover {\n        background-color: ${({read, theme}) => read ? theme.mui.palette.action.hover : theme.tfso.colors.notificationHover};\n    };\n}`\n\nconst MobileToolbarWrapper = styled.div`&&{\n    margin: 0;\n    padding: 24px 24px 0 24px;\n    flex: 0 0 auto;\n}`\n\nconst getNotificateSecondaryText = (date: Date) => {\n    const hours = Math.floor(Math.abs(date.getTime() - Date.now()) / 3600000)\n    return hours >= 24\n        ? date.toLocaleDateString(undefined, {day: 'numeric', month: 'long', year: 'numeric'})\n        : date.toLocaleTimeString(undefined, {hour: '2-digit', minute: '2-digit'})\n}\n\nexport type NotificationItemProps = {\n    /**\n     * Unique identifier of the Notification.\n     * Spread to the `ListItem` component.\n     */\n    id: string\n\n    /**\n     * Date when the notification was created.\n     */\n    date: Date\n\n    /**\n     * `true` when the notification has been displayed to the user.\n     */\n    seen?: boolean\n    /**\n     * `true` when the user has marked the notification as read either by:\n     * - marking all notifications as read.\n     * - clicking on the notification.\n     */\n    read?: boolean\n\n    /**\n     * Invoked when the user clicks `Mark as read` or `Mark as unread`.\n     * You should persist the changes on the notification.\n     * (The notification is not changed by this component)\n     */\n    onToggleMarkRead: () => void\n\n    /**\n     * Text to the displayed on the ToggleMarkRead button when the notification is _not_ read\n     */\n    toggleMarkReadTitle: string\n\n    /**\n     * Text to the displayed on the ToggleMarkRead button when the notification _is_ read\n     */\n    toggleMarkUnreadTitle: string\n\n    /**\n     * Callback when the user clicks the notification.\n     * you should set `read` to `true` in this callback before anything else.\n     */\n    onClick: () => void\n\n    /**\n     * Should be either an `<Avatar>`, `<SvgIcon>` or `undefined`. Wrapped in a ListItemAvatar\n     */\n    avatar?: React.ReactElement\n\n    /**\n     * <Typography> formatted text, or string\n     */\n    children: React.ReactChild\n\n    /**\n     * Custom actions displayed in a menu when clicking the three vertical dots on the Notification\n     */\n    actions?: Array<{action: () => void, title: string}>\n\n    ContainerComponent: ListItemProps['ContainerComponent']\n}\n\nconst NotificationItem = (props: NotificationItemProps) => {\n    const anchor = React.useRef()\n    const [state, setState] = React.useState({menuOpen: false})\n\n    const onMenu = React.useCallback((menuOpen: boolean, callback?: () => void) => (event: React.SyntheticEvent) => {\n        event.stopPropagation()\n        setState({menuOpen})\n        callback && callback()\n    }, [])\n    const onClickAction = React.useCallback((action: () => void) => onMenu(false, action), [onMenu])\n\n    const secondaryText = React.useMemo(() => getNotificateSecondaryText(props.date), [props.date])\n\n    return (\n        <ReadListItem\n            id={props.id}\n            button\n            onClick={props.onClick}\n            divider\n            read={props.read}\n            ContainerComponent={props.ContainerComponent}\n        >\n            {props.avatar && <ListItemAvatar>{props.avatar}</ListItemAvatar>}\n            <ListItemText secondary={secondaryText}>\n                {props.children}\n            </ListItemText>\n            <Menu\n                disableAutoFocusItem\n                MenuListProps={{disablePadding: true}}\n                open={state.menuOpen}\n                anchorEl={anchor.current}\n                onClose={onMenu(false)}\n            >\n                <MenuItem onClick={onClickAction(props.onToggleMarkRead)}>{props.read ? props.toggleMarkUnreadTitle : props.toggleMarkReadTitle}</MenuItem>\n                {props.actions && props.actions\n                    .map((action, i) => <MenuItem key={i} onClick={onClickAction(action.action)}>{action.title}</MenuItem>)\n                }\n            </Menu>\n            <ListItemSecondaryAction>\n                <IconButton onClick={onMenu(true)} buttonRef={anchor}>\n                    <MoreIcon fontSize='small'/>\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ReadListItem>\n    )\n}\n\nNotificationItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    date: PropTypes.object.isRequired,\n    seen: PropTypes.bool,\n    read: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    avatar: PropTypes.node,\n    onToggleMarkRead: PropTypes.func.isRequired,\n    toggleMarkReadTitle: PropTypes.string.isRequired,\n    toggleMarkUnreadTitle: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n    actions: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        action: PropTypes.func.isRequired\n    }))\n}\n\nexport {NotificationItem}\n\nexport type NotifierProps = {\n    /**\n     * Number of new notifications\n     */\n    count: number\n\n    /**\n     * Display a loading indicator\n     */\n    loading?: boolean\n\n    open: boolean\n\n    /**\n     * Provide your translated value of e.g `Mark all as read`\n     */\n    readAllButtonText: string\n\n    /**\n     * Callback when the user clicked the bell and opens the list of notifications.\n     * You may want to fetch new notifications here.\n     * When you're done fetching data, it is your responsibility to mark all notifications as read if the notifications is still open.\n     */\n    onOpen: () => void\n\n    /**\n     * Invoked when the user clicks the `Mark all as read` button\n     * You should set the notifications as read here.\n     */\n    onReadAll: () => void\n\n    /**\n     * Invoked when the user scrolled to the end of the list\n     */\n    onLoadMore: () => Promise<void>\n\n    /**\n     * Invoked when the list is closed.\n     */\n    onClose: () => void\n\n    /**\n     * Render your notifications here.\n     * The children will be wrapped in a `List`component.\n     * Typically a `NotificationItem`, but anything goes.\n     */\n    children: React.ReactNode\n\n    /**\n     * Properties for the Notification Bell icon\n     */\n    IconProps?: SvgIconProps\n}\n\nexport default class Notifier extends React.PureComponent<NotifierProps>{\n    static propTypes = {\n        count: PropTypes.number.isRequired,\n        loading: PropTypes.bool,\n        open: PropTypes.bool.isRequired,\n        readAllButtonText: PropTypes.string.isRequired,\n        onOpen: PropTypes.func.isRequired,\n        onReadAll: PropTypes.func.isRequired,\n        onLoadMore: PropTypes.func.isRequired,\n        onClose: PropTypes.func.isRequired,\n        children: PropTypes.node.isRequired,\n        IconProps: PropTypes.object,\n    }\n\n    _anchorEl: React.RefObject<HTMLButtonElement> = React.createRef()\n\n    onOpen = () => {\n        this.props.onOpen()\n    }\n\n    onClose = () => {\n        this.props.onClose()\n    }\n\n    renderNotifyer = () => (\n        <IconButton buttonRef={this._anchorEl} onClick={this.onOpen} >\n            {this.props.count > 0\n                ? <Badge color='error' badgeContent={this.props.count} max={9}><NotificationsActiveIcon {...this.props.IconProps} /></Badge>\n                : <NotificationsNoneIcon {...this.props.IconProps} />\n            }\n        </IconButton>\n    )\n\n    renderToolbar = (mobile: boolean) => (\n        <>\n            <Toolbar variant='dense' disableGutters={mobile} style={{marginRight: mobile ? 32 : 0}}>\n                <Grid container justify='space-between' alignItems='baseline' spacing={8} wrap='nowrap'>\n                    <Grid item xs>\n                        <Typography variant={mobile ? 'subtitle1' : 'subtitle2'} >Notifications</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Button onClick={this.props.onReadAll} variant='text' size='small' color='primary' fullWidth>\n                            {this.props.readAllButtonText}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n            {this.renderLoading()}\n            <Divider />\n        </>\n    )\n\n    renderContent(mobile: boolean){\n        return (\n            <InfiniteScroll height={mobile ? undefined : 500} threshold={0.2} onReachThreshold={this.props.onLoadMore}>\n                <List dense disablePadding>\n                    {this.props.children}\n                </List>\n            </InfiniteScroll>\n        )\n    }\n\n    renderDesktop(){\n        return (\n            <Popover\n                open={this.props.open}\n                onClose={this.onClose}\n                anchorEl={this._anchorEl.current}\n                anchorOrigin={{horizontal: 'right', vertical: 'bottom'}}\n                transformOrigin={{vertical: 'top', horizontal: 'right'}}\n                PaperProps={{style: {width: 500}}}\n            >\n                {this.renderToolbar(false)}\n                {this.renderContent(false)}\n            </Popover>\n        )\n    }\n\n    renderMobile(){\n        return (\n            <Dialog\n                TransitionComponent={TransitionComponent}\n                open={this.props.open}\n                onClose={this.onClose}\n                fullScreen\n            >\n                <MobileToolbarWrapper>\n                    {this.renderToolbar(true)}\n                    <CloseIconButton onClick={this.onClose}><CloseIcon /></CloseIconButton>\n                </MobileToolbarWrapper>\n                <DialogContent>\n                    {this.renderContent(true)}\n                </DialogContent>\n            </Dialog>\n        )\n    }\n\n    renderLoading = () => {\n        const Spacer = <div style={{height: 4}} />\n        return (\n            this.props.loading ? (\n                <Delay delayMs={200} beforeShow={Spacer}>\n                    <LinearProgress color='secondary' />\n                </Delay>\n            ) : Spacer\n        )\n    }\n\n    render(){\n        return (\n            <>\n                {this.renderNotifyer()}\n                <ScreenSize>\n                    {({mobile}) => mobile ? this.renderMobile() : this.renderDesktop()}\n                </ScreenSize>\n            </>\n        )\n    }\n}","import React from 'react'\nimport styled, {DefaultTheme} from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport MuiSnackbarContent from '@material-ui/core/SnackbarContent'\nimport WarningIcon from '@material-ui/icons/Warning'\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n}\n\nconst bgColor = (variant: AlertVariant, palette: DefaultTheme['tfso']['palette']) => {\n    switch(variant){\n    case 'success': return palette.success\n    case 'error': return palette.alert\n    case 'info': return palette.primaryLight\n    case 'warning': return palette.warning\n    }\n}\n\nconst SnackbarContent = ({variant, ...other}) => <MuiSnackbarContent {...other} />\nconst StyledSnack = styled(SnackbarContent)`&&{\n    background-color: ${({variant, theme}) => bgColor(variant, theme.tfso.palette)}\n}`\n\ntype AlertVariant = 'success' | 'warning' | 'error' | 'info'\n\nexport type AlertProps = {\n    message: React.ReactNode\n    onClose(): void\n    variant: AlertVariant\n}\n\nconst Alert = (props: AlertProps) => {\n    const {message, onClose, variant} = props\n    const Icon = variantIcon[variant]\n\n    return (\n        <StyledSnack\n            variant={variant}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" style={{display: 'flex', alignItems: 'center'}}>\n                    <Icon style={{fontSize: 20, opacity: 0.9, marginRight: 10}} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    onClick={onClose}\n                >\n                    <CloseIcon style={{fontSize: 20}} />\n                </IconButton>,\n            ]}\n        />\n    )\n}\n\nAlert.propTypes = {\n    message: PropTypes.node.isRequired,\n    onClose: PropTypes.func.isRequired,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\n}\n\nexport default Alert","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\n\nexport type BigNumberProps = {\n    /**\n     * Choose `light` when you have a dark background, otherwise `dark`\n     * @default light\n     */\n    color?: 'light' | 'dark'\n\n    /**\n     * @default large\n     */\n    size?: 'medium' | 'large'\n    children: string | number\n}\n\nconst fontSizeMap: {[P in Required<BigNumberProps>['size']]: number} = {\n    medium: 32,\n    large: 48\n}\n\nconst defaultProps: Required<Pick<BigNumberProps, 'color' | 'size'>> = {\n    color: 'light',\n    size: 'large',\n}\n\nconst wrapper = ({size, color, ...props}: Required<BigNumberProps>) => <div {...props} />\n// TODO: These should be on the BigNumber component instead..\nwrapper.defaultProps = defaultProps\nwrapper.propTypes = {\n    color: PropTypes.oneOf(['light', 'dark']),\n    size: PropTypes.oneOf(['medium', 'large']),\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]).isRequired\n}\n\nconst BigNumber = styled(wrapper)`&&{\n    font-size: ${({theme, size = defaultProps.size}) => theme.mui.typography.pxToRem(fontSizeMap[size])};\n    line-height: normal;\n    letter-spacing: 0.08em;\n    color: ${({color = defaultProps.color}) => color === 'light' ? '#FFFFFF' : '#404040'};\n    white-space: nowrap\n}`\n\nexport default BigNumber as React.ComponentType<BigNumberProps>","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\nimport Slide from '@material-ui/core/Slide'\n\nexport type ConfirmationDialogProps = {\n    open: boolean\n    title?: string\n    message: string\n    okButtonText: string\n    cancelButtonText: string\n    onOk: () => void\n    onCancel: () => void\n}\n\nconst TransitionComponent = props => <Slide direction='up' {...props} />\n\nconst ConfirmationDialog = (props: ConfirmationDialogProps) => {\n    const {open, onCancel, onOk, title, message, okButtonText, cancelButtonText} = props\n    return (\n        <Dialog\n            TransitionComponent={TransitionComponent}\n            keepMounted={false}\n            open={open}\n            onClose={onCancel}\n            maxWidth={'xs'}\n        >\n            {title && <DialogTitle>{title}</DialogTitle>}\n            <DialogContent>{message}</DialogContent>\n            <DialogActions>\n                <Button onClick={onCancel} color=\"primary\">{cancelButtonText}</Button>\n                <Button onClick={onOk} color=\"secondary\">{okButtonText}</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nConfirmationDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    title: PropTypes.string,\n    message: PropTypes.string.isRequired,\n    okButtonText: PropTypes.string.isRequired,\n    cancelButtonText: PropTypes.string.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n}\n\nexport default ConfirmationDialog","import React from 'react'\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport SearchIcon from '@material-ui/icons/Search'\n\nexport type SearchFieldProps = TextFieldProps\n\ntype State = {\n    editing: boolean\n}\n\nexport default class SearchField extends React.PureComponent<SearchFieldProps, State>{\n    static defaultProps = {\n        placeholder: 'Search',\n        margin: 'dense',\n        InputProps: {\n            startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>\n        }\n    }\n\n    state: State = {\n        editing: false\n    }\n\n    onBlur = (e: React.EventHandler<any>) => {\n        this.setState({editing: false})\n        const {onBlur} = this.props\n        onBlur && onBlur(e)\n    }\n\n    onFocus = (e: React.EventHandler<any>) => {\n        this.setState({editing: true})\n        const {onFocus} = this.props\n        onFocus && onFocus(e)\n    }\n\n    render(){\n        return (\n            <TextField\n                fullWidth={this.state.editing}\n                {...this.props}\n                onBlur={this.onBlur}\n                onFocus={this.onFocus}\n            />\n        )\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\n\ntype Props = {\n    value: string\n    onChange: (value: string) => void\n    dirty?: boolean\n    enableDirtyCheck?: boolean\n}\n\ntype State = {\n    editing: boolean\n    value: string\n    prevProps: Props\n}\n\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>\n\nfunction handleEvent(event: React.KeyboardEvent<HTMLDivElement>){\n    event.preventDefault()\n    event.stopPropagation()\n    // the above only prevents other synthetic events, if we want to prevent global listeners too, we need to stop the propagation on the native event as well\n    event.nativeEvent.stopImmediatePropagation()\n}\n\nexport type TextFieldEditorProps = Props & Partial<Omit<TextFieldProps, 'value' | 'onChange'>>\n\nexport default class TextFieldEditor extends React.PureComponent<TextFieldEditorProps, State>{\n    static propTypes = {\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        dirty: PropTypes.bool\n    }\n\n    _inputRef: React.RefObject<HTMLInputElement> = React.createRef()\n\n    state: State = {\n        editing: false,\n        value: this.props.value,\n        prevProps: this.props\n    }\n\n    static getDerivedStateFromProps(props: Readonly<TextFieldEditorProps>, state: Readonly<State>){\n        const prevProps = state.prevProps\n\n        if(prevProps.value !== props.value){ return {value: props.value, prevProps: props} }\n\n        return {prevProps: props}\n    }\n\n    blur = () => { this._inputRef.current && this._inputRef.current.blur() }\n\n    onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n        this.props.onKeyDown && this.props.onKeyDown(event)\n        if(event.defaultPrevented){ return }\n\n        if(event.ctrlKey){\n            switch(event.key){\n            case 's':\n            // this event should not be 'handled' here (eg. invoke handleEvent(event)), control may want to perform other actions on ctrl+s\n            // It should behave as a save changes in the control as well however\n                this.blur()\n                break\n            case 'z':\n                handleEvent(event)\n                this.setState({editing: false, value: this.props.value}, this.blur)\n                break\n            default: break\n            }\n        }else{\n            switch(event.key){\n            case 'Enter':\n                if(this.props.multiline){ break }\n                handleEvent(event)\n                this.blur()\n                break\n            case 'Escape':\n                handleEvent(event)\n                this.setState({editing: false, value: this.props.value}, this.blur)\n                break\n            default: break\n            }\n        }\n    }\n\n    onFocus = (e: React.EventHandler<any>) => {\n        this.setState({editing: true})\n        this.props.onFocus && this.props.onFocus(e)\n    }\n\n    onBlur = (e: React.EventHandler<any>) => {\n        if(!this.state.editing){ return } // The method should be safe to call multiple times, but we don't want to raise the event multiple times if we dont need to\n\n        this.props.onChange(this.state.value)\n        this.setState({editing: false})\n        this.props.onBlur && this.props.onBlur(e)\n    }\n\n    onChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement | HTMLSelectElement>) => {\n        const value = event.target.value\n        this.setState({value, editing: true})\n    }\n\n    render(){\n        const {dirty: dirtyProp, onChange: onChangeProp, value: valueProp, enableDirtyCheck, ...otherProps} = this.props\n        const {value} = this.state\n\n        const isDirty = enableDirtyCheck ? this.props.value !== value || !!dirtyProp : !!dirtyProp\n\n        return (\n            <TextField\n                {...otherProps as any}\n                inputRef={this._inputRef}\n                value={value}\n                onFocus={this.onFocus}\n                onChange={this.onChange}\n                onBlur={this.onBlur}\n                onKeyDown={this.onKeyDown}\n                InputProps={{style: {fontStyle: isDirty ? 'italic' : 'normal'}}}\n            />\n        )\n    }\n}","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport {withTheme, DefaultTheme, WithTheme} from 'styled-components'\n\nimport TrendingUp from '@material-ui/icons/TrendingUp'\nimport TrendingFlat from '@material-ui/icons/TrendingFlat'\nimport TrendingDown from '@material-ui/icons/TrendingDown'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\n\nexport type TrendingProps = {\n    variant: 'up' | 'down' | 'flat'\n} & SvgIconProps\n\nconst iconMap: {[P in TrendingProps['variant']]: React.ComponentType<SvgIconProps>} = {\n    up: TrendingUp,\n    flat: TrendingFlat,\n    down: TrendingDown,\n}\n\nconst getColor = (variant: TrendingProps['variant'], theme: DefaultTheme) => {\n    switch(variant){\n    case 'up': return theme.tfso.palette.success\n    case 'down': return theme.tfso.palette.warning\n    case 'flat': return theme.tfso.palette.alert\n    default: return undefined\n    }\n}\n\nconst trending = ({variant, theme, ...iconProps}: TrendingProps & WithTheme) => {\n    const Icon = iconMap[variant]\n    const nativeColor = getColor(variant, theme)\n    return (\n        <Icon\n            nativeColor={nativeColor}\n            {...iconProps}\n        />\n    )\n}\n\ntrending.propTypes = {\n    variant: PropTypes.oneOf(['up', 'down', 'flat']).isRequired\n}\n\nexport default React.memo(withTheme(trending))","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\n// https://www.w3schools.com/charsets/ref_emoji.asp\nconst emojis = {\n    middleFinger: <>&#128405;</>,\n    indexFinger: <>&#128070;</>,\n    flex: <>&#128170;</>,\n    brokenHeart: <>&#128148;</>,\n    perfect: <>&#128076;</>,\n    thumbsUp: <>&#128077;</>,\n    thumbsDown: <>&#128078;</>,\n    clap: <>&#128079;</>,\n    heart: <>&#128152;</>,\n    fire: <>&#128293;</>,\n    bulb: <>&#128161;</>,\n    crap: <>&#128169;</>,\n    thinking: <>&#129300;</>,\n    rocket: <>&#128640;</>,\n}\n\nexport type EmojiProps = {\n    variant: keyof typeof emojis\n}\n\nconst Emoji = (props: EmojiProps) => emojis[props.variant]\n\nEmoji.propTypes = {\n    variant: PropTypes.oneOf(Object.keys(emojis))\n}\n\nexport default Emoji","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Slide from '@material-ui/core/Slide'\nimport Typography from '@material-ui/core/Typography'\nimport MenuList from '@material-ui/core/MenuList'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Avatar from '@material-ui/core/Avatar'\nimport SearchField from './SearchField'\nimport Popover from '@material-ui/core/Popover'\nimport styled from 'styled-components'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport {InjectedScreenSizeProps, withScreenSize} from './ScreenSize'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nexport type ListPickerProps = {\n    open: boolean\n    onCancel: () => void\n    onSelect: (value: string) => void\n    children?: undefined\n    options: {value: string, label: string}[]\n    cancelButtonText: string\n    searchLabel?: string\n    anchorEl?: null | HTMLElement\n    disabled?: string\n    selected?: string\n    avatarColor?: string\n    loading?: boolean\n}\n\ntype State = {\n    filterValue: string,\n    focusValue: string\n\n}\n\nconst AvatarColor = styled(Avatar)`&&{\n    background-color: ${({theme, color}) => color || theme.tfso.colors.menu};\n    color: ${({theme}) => theme.mui.palette.primary.contrastText};\n}` as typeof Avatar\n\nconst CustomDialogTitle = styled.div`\n  display: flex;\n  flex-flow: row-reverse;\n  padding: 5px;\n`\n\nconst TransitionComponent = props => <Slide direction='down' {...props} />\n\n// @ts-ignore\nexport default withScreenSize(class ListPicker extends React.PureComponent<ListPickerProps & InjectedScreenSizeProps, State>{\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onCancel: PropTypes.func.isRequired,\n        onSelect: PropTypes.func.isRequired,\n        options: PropTypes.arrayOf(PropTypes.shape({value: PropTypes.string.isRequired, label: PropTypes.string.isRequired})).isRequired,\n        cancelButtonText: PropTypes.string.isRequired,\n        searchLabel: PropTypes.string,\n        disabled: PropTypes.string,\n        selected: PropTypes.string,\n        avatarColor: PropTypes.string,\n        loading: PropTypes.bool\n    }\n    _inputRef: React.RefObject<HTMLLIElement> = React.createRef()\n    _listRef: React.RefObject<HTMLInputElement> = React.createRef()\n    state: State = {\n        filterValue: '',\n        focusValue: ''\n    }\n\n    componentDidUpdate(prevProps){\n        if(!prevProps.open && this.props.open && !this.props.screenSize.mobile){\n            setTimeout(() => {\n                this._inputRef.current && this._inputRef.current.focus()\n            }, 1)\n        }\n    }\n\n    onFilter = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({filterValue: event.target.value})\n    }\n    onKeyDown = (event: React.KeyboardEvent) => {\n        if(!(event && event.keyCode === 40)){\n            return\n        }\n        this._listRef.current && this._listRef.current.focus()\n    }\n\n    onSelect = (value) => {\n        this.props.onSelect(value)\n    }\n\n    onClose = () => {\n        this.props.onCancel()\n    }\n\n    render(){\n        const renderLinearProgress = (\n            <>\n            { this.props.loading &&\n                    <LinearProgress/>\n            }\n            </>\n        )\n\n        const renderItems = (\n            <>\n\n                <SearchField\n                    placeholder={this.props.searchLabel}\n                    inputRef={this._inputRef}\n                    onChange={this.onFilter}\n                    value={this.state.filterValue}\n                    onKeyDown={this.onKeyDown}\n                />\n\n                <\n                    // @ts-ignore\n                    MenuList ref={this._listRef}>\n                    {this.props.options\n                        .filter(option => option.label.toLowerCase().indexOf(this.state.filterValue.toLocaleLowerCase()) > -1 || option.value.indexOf(this.state.filterValue.toLocaleLowerCase()) > -1)\n                        .map((option, i) => (\n                            <MenuItem\n                                disabled={option.value == this.props.disabled}\n                                selected={option.value == this.props.selected}\n                                key={i}\n                                onClick={() => { this.onSelect(option.value) }}\n                            >\n                                <AvatarColor color={this.props.avatarColor}>\n                                    <Typography variant='caption' color='inherit'>\n                                        {option.label.split(' ')\n                                            .slice(0, 3)\n                                            .map((words) => (\n                                                words[0]\n                                            ))\n                                        }\n                                    </Typography>\n                                </AvatarColor>\n                                <ListItemText primary={option.label} />\n                            </MenuItem>\n                        ))\n                    }\n                </MenuList>\n            </>\n        )\n\n        const desktopDialog = (\n            <Popover\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                open={this.props.open}\n                onClose={this.onClose}\n            >\n                {renderLinearProgress}\n                <DialogContent>\n                    {renderItems}\n                </DialogContent>\n            </Popover>\n        )\n\n        const mobileDialog = (\n            <Dialog\n                TransitionComponent={TransitionComponent}\n                keepMounted={false}\n                fullScreen={true}\n                open={this.props.open}\n                onClose={this.onClose}\n                fullWidth\n                maxWidth='sm'\n            >\n                {renderLinearProgress}\n                <CustomDialogTitle>\n                    <IconButton onClick={this.onClose} aria-label=\"Close\">\n                        <CloseIcon />\n                    </IconButton>\n                </CustomDialogTitle>\n                <DialogContent>\n                    {renderItems}\n                </DialogContent>\n            </Dialog>\n        )\n\n        const {mobile} = this.props.screenSize\n        return mobile ? mobileDialog : desktopDialog\n    }\n})","import React, {HTMLProps} from 'react'\nimport PropTypes from 'prop-types'\n\ntype Props = {\n    children: (hover: boolean, ref: React.RefObject<any>) => React.ReactNode\n} & HTMLProps<HTMLDivElement>\n\ntype State = {\n    hover: boolean\n}\n\nexport default class Hoverable extends React.PureComponent<Props, State>{\n    private ref: React.RefObject<any>\n\n    static propTypes = {\n        children: PropTypes.func.isRequired\n    }\n\n    constructor(props){\n        super(props)\n\n        this.ref = React.createRef()\n\n        this.state = {\n            hover: false\n        }\n    }\n\n    toggleHover = () => {\n        this.setState(state => ({hover: !state.hover}))\n    }\n\n    hoverOn = () => this.setState({hover: true})\n    hoverOff = () => this.setState({hover: false})\n\n    render(){\n        const {children, ...restProps} = this.props\n\n        return (\n            <div\n                ref={this.ref}\n                onMouseEnter={this.hoverOn}\n                onMouseLeave={this.hoverOff}\n                {...restProps}\n            >\n                {children(this.state.hover, this.ref)}\n            </div>\n        )\n    }\n}","import React, {HTMLProps} from 'react'\nimport PropTypes from 'prop-types'\n\ntype Props = {\n    children: (tabIndex: number, next: () => void, prev: () => void) => React.ReactNode\n    index?: number\n    length?: number\n} & HTMLProps<HTMLDivElement>\n\ntype State = {\n    index: number\n}\n\nexport default class Wizard extends React.PureComponent<Props, State>{\n    static propTypes = {\n        children: PropTypes.func.isRequired,\n        index: PropTypes.number,\n        length: PropTypes.number\n    }\n\n    constructor(props){\n        super(props)\n        this.state = {index: props.index || 0}\n    }\n\n    static getDerivedStateFromProps(nextProps){\n        if(nextProps.hasOwnProperty('index')){\n            return {index: nextProps.index}\n        }\n        return null\n    }\n\n    next = () => this.setState(state => {\n        if(this.props.length && state.index + 1 >= this.props.length) return state\n        return {index: state.index + 1}\n    })\n    prev = () => this.setState(state => {\n        if(state.index - 1 < 0) return state\n        return {index: state.index - 1}\n    })\n\n    render(){\n        const {children, ...restProps} = this.props\n\n        return (\n            <div {...restProps}>\n                {children(this.state.index, this.next, this.prev)}\n            </div>\n        )\n    }\n}","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport styled, {css} from 'styled-components/macro'\n\nexport type TfsoLoadingIconProps = {\n    /**\n     * @default infinite\n     */\n    once?: boolean\n} & SvgIconProps\n\nconst TfsoLoadingIconWrapper = ({once, ...other}: TfsoLoadingIconProps) => <SvgIcon {...other}/>\n\nconst path = css`\n    opacity: 1;\n    animation-delay: 1.5s;\n`\nconst StyledSvgIcon = styled(TfsoLoadingIconWrapper)`&&{\n    #path1{\n        ${path}\n        animation: fade-in1 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path2{\n        ${path}\n        animation: fade-in2 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path3{\n        ${path}\n        animation: fade-in3 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path4{\n        ${path}\n        animation: fade-in4 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path5{\n        ${path}\n        animation: fade-in5 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    @keyframes fade-in1 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 1; }\n        40% { opacity: 1; }\n        60% { opacity: 1; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in2 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 1; }\n        60% { opacity: 1; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in3 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 0.2; }\n        60% { opacity: 1; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in4 {\n        0%   { opacity:0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 0.2; }\n        60% { opacity: 0.2; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in5 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 0.2; }\n        60% { opacity: 0.2; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n}` as typeof SvgIcon\n\nconst TfsoLoading = React.memo((props: TfsoLoadingIconProps) => (\n    <StyledSvgIcon\n        {...props}\n        viewBox=\"0 0 37 23\"\n        fillRule='evenodd'\n        strokeWidth=\"1\"\n    >\n        <path d=\"M21.79 9.81C21.17789 8.5323532 19.886707 7.7195303 18.47 7.72 16.444136 7.7143752 14.803816 6.0724096 14.800223 4.0465408 14.79663 2.020672 16.431115 0.37289845 18.456947 0.36008776 20.482778 0.34727707 22.137972 1.9742478 22.16 4c-0.01782 1.4288443 0.793121 2.7388262 2.08 3.36-1.120033 0.4431782-2.006822 1.3299671-2.45 2.45l0 0z\" id=\"path5\"/>\n        <path d=\"m33.24 15.09c-1.427527 0.01209-2.733245-0.802525-3.35-2.09-0.443178 1.120033-1.329967 2.006822-2.45 2.45 1.275973 0.613987 2.088053 1.903991 2.09 3.32 0 2.032408 1.647592 3.68 3.68 3.68 2.032408 0 3.68-1.647592 3.68-3.68 0-2.032408-1.647592-3.68-3.68-3.68l0.03 0 0 0z\" id=\"path4\"/>\n        <path d=\"m14.79 11.41c0-2.0351693-1.649831-3.685-3.685-3.685-2.0351693 0-3.685 1.6498307-3.685 3.685 0 2.032408-1.6475921 3.68-3.68 3.68-2.0324079 0-3.68 1.647592-3.68 3.68 0 2.032408 1.6475921 3.68 3.68 3.68 2.0324079 0 3.68-1.647592 3.68-3.68-0.00119-1.719312 1.1882715-3.210312 2.864877-3.591141 1.676605-0.380829 3.39346 0.450022 4.135123 2.001141 0.443178-1.120033 1.329967-2.006822 2.45-2.45-1.27208-0.616837-2.079908-1.906255-2.08-3.32l0 0 0 0z\" id=\"path2\"/>\n        <path d=\"m25.84 7.73c-2.016889-0.0001192-3.658077 1.6232303-3.68 3.64l0 0.09c-0.02094 1.397916-0.830116 2.663946-2.09 3.27 1.120033 0.443178 2.006822 1.329967 2.45 2.45 0.613987-1.275973 1.903991-2.088053 3.32-2.09 2.035169 0 3.685-1.649831 3.685-3.685 0-2.0351693-1.649831-3.685-3.685-3.685l0 0.01 0 0z\" id=\"path3\"/>\n        <path d=\"m18.47 15.1c-2.031097 0.0055-3.673671 1.655547-3.669994 3.686649 0.0037 2.031101 1.652215 3.675171 3.683318 3.673336C20.514428 22.45815 22.159993 20.811104 22.16 18.78 22.162665 17.800536 21.774754 16.860421 21.082167 16.167833 20.389579 15.475246 19.449463 15.087335 18.47 15.09l0 0.01 0 0z\" id=\"path1\"/>\n    </StyledSvgIcon>\n))\n\nTfsoLoading.displayName = 'TfsoLoadingIcon'\nexport default TfsoLoading as typeof SvgIcon","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Link from '@material-ui/core/Link'\n\nexport const MaterialUiIcon = React.memo((props: SvgIconProps) => (\n    <SvgIcon {...props} viewBox=\"0 0 600 476.6\">\n        <path d=\"m0 259.8v-259.8l225 129.9v86.6l-150-86.6v173.2z\" fill=\"#00b0ff\"/>\n        <path d=\"m225 129.9 225-129.9v259.8l-150 86.6-75-43.3 150-86.6v-86.6l-150 86.6z\" fill=\"#0081cb\"/>\n        <path d=\"m225 303.1v86.6l150 86.6v-86.6z\" fill=\"#00b0ff\"/>\n        <path d=\"m375 476.3 225-129.9v-173.2l-75 43.3v86.6l-150 86.6zm150-346.4v-86.6l75-43.3v86.6z\" fill=\"#0081cb\"/>\n    </SvgIcon>\n))\n\nexport type MaterialUiLinkProps = {\n    iconProps?: SvgIconProps\n}\n\nconst MaterialUiLink = (props: MaterialUiLinkProps) => (\n    <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\n        <MaterialUiIcon fontSize='large' {...props.iconProps as any} />\n    </Link>\n)\n\nexport default MaterialUiLink\n","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Link from '@material-ui/core/Link'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nexport const GitHubIcon = React.memo((props: SvgIconProps) => (\n    <SvgIcon {...props}>\n        <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\n    </SvgIcon>\n))\n\nexport type GitHubLinkProps = {\n    path?: string\n    tooltip?: string\n    iconProps?: SvgIconProps\n}\n\nconst GitHubLink = (props: GitHubLinkProps) => {\n    return (\n        <Link href={`https://github.com/tfso/react-tfso-components${props.path ? `/${props.path}` : ''}`} target='_blank' rel='noreferrer' >\n            <Tooltip title={props.tooltip ? props.tooltip : 'View on GitHub'}>\n                <GitHubIcon fontSize={props.iconProps && props.iconProps.fontSize || 'large'} {...props.iconProps as any} />\n            </Tooltip>\n        </Link>\n    )\n}\n\nexport default GitHubLink\n","import React from 'react'\n\nimport styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Zoom from '@material-ui/core/Zoom'\nimport Link from '@material-ui/core/Link'\n\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\nimport {MaterialUiIcon} from '../components/MaterialUiLink'\nimport {GitHubIcon} from '../components/GitHubLink'\n\n// TODO: this could be a Util HOC component\nconst CenterTop = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    flex-direction: column;\n    height: 100%;\n`\n\nconst Home = () => {\n    return (\n        <CenterTop>\n            <TfsoLoading once color='primary' fontSize='inherit' style={{fontSize: 400}} />\n            <Typography variant='h3' color='primary' paragraph>\n                REACT-TFSO-COMPONENTS\n            </Typography>\n            <Typography variant='h6' align='center' color='textSecondary' paragraph>\n                Something something useful description something dark side (TODO) <br />\n                Supplementary React components based on Material-UI with Tfso styling<br />\n            </Typography>\n            <Grid container justify='center'>\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\n                    <Zoom in appear style={{transitionDelay: '250ms'}} >\n                        <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\n                            <MaterialUiIcon style={{fontSize: 150}} />\n                        </Link>\n                    </Zoom>\n                    <Zoom in appear style={{transitionDelay: '750ms'}} >\n                        <Typography variant='h6'>\n                            Find standard components <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>here</Link>\n                        </Typography>\n                    </Zoom>\n                </Grid>\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\n                    <Zoom in appear style={{transitionDelay: '500ms'}}>\n                        <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >\n                            <GitHubIcon style={{fontSize: 150}} color='primary' />\n                        </Link>\n                    </Zoom>\n                    <Zoom in appear style={{transitionDelay: '1000ms'}} >\n                        <Typography variant='h6'>\n                            View source on <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >GitHub</Link>\n                        </Typography>\n                    </Zoom>\n                </Grid>\n            </Grid>\n        </CenterTop>\n    )\n}\n\nexport default Home","import React from 'react'\nimport Prism from 'prismjs'\n\n// Load languages\nimport 'prismjs/components/prism-clike'\nimport 'prismjs/components/prism-css'\nimport 'prismjs/components/prism-markup'\nimport 'prismjs/components/prism-javascript'\nimport 'prismjs/components/prism-typescript'\nimport 'prismjs/components/prism-jsx'\nimport 'prismjs/components/prism-tsx'\n\n// Load style\nimport 'prismjs/themes/prism.css'\n\ntype CodeProps = {\n    language: 'js' | 'ts' | 'tsx' | 'jsx'\n    children: React.ReactNode\n}\n\nexport class Code extends React.PureComponent<CodeProps>{\n    _ref: React.RefObject<HTMLPreElement> = React.createRef()\n\n    componentDidMount(){\n        this.highlight()\n    }\n\n    componentDidUpdate(){\n        this.highlight()\n    }\n\n    highlight = () => {\n        if(!this._ref.current){ return }\n        Prism.highlightElement(this._ref.current!)\n    }\n\n    render(){\n        return (\n            <pre ref={this._ref} className={`language-${this.props.language}`}>\n                <code className={`language-${this.props.language}`}>\n                    {this.props.children}\n                </code>\n            </pre>\n        )\n    }\n}","import React, {ReactChild} from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport Divider from '@material-ui/core/Divider'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport CodeIcon from '@material-ui/icons/Code'\n\nimport GitHubLink from './GitHubLink'\nimport {Code} from './code'\n\nexport const Demo = (props) => <Paper style={{padding: 15, marginBottom: 30}}>{props.children}</Paper>\n\nexport type DemoTitleProps = {\n    children: string\n    /**\n     * The path to the Demo component. `src/demo/demos/` will be appended in front of the path\n     */\n    demoPath?: string\n\n    /**\n     * The path to the Implementation of the component. `src/lib/` will be appended in front of the path\n     */\n    srcPath?: string\n}\nexport const DemoTitle = (props: DemoTitleProps) => {\n    return (\n        <Grid container justify='space-between' alignItems='baseline' >\n            <Grid item>\n                <Typography variant=\"h5\">\n                    {props.children}\n                </Typography>\n            </Grid>\n            {props.srcPath || props.demoPath\n                ? <Grid item xs container spacing={16} justify='flex-end' wrap='nowrap'>\n                    {props.demoPath && <Grid item><GitHubLink iconProps={{fontSize: 'default', color: 'secondary'}} path={`blob/master/src/demo/demos/${props.demoPath}`} tooltip={`View demo source for ${props.children}`} /></Grid>}\n                    {props.srcPath && <Grid item><GitHubLink iconProps={{fontSize: 'default', color: 'primary'}} path={`blob/master/src/lib/${props.srcPath}`} tooltip={`View source for ${props.children}`}/></Grid> }\n                </Grid>\n                : null\n            }\n        </Grid>\n    )\n}\nexport const DemoHelp = (props) => <Typography variant='subtitle1' paragraph>{props.children}</Typography>\nexport const DemoContent = (props: { children: Array<ReactChild> | ReactChild}) => (\n    <div style={{marginTop: 30}}>\n        <Typography variant=\"subtitle1\" >Example</Typography>\n        <Divider />\n        <br />\n        <Grid container spacing={16} alignItems='center'>\n            {props.children && Array.isArray(props.children)\n                ? props.children.map((child, i) => (\n                    <Grid item key={i} xs={i === 0 ? 12 : false}>\n                        {child}\n                    </Grid>\n                ))\n                : <Grid item xs={12} >{props.children}</Grid>\n            }\n        </Grid>\n    </div>\n)\n\nexport type DemoPropsProps = {\n    title?: string\n    children: React.ReactNode\n}\n\nexport const DemoProps = (props: DemoPropsProps) => (\n    <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography variant='h6'>{props.title || 'Props'}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails style={{overflowX: 'auto'}}>\n            <Table >\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Type</TableCell>\n                        <TableCell>Default</TableCell>\n                        <TableCell>Description</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.children}\n                </TableBody>\n            </Table>\n        </ExpansionPanelDetails>\n    </ExpansionPanel>\n)\n\nexport type DemoPropProps = {\n    name: string\n    type: string\n    default?: string\n    description?: string\n    required?: boolean\n}\n\nexport const DemoProp = (props: DemoPropProps) => (\n    <TableRow>\n        <TableCell><code>{`${props.required ? '* ' : ''}${props.name}`}</code></TableCell>\n        <TableCell><code>{props.type}</code></TableCell>\n        <TableCell><code>{props.default}</code></TableCell>\n        <TableCell><Typography>{props.description}</Typography></TableCell>\n    </TableRow>\n)\n\ntype DemoCodeProps = Code['props']\nexport const DemoCode = (props: DemoCodeProps) => (\n    <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<CodeIcon />}>\n            <Typography variant='h6'>{`View Demo (${props.language})`}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n            <Code {...props} />\n        </ExpansionPanelDetails>\n    </ExpansionPanel>\n)","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\nimport Tfso, {TfsoIconProps} from '../../lib/icons/Tfso'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\n\nexport default class Icons extends React.PureComponent{\n    render(){\n        return (\n            <>\n                <TfsoDemo />\n                <TfsoLoadingDemo />\n            </>\n        )\n    }\n}\n\ntype TfsoLogoDemoState = {\n    color: TfsoIconProps['color']\n    fontSize: TfsoIconProps['fontSize']\n    nativeColor: TfsoIconProps['nativeColor']\n}\n\nclass TfsoDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\n    state:TfsoLogoDemoState = {\n        color: 'primary',\n        fontSize: 'large',\n        nativeColor: ''\n    }\n\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/Tfso.tsx'>Tfso</DemoTitle>\n                <DemoHelp>Tfso logo icon</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\n                </DemoProps>\n                <DemoContent>\n                    <Tfso\n                        color={this.state.color}\n                        fontSize={this.state.fontSize}\n                        nativeColor={this.state.nativeColor}\n                    />\n                    <TextField\n                        select\n                        label='color'\n                        value={this.state.color}\n                        onChange={this.handleChange('color')}\n                    >\n                        <MenuItem value='inherit' >inherit</MenuItem>\n                        <MenuItem value='primary' >primary</MenuItem>\n                        <MenuItem value='secondary' >secondary</MenuItem>\n                        <MenuItem value='default' >default</MenuItem>\n                        <MenuItem value='action' >action</MenuItem>\n                        <MenuItem value='disabled' >disabled</MenuItem>\n                        <MenuItem value='error' >error</MenuItem>\n                    </TextField>\n                    <TextField\n                        select\n                        label='fontSize'\n                        value={this.state.fontSize}\n                        onChange={this.handleChange('fontSize')}\n                    >\n                        <MenuItem value='small'>small</MenuItem>\n                        <MenuItem value='default'>default</MenuItem>\n                        <MenuItem value='large'>large</MenuItem>\n\n                    </TextField>\n                    <TextField\n                        label='nativeColor'\n                        placeholder='#00B8F3'\n                        value={this.state.nativeColor}\n                        onChange={this.handleChange('nativeColor')}\n                    />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}\n\nclass TfsoLoadingDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\n    state:TfsoLogoDemoState = {\n        color: 'primary',\n        fontSize: 'large',\n        nativeColor: ''\n    }\n\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/TfsoLoading.tsx'>Tfso Loading</DemoTitle>\n                <DemoHelp>Tfso logo loading icon</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='once' type='boolean' default='false' description='If true, the icon will animate once'/>\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\n                </DemoProps>\n                <DemoContent>\n                    <TfsoLoading\n                        color={this.state.color}\n                        fontSize={this.state.fontSize}\n                        nativeColor={this.state.nativeColor}\n                    />\n                    <TextField\n                        select\n                        label='color'\n                        value={this.state.color}\n                        onChange={this.handleChange('color')}\n                    >\n                        <MenuItem value='inherit' >inherit</MenuItem>\n                        <MenuItem value='primary' >primary</MenuItem>\n                        <MenuItem value='secondary' >secondary</MenuItem>\n                        <MenuItem value='default' >default</MenuItem>\n                        <MenuItem value='action' >action</MenuItem>\n                        <MenuItem value='disabled' >disabled</MenuItem>\n                        <MenuItem value='error' >error</MenuItem>\n                    </TextField>\n                    <TextField\n                        select\n                        label='fontSize'\n                        value={this.state.fontSize}\n                        onChange={this.handleChange('fontSize')}\n                    >\n                        <MenuItem value='small'>small</MenuItem>\n                        <MenuItem value='default'>default</MenuItem>\n                        <MenuItem value='large'>large</MenuItem>\n                    </TextField>\n                    <TextField\n                        label='nativeColor'\n                        placeholder='#00B8F3'\n                        value={this.state.nativeColor}\n                        onChange={this.handleChange('nativeColor')}\n                    />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import {createHashHistory} from 'history'\n\nconst history = createHashHistory({\n    basename: '',\n    hashType: 'slash',\n})\nexport default history","import React from 'react'\n\nimport history from '../history'\n\nimport MuiLink, {LinkProps as MuiLinkProps} from '@material-ui/core/Link'\nimport styled from 'styled-components/macro'\n\nexport type LinkProps = {\n    to?: string\n    children: React.ReactNode\n} & MuiLinkProps\n\nexport default class Link extends React.PureComponent<LinkProps>{\n    onClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n        this.props.onClick && this.props.onClick(event)\n\n        if(event.defaultPrevented || !this.props.to){\n            return\n        }\n        event.preventDefault()\n        history.push(this.props.to.toLowerCase())\n    }\n\n    render(){\n        const {to, href, underline, ...other} = this.props\n        return <MuiLink\n            {...other}\n            href={to && to.toLowerCase() || href}\n            underline={underline || 'none'}\n            rel={this.props.target === '_blank' ? 'noreferrer' : undefined}\n            onClick={this.onClick}\n        />\n    }\n}\n\nconst AnchorLink = styled(Link)`&&{\n    opacity: 0.2;\n    :hover{\n        opacity: 1;\n    }\n}`\n\nconst getPage = () => window.location.hash.split('/')[1]\nexport const Anchor = (props: {id: string}) => {\n    const id = `/${getPage()}/${props.id.toLowerCase()}`\n    return (\n        <AnchorLink id={id} to={id}>#</AnchorLink>\n    )\n}","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport Typography, {TypographyProps} from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport {Code} from '../components/code'\nimport Link, {Anchor} from '../components/Link'\n\n// https://www.w3schools.com/charsets/ref_emoji.asp\nconst emojis = {\n    middleFinger: <>&#128405;</>,\n    indexFinger: <>&#128070;</>,\n    flex: <>&#128170;</>,\n    brokenHeart: <>&#128148;</>,\n    perfect: <>&#128076;</>,\n    thumbsUp: <>&#128077;</>,\n    thumbsDown: <>&#128078;</>,\n    clap: <>&#128079;</>,\n    heart: <>&#128152;</>,\n    fire: <>&#128293;</>,\n    bulb: <>&#128161;</>,\n    crap: <>&#128169;</>,\n    thinking: <>&#129300;</>,\n    rocket: <>&#128640;</>\n}\n\nconst Section = styled.div`&&{\n    margin-top: ${({theme}) => theme.mui.spacing.unit * 4}px;\n    margin-bottom: ${({theme}) => theme.mui.spacing.unit * 2}px;\n}`\n\nconst SubHeading = (props: TypographyProps) => <Typography variant='h4' paragraph {...props} />\nconst Paragraph = (props: TypographyProps) => <Typography variant='body1' paragraph {...props} component='div'/>\nconst Tip = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\n    <Card elevation={0}>\n        <CardContent>\n            <Typography variant='h6'>Why?</Typography>\n            <Typography variant='body1' component='div'>{props.children}</Typography>\n        </CardContent>\n    </Card>\n    <br />\n</>)\n\nconst Guideline = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\n    <Card elevation={0}>\n        <CardContent>\n            <Typography variant='body1' component='div'>{props.children}</Typography>\n        </CardContent>\n    </Card>\n</>)\n\nexport default class Guidelines extends React.PureComponent{\n    render = () => (<>\n        {this.renderHeading()}\n        {this.renderGuidelines()}\n        {this.renderTips()}\n        {this.renderContributing()}\n    </>)\n\n    renderHeading = () => (\n        <>\n            <Typography variant='h2' paragraph>\n                Guidelines\n            </Typography>\n            <Typography variant='subtitle1' paragraph>\n                <b>{'{WIP} '}</b>Some general guidelines for developing React applications in TFSO\n            </Typography>\n        </>\n    )\n\n    renderGuidelines = () => (\n        <Section>\n            <SubHeading>General <Anchor id={'general'}/></SubHeading>\n            <Guideline title='Material Design'>\n                We strive to follow <Link underline='hover' href='https://material.io/design/' target='_blank'>Google's Material Design</Link> principles. <br />\n                Use components and icons from the <Link underline='hover' href='https://material-ui.com/' target='_blank'>MaterialUi package</Link><br />\n                This package also provides a theme to be used with <code>material-ui</code>, <Link underline='hover' to='/theme'>get started using it here</Link>\n            </Guideline>\n        </Section>\n    )\n\n    renderTips = () => (\n        <Section>\n            <SubHeading>\n                {emojis.indexFinger} Do's &amp; Don'ts {emojis.middleFinger} <Anchor id={'dodont'} />\n            </SubHeading>\n            <Tip title={<>Specific imports</>}>\n                Reducing bundle size!<br />\n                <b>Bad:</b>\n                <Code language='js'>\n                    {\n                        `import { Button } from '@material-ui/core' // All of material-ui/core will be included in the bundle!\nimport { Alert } from 'react-tfso-components' // All of react-tfso-components will be included in the bundle!`\n                    }\n                </Code>\n                <b>Good:</b>\n                <Code language='js'>\n                    {\n                        `import Button from '@material-ui/core/Button'\nimport Alert from 'react-tfso-components/dist/Alert'`\n                    }\n                </Code>\n            </Tip>\n\n            <Tip title={<>{/* emojis.thumbsUp */}Extend from <code>React.PureComponent</code> instead of <code>React.Component</code></>}>\n                Your components should never mutate the state directly or have mutable properties.<br/>\n                Hence they are pure, and should extend React.PureComponent, which is more performant.\n            </Tip>\n            <Tip title={<>{/* emojis.thumbsDown */}Don't use <code>componentWillReceiveProps</code></>}>\n                It's deprecated and going away in React 17 {emojis.brokenHeart}<br />\n                More information <Link underline='hover' href='https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops' target='_blank'>here</Link>\n            </Tip>\n            <Tip title={<>{/* emojis.thumbsDown */}Avoid copying props to state</>}>\n                ...unless you absolutely need to, there are legit reasons, however there is most likely a better solution. <br />\n                Perhaps you should invoke a callback provided by props and let the parent component handle something?\n            </Tip>\n        </Section>\n    )\n\n    renderContributing = () => (<>\n        <SubHeading>\n            Contributing to <code>react-tfso-components</code> {emojis.rocket} <Anchor id='contributing' />\n        </SubHeading>\n        <Paragraph>\n            Components in this package should:\n            <ul>\n                <li>Be written in typescript or provide type declarations (d.ts)</li>\n                <li>Be composible</li>\n                <li>Not be specific to a domain/usage (they should be as generic as possible)</li>\n                <li>Validate props using `<code>prop-types`</code></li>\n                <li>Be Pure (function component or extending <code>React.PureComponent</code>)</li>\n                <li>Have descriptive and easy to understand Props:\n                    <ul>\n                        <li>Use commonly known verbs/names</li>\n                        <li>Function props should begin with 'on', (onFocus, onChange etc.)</li>\n                        <li>Boolean props should <i>not</i> begin with 'is', (open instead of isOpen)</li>\n                        <li>Boolean props should be optional, (eg. <code>open?: boolean</code>), <code>undefined</code> should be evaluated as <code>false</code></li>\n                        <li><code>children</code> should always be explicitly typed (eg: <code>children: string</code>)</li>\n                        <li><code>children</code> should be defined as\n                            <ul>\n                                <li><code>React.ReactCild</code> for single child<br /></li>\n                                <li><code>React.ReactNode</code> for multiple children</li>\n                                <li>primitive type (<code>undefined</code>, <code>string</code>, <code>number</code> etc.)</li>\n                            </ul>\n                        </li>\n                    </ul>\n                </li>\n                <li>Have a demo with documentation so that developers can easily find and use your component</li>\n            </ul>\n        </Paragraph>\n    </>)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport {styledTheme} from '../../lib/theme/index'\n\nconst bgColor = (color: '') => {\n    const colors = styledTheme['tfso']['colors']\n    return colors[color]\n}\n\nexport type ThemeColorProps = {\n    color: React.ReactNode\n}\n\nconst Box = styled.div`\n    background-color: ${({color, theme}) => theme.tfso.colors[color]};\n    width: 230px;\n    height: 230px;\n    text-align: center;\n`\n\nconst Txt = styled.div`\n  font-size: 2em;\n  line-height: 2em;\n  color: ${({dark, theme}) => dark ? '#000' : theme.mui.palette.secondary.contrastText}\n`\n\nconst ThemeColor = (props: ThemeColorProps) => {\n    const {color} = props\n    return (\n        <Box color={color}>\n            theme.tfso.colors.{color}<br/><br/>\n            <Txt>{bgColor(color)}</Txt>\n            <Txt dark>{bgColor(color)}</Txt>\n        </Box>\n    )\n}\n\nThemeColor.propTypes = {\n    color: PropTypes.node.isRequired\n}\n\nexport default ThemeColor","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport ThemeColor from '../components/ThemeColor'\nimport {styledTheme} from '../../lib/theme/index'\n\nconst ThemeColors = styled.div`\n  clear: both;\n  > div{\n    float: left;\n      :hover{\n        width: 460px;\n        height: 230px;\n      }\n  }\n`\n\nexport default class Theme extends React.PureComponent{\n    render(){\n        return (\n            <>\n                <Typography variant='h2'>\n                    Theme &amp; Styling\n                </Typography>\n                <Typography variant='subtitle1'>\n                    There is more TODO\n                </Typography>\n                <ThemeColors>\n                    {Object.keys(styledTheme['tfso']['colors']).map(color => (\n                        <ThemeColor key={color} color={color}/>\n                    ))}\n                </ThemeColors>\n            </>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport Trending, {TrendingProps} from '../../lib/Trending'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\ntype TrendingDemoState = {\n    variant: TrendingProps['variant']\n}\n\nexport default class TrendingDemo extends React.PureComponent<{}, TrendingDemoState>{\n    state: TrendingDemoState = {\n        variant: 'up'\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='TrendingDemo.tsx' srcPath='Trending.tsx' >Trending</DemoTitle>\n                <DemoHelp>\n                    A colored icon indicating a trending direction. <br/>\n                    Tip: You can use the <code>color</code> or <code>nativeColor</code> property to override the color of the icon.\n                </DemoHelp>\n                <DemoProps>\n                    <DemoProp name='variant' type='up | down | flat' default='' description=''></DemoProp>\n                    <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp>\n                </DemoProps>\n                <DemoContent>\n                    <Trending variant={this.state.variant} fontSize='large' />\n                    <TextField\n                        select\n                        value={this.state.variant}\n                        onChange={e => this.setState({variant: e.target.value as any})}\n                        label='variant'\n                    >\n                        <MenuItem value='up'>up</MenuItem>\n                        <MenuItem value='flat'>flat</MenuItem>\n                        <MenuItem value='down'>down</MenuItem>\n                    </TextField>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport BigNumber, {BigNumberProps} from '../../lib/BigNumber'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\ntype BigNumberState = {\n    color: BigNumberProps['color']\n    size: BigNumberProps['size']\n}\n\nexport default class BigNumberDemo extends React.PureComponent<{}, BigNumberState>{\n    state: BigNumberState = {\n        color: 'dark',\n        size: 'large',\n    }\n\n    handleChange = (key: keyof BigNumberState) => (event: React.ChangeEvent<HTMLSelectElement>) => this.setState({[key]: event.target.value} as any)\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='BigNumberDemo.tsx' srcPath='BigNumber.tsx' >BigNumber</DemoTitle>\n                <DemoHelp>\n                    A Big Number is a number stands out\n                </DemoHelp>\n                <DemoProps>\n                    <DemoProp name='color' type='light | dark' default='light' description=''></DemoProp>\n                    <DemoProp name='size' type='medium | large' default='larger' description=''></DemoProp>\n                    <DemoProp name='children' type='string | number' default='' description=''></DemoProp>\n                    {/* <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp> */}\n                </DemoProps>\n                <DemoContent>\n                    <Grid container alignItems='center' spacing={32}>\n                        <Grid item>\n                            <div style={{backgroundColor: this.state.color === 'light' ? '#11beff' : 'inherit', padding: 10}}>\n                                <BigNumber\n                                    size={this.state.size}\n                                    color={this.state.color}\n                                >$123</BigNumber>\n                            </div>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant='caption'>NB: The BigNumber component does not set the background color!<br /> The background color used here is just for illustrative purposes.</Typography>\n                        </Grid>\n                    </Grid>\n                    <TextField\n                        select\n                        label='size'\n                        value={this.state.size}\n                        onChange={this.handleChange('size')}\n                    >\n                        <MenuItem value='medium'>medium</MenuItem>\n                        <MenuItem value='large'>large</MenuItem>\n                    </TextField>\n                    <TextField\n                        select\n                        label='color'\n                        value={this.state.color}\n                        onChange={this.handleChange('color')}\n                    >\n                        <MenuItem value='light'>light</MenuItem>\n                        <MenuItem value='dark'>dark</MenuItem>\n                    </TextField>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle, DemoCode} from '../components/demo'\n\nimport Alert, {AlertProps} from '../../lib/Alert'\n\nconst variantMessage: {[P in AlertProps['variant']]: string } = {\n    success: 'GRATE SUCCÉSS!',\n    info: 'Informational information',\n    warning: 'You better not do that, Brian',\n    error: 'That failed horribly...',\n}\n\nexport default class AlertDemo extends React.PureComponent<{}, {variant: AlertProps['variant'], message: string, open: boolean}>{\n    state = {\n        variant: 'success' as AlertProps['variant'],\n        open: false,\n        message: 'GRATE SUCCÉSS!'\n    }\n\n    onClose = () => this.setState({open: false})\n\n    onPress = (variant: AlertProps['variant']) => {\n        const message = variantMessage[variant]\n        return () => this.setState({open: true, message, variant})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='AlertDemo.tsx' srcPath='Alert.tsx' >Alert</DemoTitle>\n                <DemoHelp>A dismissable alert-box that can be used in a SnackBar or as a standard component in a page</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='message' type='string | ReactNode' description='The message string or Element to be displayed' />\n                    <DemoProp name='variant' type='success | error | info | warning' description='The variant of the alert. Icon and background-color is selected based on the variant' />\n                    <DemoProp name='onClose' type='() => void' description='Callback function invoked when the alert is dismissed' />\n                </DemoProps>\n                <DemoCode language='tsx'>\n                    {`import React from 'react'\nimport Alert from 'react-tfso-components/dist/Alert'\nimport Snacbar from '@material-ui/core/Snackbar'\nimport Button from '@material-ui/core/Button'\n\nclass Alerter extends React.PureComponent<{}, {open: boolean}> {\n    state = {\n        open: false\n    }\n\n    onClose = () => this.setState({open: false})\n\n    render(){\n        return(\n            <React.Fragment>\n                <Snackbar\n                    open={this.state.open}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    autoHideDuration={2000}\n                    onClose={this.onClose}\n                >\n                    <Alert\n                        onClose={this.onClose}\n                        message='An unexpected error occured'\n                        variant='error'\n                    />\n                </Snackbar>\n                <Button variant='outlined' onClick={() => this.setState({open: true})}>Show Alert</Button>\n            </React.Fragment>\n        )\n    }\n}`\n                    }\n                </DemoCode>\n                <DemoContent>\n                    <Snackbar\n                        open={this.state.open}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        autoHideDuration={2000}\n                        onClose={this.onClose}\n                    >\n                        <Alert\n                            onClose={this.onClose}\n                            message={this.state.message}\n                            variant={this.state.variant}\n                        />\n                    </Snackbar>\n                    <Button variant='outlined' onClick={this.onPress('success')}>Open Success</Button>\n                    <Button variant='outlined' onClick={this.onPress('info')}>Open Info</Button>\n                    <Button variant='outlined' onClick={this.onPress('warning')}>Open Warning</Button>\n                    <Button variant='outlined' onClick={this.onPress('error')}>Open Error</Button>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport SearchField from '../../lib/SearchField'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\n\nexport default class SearchFieldDemo extends React.PureComponent{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='SearchFieldDemo.tsx' srcPath='SearchField.tsx' >SearchField</DemoTitle>\n                <DemoHelp>A TextField that gets full width on typing. It also has a search icon adornnment.</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='placeholder' type='string (optional)' default='Search' description=''></DemoProp>\n                    <DemoProp name='margin' type='none | dense | normal (optional)' default='dense' description=''></DemoProp>\n                    <DemoProp name='InputProps' type=\"TextFieldProps['InputProps'] (optional)\" default='{ startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>}' description=''></DemoProp>\n                    <DemoProp name='...' type='TextFieldProps' default='' description='Any other prop is spread to the TextField'></DemoProp>\n                </DemoProps>\n                <DemoContent>\n                    <SearchField />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextFieldEditor from '../../lib/TextFieldEditor'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Typography from '@material-ui/core/Typography'\n\nexport default class TextFieldEditorDemo extends React.PureComponent{\n    state = {\n        value: 'demo',\n        dirty: false,\n        enableDirtyCheck: false\n    }\n\n    onReset = () => {\n        this.setState({value: ''})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='TextFieldEditorDemo.tsx' srcPath='TextFieldEditor.tsx' >TextFieldEditor</DemoTitle>\n                <DemoHelp>A wrapper around material-ui's TextField with some added features</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='value' type='string' default='' description='' />\n                    <DemoProp name='onChange' type='(value: string) => void' default='' description='Invoked when the user has finished editing the value (editor looses focus by clicking or tabbing away, pressing the Enter or ctrl+s' />\n                    <DemoProp name='dirty' type='boolean (optional)' default='false' description='If true, it is rendered in italic after onChange' />\n                    <DemoProp name='enableDirtyCheck' type='boolean (optional)' default='false' description='If true, the component will do internal dirty checking when editing' />\n                    <DemoProp name='...' type='TextFieldProps' description='Any other prop is spread to the TextField' />\n                </DemoProps>\n                <ExpansionPanel>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} >\n                        <Typography>Keybindings</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <code>\n                                ctrl + s:&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is NOT handled!)<br/>\n                                ctrl + z:&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\n                                Enter:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is handled)<br/>\n                                Escape:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\n                        </code>\n                        <br/>\n                        <i>When the event is handled `preventDefault()` and `stopPropagation()` is invoked on the `React.KeyboardEvent`</i><br/>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <DemoContent>\n                    <TextFieldEditor\n                        value={this.state.value}\n                        enableDirtyCheck={this.state.enableDirtyCheck}\n                        dirty={this.state.dirty}\n                        onChange={(value: string) => this.setState({value})}\n                    />\n                    <Button variant='outlined' onClick={() => this.setState({value: 'demo'})}>Reset</Button>\n                    <Button variant='outlined' onClick={() => this.setState({dirty: !this.state.dirty})}>Dirty: {this.state.dirty.toString()}</Button>\n                    <Button variant='outlined' onClick={() => this.setState({enableDirtyCheck: !this.state.enableDirtyCheck})}>Enable dirty check: {this.state.enableDirtyCheck.toString()}</Button>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport ConfirmationDialog from '../../lib/ConfirmationDialog'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\n\nexport default class ConfirmationDialogDemo extends React.PureComponent{\n    state = {\n        openConfirmationDialog: false\n    }\n\n    onClickOpenConfirmationDialog = () => {\n        this.setState({openConfirmationDialog: true})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='ConfirmationDialogDemo.tsx' srcPath='ConfirmationDialog.tsx' >ConfirmationDialog</DemoTitle>\n                <DemoHelp>A Dialog containing Ok and Cancel buttons</DemoHelp>\n                <DemoProps>\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show dialog\" />\n                    <DemoProp name=\"title\" type=\"string (optional)\" default=\"\" description=\"Dialog title\" />\n                    <DemoProp name=\"message\" type=\"string\" default=\"\" description=\"Dialog content\" />\n                    <DemoProp name=\"okButtonText\" type=\"string\" default=\"\" description=\"\" />\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"\" />\n                    <DemoProp name=\"onOk\" type=\"function\" default=\"\" description=\"\" />\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"\" />\n                </DemoProps>\n                <DemoContent>\n                    <Button variant='outlined' onClick={this.onClickOpenConfirmationDialog}>Open ConfirmationDialog</Button>\n                    <ConfirmationDialog\n                        open={this.state.openConfirmationDialog}\n                        okButtonText='Ok'\n                        cancelButtonText='Cancel'\n                        onOk={() => this.setState({openConfirmationDialog: false})}\n                        onCancel={() => this.setState({openConfirmationDialog: false})}\n                        message='Confirmation dialog message'\n                        title='Confirmation dialog title'\n                    />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport ListPicker from '../../lib/ListPicker'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport styled from 'styled-components'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nconst DemoDisplay = styled.div`\n  flex: 1;\n`\n\nexport default class ListPickerDemo extends React.PureComponent{\n    _anchorEl: React.RefObject<HTMLButtonElement> = React.createRef()\n    state = {\n        selectedOption: undefined,\n        selected: 'none',\n        buttonType: 'default',\n        open: false,\n        color: 'default',\n        loading: false,\n        options: [{\n            value: '23324',\n            label: 'Vrådal & Rypefjord AS'\n        }, {\n            value: '353453',\n            label: '24SevenOffice Norge'\n        }, {\n            value: '234234324',\n            label: '24sevenOffice Labs'\n        }, {\n            value: '534536553',\n            label: '24SevenOffice Denmark'\n        }, {\n            value: '23424534324',\n            label: '24sevenOffice Finland'\n        }, {\n            value: '53453233',\n            label: '24SevenOffice Sweden'\n        }]\n    }\n\n    onClickOpenConfirmationDialog = () => {\n        this.setState({\n            open: true,\n            loading: true\n        })\n\n        setTimeout((t)=>{\n            this.setState({\n                loading: false\n            })\n        }, 2000)\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            selected: event.target.value\n        })\n    }\n\n    handleColor = (event) => {\n        this.setState({\n            color: event.target.value\n        })\n    }\n\n    onSwitch =(value) => {\n        this.setState({selectedOption: value})\n        this.onCancel()\n    }\n\n    onCancel =() => {\n        this.setState({open: false})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='ListPickerDemo.tsx' srcPath='ListPicker.tsx' >ListPicker</DemoTitle>\n                <DemoHelp>Dialog(mobile) or Popover(desktop) showing list of options. Made with switching client's in mind</DemoHelp>\n                <DemoProps>\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show list of options\" />\n                    <DemoProp name=\"options\" type=\"arrayOf<{ value: string, label: string }>\" description=\"Array of items to display\"/>\n                    <DemoProp name=\"disabled\" type=\"string\" default=\"\" description=\"Disables current item in list\" />\n                    <DemoProp name=\"selected\" type=\"string\" default=\"\" description=\"Selects current item in list\" />\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"Text for cancel button\" />\n                    <DemoProp name=\"onSwitch\" type=\"function\" default=\"\" description=\"Returns value for selected option\" />\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"Fires when list closes\" />\n                    <DemoProp name=\"avatarColor\" type=\"string\" default=\"\" description=\"Valid values are types of #f7f7f7 or green\" />\n                    <DemoProp name=\"loading\" type=\"bool\" default=\"\" description=\"Shows a loading indicator as long as loading = true\" />\n                </DemoProps>\n                <DemoContent>\n                    <ListPicker\n                        anchorEl={this._anchorEl.current}\n                        open={this.state.open}\n                        cancelButtonText='Cancel'\n                        searchLabel='Search list'\n                        onCancel={this.onCancel}\n                        onSelect={this.onSwitch}\n                        options={this.state.options}\n                        disabled='234234324'\n                        selected={this.state.selected}\n                        avatarColor={this.state.color == 'default' ? '' : this.state.color}\n                        loading={this.state.loading}\n                    />\n                    <Button variant='outlined' buttonRef={this._anchorEl} onClick={this.onClickOpenConfirmationDialog}>Open list</Button>\n                    <InputLabel shrink htmlFor=\"age-label-placeholder\">\n                        AvatarColor\n                    </InputLabel>\n                    <Select\n                        onChange={this.handleColor}\n                        value={this.state.color}\n                    >\n                        <MenuItem key='default' value='default'>Default</MenuItem>\n                        <MenuItem key='green' value='green' >Green</MenuItem>\n                        <MenuItem key='purple' value='purple' >Purple</MenuItem>\n                        <MenuItem key='orange' value='orange' >Orange</MenuItem>\n                    </Select>\n                    <InputLabel shrink htmlFor=\"age-label-placeholder\">\n                        Set selected\n                    </InputLabel>\n                    <Select\n                        onChange={this.handleChange}\n                        value={this.state.selected}\n                    >\n                        <MenuItem value='none'>None</MenuItem>\n                        { this.state.options\n                            .map((option, i) => (\n                                <MenuItem\n                                    key={i}\n                                    value={option.value}\n                                >\n                                    {option.label}\n                                </MenuItem>\n                            ))\n                        }\n                    </Select>\n                    {this.state && this.state.selectedOption\n                        ? <DemoDisplay>You have selected: {this.state.selectedOption} {\n                            this.state.options\n                                .map((option) => {\n                                    if(option.value == this.state.selectedOption){\n                                        return '(' + option.label + ')'\n                                    }\n                                })}</DemoDisplay>\n                        : ''\n                    }\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\nimport Emoji from '../../lib/Emoji'\n\nimport Typography from '@material-ui/core/Typography'\n\ntype State = {\n    // variant\n}\n\nexport default class EmojiDemo extends React.PureComponent<{}, State>{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle srcPath='Emoji.tsx' demoPath='EmojiDemo.tsx'>Emoji</DemoTitle>\n                <DemoHelp>A simple html Emoji component</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='variant' type='string' default='' description=''/>\n                </DemoProps>\n                <DemoContent>\n                    <Typography variant=\"h2\">\n                        <Emoji variant='heart' />\n                        <Emoji variant='thumbsUp' />\n                        <Emoji variant='fire' />\n                    </Typography>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\nimport isEqual from 'lodash/isEqual'\n\nimport Paper, {PaperProps} from '@material-ui/core/Paper'\n\nimport RGL, {Layout, WidthProvider} from 'react-grid-layout/'\nimport 'react-grid-layout/css/styles.css'\nimport 'react-resizable/css/styles.css'\n\nconst ReactGridLayout = WidthProvider(RGL)\n\nconst BackgroundPaper = ({backgroundColor, ...props}: { backgroundColor: string } & PaperProps) => (<Paper {...props} />)\nconst GridItemContainer = styled(BackgroundPaper)`&&{\n    background-color: ${({backgroundColor}) => backgroundColor};\n    width: 100%;\n    height: 100%;\n}`\n\ntype GridItemWidth = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'\ntype GridItemHeight = number\nconst gridItemWidths = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 'onequarter', 'onethird', 'half', 'twothirds', 'threequarters', 'full']\nconst gridItemWidthNumberMap: {[P in GridItemWidth]: number} = {1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 11: 11, 12: 12, 'onequarter': 3, 'onethird': 4, 'half': 6, 'twothirds': 8, 'threequarters': 9, 'full': 12}\nconst numberGridItemWithMap: {[n: number]: GridItemWidth} = {1: 1, 2: 2, 3: 'onequarter', 4: 'onethird', 5: 5, 6: 'half', 7: 7, 8: 'twothirds', 9: 'threequarters', 10: 10, 11: 11, 12: 'full'}\n\nconst toGridItemWidth = (w?: number): GridItemWidth | undefined => w === undefined ? undefined : numberGridItemWithMap[Math.min(6, Math.trunc(w))]\nconst toGridItemHeight = (w?: number): GridItemHeight | undefined => w === undefined ? undefined : Math.min(12, Math.trunc(w)) as GridItemHeight\n\nconst gridItemPositionToLayout = (position: GridItemPosition): Layout => ({\n    i: position.id,\n    x: position.col,\n    y: position.row,\n    h: position.height,\n    w: gridItemWidthNumberMap[position.width],\n    minH: position.minHeight,\n    minW: position.minWidth && gridItemWidthNumberMap[position.minWidth] || undefined,\n    maxH: position.maxHeight,\n    maxW: position.maxWidth && gridItemWidthNumberMap[position.maxWidth] || undefined,\n    isDraggable: position.draggable !== undefined ? position.draggable : false,\n    isResizable: position.resizable !== undefined ? position.resizable : false,\n    static: position.static,\n})\n\nconst layoutToGridItemPosition = (layout: Layout): GridItemPosition => ({\n    id: layout.i!,\n    col: layout.x,\n    row: layout.y,\n    width: toGridItemWidth(layout.w)!,\n    height: toGridItemHeight(layout.h)!,\n    minHeight: toGridItemHeight(layout.minH),\n    minWidth: toGridItemWidth(layout.minW),\n    maxHeight: toGridItemHeight(layout.maxH),\n    maxWidth: toGridItemWidth(layout.maxW),\n    draggable: layout.isDraggable,\n    resizable: layout.isResizable,\n    static: layout.static,\n})\n\nexport type GridItem = {\n    id: string\n    backgroundColor?: string\n    children: React.ReactNode\n}\n\nexport type GridItemPosition = {\n    id: string\n    col: number\n    row: number\n    width: GridItemWidth\n    height: GridItemHeight\n    minWidth?: GridItemWidth\n    minHeight?: GridItemHeight\n    maxWidth?: GridItemWidth\n    maxHeight?: GridItemHeight\n    draggable?: boolean\n    resizable?: boolean\n    static?: boolean\n}\n\nexport type GridLayoutProps = {\n    items: Array<GridItem>\n    layout: Array<GridItemPosition>\n    /**\n     * @default 16\n     */\n    margin?: number\n    onLayoutChange?: (layout: Array<GridItemPosition>) => void\n    children?: undefined\n}\n\nexport default class GridLayout extends React.PureComponent<GridLayoutProps>{\n    static defaultProps: Partial<GridLayoutProps> = {\n        margin: 16,\n    }\n\n    static propTypes = {\n        margin: PropTypes.number,\n        onLayoutChange: PropTypes.func,\n        items: PropTypes.arrayOf(PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            backgroundColor: PropTypes.string,\n            children: PropTypes.node.isRequired\n        })).isRequired,\n        layout: PropTypes.arrayOf(PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            col: PropTypes.number.isRequired,\n            row: PropTypes.number.isRequired,\n            width: PropTypes.oneOf(gridItemWidths).isRequired,\n            height: PropTypes.number.isRequired,\n            minWidth: PropTypes.oneOf(gridItemWidths),\n            minHeight: PropTypes.number,\n            maxWidth: PropTypes.oneOf(gridItemWidths),\n            maxHeight: PropTypes.number,\n            draggable: PropTypes.bool,\n            resizable: PropTypes.bool,\n            static: PropTypes.bool,\n        })).isRequired\n    }\n\n    _layoutWasChangedWorkaround = false\n\n    componentDidMount(){\n        this.validateItemLayout()\n    }\n\n    onLayoutChange = (layouts: Array<Layout>) => {\n        const {onLayoutChange} = this.props\n        onLayoutChange &&\n            this._layoutWasChangedWorkaround &&\n            onLayoutChange(layouts.map(layoutToGridItemPosition))\n        this._layoutWasChangedWorkaround = false\n    }\n\n    validateItemLayout = () => {\n        if(process.env.NODE_ENV === 'production') return\n\n        const items = new Set(this.props.items.map(item => item.id))\n        const layouts = new Set(this.props.layout.map(layout => layout.id))\n\n        items.forEach(item => {\n            if(!layouts.has(item)){\n                console.error(`Error: Item with id: ${item} is missing layout`)\n            }\n        })\n\n        layouts.forEach(layout => {\n            if(!items.has(layout)){\n                console.warn(`Warning: Layout with id: ${layout} does not correspond to any item`)\n            }\n        })\n    }\n\n    onDragResizeStop = (layout: Layout[], oldItem: Layout, newItem: Layout) => {\n        this._layoutWasChangedWorkaround = !isEqual(oldItem, newItem)\n    }\n\n    render(){\n        const {items, layout, margin = 16} = this.props\n        const rglLayout = Object.values(layout).map(gridItemPositionToLayout)\n\n        return (\n            <ReactGridLayout\n                className='layout'\n                cols={12}\n                rowHeight={90}\n                layout={rglLayout}\n                compactType={'vertical'}\n                margin={[margin, margin]}\n                containerPadding={[0, 0]}\n                autoSize\n                measureBeforeMount\n                // width= // TODO: set this one such that width is fixed, should be someting large, but not too large... hmm.\n                useCSSTransforms\n                preventCollision={false}\n                onLayoutChange={this.onLayoutChange}\n                onResizeStop={this.onDragResizeStop}\n                onDragStop={this.onDragResizeStop}\n            >\n                {items.map(({id, backgroundColor, children}) => (\n                    <GridItemContainer\n                        key={id}\n                        backgroundColor={backgroundColor || 'inherit'}\n                    >\n                        {children}\n                    </GridItemContainer>))\n                }\n            </ReactGridLayout>\n        )\n    }\n}","import React from 'react'\nimport styled from 'styled-components'\n\nimport {Demo, DemoContent, DemoTitle, DemoHelp, DemoProps, DemoProp} from '../components/demo'\nimport GridLayout, {GridLayoutProps, GridItemPosition} from '../../lib/GridLayout'\nimport Link from '../components/Link'\nimport TextField from '@material-ui/core/TextField'\nimport Switch from '@material-ui/core/Switch'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Button from '@material-ui/core/Button'\n\nconst ItemWrapper = ({backgroundColor, ...props}: React.HTMLAttributes<HTMLDivElement> & {backgroundColor: string}) => <div {...props} />\nconst Item = styled(ItemWrapper)`&&{\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: ${({theme, backgroundColor}) => theme.mui.palette.getContrastText(backgroundColor)};\n    font-size: ${({theme}) => theme.mui.typography.h5.fontSize};\n    font-weight: ${({theme}) => theme.mui.typography.h5.fontWeight};\n    font-family: ${({theme}) => theme.mui.typography.h5.fontFamily};\n}`\n\ntype State = {\n    items: GridLayoutProps['items']\n    layout: GridLayoutProps['layout']\n    addItemId: number\n    addResizable: boolean\n    addDraggable: boolean\n    addStatic: boolean\n    addColor: string\n    addWidth: number\n    addHeight: number\n    addCol: number,\n    addRow: number,\n}\n\nexport default class GridLayoutDemo extends React.PureComponent<{}, State>{\n    state: State = {\n        items: [\n            {\n                id: 'a',\n                backgroundColor: '#f0f',\n                children: <Item backgroundColor={'#f0f'}>a</Item>\n            },\n            {\n                id: 'b',\n                backgroundColor: '#0ff',\n                children: <Item backgroundColor={'#0ff'}>b (Static object)</Item>\n            },\n            {\n                id: 'c',\n                backgroundColor: '#ff0',\n                children: <Item backgroundColor={'#ff0'}>\n                    c (Fixed size)\n                    <Button onMouseDown={(e) => e.stopPropagation()} onClick={(e) => console.log('buttonclick')}>Button</Button>\n                </Item>\n            },\n            {\n                id: 'd',\n                backgroundColor: '#f8f',\n                children: <Item backgroundColor={'#f8f'}>d</Item>\n            },\n        ],\n        layout: [\n            {\n                id: 'a',\n                width: 'onequarter',\n                height: 1,\n                col: 0,\n                row: 0,\n                draggable: true,\n                resizable: true\n            },\n            {\n                id: 'b',\n                width: 'onequarter',\n                height: 1,\n                col: 3,\n                row: 0,\n                static: true\n            },\n            {\n                id: 'c',\n                width: 'onequarter',\n                height: 1,\n                col: 6,\n                row: 0,\n                draggable: true,\n            },\n            {\n                id: 'd',\n                width: 'full',\n                height: 2,\n                col: 0,\n                row: 1,\n                resizable: true,\n                draggable: true,\n            },\n        ],\n        addItemId: 1,\n        addColor: '#ccc',\n        addDraggable: true,\n        addResizable: true,\n        addStatic: false,\n        addHeight: 2,\n        addWidth: 6,\n        addCol: 0,\n        addRow: 2\n    }\n\n    onAddItem = () => {\n        const {\n            addItemId: id,\n            addColor: backgroundColor,\n            addDraggable: draggable,\n            addResizable: resizable,\n            addStatic,\n            addWidth: width,\n            addHeight: height,\n            addCol: col,\n            addRow: row,\n            items,\n            layout\n        } = this.state\n\n        const content = JSON.stringify({draggable, resizable, static: addStatic}, undefined, 2).replace(/\"([^(\")\"]+)\":/g, '$1:')\n        const item = {\n            id: id.toString(),\n            backgroundColor,\n            children: <Item backgroundColor={backgroundColor}>{`${id} (${content})`}</Item>\n        }\n\n        const itemLayout = {\n            id: id.toString(),\n            width: Number(width),\n            height: Number(height),\n            draggable,\n            resizable,\n            static: addStatic,\n            col,\n            row: col + width > 12 ? row + 1 : row\n        } as GridItemPosition\n\n        const addCol = col + width\n        this.setState({\n            items: [...items, item],\n            layout: [...layout, itemLayout],\n            addItemId: this.state.addItemId + 1,\n            addCol: addCol >= 12 ? 0 : addCol,\n            addRow: addCol === 0 ? row + height : col + width > 12 ? row + 1 : row\n        })\n    }\n\n    handleChange = (key: keyof State) => (event: React.ChangeEvent<HTMLInputElement>, checked?: boolean) => {\n        let value: string | number | boolean | undefined\n        switch(key){\n        case 'addStatic':\n        case 'addResizable':\n        case 'addDraggable':\n            value = !!checked\n            break\n        case 'addWidth':\n        case 'addHeight':\n            value = Number(event.target.value)\n            break\n        default:\n            value = event.target.value\n            break\n        }\n        this.setState({[key]: value} as any)\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle srcPath='GridLayout.tsx' demoPath='GridLayoutDemo.tsx'>GridLayout</DemoTitle>\n                <DemoHelp>A draggable and movable grid layout based on <Link href='https://github.com/STRML/react-grid-layout' target='_blank'>react-grid-layout</Link></DemoHelp>\n                <DemoProps title='GridLayoutProps' >\n                    <DemoProp name='margin' type='number' default='16' description='The margin between each item' />\n                    <DemoProp required name='onLayoutChange' type='(layout: GridItemPosition[]) => void' default='' description='' />\n                    <DemoProp required name='items' type='GridItem[]' default='' description='' />\n                    <DemoProp required name='layout' type='GridItemPosition[]' default='' description='' />\n                </DemoProps>\n                <DemoProps title='GridItem' >\n                    <DemoProp required name='id' type='string' default='' description='Id of the item. A corresponding GridItemPosition must be supplied to the layout' />\n                    <DemoProp name='backgroundColor' type='string' default='inherit' description='The backgroundcolor of the item' />\n                    <DemoProp required name='children' type='React.ReactNode' default='' description='' />\n                </DemoProps>\n                <DemoProps title='GridItemPosition' >\n                    <DemoProp required name='id' type='string' default='' description='Used to positition the GridItem with the same id' />\n                    <DemoProp required name='col' type='number' default='' description='Column in which the item is positioned' />\n                    <DemoProp required name='row' type='number' default='' description='Row in which the item is positioned' />\n                    <DemoProp required name='width' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\n                    <DemoProp required name='height' type='number' default='' description='Height in number of rows' />\n                    <DemoProp name='draggable' type='boolean' default='false' description='If true, the item can be repositioned by dragging' />\n                    <DemoProp name='resizable' type='boolean' default='false' description='If true, the item can be resized' />\n                    <DemoProp name='static' type='boolean' default='false' description='If true, the item is locked in place (draggable and resizable is overriden to false)' />\n                    <DemoProp name='minWidth' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\n                    <DemoProp name='minHeight' type='number' default='' description='Height in number of rows' />\n                    <DemoProp name='maxWidth' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\n                    <DemoProp name='maxHeight' type='number' default='' description='Height in number of rows' />\n                </DemoProps>\n                <DemoHelp>\n                    To prevent dragging when clicking and holding buttons within gridItems, you must stop the event propagation of the onMouseDown event on the button.<br />\n                    <code>{`onMouseDown={(e) => e.stopPropagation()}`}</code>\n                </DemoHelp>\n                <DemoContent>\n                    <GridLayout\n                        items={this.state.items}\n                        layout={this.state.layout}\n                    />\n                    <FormControlLabel label='static' control={<Switch checked={this.state.addStatic} onChange={this.handleChange('addStatic')}/>}/>\n                    <FormControlLabel label='resizable' control={<Switch checked={this.state.addResizable} onChange={this.handleChange('addResizable')}/>}/>\n                    <FormControlLabel label='draggable' control={<Switch checked={this.state.addDraggable} onChange={this.handleChange('addDraggable')}/>}/>\n                    <TextField label='width' value={this.state.addWidth} onChange={this.handleChange('addWidth')} type='number' inputProps={{max: 12, min: 1}} />\n                    <TextField label='height' value={this.state.addHeight} onChange={this.handleChange('addHeight')} type='number' inputProps={{max: 6, min: 1}} />\n                    <TextField label='backgroundColor' value={this.state.addColor} onChange={this.handleChange('addColor')} />\n                    <Button onClick={this.onAddItem} color='primary' variant='contained'>Add item</Button>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport {Hoverable} from '../../lib'\n\nexport default class HoverableDemo extends React.PureComponent{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='Utils.tsx' srcPath='Hoverable.tsx'>Hoverable</DemoTitle>\n                <DemoHelp>A HOC that passes hover true/false as a render prop</DemoHelp>\n                <DemoProps>\n                    <DemoProp name=\"children\" type=\"(hover: boolean, ref: RefObject) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\n                </DemoProps>\n                <DemoContent>\n                    <Hoverable>\n                        {(hover) => (\n                            <React.Fragment>\n                                {hover\n                                    ? <div key=\"1\" style={{backgroundColor: '#6699bb', padding: 15, color: '#FFF', cursor: 'pointer'}}>You're hovering me!</div>\n                                    : <div key=\"2\" style={{padding: 15, height: '100%'}}>Hover your mouse over me</div>\n                                }\n                            </React.Fragment>\n                        )}\n                    </Hoverable>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport {Delay} from '../../lib'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nexport default class DelayDemo extends React.PureComponent{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='Utils.tsx' srcPath='Delay.tsx'>Delay</DemoTitle>\n                <DemoHelp>Shows the component inside after a set delay. Can be used to only show loaders if exceptionally slow</DemoHelp>\n                <DemoProps>\n                    <DemoProp name=\"beforeShow\" type=\"React element or string (optional)\" default=\"\" description=\"What you want to show before the delay is finished\" />\n                    <DemoProp name=\"delayMs\" type=\"Number (optional)\" default=\"1000\" description=\"Delay time in ms\" />\n                    <DemoProp name=\"show\" type=\"Boolean (optional)\" default=\"false\" description=\"Force show content\" />\n                    <DemoProp name=\"children\" type=\"React element\" default=\"\" description=\"Content to show after delay\" />\n                </DemoProps>\n                <DemoContent>\n                    <Delay beforeShow=\"Waiting for delay...\">\n                        <CircularProgress />\n                    </Delay>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport {Wizard} from '../../lib'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Button from '@material-ui/core/Button'\n\nexport default class WizardDemo extends React.PureComponent{\n    render(){\n        const length = 3\n        return (\n            <Demo>\n                <DemoTitle demoPath='Utils.tsx' srcPath='Wizard.tsx'>Wizard</DemoTitle>\n                <DemoHelp>A HOC that passes an index and next/prev functions in a render prop. Can be used along with material ui stepper or any other wizard</DemoHelp>\n                <DemoProps>\n                    <DemoProp name=\"children\" type=\"(index: number, next: function, prev: function) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\n                    <DemoProp name=\"index\" type=\"number (optional)\" default=\"\" description=\"Force the current index to a certain value\" />\n                    <DemoProp name=\"length\" type=\"number (optional)\" default=\"\" description=\"The max length. The index will always be lower than this\" />\n                </DemoProps>\n                <DemoContent>\n                    <Wizard length={length + 1}>\n                        {(index, next, prev) => (\n                            <React.Fragment>\n                                <Stepper activeStep={index}>\n                                    <Step key=\"Step 1\">\n                                        <StepLabel>Step 1</StepLabel>\n                                    </Step>\n                                    <Step key=\"Step 2\">\n                                        <StepLabel>Step 2</StepLabel>\n                                    </Step>\n                                    <Step key=\"Step 3\">\n                                        <StepLabel>Step 3</StepLabel>\n                                    </Step>\n                                </Stepper>\n                                <div>\n                                    <Button onClick={prev} disabled={index <= 0}>Prev</Button>\n                                    <Button onClick={next} disabled={index >= length}>Next</Button>\n                                    {index >= length && 'All steps completed!'}\n                                </div>\n                            </React.Fragment>\n                        )}\n                    </Wizard>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoTitle} from '../components/demo'\nimport {ScreenSize} from '../../lib'\n\nexport default class ScreenSizeDemo extends React.PureComponent{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='ScreenSize.tsx' srcPath='ScreenSize.tsx'>ScreenSize</DemoTitle>\n                <DemoHelp>Gives you current screen size (mobile, tablet, desktop). Comes in hoc, render prop, and hook variants</DemoHelp>\n                <DemoContent>\n                    Drag screen to different sizes to test. Note that there is some overlap.\n                    <ScreenSize>\n                        {(screenSize) => {\n                            return (\n                                <>\n                                <div>Mobile: {screenSize.mobile.toString()}</div>\n                                <div>Tablet: {screenSize.tablet.toString()}</div>\n                                <div>Desktop: {screenSize.desktop.toString()}</div>\n                                </>\n                            )\n                        }}\n                    </ScreenSize>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\nimport ProfileCard from '../../lib/layout/ProfileCard'\n\nimport Button from '@material-ui/core/Button'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItem from '@material-ui/core/ListItem'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport HelpIcon from '@material-ui/icons/Help'\nimport List from '@material-ui/core/List'\nimport ScreenSize from '../../lib/ScreenSize'\n\ntype State = {\n    // variant\n}\n\nexport default class ProfileCardDemo extends React.PureComponent<{}, State>{\n    state = {\n        anchorEl: null,\n        identity: {\n            license: '2947b4ae-0d40-447b-886f-dcd3aa11648b;693081080913543;1198',\n            identity: {\n                id: '2947b4ae-0d40-447b-886f-dcd3aa11648b'\n            },\n            client: {\n                id: '693081080913543',\n                name: 'Vrådal & Shared Employees & Co'\n            },\n            user: {\n                id: '1198'\n            },\n            profile: {\n                id: '2947b4ae-0d40-447b-886f-dcd3aa11648b',\n                firstName: 'Sjef',\n                lastName: 'Sjefesenen',\n                identifier: 'sjef@kpdemo.no',\n                culture: 'nn-NO',\n                language: 'NO',\n                timeZone: 'Europe/Copenhagen',\n                country: 'ES',\n                created: '2008-08-04T09:04:36.913+00:00',\n                modified: '2019-03-12T00:53:56.946+00:00',\n                gender: 'Male',\n                birthDate: '2018-11-20',\n                location: 'Disneyland',\n                locationCoordinates: '33.8120918,-117.91897419999998',\n                visibility: 'Public',\n                thumb: {data: 'data:image/png;base64, '}\n            },\n            locale: {\n                country: 'NO',\n                culture: 'nn-NO',\n                language: 'NO',\n                timeZoneOffset: '01:00:00',\n                timeZone: 'Europe/Copenhagen'\n            }\n        }\n    }\n\n    handleClick = event => {\n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    }\n\n    onSignOut = () => {\n        console.log('sign out')\n    }\n\n    onSwitch = () => {\n        console.log('switch ')\n    }\n\n    onClient = () => {\n        console.log('client click')\n    }\n\n    onClose = () => {\n        this.setState({\n            anchorEl: null,\n        })\n    }\n\n    onProfile = () => {\n        console.log('onProffil')\n    }\n    onSettings = () => {\n        console.log('on setting')\n    }\n    onRequests = () => {\n        console.log('on request')\n    }\n\n    onHelp = () => {\n        console.log('on help')\n    }\n\n    render(){\n        const {anchorEl} = this.state\n        const open = Boolean(anchorEl)\n        return (\n            <Demo>\n                <DemoTitle srcPath='ProfileCard.tsx' demoPath='ProfileCardDemo.tsx'>Profile Card</DemoTitle>\n                <DemoHelp>Testing</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='open' type='boolean' default='' description=''/>\n                    <DemoProp name='onClose' type='function' default='' description=''/>\n                    <DemoProp name='onSignOut' type='function' default='' description=''/>\n                    <DemoProp name='signOutText' type='string' description='Text for sign out button'/>\n                    <DemoProp name='anchorEl' type='HTMLElement' default='' description='Element to anchors the pop up'/>\n                    <DemoProp name='children' type='React.ReactNode' default='' description='ListItems to add to the menu below settings'/>\n                </DemoProps>\n                <DemoContent>\n                    <Button\n                        aria-owns={open ? 'simple-popper' : undefined}\n                        aria-haspopup=\"true\"\n                        variant=\"contained\"\n                        onClick={this.handleClick}\n                    >\n                        View profile\n                    </Button>\n                    <ProfileCard identity={this.state.identity} signOutText=\"Sign out\" open={open} onClose={this.onClose} onSignOut={this.onSignOut} anchorEl={anchorEl}>\n                        <ScreenSize>\n                            {({mobile}) => (\n                                <List dense={!mobile}>\n                                    <ListItem button onClick={this.onProfile}>\n                                        <ListItemText inset primary=\"Profile\"/>\n                                    </ListItem>\n                                    <ListItem button onClick={this.onRequests}>\n                                        <ListItemText inset primary=\"Forespørsler\"/>\n                                    </ListItem>\n                                    <ListItem button divider onClick={this.onSettings}>\n                                        <Tooltip title='Profile settings'>\n                                            <ListItemIcon>\n                                                <SettingsIcon fontSize='small'/>\n                                            </ListItemIcon>\n                                        </Tooltip>\n                                        <ListItemText inset primary=\"Settings\"/>\n                                    </ListItem>\n                                    {mobile && <ListItem divider button>\n                                        <Tooltip title='Switch client'>\n                                            <ListItemIcon onClick={this.onSwitch}>\n                                                <SwapHorizIcon />\n                                            </ListItemIcon>\n                                        </Tooltip>\n                                        <ListItemText onClick={this.onClient} inset primary={this.state.identity.client.name} secondary='Administrer'/>\n                                    </ListItem>}\n                                    <ListItem button divider onClick={this.onHelp}>\n                                        <Tooltip title='Help me'>\n                                            <ListItemIcon>\n                                                <HelpIcon fontSize='small'/>\n                                            </ListItemIcon>\n                                        </Tooltip>\n                                        <ListItemText primary=\"Help\"/>\n                                    </ListItem>\n                                </List>\n                            )}\n                        </ScreenSize>\n                    </ProfileCard>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport {Demo, DemoContent, DemoTitle, DemoHelp, DemoProps, DemoProp} from '../components/demo'\nimport Notifier, {NotificationItem, NotificationItemProps} from '../../lib/layout/Notify'\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\n\nimport MailIcon from '@material-ui/icons/Email'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport KeyIcon from '@material-ui/icons/VpnKey'\nimport SecurityIcon from '@material-ui/icons/Security'\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount'\n\ntype State = {\n    open: boolean\n    notifications: NotificationItemProps[],\n    loading: boolean\n}\n\nexport default class NotifyDemo extends React.PureComponent<{}, State>{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            open: false,\n            notifications: this.generateNotifications(),\n            loading: false,\n        }\n    }\n\n    generateNotifications = () => {\n        let key = 0\n        const readCount = 3 + Math.random() * 2\n        const makeItem = (children: React.ReactChild, avatar?: React.ReactElement): NotificationItemProps => {\n            let date = new Date()\n            date.setHours(date.getHours() - key * 12 * Math.random())\n            const read = key >= readCount\n            const seen = key >= 2\n            const id = `${read ? 'p' : 'n'}-${key++}`\n            return {\n                read,\n                seen: seen,\n                id,\n                date,\n                children,\n                avatar,\n                onClick: () => console.log('Clicked notification', id),\n                onToggleMarkRead: this.onRead(id),\n                toggleMarkReadTitle: 'Mark as read',\n                toggleMarkUnreadTitle: 'Mark as unread'\n            }\n        }\n        return [\n            makeItem(<Typography>New mail from <b>verk@stag.no</b></Typography>, <Avatar style={{backgroundColor: 'magenta'}}><MailIcon /></Avatar>),\n            makeItem(<Typography><b>Fru Hansen</b> sendt you a message</Typography>, <Avatar style={{backgroundColor: 'green'}}><ChatIcon /></Avatar>),\n            makeItem(<Typography>Access to <b>Sagene Verk &amp; Byll</b> was granted by <b>Søstrene Hansonsen</b></Typography>, <Avatar style={{backgroundColor: 'blue'}}><KeyIcon /></Avatar>),\n            makeItem(<Typography>Something may or may not have happened</Typography>, <Avatar>42</Avatar>),\n            makeItem(<Typography>Acces was denied to <b>Loff på tverrstaget</b></Typography>, <Avatar style={{backgroundColor: 'purple'}}><SecurityIcon /></Avatar>),\n            makeItem(<Typography><b>Kari</b> requested access to <b>Stagrapport</b></Typography>, <Avatar style={{backgroundColor: 'purple'}}><SecurityIcon /></Avatar>),\n            makeItem(<Typography>Notification without avatar notifying <b>something</b></Typography>),\n            makeItem(<Typography>You where notified of something that happened</Typography>, <Avatar><SupervisorAccountIcon /></Avatar>),\n            makeItem(<Typography>Sometime something happened</Typography>, <Avatar>Foo</Avatar>),\n            makeItem(<Typography>Access to <b>Hostekrampefabrikken</b> was granted by <b>Kols</b></Typography>, <Avatar style={{backgroundColor: 'blue'}}><KeyIcon /></Avatar>),\n            makeItem(<Typography>Something definitely have happened</Typography>, <Avatar>42</Avatar>),\n            makeItem(<Typography><b>Kjell Aronsen</b> requested access to <b>Tettstedet</b></Typography>, <Avatar style={{backgroundColor: 'purple'}}><SecurityIcon /></Avatar>),\n            makeItem(<Typography>The watchdog service <b>los på mongotraller</b> is out of order</Typography>),\n        ]\n    }\n\n    renderNotifications(){\n        return this.state.notifications\n            .sort((a, b) => b.date.getTime() - a.date.getTime())\n            .map(n => <NotificationItem key={n.id} {...n} />)\n    }\n\n    onOpen = () => {\n        this.setState({loading: true, open: true})\n        setTimeout(() => this.setState({loading: false}, this.onSeen), 3000)\n    }\n\n    onSeen = () => {\n        if(!this.state.open){\n            return\n        }\n\n        this.setState(state => ({\n            notifications: state.notifications.map(n => ({...n, seen: true}))\n        }))\n    }\n\n    onClose = () => {\n        this.setState({open: false})\n    }\n\n    onRead = (id: string) => () => this.setState(state => ({\n        notifications: state.notifications.map(n => n.id === id ? {...n, read: !n.read} : n)\n    }))\n\n    onReadAll = () => {\n        this.setState(state => ({\n            notifications: state.notifications.map(n => ({...n, read: true}))\n        }))\n    }\n\n    onLoadMore = async () => {\n        this.setState({loading: true})\n        setTimeout(() => this.setState({loading: false}, this.onSeen), 3000)\n    }\n\n    reset = () => {\n        this.setState({notifications: this.generateNotifications()})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='NotifyDemo.tsx' srcPath='Notify.tsx'>Notify</DemoTitle>\n                <DemoHelp>A Notification icon with a dropdown list of notifications</DemoHelp>\n                <DemoProps title='Notifier'>\n                    <DemoProp required name='count' type='number' default='' description='Number of unseen notifications'/>\n                    <DemoProp name='loading' type='boolean' default='false' description='Display a loading indicator'/>\n                    <DemoProp required name='open' type='boolean' default='' description='Whether the notifications list is open'/>\n                    <DemoProp required name='readAllButtonText' type='' default='' description='Your translated value of e.g `Mark all as read`'/>\n                    <DemoProp required name='onOpen' type='() => void' default='' description='Callback invoked when the list of notifications is opened, refresh/fetch notifications here'/>\n                    <DemoProp required name='onReadAll' type='() => void' default='' description='Callback invoked when the user marks all notifications as read'/>\n                    <DemoProp required name='onLoadMore' type='() => Promise<void>' default='' description='Callback invoked when the user scrolled to near the end of the list'/>\n                    <DemoProp required name='onClose' type='() => void' default='' description='Callback invoked when the list is closed. Set open to false here to close the list'/>\n                    <DemoProp name='IconProps' type='SvgIconProps' default='' description='Spread to the Notification Bell icon'/>\n                    <DemoProp required name='children' type='React.ReactNode' default='' description='Render your NotificationItems here. The children will be wrappen in a <List>'/>\n                </DemoProps>\n                <DemoProps title='NotificationItem'>\n                    <DemoProp required name='id' type='string' description='Unique identifier of the Notification'/>\n                    <DemoProp required name='date' type='Date' description='Date when the notification was created'/>\n                    <DemoProp name='seen' type='boolean' default='false' description='Whether the notification has been displayed to the user'/>\n                    <DemoProp name='read' type='boolean' default='false' description='Whether the notification has been read by the user'/>\n                    <DemoProp required name='onClick' type='() => void' description='Callback invoked when the user clicks the notification'/>\n                    <DemoProp required name='onToggleMarkRead' type='() => void' description='Callback invoked when the user marks the notification as read'/>\n                    <DemoProp required name='toggleMarkReadTitle' type='string' description='Text on the ToggleMarkRead button when the notification is not read'/>\n                    <DemoProp required name='toggleMarkUnreadTitle' type='string' description='Text on the ToggleMarkRead button when the notification is read'/>\n                    <DemoProp name='avatar' type='React.ReactElement' description='Should be either an <Avatar>, <SvgIcon> or undefined'/>\n                    <DemoProp name='actions' type='{action: () => void, title: string}[]' description='Custom actions displayed in a menu when clicking the three vertical dots on the Notification'/>\n                    <DemoProp required name='children' type='React.ReactChild' description='String or HTML formatted text'/>\n                </DemoProps>\n                <DemoContent>\n                    <Notifier\n                        open={this.state.open}\n                        readAllButtonText='Mark all as read'\n                        count={this.state.notifications.filter(n => !n.seen).length}\n                        onOpen={this.onOpen}\n                        onClose={this.onClose}\n                        onLoadMore={this.onLoadMore}\n                        onReadAll={this.onReadAll}\n                        loading={this.state.loading}\n                    >\n                        {this.renderNotifications()}\n                    </Notifier>\n                    <Button onClick={this.reset}>Reset</Button>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\nimport InfiniteScroll from '../../lib/InfiniteScroll'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\n\ntype State = {\n    items: JSX.Element[]\n}\n\nconst makeItems = (startIndex = 0, count = 200) => {\n    const items: JSX.Element[] = []\n    for(let i = startIndex; i < startIndex + count; i++){\n        items.push(<ListItem key={i} divider>{i}</ListItem>)\n    }\n    return items\n}\n\nexport default class InfiniteScrollDemo extends React.PureComponent<{}, State>{\n    state: State = {\n        items: makeItems()\n    }\n\n    onReachThreshold = async () => {\n        this.setState(state => ({items: [...state.items, ...makeItems(state.items.length)]}))\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle>InfiniteScroll</DemoTitle>\n                <DemoHelp>A wrapper component that invokes callbacks when scrolling to a threshold</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='threshold' type='1 > number >= 0' default='0.1' description='Defines in percentage (factor) of the viewable containers height the distance from the bottom where the threshold is'></DemoProp>\n                    <DemoProp name='height' type='string | number' default='calc(100%)' description='The height of the scroll container'></DemoProp>\n                    <DemoProp name='onReachThreshold' type='() => void' description='Callback invoked when scroll has reached the threshold'></DemoProp>\n                    <DemoProp name='onReachEnd' type='() => void' description='Callback invoked when the scroll has reached the end'></DemoProp>\n                    <DemoProp required name='children' type='React.ReactNode'></DemoProp>\n                </DemoProps>\n                <DemoContent>\n                    <InfiniteScroll\n                        height={300}\n                        threshold={0.5}\n                        onReachThreshold={this.onReachThreshold}\n                    >\n                        <List>\n                            {this.state.items}\n                        </List>\n                    </InfiniteScroll>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {layout} from '../lib'\nimport Home from './pages/Home'\nimport Icons from './pages/Icons'\nimport GitHubLink from './components/GitHubLink'\nimport MaterialUiLink from './components/MaterialUiLink'\nimport Guidelines from './pages/Guidelines'\nimport Theme from './pages/Theme'\nimport HomeIcon from '@material-ui/icons/Home'\nimport CodeIcon from '@material-ui/icons/Code'\nimport StyleIcon from '@material-ui/icons/Style'\nimport BuildIcon from '@material-ui/icons/Build'\nimport StraightenIcon from '@material-ui/icons/Straighten'\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact'\nimport FontDownloadIcon from '@material-ui/icons/FontDownload'\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz'\nimport HelpIcon from '@material-ui/icons/Help'\nimport history from './history'\nimport {Location, UnregisterCallback} from 'history'\nimport Link from './components/Link'\nimport TrendingDemo from './demos/TrendingDemo'\nimport BigNumberDemo from './demos/BigNumberDemo'\nimport AlertDemo from './demos/AlertDemo'\nimport SearchFieldDemo from './demos/SearchFieldDemo'\nimport TextFieldEditorDemo from './demos/TextFieldEditorDemo'\nimport ConfirmationDialogDemo from './demos/ConfirmationDialogDemo'\nimport ListPickerDemo from './demos/ListPickerDemo'\nimport EmojiDemo from './demos/EmojiDemo'\nimport GridLayoutDemo from './demos/GridLayoutDemo'\nimport HoverableDemo from './demos/HoverableDemo'\nimport DelayDemo from './demos/DelayDemo'\nimport WizardDemo from './demos/WizardDemo'\nimport ScreenSizeDemo from './demos/ScreenSizeDemo'\nimport ProfileCardDemo from './demos/ProfileCardDemo'\nimport Avatar from '@material-ui/core/Avatar'\nimport List from '@material-ui/core/List'\nimport Button from '@material-ui/core/Button'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport SettingsIcon from '@material-ui/core/SvgIcon/SvgIcon'\nimport ScreenSize from '../lib/ScreenSize'\nimport ListPicker from '../lib/ListPicker'\nimport NotifyDemo from './demos/NotifyDemo'\nimport InfiniteScrollDemo from './demos/InfiniteScrollDemo'\n\nconst menuGroups = {\n    home: {\n        label: 'Tfso-Components',\n        subtitle: 'Where magic happens',\n        icon: HomeIcon,\n        component: Home\n    },\n    guidelines: {\n        label: 'Guidelines',\n        subtitle: 'How to frontend',\n        icon: StraightenIcon,\n        component: Guidelines\n    },\n    components: {\n        label: 'Components',\n        subtitle: 'Presentational',\n        icon: ViewCompactIcon,\n        items: {\n            emoji: {\n                label: 'Emoji',\n                component: EmojiDemo,\n                chipLabel: 'New',\n                chipColor: 'success'\n            },\n            alert: {\n                label: 'Alert',\n                component: AlertDemo\n            },\n            bignumber: {\n                label: 'BigNumber',\n                component: BigNumberDemo\n            },\n            confirmationdialog: {\n                label: 'ConfirmationDialog 123123213',\n                component: ConfirmationDialogDemo,\n                chipLabel: 'NEW',\n                chipColor: 'success'\n            },\n            listpicker: {\n                label: 'ListPicker',\n                component: ListPickerDemo,\n            },\n            searchfield: {\n                label: 'SearchField',\n                component: SearchFieldDemo\n            },\n            textfieldeditor: {\n                label: 'TextFieldEditor',\n                component: TextFieldEditorDemo\n            },\n            trending: {\n                label: 'Trending',\n                component: TrendingDemo\n            }\n        }\n    },\n    style: {\n        label: 'Style',\n        subtitle: 'Much Dashing',\n        icon: StyleIcon,\n        items: {\n            layout: {\n                label: 'Layout',\n                component: () => <div>TODO<br />This page uses the Layout</div>\n            },\n            menu: {\n                label: 'Menu',\n                component: () => <div>TODO<br />The menu to the left</div>\n            },\n            notify: {\n                label: 'Notify',\n                component: NotifyDemo,\n                chipLabel: 'New',\n                chipColor: 'info',\n            },\n            profilecard: {\n                label: 'ProfileCard',\n                component: ProfileCardDemo\n            },\n            theme: {\n                label: 'Theme',\n                component: Theme\n            },\n            topbar: {\n                label: 'Topbar',\n                component: () => <div>TODO<br />The topbar above</div>\n            }\n        }\n    },\n    utils: {\n        label: 'Utils',\n        subtitle: 'Utility',\n        icon: BuildIcon,\n        items: {\n            delay: {\n                label: 'Delay',\n                component: DelayDemo\n            },\n            hoverable: {\n                label: 'Hoverable',\n                component: HoverableDemo\n            },\n            infinitescroll: {\n                label: 'InfiniteScroll',\n                component: InfiniteScrollDemo\n            },\n            wizard: {\n                label: 'Wizard',\n                component: WizardDemo\n            },\n            screensize: {\n                label: 'ScreenSize',\n                component: ScreenSizeDemo\n            }\n        }\n    },\n    icons: {\n        label: 'Icons',\n        subtitle: 'Well duh',\n        component: Icons,\n        icon: FontDownloadIcon,\n        chipLabel: 'New',\n        chipColor: 'info',\n    },\n    labs: {\n        label: 'Labs',\n        subtitle: 'Works in progress',\n        icon: CodeIcon,\n        accessDenied: true,\n        items: {\n            gridlayout: {\n                label: 'GridLayout',\n                component: GridLayoutDemo\n            },\n            notify: {\n                label: 'Notify',\n                component: NotifyDemo\n            }\n        }\n    },\n}\n\nconst identity = {\n    license: '2947b4ae-0d40-447b-886f-dcd3aa11648b;693081080913543;1198',\n    identity: {\n        id: '2947b4ae-0d40-447b-886f-dcd3aa11648b'\n    },\n    client: {\n        id: '693081080913543',\n        name: 'Snerk og Verk Stagforretning'\n    },\n    user: {\n        id: '1198'\n    },\n    profile: {\n        id: '2947b4ae-0d40-447b-886f-dcd3aa11648b',\n        firstName: 'Sjef',\n        lastName: 'Sjefesenen',\n        identifier: 'sjef@kpdemo.no',\n        culture: 'nn-NO',\n        language: 'NO',\n        timeZone: 'Europe/Copenhagen',\n        country: 'ES',\n        created: '2008-08-04T09:04:36.913+00:00',\n        modified: '2019-03-12T00:53:56.946+00:00',\n        gender: 'Male',\n        birthDate: '2018-11-20',\n        location: 'Disneyland',\n        locationCoordinates: '33.8120918,-117.91897419999998',\n        visibility: 'Public',\n        thumb: {data: 'data:image/png;base64, '}\n    },\n    locale: {\n        country: 'NO',\n        culture: 'nn-NO',\n        language: 'NO',\n        timeZoneOffset: '01:00:00',\n        timeZone: 'Europe/Copenhagen'\n    }\n}\n\ntype LayoutState = {\n    location: Location<any>\n    menuGroupsExpanded: any\n}\n\nexport default class Layout extends React.PureComponent<{}, LayoutState>{\n    _unsubHistory: UnregisterCallback | null = null\n    componentDidMount(){\n        this.expandSelected()\n        this._unsubHistory = history.listen(this.onNavigation)\n    }\n    componentWillUnmount(){\n        this._unsubHistory && this._unsubHistory()\n    }\n\n    state: LayoutState = {\n        location: history.location,\n        menuGroupsExpanded: {}\n    }\n\n    onNavigation = (location: Location<any>) => {\n        this.setState({location})\n    }\n\n    getSelected = () => {\n        const {location: {pathname}} = this.state\n        const path = pathname.slice(pathname.indexOf('#') + 2)\n        const [group, item] = path.split('/')\n\n        return {group: group || 'home', item}\n    }\n\n    expandSelected(){\n        const {group} = this.getSelected()\n        this.onToggleGroupExpanded(group)\n    }\n\n    onToggleGroupExpanded = (name) => {\n        this.setState(state => ({\n            menuGroupsExpanded: {\n                ...state.menuGroupsExpanded,\n                [name]: !state.menuGroupsExpanded[name]\n            }\n        }))\n    }\n\n    render(){\n        const menuContent = (\n            <layout.MenuContent>\n                {Object.keys(menuGroups).map(groupName => {\n                    const group = menuGroups[groupName]\n                    if(group.component){\n                        return (\n                            <layout.MenuRootItem\n                                key={group.label}\n                                label={group.label}\n                                selected={this.getSelected().group === groupName}\n                                icon={group.icon}\n                                subtitle={group.subtitle}\n                                chipLabel= {group.chipLabel}\n                                chipColor= {group.chipColor}\n                                href={(content) => {\n                                    return (\n                                        <Link to={`/${groupName}`} key={groupName}>\n                                            {content}\n                                        </Link>\n                                    )\n                                }}\n                            />\n                        )\n                    }\n\n                    return (\n                        <layout.MenuGroup\n                            expanded={!!this.state.menuGroupsExpanded[groupName]}\n                            key={group.label}\n                            label={group.label}\n                            icon={group.icon}\n                            subtitle={group.subtitle}\n                            onToggleExpanded={() => this.onToggleGroupExpanded(groupName)}\n                        >\n                            {Object.keys(group.items).sort((a, b) => a > b ? 1 : -1).map(itemName => {\n                                const item = group.items[itemName]\n                                const selected = this.getSelected()\n                                return (\n                                    <layout.MenuItem\n                                        key={item.label}\n                                        label={item.label}\n                                        selected={selected.item === itemName && selected.group === groupName}\n                                        icon={item.icon}\n                                        chipLabel= {item.chipLabel}\n                                        chipColor= {item.chipColor}\n                                        href={(content) => {\n                                            return (\n                                                <Link to={`/${groupName}/${itemName}`} key={itemName} underline={'hover'}>\n                                                    {content}\n                                                </Link>\n                                            )\n                                        }}\n                                    />\n                                )\n                            })}\n                        </layout.MenuGroup>\n                    )\n                })}\n            </layout.MenuContent>\n        )\n        const topMenuContent = (\n            <layout.TopMenuContent>\n                <ScreenSize>\n                    {({mobile}) => (\n                        mobile\n                            ? null\n                            : <ClientSwitcher clientName={identity.client.name} />\n                    )}\n                </ScreenSize>\n                <div style={{padding: '4px 8px'}}><MaterialUiLink /></div>\n                <div style={{padding: '4px 8px'}}><GitHubLink /></div>\n                <Profile />\n            </layout.TopMenuContent>\n        )\n\n        const selected = this.getSelected()\n        const group = menuGroups[selected.group]\n\n        let content: React.ReactNode = 'Not found'\n        if(group.component){\n            const Page = group.component\n            content = <Page />\n        }else if(group.items && group.items[selected.item]){\n            const Page = group.items[selected.item].component\n            content = <Page />\n        }\n\n        return (\n            <layout.Layout\n                menuContent={menuContent}\n                topMenuContent={topMenuContent}\n                docTitle=\"Tfso Components\"\n            >\n                {content}\n            </layout.Layout>\n        )\n    }\n}\n\nclass ClientSwitcher extends React.PureComponent<any>{\n    state = {\n        open: false,\n        anchorEl: null\n    }\n\n    onOpen = (e) => this.setState({open: true, anchorEl: e.currentTarget})\n    onClose = () => this.setState({open: false, anchorEl: null})\n\n    render(){\n        const options = [\n            {value: '1', label: 'Test 1'},\n            {value: '2', label: 'Test 2'},\n            {value: '3', label: 'Test 3'},\n            {value: '4', label: 'Test 4'},\n        ]\n        return (\n            <>\n                <Button onClick={this.onOpen}>{this.props.clientName}</Button>\n                <ListPicker\n                    anchorEl={this.state.anchorEl}\n                    open={this.state.open}\n                    cancelButtonText='Cancel'\n                    searchLabel='Search list'\n                    onCancel={this.onClose}\n                    onSelect={this.onClose}\n                    options={options}\n                    avatarColor={'default'}\n                />\n            </>\n        )\n    }\n}\n\nclass Profile extends React.PureComponent{\n    state = {\n        open: false,\n        anchorEl: null\n    }\n\n    onOpen = (e) => this.setState({open: true, anchorEl: e.currentTarget})\n    onClose = () => this.setState({open: false, anchorEl: null})\n\n    render(){\n        return (\n            <>\n                <Button onClick={this.onOpen} size=\"small\">\n                    <Avatar src={identity.profile.thumb.data} />\n                </Button>\n                <layout.ProfileCard\n                    anchorEl={this.state.anchorEl}\n                    open={this.state.open}\n                    onClose={this.onClose}\n                    onSignOut={() => {}}\n                    identity={identity}\n                    signOutText=\"Log out\"\n                >\n                    <ScreenSize>\n                        {({mobile}) => (\n                            <List dense={!mobile}>\n                                <ListItem button>\n                                    <ListItemText inset primary=\"Profile\"/>\n                                </ListItem>\n                                <ListItem button>\n                                    <ListItemText inset primary=\"Forespørsler\"/>\n                                </ListItem>\n                                <ListItem button divider>\n                                    <Tooltip title='Profile settings'>\n                                        <ListItemIcon>\n                                            <SettingsIcon fontSize='small'/>\n                                        </ListItemIcon>\n                                    </Tooltip>\n                                    <ListItemText inset primary=\"Settings\"/>\n                                </ListItem>\n                                {mobile && <ListItem divider button>\n                                    <Tooltip title='Switch client'>\n                                        <ListItemIcon>\n                                            <SwapHorizIcon />\n                                        </ListItemIcon>\n                                    </Tooltip>\n                                    <ClientSwitcher clientName={identity.client.name} />\n                                </ListItem>}\n                                <ListItem button divider>\n                                    <Tooltip title='Help me'>\n                                        <ListItemIcon>\n                                            <HelpIcon fontSize='small'/>\n                                        </ListItemIcon>\n                                    </Tooltip>\n                                    <ListItemText primary=\"Help\"/>\n                                </ListItem>\n                            </List>\n                        )}\n                    </ScreenSize>\n                </layout.ProfileCard>\n            </>\n        )\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {theme} from '../lib'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport {ThemeProvider as StyledThemeProvider} from 'styled-components'\nimport {MuiThemeProvider} from '@material-ui/core/styles'\nimport Layout from './Layout'\n\nReactDOM.render(\n    <React.Fragment>\n        <CssBaseline />\n        <MuiThemeProvider theme={theme.materialuiTheme}>\n            <StyledThemeProvider theme={theme.styledTheme}>\n                <Layout />\n            </StyledThemeProvider>\n        </MuiThemeProvider>\n    </React.Fragment>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}