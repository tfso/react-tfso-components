{"version":3,"sources":["lib/theme/index.ts","lib/layout/Menu.tsx","lib/layout/MobileMenu.tsx","lib/layout/TopMenu.tsx","lib/layout/Topbar.tsx","lib/layout/DocumentTitle.tsx","lib/layout/Layout.tsx","lib/Alert.tsx","lib/BigNumber.tsx","lib/ConfirmationDialog.tsx","lib/DashBoard.tsx","lib/SearchField.tsx","lib/TextFieldEditor.tsx","lib/Trending.tsx","lib/Emoji.tsx","lib/Delay.tsx","lib/Hoverable.tsx","lib/Wizard.tsx","lib/icons/TfsoLoading.tsx","demo/components/MaterialUiLink.tsx","demo/components/GitHubLink.tsx","demo/pages/Home.tsx","demo/components/code.tsx","demo/history.ts","demo/components/Link.tsx","demo/components/demo.tsx","demo/demos/TrendingDemo.tsx","demo/demos/BigNumberDemo.tsx","demo/demos/AlertDemo.tsx","demo/demos/SearchFieldDemo.tsx","demo/demos/TextFieldEditorDemo.tsx","demo/demos/ConfirmationDialogDemo.tsx","demo/demos/EmojiDemo.tsx","demo/pages/Utils.tsx","lib/icons/Tfso.tsx","demo/pages/Icons.tsx","demo/pages/Guidelines.tsx","demo/components/ThemeColor.tsx","demo/pages/Theme.tsx","demo/demos/DashBoardDemo.tsx","demo/pages/Lab.tsx","demo/Layout.tsx","demo/pages/Components.tsx","demo/index.tsx"],"names":["colorScheme","colors","tfso","baseColor","baseLightColor","baseLight2Color","baseLight3Color","baseLight4Color","baseLight5Color","blueColor","blueDarkColor","blueDesaturatedColor","grayBlueColor","tealColor","greenColor","greenLightColor","purpleColor","redColor","redLightColor","orangeColor","yellowColor","blackColor","grayColor","grayDarkColor","grayDarkerColor","grayLightColor","grayLighterColor","grayLightestColor","whiteColor","whiteDarkColor","whiteDarkerColor","bodyBackgroundColor","listOverBackgroundColor","borderColor","tabBarColor","palette","primary","primaryLight","success","warning","alert","delete","materialuiTheme","createMuiTheme","typography","useNextVariants","secondary","dark","main","light","contrastText","styledTheme","layout","containerMargin","mui","StyledDrawer","styled","Drawer","attrs","classes","paper","withConfig","displayName","componentId","props","open","theme","spacing","unit","Menu","react_default","a","createElement","variant","this","List_default","children","React","PureComponent","MobileMenu","Fragment","TopMenu","Root","div","StyledAppBar","AppBar","zIndex","drawer","Grow","MenuButton","IconButton","Title","Typography","_ref","breakpoints","up","SectionDesktop","_ref2","SectionMobile","_ref3","TopBar","state","mobileMoreAnchorEl","handleMobileMenuOpen","event","_this","setState","currentTarget","handleMobileMenuClose","_this2","isMobileMenuOpen","Boolean","position","color","Toolbar_default","onMenuToggle","aria-label","onClick","e","icons_Menu_default","noWrap","title","IconButton_default","aria-haspopup","MoreVert_default","Menu_default","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","mobileMenu","setTitle","text","document","DocumentTitle","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextProps","LayoutWrapper","LayoutHeader","LayoutBody","LayoutBodyLeft","LayoutBodyRight","Layout","DocumentTitle_DocumentTitle","docTitle","Topbar_TopBar","topMenu","menu","LayoutNoMenu","_React$PureComponent2","apply","arguments","inherits","createClass","key","value","variantIcon","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","StyledSnack","other","objectWithoutProperties","SnackbarContent_default","_templateObject","bgColor","Alert","message","Icon","aria-describedby","id","style","display","alignItems","fontSize","opacity","marginRight","action","Close_default","fontSizeMap","medium","large","defaultProps","size","wrapper","BigNumber","_ref2$size","pxToRem","_ref3$color","TransitionComponent","Slide_default","assign","direction","ConfirmationDialog","onCancel","onOk","okButtonText","cancelButtonText","Dialog_default","keepMounted","maxWidth","DialogTitle_default","DialogContent_default","DialogActions_default","Button_default","WidgetContainer","background","Paper_default","Widget","dragging","dragOver","onDrop","stopPropagation","preventDefault","data","JSON","parse","dataTransfer","getData","index","onOrder","err","onDragStart","dragData","setData","stringify","onDragEnd","onDragEnter","onDragOver","onDragLeave","_this$props","elevation","border","draggable","sizeMap","small","cols","rows","DashBoard","onOrderArray","target","source","widgets","toConsumableArray","splice","onChangeOrder","_this3","GridList_default","cellHeight","width","map","i","widget","GridListTile_default","DashBoard_Widget","SearchField","editing","onBlur","onFocus","TextField_default","fullWidth","handleEvent","nativeEvent","stopImmediatePropagation","placeholder","margin","InputProps","startAdornment","InputAdornment_default","Search_default","TextFieldEditor","_inputRef","createRef","prevProps","blur","current","onKeyDown","defaultPrevented","ctrlKey","multiline","onChange","dirtyProp","dirty","enableDirtyCheck","otherProps","isDirty","inputRef","fontStyle","iconMap","TrendingUp","flat","TrendingFlat","down","TrendingDown","memo","withTheme","iconProps","nativeColor","getColor","emojis","middleFinger","indexFinger","flex","brokenHeart","perfect","thumbsUp","thumbsDown","clap","heart","fire","bulb","crap","thinking","rocket","Emoji","propTypes","PropTypes","oneOf","keys","Delay","_timer","show","setTimeout","delayMs","clearTimeout","beforeShow","Hoverable","ref","toggleHover","hover","hoverOn","hoverOff","restProps","onMouseEnter","onMouseLeave","Wizard","next","length","prev","hasOwnProperty","path","css","TfsoLoading_templateObject","StyledSvgIcon","Styled","once","SvgIcon_default","_ref4","_ref5","_ref6","viewBox","fillRule","strokeWidth","d","MaterialUiIcon","fill","MaterialUiLink","Link_default","href","rel","GitHubIcon","GitHubLink","concat","Tooltip_default","tooltip","CenterTop","Home_templateObject","Home","TfsoLoading","Typography_default","paragraph","align","Grid_default","container","justify","item","xs","flexDirection","Zoom_default","in","appear","transitionDelay","Code","_React$PureComponent","_getPrototypeOf2","_len","args","Array","_key","highlight","Prism","highlightElement","className","language","history","createHashHistory","basename","hashType","Link","to","push","toLowerCase","underline","undefined","AnchorLink","Anchor","window","location","hash","split","Demo","padding","marginBottom","DemoTitle","Link_Anchor","srcPath","demoPath","components_GitHubLink","DemoHelp","DemoContent","marginTop","Divider_default","isArray","child","DemoProps","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","DemoProp","name","type","default","description","DemoCode","Code_default","code_Code","TrendingDemo","demo_Demo","demo_DemoTitle","demo_DemoHelp","demo_DemoProps","demo_DemoProp","demo_DemoContent","Trending","select","label","MenuItem_default","BigNumberDemo","handleChange","defineProperty","backgroundColor","lib_BigNumber","variantMessage","AlertDemo","onPress","demo_DemoCode","Snackbar_default","autoHideDuration","lib_Alert","SearchFieldDemo","SearchField_SearchField","TextFieldEditorDemo","onReset","TextFieldEditor_TextFieldEditor","toString","ConfirmationDialogDemo","openConfirmationDialog","onClickOpenConfirmationDialog","lib_ConfirmationDialog","EmojiDemo","lib_Emoji","Utils","Utils_DelayDemo","Utils_HoverableDemo","Utils_WizardDemo","DelayDemo","Delay_Delay","CircularProgress_default","HoverableDemo","Hoverable_Hoverable","cursor","height","WizardDemo","Wizard_Wizard","Stepper_default","activeStep","Step_default","StepLabel_default","disabled","Icons","Icons_TfsoDemo","Icons_TfsoLoadingDemo","TfsoDemo","Tfso","TfsoLoadingDemo","Section","SubHeading","Paragraph","component","Tip","Card_default","CardContent_default","Guideline","Guidelines","render","renderHeading","renderGuidelines","renderTips","renderContributing","Guidelines_SubHeading","Guidelines_Guideline","Link_Link","Guidelines_Tip","Guidelines_Paragraph","Box","ThemeColor_templateObject","Txt","_templateObject2","ThemeColor","ThemeColors","Theme_templateObject","Theme","components_ThemeColor","W1","wrap","DashBoardDemo","DashBoardDemo_W1","flexWrap","justifyContent","overflowX","DashBoard_DashBoard","onRemove","Lab","DashBoardDemo_DashBoardDemo","pages","Components","EmojiDemo_EmojiDemo","AlertDemo_AlertDemo","BigNumberDemo_BigNumberDemo","ConfirmationDialogDemo_ConfirmationDialogDemo","SearchFieldDemo_SearchFieldDemo","TextFieldEditorDemo_TextFieldEditorDemo","TrendingDemo_TrendingDemo","pageIcon","HomeIcon","StraightenIcon","ViewCompactIcon","StyleIcon","BuildIcon","FontDownloadIcon","CodeIcon","_unsubHistory","menuOpen","onNavigation","getSelectedPageName","pathname","slice","indexOf","find","page","listen","layout_namespaceObject","ListItem_default","selected","ListItemIcon_default","ListItemText_default","components_MaterialUiLink","Page","ReactDOM","CssBaseline_default","styles","styled_components_browser_esm","demo_Layout_Layout","getElementById"],"mappings":"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","file":"static/js/main.317aabb9.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles'\r\nimport 'styled-components'\r\n\r\nconst colorScheme = {\r\n    fiord: '#445566',\r\n    lynch: '#637b94',\r\n    dodgerBlue: '#11beff',\r\n    bayOfMany: '#224477',\r\n    easternBlue: '#22aabb',\r\n    apple: '#49bd39',\r\n    melrose: '#A3A4FB',\r\n    flamingo: '#f04b4b',\r\n    texasRose: '#ffb155',\r\n    dandelion: '#FFD966',\r\n    tundora: '#404040',\r\n    dustyGray: '#999999',\r\n    hippieBlue: '#6699bb',\r\n    emperor: '#555555',\r\n    silver: '#CCCCCC',\r\n    porcelain: '#E8E9EA',\r\n    wildSand: '#F6F6F6',\r\n    white: '#FFFFFF',\r\n    casper: '#AFC5D0'\r\n}\r\n\r\nconst colors = {\r\n    tfso: '#00c7f5',\r\n    baseColor: colorScheme.fiord,\r\n    baseLightColor: '#637b94',\r\n    baseLight2Color: '#8fa1b4',\r\n    baseLight3Color: '#bdc8d3',\r\n    baseLight4Color: '#ebeef1',\r\n    baseLight5Color: '#f4f6f8',\r\n    blueColor: colorScheme.dodgerBlue,\r\n    blueDarkColor: colorScheme.bayOfMany,\r\n    blueDesaturatedColor: colorScheme.hippieBlue,\r\n    grayBlueColor: colorScheme.casper,\r\n    tealColor: colorScheme.easternBlue,\r\n    greenColor: colorScheme.apple,\r\n    greenLightColor: 'rgba(73, 189, 57, 0.4)',\r\n    purpleColor: colorScheme.melrose,\r\n    redColor: colorScheme.flamingo,\r\n    redLightColor: 'rgba(240, 75, 75, 0.4)',\r\n    orangeColor: colorScheme.texasRose,\r\n    yellowColor: colorScheme.dandelion,\r\n    blackColor: colorScheme.tundora,\r\n    grayColor: colorScheme.dustyGray,\r\n    grayDarkColor: '#6E6E6E',\r\n    grayDarkerColor: '#454545',\r\n    grayLightColor: '#C4C4C4',\r\n    grayLighterColor: '#E6E6E6',\r\n    grayLightestColor: '#F7F7F7',\r\n    whiteColor: colorScheme.white,\r\n    whiteDarkColor: '#F7F7F7',\r\n    whiteDarkerColor: '#E6E6E6',\r\n    bodyBackgroundColor: '#F7F7F7',\r\n    listOverBackgroundColor: '#E6E6E6',\r\n    borderColor: '#C4C4C4',\r\n    tabBarColor: colorScheme.white\r\n}\r\n\r\nconst palette = {\r\n    primary: colors.baseColor,\r\n    primaryLight: colors.baseLightColor,\r\n    success: colors.greenColor,\r\n    warning: colors.orangeColor,\r\n    alert: colors.redColor,\r\n    delete: colors.redColor,\r\n}\r\n\r\nconst layout = {\r\n    containerMargin: '15px'\r\n}\r\n\r\nexport const materialuiTheme = createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    palette: {\r\n        secondary: {\r\n            dark: '#1b2c3c',\r\n            main: '#456',\r\n            light: '#708194'\r\n        },\r\n        primary: {\r\n            dark: '#0090cc',\r\n            main: '#11c0ff',\r\n            light: '#6df3ff',\r\n            contrastText: '#FFF'\r\n        }\r\n    }\r\n})\r\n\r\nexport const styledTheme = {\r\n    tfso: {\r\n        colors,\r\n        palette,\r\n        layout\r\n    },\r\n    mui: materialuiTheme, // Make the entire material-ui theme available to styled components as well\r\n}\r\n\r\nexport type TfsoTheme = typeof styledTheme\r\n\r\ndeclare module 'styled-components' {\r\n    export interface DefaultTheme extends TfsoTheme {}\r\n    export type WithTheme = { theme: DefaultTheme }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport List from '@material-ui/core/List'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport styled from 'styled-components/macro'\r\n\r\nconst StyledDrawer = styled(Drawer).attrs({\r\n    classes: {paper: 'MuiPaperStyle'}\r\n})`\r\n    &&{\r\n      width: ${props => props.open ? 260 : props.theme.mui.spacing.unit * 9 + 1}px;\r\n      height: 100%;\r\n      transition: none;\r\n      transform: none;\r\n      white-space: nowrap;\r\n      display: flex;\r\n      overflow-x: hidden;\r\n      background-color: #CCC;\r\n      border: none;\r\n    }\r\n    \r\n    .MuiPaperStyle{\r\n      width: ${props => props.open ? 260 : props.theme.mui.spacing.unit * 9 + 1}px;\r\n      transition: none;\r\n      transform: none;\r\n      position: static;\r\n      overflow-x: hidden;\r\n      background-color: ${props => props.theme.tfso.colors.baseLight5Color};\r\n      border: none;\r\n    }\r\n`\r\n\r\nexport type MenuProps = {\r\n    open: boolean\r\n}\r\n\r\nexport default class Menu extends React.PureComponent<MenuProps>{\r\n    static propTypes = {\r\n        open: PropTypes.bool.isRequired\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <StyledDrawer variant=\"permanent\" open={this.props.open}>\r\n                <List>\r\n                    {this.props.children}\r\n                </List>\r\n            </StyledDrawer>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class MobileMenu extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class TopMenu extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport MoreIcon from '@material-ui/icons/MoreVert'\r\nimport styled from 'styled-components/macro'\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n`\r\nconst StyledAppBar = styled(AppBar)`\r\n&&{\r\n  background: white;\r\n  box-shadow: none;\r\n  z-index: ${props => props.theme.mui.zIndex.drawer + 1};\r\n}\r\n`\r\n\r\nconst Grow = styled.div`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst MenuButton = styled(IconButton)`\r\n&&{\r\n  margin-left: -12px;\r\n  margin-right: 20px;\r\n}\r\n`\r\n\r\nconst Title = styled(Typography)`\r\n&&{\r\n  display: none;\r\n  ${({theme}) => theme.mui.breakpoints.up('sm')}{\r\n    display: block;\r\n  }\r\n}\r\n`\r\n\r\nconst SectionDesktop = styled.div`\r\n&&{\r\n  display: none;\r\n  ${({theme}) => theme.mui.breakpoints.up('md')}{\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n}\r\n`\r\n\r\nconst SectionMobile = styled.div`\r\n&&{\r\n  display: flex;\r\n  ${({theme}) => theme.mui.breakpoints.up('md')}{\r\n    display: none;\r\n  }\r\n}\r\n`\r\n\r\nexport type TopBarProps = {\r\n    title: string\r\n    onMenuToggle: Function | null\r\n    mobileMenu?: React.ReactNode\r\n}\r\n\r\nexport default class TopBar extends React.PureComponent<TopBarProps, any>{\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        mobileMenu: PropTypes.node.isRequired\r\n    }\r\n    state = {\r\n        mobileMoreAnchorEl: null\r\n    }\r\n    handleMobileMenuOpen = event => {\r\n        this.setState({mobileMoreAnchorEl: event.currentTarget})\r\n    }\r\n    handleMobileMenuClose = () => {\r\n        this.setState({mobileMoreAnchorEl: null})\r\n    }\r\n\r\n    render(){\r\n        const {mobileMoreAnchorEl} = this.state\r\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\r\n\r\n        return (\r\n            <Root>\r\n                <StyledAppBar position=\"static\" color=\"default\">\r\n                    <Toolbar>\r\n                        {this.props.onMenuToggle !== null &&\r\n                            <MenuButton color=\"inherit\" aria-label=\"Open drawer\" onClick={e => this.props.onMenuToggle && this.props.onMenuToggle()}>\r\n                                <MenuIcon/>\r\n                            </MenuButton>\r\n                        }\r\n                        <Title variant=\"h6\" color=\"inherit\" noWrap>\r\n                            {this.props.title}\r\n                        </Title>\r\n                        <Grow/>\r\n                        <SectionDesktop>\r\n                            {this.props.children}\r\n                        </SectionDesktop>\r\n                        <SectionMobile>\r\n                            <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\r\n                                <MoreIcon/>\r\n                            </IconButton>\r\n                        </SectionMobile>\r\n                    </Toolbar>\r\n                </StyledAppBar>\r\n                <Menu\r\n                    anchorEl={mobileMoreAnchorEl}\r\n                    anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                    transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                    open={isMobileMenuOpen}\r\n                    onClose={this.handleMobileMenuClose}\r\n                >\r\n                    {this.props.mobileMenu}\r\n                </Menu>\r\n            </Root>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nfunction setTitle(text){\r\n    document.title = text\r\n}\r\n\r\ntype Props = {\r\n    text: string\r\n}\r\n\r\nexport default class DocumentTitle extends React.PureComponent<Props>{\r\n    constructor(props){\r\n        super(props)\r\n        setTitle(props.text)\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.text !== this.props.text){\r\n            setTitle(nextProps.text)\r\n        }\r\n    }\r\n    render(){\r\n        return ''\r\n    }\r\n}","import React from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport TopBar from './Topbar'\r\nimport DocumentTitle from './DocumentTitle'\r\n\r\n// Wrap everything\r\nexport const LayoutWrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column; // Flex header and body from top to bottom\r\n`\r\n\r\n// Put topbar in here\r\nexport const LayoutHeader = styled.div`\r\n  \r\n`\r\n\r\n// Put everything below topbar here\r\nexport const LayoutBody = styled.div`\r\n  flex: 1; // Fill the rest of the page after header has taken its space\r\n  min-height: 0;\r\n  display: flex;\r\n`\r\n\r\n// Put menu here\r\nexport const LayoutBodyLeft = styled.div`\r\n\r\n`\r\n\r\n// Put your app here\r\nexport const LayoutBodyRight = styled.div`\r\n  flex: 1;\r\n  min-height: 0;\r\n  padding: 15px;\r\n  overflow-y: auto;\r\n`\r\n\r\ntype LayoutProps = {\r\n    title: string\r\n    docTitle: string\r\n    menu: React.ReactNode\r\n    mobileMenu: React.ReactNode\r\n    topMenu: React.ReactNode\r\n    onMenuToggle: Function\r\n}\r\n\r\nexport default class Layout extends React.PureComponent<LayoutProps>{\r\n    render(){\r\n        return (\r\n            <LayoutWrapper>\r\n                <DocumentTitle text={this.props.docTitle} />\r\n                <LayoutHeader>\r\n                    <TopBar\r\n                        title={this.props.title}\r\n                        onMenuToggle={this.props.onMenuToggle}\r\n                        mobileMenu={this.props.mobileMenu}\r\n                    >\r\n                        {this.props.topMenu}\r\n                    </TopBar>\r\n                </LayoutHeader>\r\n                <LayoutBody>\r\n                    <LayoutBodyLeft>\r\n                        {this.props.menu}\r\n                    </LayoutBodyLeft>\r\n                    <LayoutBodyRight>\r\n                        {this.props.children}\r\n                    </LayoutBodyRight>\r\n                </LayoutBody>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\ntype LayoutNoMenuProps = {\r\n    title: string\r\n    docTitle: string\r\n    mobileMenu: React.ReactNode\r\n    topMenu: React.ReactNode\r\n}\r\n\r\nexport class LayoutNoMenu extends React.PureComponent<LayoutNoMenuProps>{\r\n    render(){\r\n        return (\r\n            <LayoutWrapper>\r\n                <DocumentTitle text={this.props.docTitle} />\r\n                <LayoutHeader>\r\n                    <TopBar\r\n                        title={this.props.title}\r\n                        onMenuToggle={null}\r\n                        mobileMenu={this.props.mobileMenu}\r\n                    >\r\n                        {this.props.topMenu}\r\n                    </TopBar>\r\n                </LayoutHeader>\r\n                <LayoutBody>\r\n                    <LayoutBodyRight>\r\n                        {this.props.children}\r\n                    </LayoutBodyRight>\r\n                </LayoutBody>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport styled, {DefaultTheme} from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MuiSnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n}\r\n\r\nconst bgColor = (variant: AlertVariant, palette: DefaultTheme['tfso']['palette']) => {\r\n    switch(variant){\r\n    case 'success': return palette.success\r\n    case 'error': return palette.alert\r\n    case 'info': return palette.primaryLight\r\n    case 'warning': return palette.warning\r\n    }\r\n}\r\n\r\nconst SnackbarContent = ({variant, ...other}) => <MuiSnackbarContent {...other} />\r\nconst StyledSnack = styled(SnackbarContent)`&&{\r\n    background-color: ${({variant, theme}) => bgColor(variant, theme.tfso.palette)}\r\n}`\r\n\r\ntype AlertVariant = 'success' | 'warning' | 'error' | 'info'\r\n\r\nexport type AlertProps = {\r\n    message: React.ReactNode\r\n    onClose(): void\r\n    variant: AlertVariant\r\n}\r\n\r\nconst Alert = (props: AlertProps) => {\r\n    const {message, onClose, variant} = props\r\n    const Icon = variantIcon[variant]\r\n\r\n    return (\r\n        <StyledSnack\r\n            variant={variant}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" style={{display: 'flex', alignItems: 'center'}}>\r\n                    <Icon style={{fontSize: 20, opacity: 0.9, marginRight: 10}} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon style={{fontSize: 20}} />\r\n                </IconButton>,\r\n            ]}\r\n        />\r\n    )\r\n}\r\n\r\nAlert.propTypes = {\r\n    message: PropTypes.node.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\n\r\nexport type BigNumberProps = {\r\n    /**\r\n     * Choose `light` when you have a dark background, otherwise `dark`\r\n     * @default light\r\n     */\r\n    color?: 'light' | 'dark'\r\n\r\n    /**\r\n     * @default large\r\n     */\r\n    size?: 'medium' | 'large'\r\n    children: string | number\r\n}\r\n\r\nconst fontSizeMap: {[P in Required<BigNumberProps>['size']]: number} = {\r\n    medium: 32,\r\n    large: 48\r\n}\r\n\r\nconst defaultProps: Required<Pick<BigNumberProps, 'color' | 'size'>> = {\r\n    color: 'light',\r\n    size: 'large',\r\n}\r\n\r\nconst wrapper = ({size, color, ...props}: Required<BigNumberProps>) => <div {...props} />\r\n// TODO: These should be on the BigNumber component instead..\r\nwrapper.defaultProps = defaultProps\r\nwrapper.propTypes = {\r\n    color: PropTypes.oneOf(['light', 'dark']),\r\n    size: PropTypes.oneOf(['medium', 'large']),\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]).isRequired\r\n}\r\n\r\nconst BigNumber = styled(wrapper)`&&{\r\n    font-size: ${({theme, size = defaultProps.size}) => theme.mui.typography.pxToRem(fontSizeMap[size])};\r\n    line-height: normal;\r\n    letter-spacing: 0.08em;\r\n    color: ${({color = defaultProps.color}) => color === 'light' ? '#FFFFFF' : '#404040'};\r\n    white-space: nowrap\r\n}`\r\n\r\nexport default BigNumber as React.ComponentType<BigNumberProps>","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport Slide from '@material-ui/core/Slide'\r\n\r\nexport type ConfirmationDialogProps = {\r\n    open: boolean\r\n    title?: string\r\n    message: string\r\n    okButtonText: string\r\n    cancelButtonText: string\r\n    onOk: () => void\r\n    onCancel: () => void\r\n}\r\n\r\nconst TransitionComponent = props => <Slide direction='up' {...props} />\r\n\r\nconst ConfirmationDialog = (props: ConfirmationDialogProps) => {\r\n    const {open, onCancel, onOk, title, message, okButtonText, cancelButtonText} = props\r\n    return (\r\n        <Dialog\r\n            TransitionComponent={TransitionComponent}\r\n            keepMounted={false}\r\n            open={open}\r\n            onClose={onCancel}\r\n            maxWidth={'xs'}\r\n        >\r\n            {title && <DialogTitle>{title}</DialogTitle>}\r\n            <DialogContent>{message}</DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onCancel} color=\"primary\">{cancelButtonText}</Button>\r\n                <Button onClick={onOk} color=\"secondary\">{okButtonText}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    title: PropTypes.string,\r\n    message: PropTypes.string.isRequired,\r\n    okButtonText: PropTypes.string.isRequired,\r\n    cancelButtonText: PropTypes.string.isRequired,\r\n    onOk: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ConfirmationDialog","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\n\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport Paper, {PaperProps} from '@material-ui/core/Paper'\r\n\r\nconst BackgroundPaper = ({background, ...props}: { background: string } & PaperProps) => (<Paper {...props} />)\r\nconst WidgetContainer = styled(BackgroundPaper)`&&{\r\n    background: ${({background}) => background};\r\n    width: 100%;\r\n    height: 100%;\r\n}`\r\n\r\ntype WidgetSize = 'small' | 'medium' | 'large'\r\n\r\ntype WidgetBaseProps = {\r\n    index: number\r\n    background?: string\r\n    onOrder: (index: number, sourceIndex: number) => void\r\n    children: React.ReactChild // allow only one child\r\n}\r\n\r\ntype DragDropData = {\r\n    index: number\r\n}\r\n\r\ntype WidgetState = {\r\n    dragging: boolean\r\n    dragOver: boolean\r\n}\r\n\r\nclass Widget extends React.PureComponent<WidgetBaseProps, WidgetState>{\r\n    static defaultProps = {\r\n        background: 'inherit'\r\n    }\r\n    static propTypes = {\r\n        index: PropTypes.number.isRequired,\r\n        background: PropTypes.string,\r\n        onOrder: PropTypes.func.isRequired,\r\n        children: PropTypes.node.isRequired\r\n    }\r\n\r\n    state: WidgetState = {\r\n        dragging: false,\r\n        dragOver: false,\r\n    }\r\n\r\n    onDrop = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n\r\n        try{\r\n            const data = JSON.parse(e.dataTransfer.getData('text')) as DragDropData\r\n            if(data.index !== this.props.index){ this.props.onOrder(this.props.index, data.index) }\r\n        }catch(err){ }\r\n        this.setState({dragOver: false})\r\n    }\r\n\r\n    onDragStart = (e: React.DragEvent<HTMLDivElement | SVGSVGElement>) => {\r\n        const dragData: DragDropData = {\r\n            index: this.props.index\r\n        }\r\n        e.dataTransfer.setData('text', JSON.stringify(dragData))\r\n        this.setState({dragging: true})\r\n    }\r\n\r\n    onDragEnd = (e: React.DragEvent<HTMLDivElement | SVGSVGElement>) => {\r\n        this.setState({dragging: false})\r\n    }\r\n\r\n    onDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\r\n        this.setState({dragOver: true})\r\n    }\r\n\r\n    onDragOver = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    onDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\r\n        this.setState({dragOver: false})\r\n    }\r\n\r\n    render(){\r\n        const {children, background} = this.props\r\n\r\n        return (\r\n            <WidgetContainer\r\n                background={background || 'inherit'}\r\n                elevation={0}\r\n                style={{\r\n                    // TODO: other design??\r\n                    border: this.state.dragOver ? '2px dashed #333' : 'unset',\r\n                }}\r\n                draggable\r\n                onDragStart={this.onDragStart}\r\n                onDragEnd={this.onDragEnd}\r\n                onDragEnter={this.onDragEnter}\r\n                onDragOver={this.onDragOver}\r\n                onDragLeave={this.onDragLeave}\r\n                onDrop={this.onDrop}\r\n            >\r\n                {children}\r\n            </WidgetContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst sizeMap: {[P in WidgetSize]: {cols: number, rows: number}} = {\r\n    small: {cols: 1, rows: 0.5},\r\n    medium: {cols: 2, rows: 1},\r\n    large: {cols: 4, rows: 2}\r\n}\r\n\r\nexport type WidgetProps = {\r\n    size: WidgetSize\r\n    minSize?: WidgetSize\r\n} & Pick<WidgetBaseProps, 'background' | 'children'>\r\n\r\nexport type DashBoardProps = {\r\n    widgets: Array<WidgetProps>\r\n    onChangeOrder: (widgets: Array<WidgetProps>) => void\r\n    onRemove: (something) => void\r\n    spacing?: number // GridListProps['spacing']\r\n    children?: undefined // don't allow any children\r\n}\r\n\r\nexport default class DashBoard extends React.PureComponent<DashBoardProps>{\r\n    static defaultProps = {\r\n        spacing: 16\r\n    }\r\n\r\n    static propTypes = {\r\n        onChangeOrder: PropTypes.func.isRequired,\r\n        onRemove: PropTypes.func.isRequired,\r\n        spacing: PropTypes.number,\r\n        widgets: PropTypes.arrayOf(PropTypes.shape({\r\n            background: PropTypes.string,\r\n            children: PropTypes.node.isRequired,\r\n            minSize: PropTypes.oneOf(['small', 'medium', 'large']),\r\n            size: PropTypes.oneOf(['small', 'medium', 'large']).isRequired\r\n        })),\r\n        // children: PropTypes. //TODO: Check that children is undefined\r\n    }\r\n\r\n    onOrderArray = (target: number, source: number) => {\r\n        const widgets = [...this.props.widgets]\r\n        widgets.splice(target, 0, widgets.splice(source, 1)[0])\r\n        this.props.onChangeOrder(widgets)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <GridList\r\n                spacing={this.props.spacing}\r\n                cols={4}\r\n                cellHeight={250}\r\n                style={{width: '100%'}}\r\n            >\r\n                {this.props.widgets.map(({size, ...widget}, i) => (\r\n                    <GridListTile key={i} {...sizeMap[size]} >\r\n                        <Widget {...widget}\r\n                            index={i}\r\n                            onOrder={this.onOrderArray}\r\n                        />\r\n                    </GridListTile>\r\n                ))}\r\n            </GridList>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nexport type SearchFieldProps = TextFieldProps\r\n\r\ntype State = {\r\n    editing: boolean\r\n}\r\n\r\nexport default class SearchField extends React.PureComponent<SearchFieldProps, State>{\r\n    static defaultProps = {\r\n        placeholder: 'Search',\r\n        margin: 'dense',\r\n        InputProps: {\r\n            startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>\r\n        }\r\n    }\r\n\r\n    state: State = {\r\n        editing: false\r\n    }\r\n\r\n    onBlur = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: false})\r\n        const {onBlur} = this.props\r\n        onBlur && onBlur(e)\r\n    }\r\n\r\n    onFocus = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: true})\r\n        const {onFocus} = this.props\r\n        onFocus && onFocus(e)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <TextField\r\n                fullWidth={this.state.editing}\r\n                {...this.props}\r\n                onBlur={this.onBlur}\r\n                onFocus={this.onFocus}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\r\n\r\ntype Props = {\r\n    value: string\r\n    onChange: (value: string) => void\r\n    dirty?: boolean\r\n    enableDirtyCheck?: boolean\r\n}\r\n\r\ntype State = {\r\n    editing: boolean\r\n    value: string\r\n    prevProps: Props\r\n}\r\n\r\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>\r\n\r\nfunction handleEvent(event: React.KeyboardEvent<HTMLDivElement>){\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n    // the above only prevents other synthetic events, if we want to prevent global listeners too, we need to stop the propagation on the native event as well\r\n    event.nativeEvent.stopImmediatePropagation()\r\n}\r\n\r\nexport type TextFieldEditorProps = Props & Partial<Omit<TextFieldProps, 'value' | 'onChange'>>\r\n\r\nexport default class TextFieldEditor extends React.PureComponent<TextFieldEditorProps, State>{\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n        onChange: PropTypes.func.isRequired,\r\n        dirty: PropTypes.bool\r\n    }\r\n\r\n    _inputRef: React.RefObject<HTMLInputElement> = React.createRef()\r\n\r\n    state: State = {\r\n        editing: false,\r\n        value: this.props.value,\r\n        prevProps: this.props\r\n    }\r\n\r\n    static getDerivedStateFromProps(props: Readonly<TextFieldEditorProps>, state: Readonly<State>){\r\n        const prevProps = state.prevProps\r\n\r\n        if(prevProps.value !== props.value){ return {value: props.value, prevProps: props} }\r\n\r\n        return {prevProps: props}\r\n    }\r\n\r\n    blur = () => { this._inputRef.current && this._inputRef.current.blur() }\r\n\r\n    onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n        this.props.onKeyDown && this.props.onKeyDown(event)\r\n        if(event.defaultPrevented){ return }\r\n\r\n        if(event.ctrlKey){\r\n            switch(event.key){\r\n            case 's':\r\n            // this event should not be 'handled' here (eg. invoke handleEvent(event)), control may want to perform other actions on ctrl+s\r\n            // It should behave as a save changes in the control as well however\r\n                this.blur()\r\n                break\r\n            case 'z':\r\n                handleEvent(event)\r\n                this.setState({editing: false, value: this.props.value}, this.blur)\r\n                break\r\n            default: break\r\n            }\r\n        }else{\r\n            switch(event.key){\r\n            case 'Enter':\r\n                if(this.props.multiline){ break }\r\n                handleEvent(event)\r\n                this.blur()\r\n                break\r\n            case 'Escape':\r\n                handleEvent(event)\r\n                this.setState({editing: false, value: this.props.value}, this.blur)\r\n                break\r\n            default: break\r\n            }\r\n        }\r\n    }\r\n\r\n    onFocus = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: true})\r\n        this.props.onFocus && this.props.onFocus(e)\r\n    }\r\n\r\n    onBlur = (e: React.EventHandler<any>) => {\r\n        if(!this.state.editing){ return } // The method should be safe to call multiple times, but we don't want to raise the event multiple times if we dont need to\r\n\r\n        this.props.onChange(this.state.value)\r\n        this.setState({editing: false})\r\n        this.props.onBlur && this.props.onBlur(e)\r\n    }\r\n\r\n    onChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement | HTMLSelectElement>) => {\r\n        const value = event.target.value\r\n        this.setState({value, editing: true})\r\n    }\r\n\r\n    render(){\r\n        const {dirty: dirtyProp, onChange: onChangeProp, value: valueProp, enableDirtyCheck, ...otherProps} = this.props\r\n        const {value} = this.state\r\n\r\n        const isDirty = enableDirtyCheck ? this.props.value !== value || !!dirtyProp : !!dirtyProp\r\n\r\n        return (\r\n            <TextField\r\n                {...otherProps as any}\r\n                inputRef={this._inputRef}\r\n                value={value}\r\n                onFocus={this.onFocus}\r\n                onChange={this.onChange}\r\n                onBlur={this.onBlur}\r\n                onKeyDown={this.onKeyDown}\r\n                InputProps={{style: {fontStyle: isDirty ? 'italic' : 'normal'}}}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport {withTheme, DefaultTheme, WithTheme} from 'styled-components'\r\n\r\nimport TrendingUp from '@material-ui/icons/TrendingUp'\r\nimport TrendingFlat from '@material-ui/icons/TrendingFlat'\r\nimport TrendingDown from '@material-ui/icons/TrendingDown'\r\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\r\n\r\nexport type TrendingProps = {\r\n    variant: 'up' | 'down' | 'flat'\r\n} & SvgIconProps\r\n\r\nconst iconMap: {[P in TrendingProps['variant']]: React.ComponentType<SvgIconProps>} = {\r\n    up: TrendingUp,\r\n    flat: TrendingFlat,\r\n    down: TrendingDown,\r\n}\r\n\r\nconst getColor = (variant: TrendingProps['variant'], theme: DefaultTheme) => {\r\n    switch(variant){\r\n    case 'up': return theme.tfso.palette.success\r\n    case 'down': return theme.tfso.palette.warning\r\n    case 'flat': return theme.tfso.palette.alert\r\n    default: return undefined\r\n    }\r\n}\r\n\r\nconst trending = ({variant, theme, ...iconProps}: TrendingProps & WithTheme) => {\r\n    const Icon = iconMap[variant]\r\n    const nativeColor = getColor(variant, theme)\r\n    return (\r\n        <Icon\r\n            nativeColor={nativeColor}\r\n            {...iconProps}\r\n        />\r\n    )\r\n}\r\n\r\ntrending.propTypes = {\r\n    variant: PropTypes.oneOf(['up', 'down', 'flat']).isRequired\r\n}\r\n\r\nexport default React.memo(withTheme(trending))","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n// https://www.w3schools.com/charsets/ref_emoji.asp\r\nconst emojis = {\r\n    middleFinger: <>&#128405;</>,\r\n    indexFinger: <>&#128070;</>,\r\n    flex: <>&#128170;</>,\r\n    brokenHeart: <>&#128148;</>,\r\n    perfect: <>&#128076;</>,\r\n    thumbsUp: <>&#128077;</>,\r\n    thumbsDown: <>&#128078;</>,\r\n    clap: <>&#128079;</>,\r\n    heart: <>&#128152;</>,\r\n    fire: <>&#128293;</>,\r\n    bulb: <>&#128161;</>,\r\n    crap: <>&#128169;</>,\r\n    thinking: <>&#129300;</>,\r\n    rocket: <>&#128640;</>,\r\n}\r\n\r\nexport type EmojiProps = {\r\n    variant: keyof typeof emojis\r\n}\r\n\r\nconst Emoji = (props: EmojiProps) => emojis[props.variant]\r\n\r\nEmoji.propTypes = {\r\n    variant: PropTypes.oneOf(Object.keys(emojis))\r\n}\r\n\r\nexport default Emoji","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    beforeShow?: any\r\n    delayMs?: number\r\n    show?: boolean\r\n    children: React.ReactNode\r\n}\r\n\r\ntype State = {\r\n    show: boolean\r\n}\r\n\r\nexport default class Delay extends React.PureComponent<Props, State>{\r\n    static propTypes = {\r\n        beforeShow: PropTypes.node,\r\n        delayMs: PropTypes.number,\r\n        show: PropTypes.bool,\r\n        children: PropTypes.node.isRequired\r\n    }\r\n\r\n    _timer: any = null\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.setState({show: false})\r\n        this._timer = setTimeout(() => {\r\n            this.setState({show: true})\r\n        }, this.props.delayMs || 1000)\r\n    }\r\n    componentWillUnmount(){\r\n        clearTimeout(this._timer)\r\n    }\r\n    render(){\r\n        if(this.props.show || this.state.show){\r\n            return this.props.children\r\n        }\r\n\r\n        return this.props.beforeShow || null\r\n    }\r\n}","import React, {HTMLProps} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    children: (hover: boolean, ref: React.RefObject<any>) => React.ReactNode\r\n} & HTMLProps<HTMLDivElement>\r\n\r\ntype State = {\r\n    hover: boolean\r\n}\r\n\r\nexport default class Hoverable extends React.PureComponent<Props, State>{\r\n    private ref: React.RefObject<any>\r\n\r\n    static propTypes = {\r\n        children: PropTypes.func.isRequired\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.ref = React.createRef()\r\n\r\n        this.state = {\r\n            hover: false\r\n        }\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState(state => ({hover: !state.hover}))\r\n    }\r\n\r\n    hoverOn = () => this.setState({hover: true})\r\n    hoverOff = () => this.setState({hover: false})\r\n\r\n    render(){\r\n        const {children, ...restProps} = this.props\r\n\r\n        return (\r\n            <div\r\n                ref={this.ref}\r\n                onMouseEnter={this.hoverOn}\r\n                onMouseLeave={this.hoverOff}\r\n                {...restProps}\r\n            >\r\n                {children(this.state.hover, this.ref)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {HTMLProps} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    children: (tabIndex: number, next: () => void, prev: () => void) => React.ReactNode\r\n    index?: number\r\n    length?: number\r\n} & HTMLProps<HTMLDivElement>\r\n\r\ntype State = {\r\n    index: number\r\n}\r\n\r\nexport default class Wizard extends React.PureComponent<Props, State>{\r\n    static propTypes = {\r\n        children: PropTypes.func.isRequired,\r\n        index: PropTypes.number,\r\n        length: PropTypes.number\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {index: props.index || 0}\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps){\r\n        if(nextProps.hasOwnProperty('index')){\r\n            return {index: nextProps.index}\r\n        }\r\n        return null\r\n    }\r\n\r\n    next = () => this.setState(state => {\r\n        if(this.props.length && state.index + 1 >= this.props.length) return state\r\n        return {index: state.index + 1}\r\n    })\r\n    prev = () => this.setState(state => {\r\n        if(state.index - 1 < 0) return state\r\n        return {index: state.index - 1}\r\n    })\r\n\r\n    render(){\r\n        const {children, ...restProps} = this.props\r\n\r\n        return (\r\n            <div {...restProps}>\r\n                {children(this.state.index, this.next, this.prev)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Styled, {css} from 'styled-components/macro'\r\n\r\nexport type TfsoLoadingIconProps = {\r\n    /**\r\n     * @default infinite\r\n     */\r\n    once?: boolean\r\n} & SvgIconProps\r\n\r\nconst TfsoLoadingIconWrapper = ({once, ...other}: TfsoLoadingIconProps) => <SvgIcon {...other}/>\r\n\r\nconst path = css`\r\n    opacity: 1;\r\n    animation-delay: 1.5s;\r\n`\r\nconst StyledSvgIcon: React.ComponentType<SvgIconProps> = Styled(TfsoLoadingIconWrapper)`&&{\r\n    #path1{\r\n        ${path}\r\n        animation: fade-in1 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path2{\r\n        ${path}\r\n        animation: fade-in2 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path3{\r\n        ${path}\r\n        animation: fade-in3 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path4{\r\n        ${path}\r\n        animation: fade-in4 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path5{\r\n        ${path}\r\n        animation: fade-in5 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    @keyframes fade-in1 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 1; }\r\n        40% { opacity: 1; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in2 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 1; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in3 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in4 {\r\n        0%   { opacity:0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 0.2; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in5 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 0.2; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n}` as any // seems like returntype of styled-components adds string as a type of _ref.. dunnp why\r\n\r\nexport default React.memo((props: TfsoLoadingIconProps) => (\r\n    <StyledSvgIcon\r\n        {...props}\r\n        viewBox=\"0 0 37 23\"\r\n        fillRule='evenodd'\r\n        strokeWidth=\"1\"\r\n    >\r\n        <path d=\"M21.79 9.81C21.17789 8.5323532 19.886707 7.7195303 18.47 7.72 16.444136 7.7143752 14.803816 6.0724096 14.800223 4.0465408 14.79663 2.020672 16.431115 0.37289845 18.456947 0.36008776 20.482778 0.34727707 22.137972 1.9742478 22.16 4c-0.01782 1.4288443 0.793121 2.7388262 2.08 3.36-1.120033 0.4431782-2.006822 1.3299671-2.45 2.45l0 0z\" id=\"path5\"/>\r\n        <path d=\"m33.24 15.09c-1.427527 0.01209-2.733245-0.802525-3.35-2.09-0.443178 1.120033-1.329967 2.006822-2.45 2.45 1.275973 0.613987 2.088053 1.903991 2.09 3.32 0 2.032408 1.647592 3.68 3.68 3.68 2.032408 0 3.68-1.647592 3.68-3.68 0-2.032408-1.647592-3.68-3.68-3.68l0.03 0 0 0z\" id=\"path4\"/>\r\n        <path d=\"m14.79 11.41c0-2.0351693-1.649831-3.685-3.685-3.685-2.0351693 0-3.685 1.6498307-3.685 3.685 0 2.032408-1.6475921 3.68-3.68 3.68-2.0324079 0-3.68 1.647592-3.68 3.68 0 2.032408 1.6475921 3.68 3.68 3.68 2.0324079 0 3.68-1.647592 3.68-3.68-0.00119-1.719312 1.1882715-3.210312 2.864877-3.591141 1.676605-0.380829 3.39346 0.450022 4.135123 2.001141 0.443178-1.120033 1.329967-2.006822 2.45-2.45-1.27208-0.616837-2.079908-1.906255-2.08-3.32l0 0 0 0z\" id=\"path2\"/>\r\n        <path d=\"m25.84 7.73c-2.016889-0.0001192-3.658077 1.6232303-3.68 3.64l0 0.09c-0.02094 1.397916-0.830116 2.663946-2.09 3.27 1.120033 0.443178 2.006822 1.329967 2.45 2.45 0.613987-1.275973 1.903991-2.088053 3.32-2.09 2.035169 0 3.685-1.649831 3.685-3.685 0-2.0351693-1.649831-3.685-3.685-3.685l0 0.01 0 0z\" id=\"path3\"/>\r\n        <path d=\"m18.47 15.1c-2.031097 0.0055-3.673671 1.655547-3.669994 3.686649 0.0037 2.031101 1.652215 3.675171 3.683318 3.673336C20.514428 22.45815 22.159993 20.811104 22.16 18.78 22.162665 17.800536 21.774754 16.860421 21.082167 16.167833 20.389579 15.475246 19.449463 15.087335 18.47 15.09l0 0.01 0 0z\" id=\"path1\"/>\r\n    </StyledSvgIcon>\r\n))\r\n","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nexport const MaterialUiIcon = React.memo((props: SvgIconProps) => (\r\n    <SvgIcon {...props} viewBox=\"0 0 600 476.6\">\r\n        <path d=\"m0 259.8v-259.8l225 129.9v86.6l-150-86.6v173.2z\" fill=\"#00b0ff\"/>\r\n        <path d=\"m225 129.9 225-129.9v259.8l-150 86.6-75-43.3 150-86.6v-86.6l-150 86.6z\" fill=\"#0081cb\"/>\r\n        <path d=\"m225 303.1v86.6l150 86.6v-86.6z\" fill=\"#00b0ff\"/>\r\n        <path d=\"m375 476.3 225-129.9v-173.2l-75 43.3v86.6l-150 86.6zm150-346.4v-86.6l75-43.3v86.6z\" fill=\"#0081cb\"/>\r\n    </SvgIcon>\r\n))\r\n\r\nexport type MaterialUiLinkProps = {\r\n    iconProps?: SvgIconProps\r\n}\r\n\r\nconst MaterialUiLink = (props: MaterialUiLinkProps) => (\r\n    <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\r\n        <MaterialUiIcon fontSize='large' {...props.iconProps as any} />\r\n    </Link>\r\n)\r\n\r\nexport default MaterialUiLink\r\n","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Link from '@material-ui/core/Link'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nexport const GitHubIcon = React.memo((props: SvgIconProps) => (\r\n    <SvgIcon {...props}>\r\n        <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\r\n    </SvgIcon>\r\n))\r\n\r\nexport type GitHubLinkProps = {\r\n    path?: string\r\n    tooltip?: string\r\n    iconProps?: SvgIconProps\r\n}\r\n\r\nconst GitHubLink = (props: GitHubLinkProps) => {\r\n    return (\r\n        <Link href={`https://github.com/tfso/react-tfso-components${props.path ? `/${props.path}` : ''}`} target='_blank' rel='noreferrer' >\r\n            <Tooltip title={props.tooltip ? props.tooltip : 'View on GitHub'}>\r\n                <GitHubIcon fontSize={props.iconProps && props.iconProps.fontSize || 'large'} {...props.iconProps as any} />\r\n            </Tooltip>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default GitHubLink\r\n","import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Zoom from '@material-ui/core/Zoom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\r\nimport { MaterialUiIcon } from '../components/MaterialUiLink'\r\nimport { GitHubIcon } from '../components/GitHubLink'\r\n\r\n// TODO: this could be a Util HOC component\r\nconst CenterTop = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    height: 100%;\r\n`\r\n\r\nconst Home = () => {\r\n    return (\r\n        <CenterTop>\r\n            <TfsoLoading once color='primary' fontSize='inherit' style={{fontSize: 400}} />\r\n            <Typography variant='h3' color='primary' paragraph>\r\n                REACT-TFSO-COMPONENTS\r\n            </Typography>\r\n            <Typography variant='h6' align='center' color='textSecondary' paragraph>\r\n                Something something useful description something dark side (TODO) <br />\r\n                Supplementary React components based on Material-UI with Tfso styling<br />\r\n            </Typography>\r\n            <Grid container justify='center'>\r\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Zoom in appear style={{transitionDelay: '250ms'}} >\r\n                        <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\r\n                            <MaterialUiIcon style={{fontSize: 150}} />\r\n                        </Link>\r\n                    </Zoom>\r\n                    <Zoom in appear style={{transitionDelay: '750ms'}} >\r\n                        <Typography variant='h6'>\r\n                            Find standard components <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>here</Link>\r\n                        </Typography>\r\n                    </Zoom>\r\n                </Grid>\r\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Zoom in appear style={{transitionDelay: '500ms'}}>\r\n                        <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >\r\n                            <GitHubIcon style={{fontSize: 150}} color='primary' />\r\n                        </Link>\r\n                    </Zoom>\r\n                    <Zoom in appear style={{transitionDelay: '1000ms'}} >\r\n                        <Typography variant='h6'>\r\n                            View source on <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >GitHub</Link>\r\n                        </Typography>\r\n                    </Zoom>\r\n                </Grid>\r\n            </Grid>\r\n        </CenterTop>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport Prism from 'prismjs'\r\n\r\n// Load languages\r\nimport 'prismjs/components/prism-clike'\r\nimport 'prismjs/components/prism-css'\r\nimport 'prismjs/components/prism-markup'\r\nimport 'prismjs/components/prism-javascript'\r\nimport 'prismjs/components/prism-typescript'\r\nimport 'prismjs/components/prism-jsx'\r\nimport 'prismjs/components/prism-tsx'\r\n\r\n// Load style\r\nimport 'prismjs/themes/prism.css'\r\n\r\ntype CodeProps = {\r\n    language: 'js' | 'ts' | 'tsx' | 'jsx'\r\n    children: React.ReactElement\r\n}\r\n\r\nexport class Code extends React.PureComponent<CodeProps>{\r\n    _ref: React.RefObject<HTMLPreElement> = React.createRef()\r\n\r\n    componentDidMount(){\r\n        this.highlight()\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.highlight()\r\n    }\r\n\r\n    highlight = () => {\r\n        if(!this._ref.current){ return }\r\n        Prism.highlightElement(this._ref.current!)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <pre ref={this._ref} className={`language-${this.props.language}`}>\r\n                <code className={`language-${this.props.language}`}>\r\n                    {this.props.children}\r\n                </code>\r\n            </pre>\r\n        )\r\n    }\r\n}","import {createHashHistory} from 'history'\r\n\r\nconst history = createHashHistory({\r\n    basename: '',\r\n    hashType: 'slash',\r\n})\r\nexport default history","import React from 'react'\r\n\r\nimport history from '../history'\r\n\r\nimport MuiLink, {LinkProps as MuiLinkProps} from '@material-ui/core/Link'\r\nimport styled from 'styled-components/macro'\r\n\r\nexport type LinkProps = {\r\n    to?: string\r\n    children: React.ReactNode\r\n} & MuiLinkProps\r\n\r\nexport default class Link extends React.PureComponent<LinkProps>{\r\n    onClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.props.onClick && this.props.onClick(event)\r\n\r\n        if(event.defaultPrevented || !this.props.to){\r\n            return\r\n        }\r\n        event.preventDefault()\r\n        history.push(this.props.to.toLowerCase())\r\n    }\r\n\r\n    render(){\r\n        const {to, href, underline, ...other} = this.props\r\n        return <MuiLink\r\n            {...other}\r\n            href={to && to.toLowerCase() || href}\r\n            underline={underline || 'none'}\r\n            rel={this.props.target === '_blank' ? 'noreferrer' : undefined}\r\n            onClick={this.onClick}\r\n        />\r\n    }\r\n}\r\n\r\nconst AnchorLink = styled(Link)`&&{\r\n    opacity: 0.2;\r\n    :hover{\r\n        opacity: 1;\r\n    }\r\n}`\r\n\r\nconst getPage = () => window.location.hash.split('/')[1]\r\nexport const Anchor = (props: {id: string}) => {\r\n    const id = `/${getPage()}/${props.id.toLowerCase()}`\r\n    return (\r\n        <AnchorLink id={id} to={id}>#</AnchorLink>\r\n    )\r\n}","import React, {ReactChild} from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport CodeIcon from '@material-ui/icons/Code'\r\n\r\nimport GitHubLink from './GitHubLink'\r\nimport {Code} from './code'\r\nimport {Anchor} from './Link'\r\n\r\nexport const Demo = (props) => <Paper style={{padding: 15, marginBottom: 30}}>{props.children}</Paper>\r\n\r\nexport type DemoTitleProps = {\r\n    children: string\r\n    /**\r\n     * The path to the Demo component. `src/demo/demos/` will be appended in front of the path\r\n     */\r\n    demoPath?: string\r\n\r\n    /**\r\n     * The path to the Implementation of the component. `src/lib/` will be appended in front of the path\r\n     */\r\n    srcPath?: string\r\n}\r\nexport const DemoTitle = (props: DemoTitleProps) => {\r\n    return (\r\n        <Grid container justify='space-between' alignItems='baseline' >\r\n            <Grid item>\r\n                <Typography variant=\"h5\">\r\n                    {props.children} <Anchor id={props.children} />\r\n                </Typography>\r\n            </Grid>\r\n            {props.srcPath || props.demoPath\r\n                ? <Grid item xs={2} container spacing={16} justify='flex-end'>\r\n                    {props.demoPath && <Grid item><GitHubLink fontSize='default' color='secondary' path={`blob/master/src/demo/demos/${props.demoPath}`} tooltip={`View demo source for ${props.children}`} /></Grid>}\r\n                    {props.srcPath && <Grid item><GitHubLink fontSize='default' color='primary' path={`blob/master/src/lib/${props.srcPath}`} tooltip={`View source for ${props.children}`}/></Grid> }\r\n                </Grid>\r\n                : null\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\nexport const DemoHelp = (props) => <Typography variant='subtitle1' paragraph>{props.children}</Typography>\r\nexport const DemoContent = (props: { children: Array<ReactChild> | ReactChild}) => (\r\n    <div style={{marginTop: 30}}>\r\n        <Typography variant=\"subtitle1\" >Example</Typography>\r\n        <Divider />\r\n        <br />\r\n        <Grid container spacing={16} alignItems='center'>\r\n            {props.children && Array.isArray(props.children)\r\n                ? props.children.map((child, i) => (\r\n                    <Grid item key={i} xs={i === 0 ? 12 : false}>\r\n                        {child}\r\n                    </Grid>\r\n                ))\r\n                : <Grid item xs={12} >{props.children}</Grid>\r\n            }\r\n        </Grid>\r\n    </div>\r\n)\r\n\r\nexport const DemoProps = (props) => (\r\n    <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant='h6'>Props</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Default</TableCell>\r\n                        <TableCell>Description</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.children}\r\n                </TableBody>\r\n            </Table>\r\n        </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n)\r\n\r\nexport type DemoPropProps = {\r\n    name: string\r\n    type: string\r\n    default?: string\r\n    description?: string\r\n}\r\n\r\nexport const DemoProp = (props: DemoPropProps) => (\r\n    <TableRow>\r\n        <TableCell><code>{props.name}</code></TableCell>\r\n        <TableCell><code>{props.type}</code></TableCell>\r\n        <TableCell><code>{props.default}</code></TableCell>\r\n        <TableCell><Typography>{props.description}</Typography></TableCell>\r\n    </TableRow>\r\n)\r\n\r\ntype DemoCodeProps = Code['props']\r\nexport const DemoCode = (props: DemoCodeProps) => (\r\n    <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<CodeIcon />}>\r\n            <Typography variant='h6'>{`View Demo (${props.language})`}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n            <Code {...props} />\r\n        </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n)","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport Trending, {TrendingProps} from '../../lib/Trending'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\ntype TrendingDemoState = {\r\n    variant: TrendingProps['variant']\r\n}\r\n\r\nexport default class TrendingDemo extends React.PureComponent<{}, TrendingDemoState>{\r\n    state: TrendingDemoState = {\r\n        variant: 'up'\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='TrendingDemo.tsx' srcPath='Trending.tsx' >Trending</DemoTitle>\r\n                <DemoHelp>\r\n                    A colored icon indicating a trending direction. <br/>\r\n                    Tip: You can use the <code>color</code> or <code>nativeColor</code> property to override the color of the icon.\r\n                </DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='variant' type='up | down | flat' default='' description=''></DemoProp>\r\n                    <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Trending variant={this.state.variant} fontSize='large' />\r\n                    <TextField\r\n                        select\r\n                        value={this.state.variant}\r\n                        onChange={e => this.setState({variant: e.target.value as any})}\r\n                        label='variant'\r\n                    >\r\n                        <MenuItem value='up'>up</MenuItem>\r\n                        <MenuItem value='flat'>flat</MenuItem>\r\n                        <MenuItem value='down'>down</MenuItem>\r\n                    </TextField>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport BigNumber, {BigNumberProps} from '../../lib/BigNumber'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\ntype BigNumberState = {\r\n    color: BigNumberProps['color']\r\n    size: BigNumberProps['size']\r\n}\r\n\r\nexport default class BigNumberDemo extends React.PureComponent<{}, BigNumberState>{\r\n    state: BigNumberState = {\r\n        color: 'dark',\r\n        size: 'large',\r\n    }\r\n\r\n    handleChange = (key: keyof BigNumberState) => (event: React.ChangeEvent<HTMLSelectElement>) => this.setState({[key]: event.target.value} as any)\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='BigNumberDemo.tsx' srcPath='BigNumber.tsx' >BigNumber</DemoTitle>\r\n                <DemoHelp>\r\n                    A Big Number is a number stands out\r\n                </DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='color' type='light | dark' default='light' description=''></DemoProp>\r\n                    <DemoProp name='size' type='medium | large' default='larger' description=''></DemoProp>\r\n                    <DemoProp name='children' type='string | number' default='' description=''></DemoProp>\r\n                    {/* <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp> */}\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Grid container alignItems='center' spacing={32}>\r\n                        <Grid item>\r\n                            <div style={{backgroundColor: this.state.color === 'light' ? '#11beff' : 'inherit', padding: 10}}>\r\n                                <BigNumber\r\n                                    size={this.state.size}\r\n                                    color={this.state.color}\r\n                                >$123</BigNumber>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant='caption'>NB: The BigNumber component does not set the background color!<br /> The background color used here is just for illustrative purposes.</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <TextField\r\n                        select\r\n                        label='size'\r\n                        value={this.state.size}\r\n                        onChange={this.handleChange('size')}\r\n                    >\r\n                        <MenuItem value='medium'>medium</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                    >\r\n                        <MenuItem value='light'>light</MenuItem>\r\n                        <MenuItem value='dark'>dark</MenuItem>\r\n                    </TextField>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\n\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle, DemoCode} from '../components/demo'\r\n\r\nimport Alert, {AlertProps} from '../../lib/Alert'\r\n\r\nconst variantMessage: {[P in AlertProps['variant']]: string } = {\r\n    success: 'GRATE SUCCÉSS!',\r\n    info: 'Informational information',\r\n    warning: 'You better not do that, Brian',\r\n    error: 'That failed horribly...',\r\n}\r\n\r\nexport default class AlertDemo extends React.PureComponent<{}, {variant: AlertProps['variant'], message: string, open: boolean}>{\r\n    state = {\r\n        variant: 'success' as AlertProps['variant'],\r\n        open: false,\r\n        message: 'GRATE SUCCÉSS!'\r\n    }\r\n\r\n    onClose = () => this.setState({open: false})\r\n\r\n    onPress = (variant: AlertProps['variant']) => {\r\n        const message = variantMessage[variant]\r\n        return () => this.setState({open: true, message, variant})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='AlertDemo.tsx' srcPath='Alert.tsx' >Alert</DemoTitle>\r\n                <DemoHelp>A dismissable alert-box that can be used in a SnackBar or as a standard component in a page</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='message' type='string | ReactNode' description='The message string or Element to be displayed' />\r\n                    <DemoProp name='variant' type='success | error | info | warning' description='The variant of the alert. Icon and background-color is selected based on the variant' />\r\n                    <DemoProp name='onClose' type='() => void' description='Callback function invoked when the alert is dismissed' />\r\n                </DemoProps>\r\n                <DemoCode language='tsx'>\r\n                    {`import React from 'react'\r\nimport Alert from 'react-tfso-components/dist/Alert'\r\nimport Snacbar from '@material-ui/core/Snackbar'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nclass Alerter extends React.PureComponent<{}, {open: boolean}> {\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    onClose = () => this.setState({open: false})\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Snackbar\r\n                    open={this.state.open}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    autoHideDuration={2000}\r\n                    onClose={this.onClose}\r\n                >\r\n                    <Alert\r\n                        onClose={this.onClose}\r\n                        message='An unexpected error occured'\r\n                        variant='error'\r\n                    />\r\n                </Snackbar>\r\n                <Button variant='outlined' onClick={() => this.setState({open: true})}>Show Alert</Button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}`\r\n                    }\r\n                </DemoCode>\r\n                <DemoContent>\r\n                    <Snackbar\r\n                        open={this.state.open}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        autoHideDuration={2000}\r\n                        onClose={this.onClose}\r\n                    >\r\n                        <Alert\r\n                            onClose={this.onClose}\r\n                            message={this.state.message}\r\n                            variant={this.state.variant}\r\n                        />\r\n                    </Snackbar>\r\n                    <Button variant='outlined' onClick={this.onPress('success')}>Open Success</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('info')}>Open Info</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('warning')}>Open Warning</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('error')}>Open Error</Button>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport SearchField from '../../lib/SearchField'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\n\r\nexport default class SearchFieldDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='SearchFieldDemo.tsx' srcPath='SearchField.tsx' >SearchField</DemoTitle>\r\n                <DemoHelp>A TextField that gets full width on typing. It also has a search icon adornnment.</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='placeholder' type='string (optional)' default='Search' description=''></DemoProp>\r\n                    <DemoProp name='margin' type='none | dense | normal (optional)' default='dense' description=''></DemoProp>\r\n                    <DemoProp name='InputProps' type=\"TextFieldProps['InputProps'] (optional)\" default='{ startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>}' description=''></DemoProp>\r\n                    <DemoProp name='...' type='TextFieldProps' default='' description='Any other prop is spread to the TextField'></DemoProp>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <SearchField />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextFieldEditor from '../../lib/TextFieldEditor'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport default class TextFieldEditorDemo extends React.PureComponent{\r\n    state = {\r\n        value: 'demo',\r\n        dirty: false,\r\n        enableDirtyCheck: false\r\n    }\r\n\r\n    onReset = () => {\r\n        this.setState({value: ''})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='TextFieldEditorDemo.tsx' srcPath='TextFieldEditor.tsx' >TextFieldEditor</DemoTitle>\r\n                <DemoHelp>A wrapper around material-ui's TextField with some added features</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='value' type='string' default='' description='' />\r\n                    <DemoProp name='onChange' type='(value: string) => void' default='' description='Invoked when the user has finished editing the value (editor looses focus by clicking or tabbing away, pressing the Enter or ctrl+s' />\r\n                    <DemoProp name='dirty' type='boolean (optional)' default='false' description='If true, it is rendered in italic after onChange' />\r\n                    <DemoProp name='enableDirtyCheck' type='boolean (optional)' default='false' description='If true, the component will do internal dirty checking when editing' />\r\n                    <DemoProp name='...' type='TextFieldProps' description='Any other prop is spread to the TextField' />\r\n                </DemoProps>\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} >\r\n                        <Typography>Keybindings</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <code>\r\n                                ctrl + s:&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is NOT handled!)<br/>\r\n                                ctrl + z:&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\r\n                                Enter:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is handled)<br/>\r\n                                Escape:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\r\n                        </code>\r\n                        <br/>\r\n                        <i>When the event is handled `preventDefault()` and `stopPropagation()` is invoked on the `React.KeyboardEvent`</i><br/>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <DemoContent>\r\n                    <TextFieldEditor\r\n                        value={this.state.value}\r\n                        enableDirtyCheck={this.state.enableDirtyCheck}\r\n                        dirty={this.state.dirty}\r\n                        onChange={(value: string) => this.setState({value})}\r\n                    />\r\n                    <Button variant='outlined' onClick={() => this.setState({value: 'demo'})}>Reset</Button>\r\n                    <Button variant='outlined' onClick={() => this.setState({dirty: !this.state.dirty})}>Dirty: {this.state.dirty.toString()}</Button>\r\n                    <Button variant='outlined' onClick={() => this.setState({enableDirtyCheck: !this.state.enableDirtyCheck})}>Enable dirty check: {this.state.enableDirtyCheck.toString()}</Button>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport ConfirmationDialog from '../../lib/ConfirmationDialog'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\n\r\nexport default class ConfirmationDialogDemo extends React.PureComponent{\r\n    state = {\r\n        openConfirmationDialog: false\r\n    }\r\n\r\n    onClickOpenConfirmationDialog = () => {\r\n        this.setState({openConfirmationDialog: true})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='ConfirmationDialogDemo.tsx' srcPath='ConfirmationDialog.tsx' >ConfirmationDialog</DemoTitle>\r\n                <DemoHelp>A Dialog containing Ok and Cancel buttons</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show dialog\" />\r\n                    <DemoProp name=\"title\" type=\"string (optional)\" default=\"\" description=\"Dialog title\" />\r\n                    <DemoProp name=\"message\" type=\"string\" default=\"\" description=\"Dialog content\" />\r\n                    <DemoProp name=\"okButtonText\" type=\"string\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"onOk\" type=\"function\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Button variant='outlined' onClick={this.onClickOpenConfirmationDialog}>Open ConfirmationDialog</Button>\r\n                    <ConfirmationDialog\r\n                        open={this.state.openConfirmationDialog}\r\n                        okButtonText='Ok'\r\n                        cancelButtonText='Cancel'\r\n                        onOk={() => this.setState({openConfirmationDialog: false})}\r\n                        onCancel={() => this.setState({openConfirmationDialog: false})}\r\n                        message='Confirmation dialog message'\r\n                        title='Confirmation dialog title'\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\r\nimport Emoji from '../../lib/Emoji'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\ntype State = {\r\n    // variant\r\n}\r\n\r\nexport default class EmojiDemo extends React.PureComponent<{}, State>{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle srcPath='Emoji.tsx' demoPath='EmojiDemo.tsx'>Emoji</DemoTitle>\r\n                <DemoHelp>A simple html Emoji component</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='variant' type='string' default='' description=''/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Typography variant=\"h2\">\r\n                        <Emoji variant='heart' />\r\n                        <Emoji variant='thumbsUp' />\r\n                        <Emoji variant='fire' />\r\n                    </Typography>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Delay, Hoverable, Wizard} from '../../lib'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport Step from '@material-ui/core/Step'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Button from '@material-ui/core/Button'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\n\r\nexport default class Utils extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <DelayDemo />\r\n                <HoverableDemo />\r\n                <WizardDemo />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nclass DelayDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Delay.tsx'>Delay</DemoTitle>\r\n                <DemoHelp>Shows the component inside after a set delay. Can be used to only show loaders if exceptionally slow</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"beforeShow\" type=\"React element or string (optional)\" default=\"\" description=\"What you want to show before the delay is finished\" />\r\n                    <DemoProp name=\"delayMs\" type=\"Number (optional)\" default=\"1000\" description=\"Delay time in ms\" />\r\n                    <DemoProp name=\"show\" type=\"Boolean (optional)\" default=\"false\" description=\"Force show content\" />\r\n                    <DemoProp name=\"children\" type=\"React element\" default=\"\" description=\"Content to show after delay\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Delay beforeShow=\"Waiting for delay...\">\r\n                        <CircularProgress />\r\n                    </Delay>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass HoverableDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Hoverable.tsx'>Hoverable</DemoTitle>\r\n                <DemoHelp>A HOC that passes hover true/false as a render prop</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(hover: boolean, ref: RefObject) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Hoverable>\r\n                        {(hover) => (\r\n                            <React.Fragment>\r\n                                {hover\r\n                                    ? <div key=\"1\" style={{backgroundColor: '#6699bb', padding: 15, color: '#FFF', cursor: 'pointer'}}>You're hovering me!</div>\r\n                                    : <div key=\"2\" style={{padding: 15, height: '100%'}}>Hover your mouse over me</div>\r\n                                }\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Hoverable>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass WizardDemo extends React.PureComponent{\r\n    render(){\r\n        const length = 3\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Wizard.tsx'>Wizard</DemoTitle>\r\n                <DemoHelp>A HOC that passes an index and next/prev functions in a render prop. Can be used along with material ui stepper or any other wizard</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(index: number, next: function, prev: function) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                    <DemoProp name=\"index\" type=\"number (optional)\" default=\"\" description=\"Force the current index to a certain value\" />\r\n                    <DemoProp name=\"length\" type=\"number (optional)\" default=\"\" description=\"The max length. The index will always be lower than this\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Wizard length={length + 1}>\r\n                        {(index, next, prev) => (\r\n                            <React.Fragment>\r\n                                <Stepper activeStep={index}>\r\n                                    <Step key=\"Step 1\">\r\n                                        <StepLabel>Step 1</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 2\">\r\n                                        <StepLabel>Step 2</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 3\">\r\n                                        <StepLabel>Step 3</StepLabel>\r\n                                    </Step>\r\n                                </Stepper>\r\n                                <div>\r\n                                    <Button onClick={prev} disabled={index <= 0}>Prev</Button>\r\n                                    <Button onClick={next} disabled={index >= length}>Next</Button>\r\n                                    {index >= length && 'All steps completed!'}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Wizard>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\n\r\n// Original icon colors: TODO: Use these?\r\n// blue: #00B8F3\r\n// white: #fff\r\n\r\nexport type TfsoIconProps = {} & SvgIconProps\r\n\r\nexport default React.memo((props: TfsoIconProps) => (\r\n    <SvgIcon\r\n        {...props}\r\n        viewBox='0 0 50.59 30.35'\r\n    >\r\n        <path\r\n            d={'M33.22,9.62A6,6,0,0,0,29.85,13a5.06,5.06,0,0,0-4.56-2.87,5.06,5.06,0,1,1,5.06-5.06A5.06,5.06,0,0,0,33.22,9.62ZM45.53,20.23A5.06,5.06,0,0,1,41,17.36a6,6,0,0,1-3.36,3.37,5.06,5.06,0,0,1,2.87,4.56,5.06,5.06,0,1,0,5.06-5.06Zm-25.3-5.06a5.06,5.06,0,1,0-10.12,0,5.06,5.06,0,0,1-5.06,5.06,5.06,5.06,0,1,0,5.06,5.06,5.06,5.06,0,0,1,9.62-2.19,6,6,0,0,1,3.37-3.37A5.06,5.06,0,0,1,20.23,15.18Zm15.18-5.06a5.06,5.06,0,0,0-5.06,5v.13a5.06,5.06,0,0,1-2.87,4.5,6,6,0,0,1,3.37,3.36,5.06,5.06,0,0,1,4.56-2.87,5.06,5.06,0,0,0,0-10.12ZM25.29,20.23a5.06,5.06,0,1,0,5.06,5.06A5.06,5.06,0,0,0,25.29,20.23Z'}\r\n        />\r\n    </SvgIcon>\r\n))","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\r\nimport Tfso, {TfsoIconProps} from '../../lib/icons/Tfso'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nexport default class Icons extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <>\r\n                <TfsoDemo />\r\n                <TfsoLoadingDemo />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\ntype TfsoLogoDemoState = {\r\n    color: TfsoIconProps['color']\r\n    fontSize: TfsoIconProps['fontSize']\r\n    nativeColor: TfsoIconProps['nativeColor']\r\n}\r\n\r\nclass TfsoDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\r\n    state:TfsoLogoDemoState = {\r\n        color: 'primary',\r\n        fontSize: 'large',\r\n        nativeColor: ''\r\n    }\r\n\r\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/Tfso.tsx'>Tfso</DemoTitle>\r\n                <DemoHelp>Tfso logo icon</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Tfso\r\n                        color={this.state.color}\r\n                        fontSize={this.state.fontSize}\r\n                        nativeColor={this.state.nativeColor}\r\n                    />\r\n                    <TextField\r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                    >\r\n                        <MenuItem value='inherit' >inherit</MenuItem>\r\n                        <MenuItem value='primary' >primary</MenuItem>\r\n                        <MenuItem value='secondary' >secondary</MenuItem>\r\n                        <MenuItem value='default' >default</MenuItem>\r\n                        <MenuItem value='action' >action</MenuItem>\r\n                        <MenuItem value='disabled' >disabled</MenuItem>\r\n                        <MenuItem value='error' >error</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='fontSize'\r\n                        value={this.state.fontSize}\r\n                        onChange={this.handleChange('fontSize')}\r\n                    >\r\n                        <MenuItem value='small'>small</MenuItem>\r\n                        <MenuItem value='default'>default</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n\r\n                    </TextField>\r\n                    <TextField\r\n                        label='nativeColor'\r\n                        placeholder='#00B8F3'\r\n                        value={this.state.nativeColor}\r\n                        onChange={this.handleChange('nativeColor')}\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass TfsoLoadingDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\r\n    state:TfsoLogoDemoState = {\r\n        color: 'primary',\r\n        fontSize: 'large',\r\n        nativeColor: ''\r\n    }\r\n\r\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/TfsoLoading.tsx'>Tfso Loading</DemoTitle>\r\n                <DemoHelp>Tfso logo loading icon</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='once' type='boolean' default='false' description='If true, the icon will animate once'/>\r\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <TfsoLoading\r\n                        color={this.state.color}\r\n                        fontSize={this.state.fontSize}\r\n                        nativeColor={this.state.nativeColor}\r\n                    />\r\n                    <TextField\r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                    >\r\n                        <MenuItem value='inherit' >inherit</MenuItem>\r\n                        <MenuItem value='primary' >primary</MenuItem>\r\n                        <MenuItem value='secondary' >secondary</MenuItem>\r\n                        <MenuItem value='default' >default</MenuItem>\r\n                        <MenuItem value='action' >action</MenuItem>\r\n                        <MenuItem value='disabled' >disabled</MenuItem>\r\n                        <MenuItem value='error' >error</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='fontSize'\r\n                        value={this.state.fontSize}\r\n                        onChange={this.handleChange('fontSize')}\r\n                    >\r\n                        <MenuItem value='small'>small</MenuItem>\r\n                        <MenuItem value='default'>default</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        label='nativeColor'\r\n                        placeholder='#00B8F3'\r\n                        value={this.state.nativeColor}\r\n                        onChange={this.handleChange('nativeColor')}\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport styled from 'styled-components/macro'\r\n\r\nimport Typography, {TypographyProps} from '@material-ui/core/Typography'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport {Code} from '../components/code'\r\nimport Link, {Anchor} from '../components/Link'\r\n\r\n// https://www.w3schools.com/charsets/ref_emoji.asp\r\nconst emojis = {\r\n    middleFinger: <>&#128405;</>,\r\n    indexFinger: <>&#128070;</>,\r\n    flex: <>&#128170;</>,\r\n    brokenHeart: <>&#128148;</>,\r\n    perfect: <>&#128076;</>,\r\n    thumbsUp: <>&#128077;</>,\r\n    thumbsDown: <>&#128078;</>,\r\n    clap: <>&#128079;</>,\r\n    heart: <>&#128152;</>,\r\n    fire: <>&#128293;</>,\r\n    bulb: <>&#128161;</>,\r\n    crap: <>&#128169;</>,\r\n    thinking: <>&#129300;</>,\r\n    rocket: <>&#128640;</>\r\n}\r\n\r\nconst Section = styled.div`&&{\r\n    margin-top: ${({theme}) => theme.mui.spacing.unit * 4}px;\r\n    margin-bottom: ${({theme}) => theme.mui.spacing.unit * 2}px;\r\n}`\r\n\r\nconst SubHeading = (props: TypographyProps) => <Typography variant='h4' paragraph {...props} />\r\nconst Paragraph = (props: TypographyProps) => <Typography variant='body1' paragraph {...props} component='div'/>\r\nconst Tip = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\r\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\r\n    <Card elevation={0}>\r\n        <CardContent>\r\n            <Typography variant='h6'>Why?</Typography>\r\n            <Typography variant='body1' component='div'>{props.children}</Typography>\r\n        </CardContent>\r\n    </Card>\r\n    <br />\r\n</>)\r\n\r\nconst Guideline = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\r\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\r\n    <Card elevation={0}>\r\n        <CardContent>\r\n            <Typography variant='body1' component='div'>{props.children}</Typography>\r\n        </CardContent>\r\n    </Card>\r\n</>)\r\n\r\nexport default class Guidelines extends React.PureComponent{\r\n    render = () => (<>\r\n        {this.renderHeading()}\r\n        {this.renderGuidelines()}\r\n        {this.renderTips()}\r\n        {this.renderContributing()}\r\n    </>)\r\n\r\n    renderHeading = () => (\r\n        <>\r\n            <Typography variant='h2' paragraph>\r\n                Guidelines\r\n            </Typography>\r\n            <Typography variant='subtitle1' paragraph>\r\n                <b>{'{WIP} '}</b>Some general guidelines for developing React applications in TFSO\r\n            </Typography>\r\n        </>\r\n    )\r\n\r\n    renderGuidelines = () => (\r\n        <Section>\r\n            <SubHeading>General <Anchor id={'general'}/></SubHeading>\r\n            <Guideline title='Material Design'>\r\n                We strive to follow <Link underline='hover' href='https://material.io/design/' target='_blank'>Google's Material Design</Link> principles. <br />\r\n                Use components and icons from the <Link underline='hover' href='https://material-ui.com/' target='_blank'>MaterialUi package</Link><br />\r\n                This package also provides a theme to be used with <code>material-ui</code>, <Link underline='hover' to='/theme'>get started using it here</Link>\r\n            </Guideline>\r\n        </Section>\r\n    )\r\n\r\n    renderTips = () => (\r\n        <Section>\r\n            <SubHeading>\r\n                {emojis.indexFinger} Do's &amp; Don'ts {emojis.middleFinger} <Anchor id={'dodont'} />\r\n            </SubHeading>\r\n            <Tip title={<>Specific imports</>}>\r\n                Reducing bundle size!<br />\r\n                <b>Bad:</b>\r\n                <Code language='js'>\r\n                    {\r\n                        `import { Button } from '@material-ui/core' // All of material-ui/core will be included in the bundle!\r\nimport { Alert } from 'react-tfso-components' // All of react-tfso-components will be included in the bundle!`\r\n                    }\r\n                </Code>\r\n                <b>Good:</b>\r\n                <Code language='js'>\r\n                    {\r\n                        `import Button from '@material-ui/core/Button'\r\nimport Alert from 'react-tfso-components/dist/Alert'`\r\n                    }\r\n                </Code>\r\n            </Tip>\r\n\r\n            <Tip title={<>{/* emojis.thumbsUp */}Extend from <code>React.PureComponet</code> instead of <code>React.Component</code></>}>\r\n                Your components should never mutate the state directly or have mutable properties.<br/>\r\n                Hence they are pure, and should extend React.PureComponent, which is more performant.\r\n            </Tip>\r\n            <Tip title={<>{/* emojis.thumbsDown */}Don't use <code>componentWillReceiveProps</code></>}>\r\n                It's deprecated and going away in React 17 {emojis.brokenHeart}<br />\r\n                More information <Link underline='hover' href='https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops' target='_blank'>here</Link>\r\n            </Tip>\r\n            <Tip title={<>{/* emojis.thumbsDown */}Avoid copying props to state</>}>\r\n                ...unless you absolutely need to, there are legit reasons, however there is most likely a better solution. <br />\r\n                Perhaps you should invoke a callback provided by props and let the parent component handle something?\r\n            </Tip>\r\n        </Section>\r\n    )\r\n\r\n    renderContributing = () => (<>\r\n        <SubHeading>\r\n            Contributing to <code>react-tfso-components</code> {emojis.rocket} <Anchor id='contributing' />\r\n        </SubHeading>\r\n        <Paragraph>\r\n            Components in this package should:\r\n            <ul>\r\n                <li>Be written in typescript or provide type declarations (d.ts)</li>\r\n                <li>Be composible</li>\r\n                <li>Not be specific to a domain/usage (they should be as generic as possible)</li>\r\n                <li>Validate props using `<code>prop-types`</code></li>\r\n                <li>Be Pure (function component or extending <code>React.PureComponent</code>)</li>\r\n                <li>Have descriptive and easy to understand Props:\r\n                    <ul>\r\n                        <li>Use commonly known verbs/names</li>\r\n                        <li>Function props should begin with 'on', (onFocus, onChange etc.)</li>\r\n                        <li>Boolean props should <i>not</i> begin with 'is', (open instead of isOpen)</li>\r\n                        <li>Boolean props should be optional, (eg. <code>open?: boolean</code>), <code>undefined</code> should be evaluated as <code>false</code></li>\r\n                        <li><code>children</code> should always be explicitly typed (eg: <code>children: string</code>)</li>\r\n                        <li><code>children</code> should be defined as\r\n                            <ul>\r\n                                <li><code>React.ReactCild</code> for single child<br /></li>\r\n                                <li><code>React.ReactNode</code> for multiple children</li>\r\n                                <li>primitive type (<code>undefined</code>, <code>string</code>, <code>number</code> etc.)</li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li>Have a demo with documentation so that developers can easily find and use your component</li>\r\n            </ul>\r\n        </Paragraph>\r\n    </>)\r\n}","import React from 'react'\r\nimport styled, { DefaultTheme } from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport {styledTheme} from '../../lib/theme/index'\r\n\r\nconst bgColor = (color: '') => {\r\n    const colors = styledTheme['tfso']['colors']\r\n    return colors[color]\r\n}\r\n\r\nexport type ThemeColorProps = {\r\n    color: React.ReactNode\r\n}\r\n\r\nconst Box = styled.div`\r\n    background-color: ${({color, theme}) => theme.tfso.colors[color] };\r\n    width: 230px;\r\n    height: 230px;\r\n    text-align: center;\r\n`\r\n\r\nconst Txt = styled.div`\r\n  font-size: 2em;\r\n  line-height: 2em;\r\n  color: ${({dark, theme}) => dark ? \"#000\" : theme.mui.palette.secondary.contrastText}\r\n`\r\n\r\nconst ThemeColor = (props: ThemeColorProps) => {\r\n    const { color } = props\r\n    return (\r\n        <Box color={color}>\r\n            theme.tfso.colors.{color}<br/><br/>\r\n            <Txt>{bgColor(color)}</Txt>\r\n            <Txt dark>{bgColor(color)}</Txt>\r\n        </Box>\r\n    )\r\n}\r\n\r\nThemeColor.propTypes = {\r\n    color: PropTypes.node.isRequired\r\n}\r\n\r\nexport default ThemeColor","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport styled from 'styled-components'\r\nimport ThemeColor from '../components/ThemeColor'\r\nimport {styledTheme} from '../../lib/theme/index'\r\n\r\nconst ThemeColors = styled.div`\r\n  clear: both;\r\n  > div{\r\n    float: left;\r\n      :hover{\r\n        width: 460px;\r\n        height: 230px;\r\n      }\r\n  }\r\n`\r\n\r\nexport default class Theme extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <>\r\n                <Typography variant='h2'>\r\n                    Theme &amp; Styling\r\n                </Typography>\r\n                <Typography variant='subtitle1'>\r\n                    There is more TODO\r\n                </Typography>\r\n                <ThemeColors>\r\n                    {Object.keys(styledTheme['tfso']['colors']).map(color => (\r\n                        <ThemeColor color={color}/>\r\n                    ))}\r\n                </ThemeColors>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\r\nimport DashBoard, {WidgetProps} from '../../lib/DashBoard'\r\nimport {styledTheme} from '../../lib/theme'\r\nimport {BigNumber, Trending} from '../../lib'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\ntype State = {\r\n    widgets: Array<WidgetProps>\r\n}\r\n\r\nlet i = 0\r\nconst colors = Object.keys(styledTheme.tfso.colors)\r\nconst getColor = () => styledTheme.tfso.colors[colors[i++]]\r\n\r\nconst W1 = () => (\r\n    <Grid container wrap='nowrap' style={{padding: 10}}>\r\n        <Grid item>\r\n            <BigNumber color='light' >$123</BigNumber>\r\n        </Grid>\r\n        <Grid item xs>\r\n            <Trending variant='up' fontSize='large'></Trending>\r\n        </Grid>\r\n    </Grid>\r\n)\r\n\r\nexport default class DashBoardDemo extends React.PureComponent<{}, State>{\r\n    state: State = {\r\n        widgets: [\r\n            {\r\n                size: 'small',\r\n                background: styledTheme.tfso.colors.orangeColor,\r\n                children: <W1 />\r\n            },\r\n            {\r\n                size: 'small',\r\n                background: getColor(),\r\n                children: <div>Small 2</div>\r\n            },\r\n            {\r\n                size: 'small',\r\n                background: getColor(),\r\n                children: <div>Small 3</div>\r\n            },\r\n            {\r\n                size: 'small',\r\n                background: getColor(),\r\n                children: <div>Small 4</div>\r\n            },\r\n            {\r\n                size: 'medium',\r\n                background: getColor(),\r\n                children: <div>Medium 5</div>\r\n            },\r\n            {\r\n                size: 'large',\r\n                background: getColor(),\r\n                children: <div>large 7</div>\r\n            },\r\n            {\r\n                size: 'medium',\r\n                background: getColor(),\r\n                children: <div>Medium 5</div>\r\n            },\r\n            {\r\n                size: 'medium',\r\n                background: getColor(),\r\n                children: <div>Medium 6</div>\r\n            },\r\n            {\r\n                size: 'large',\r\n                background: getColor(),\r\n                children: <div>large 7</div>\r\n            }\r\n        ]\r\n    }\r\n\r\n    onOrder = (widgets: Array<WidgetProps>) => {\r\n        this.setState({widgets})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='ComponentsDemo/DashBoardDemo.tsx' srcPath='DashBoard.Tsx'>DashBoard</DemoTitle>\r\n                <DemoHelp></DemoHelp>\r\n                <DemoProps>\r\n                    {/* <DemoProp /> */}\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                        justifyContent: 'space-around',\r\n                        overflowX: 'auto',\r\n                        padding: 10,\r\n                        height: '400px',\r\n                        // backgroundColor: '#eee'\r\n                    }} >\r\n                        <DashBoard\r\n                            onChangeOrder={this.onOrder}\r\n                            onRemove={() => {}}\r\n                            widgets={this.state.widgets}\r\n                        />\r\n                    </div>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DashBoardDemo from '../demos/DashBoardDemo'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nexport default class Lab extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <>\r\n                <Typography variant='h2'>\r\n                    Components Lab\r\n                </Typography>\r\n                <Typography variant='subtitle1'>\r\n                    The components you find here are Works in Progress and are subjec to breaking changes and/or future removal.\r\n                </Typography>\r\n                <br />\r\n                <br />\r\n                <DashBoardDemo />\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport PeopleIcon from '@material-ui/icons/People'\r\n\r\nimport {layout} from '../lib'\r\n\r\nimport Home from './pages/Home'\r\nimport Components from './pages/Components'\r\nimport Utils from './pages/Utils'\r\nimport Icons from './pages/Icons'\r\nimport GitHubLink from './components/GitHubLink'\r\nimport MaterialUiLink from './components/MaterialUiLink'\r\nimport Guidelines from './pages/Guidelines'\r\nimport Theme from './pages/Theme'\r\nimport Lab from './pages/Lab'\r\n\r\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport CodeIcon from '@material-ui/icons/Code'\r\nimport StyleIcon from '@material-ui/icons/Style'\r\nimport BuildIcon from '@material-ui/icons/Build'\r\nimport StraightenIcon from '@material-ui/icons/Straighten'\r\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact'\r\nimport FontDownloadIcon from '@material-ui/icons/FontDownload'\r\nimport history from './history'\r\nimport {Location, UnregisterCallback} from 'history'\r\nimport Link from './components/Link'\r\n\r\nconst pages = {\r\n    Home: Home,\r\n    Guidelines: Guidelines,\r\n    Components: Components,\r\n    Theme: Theme,\r\n    Utils: Utils,\r\n    Icons: Icons,\r\n    Lab: Lab,\r\n}\r\n\r\nconst pageIcon: {[P in keyof typeof pages]: React.ComponentType<SvgIconProps>} = {\r\n    Home: HomeIcon,\r\n    Guidelines: StraightenIcon,\r\n    Components: ViewCompactIcon,\r\n    Theme: StyleIcon,\r\n    Utils: BuildIcon,\r\n    Icons: FontDownloadIcon,\r\n    Lab: CodeIcon,\r\n}\r\n\r\ntype LayoutState = {\r\n    menuOpen: boolean,\r\n    location: Location<any>\r\n}\r\n\r\nexport default class Layout extends React.PureComponent<{}, LayoutState>{\r\n    _unsubHistory: UnregisterCallback | null = null\r\n    componentDidMount(){\r\n        this._unsubHistory = history.listen(this.onNavigation)\r\n    }\r\n    componentWillUnmount(){\r\n        this._unsubHistory && this._unsubHistory()\r\n    }\r\n\r\n    state: LayoutState = {\r\n        location: history.location,\r\n        menuOpen: true,\r\n    }\r\n\r\n    onNavigation = (location: Location<any>) => {\r\n        this.setState({location})\r\n    }\r\n\r\n    getSelectedPageName = () => {\r\n        const {location: {pathname}} = this.state\r\n        const path = pathname.slice(pathname.indexOf('#') + 1)\r\n        return Object.keys(pages).find(page => path.indexOf(page.toLowerCase()) > -1) || 'Home'\r\n    }\r\n\r\n    onMenuToggle = () => {\r\n        this.setState(state => ({menuOpen: !state.menuOpen}))\r\n    }\r\n\r\n    render(){\r\n        const menu = (\r\n            <layout.Menu open={this.state.menuOpen}>\r\n                {Object.keys(pages).map(page => {\r\n                    const Icon = pageIcon[page]\r\n                    return (\r\n                        <Link to={`/${page}`} key={page} >\r\n                            <ListItem selected={this.getSelectedPageName() === page}>\r\n                                <ListItemIcon><Icon/></ListItemIcon>\r\n                                <ListItemText>{page}</ListItemText>\r\n                            </ListItem>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </layout.Menu>\r\n        )\r\n        const mobileMenu = (\r\n            <layout.MobileMenu>\r\n                Mobile menu\r\n            </layout.MobileMenu>\r\n        )\r\n        const topMenu = (\r\n            <layout.TopMenu>\r\n                <Grid container spacing={16}>\r\n                    <Grid item><MaterialUiLink /></Grid>\r\n                    <Grid item><GitHubLink /></Grid>\r\n                </Grid>\r\n            </layout.TopMenu>\r\n        )\r\n\r\n        const Page = pages[this.getSelectedPageName()]\r\n\r\n        return (\r\n            <layout.Layout\r\n                menu={menu}\r\n                mobileMenu={mobileMenu}\r\n                topMenu={topMenu}\r\n                title=\"Tfso Components\"\r\n                docTitle=\"Tfso Components\"\r\n                onMenuToggle={this.onMenuToggle}\r\n            >\r\n                <Page />\r\n            </layout.Layout>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport TrendingDemo from '../demos/TrendingDemo'\r\nimport BigNumberDemo from '../demos/BigNumberDemo'\r\nimport AlertDemo from '../demos/AlertDemo'\r\nimport SearchFieldDemo from '../demos/SearchFieldDemo'\r\nimport TextFieldEditorDemo from '../demos/TextFieldEditorDemo'\r\nimport ConfirmationDialogDemo from '../demos/ConfirmationDialogDemo'\r\nimport EmojiDemo from '../demos/EmojiDemo'\r\n// import DashBoardDemo from '../demos/DashBoardDemo'\r\n\r\nexport default () => (<>\r\n    <EmojiDemo />\r\n    <AlertDemo />\r\n    <BigNumberDemo />\r\n    <ConfirmationDialogDemo />\r\n    {/* <DashBoardDemo /> */}\r\n    <SearchFieldDemo />\r\n    <TextFieldEditorDemo />\r\n    <TrendingDemo />\r\n</>)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport {theme} from '../lib'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport {ThemeProvider as StyledThemeProvider} from 'styled-components'\r\nimport {MuiThemeProvider} from '@material-ui/core/styles'\r\nimport Layout from './Layout'\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <MuiThemeProvider theme={theme.materialuiTheme}>\r\n            <StyledThemeProvider theme={theme.styledTheme}>\r\n                <Layout />\r\n            </StyledThemeProvider>\r\n        </MuiThemeProvider>\r\n    </React.Fragment>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}