{"version":3,"sources":["lib/theme/index.ts","lib/layout/Menu.tsx","lib/icons/Tfso.tsx","lib/layout/Topbar.tsx","lib/layout/DocumentTitle.tsx","lib/ScreenSize.tsx","lib/layout/Layout.tsx","lib/layout/ProfileCard.tsx","lib/Delay.tsx","lib/InfiniteScroll.tsx","lib/layout/Notify.tsx","lib/Alert.tsx","lib/BigNumber.tsx","lib/ConfirmationDialog.tsx","lib/SearchField.tsx","lib/TextFieldEditor.tsx","lib/Trending.tsx","lib/Emoji.tsx","lib/ListPicker.tsx","lib/Hoverable.tsx","lib/Wizard.tsx","lib/icons/TfsoLoading.tsx","demo/components/MaterialUiLink.tsx","demo/components/GitHubLink.tsx","demo/pages/Home.tsx","demo/components/code.tsx","demo/components/demo.tsx","demo/pages/Icons.tsx","demo/history.ts","demo/components/Link.tsx","demo/pages/Guidelines.tsx","demo/components/ThemeColor.tsx","demo/pages/Theme.tsx","demo/demos/TrendingDemo.tsx","demo/demos/BigNumberDemo.tsx","demo/demos/AlertDemo.tsx","demo/demos/SearchFieldDemo.tsx","demo/demos/TextFieldEditorDemo.tsx","demo/demos/ConfirmationDialogDemo.tsx","demo/demos/ListPickerDemo.tsx","demo/demos/EmojiDemo.tsx","lib/GridLayout.tsx","demo/demos/GridLayoutDemo.tsx","demo/demos/HoverableDemo.tsx","demo/demos/DelayDemo.tsx","demo/demos/WizardDemo.tsx","demo/demos/ScreenSizeDemo.tsx","demo/demos/ProfileCardDemo.tsx","demo/demos/NotifyDemo.tsx","demo/demos/InfiniteScrollDemo.tsx","demo/Layout.tsx","demo/index.tsx"],"names":["colorScheme","colors","tfso","base","baseLight","baseLight1","baseLight2","baseLight3","baseLight4","baseLight5","blue","blueDark","blueDesaturated","grayBlue","teal","green","greenLight","purple","red","redLight","orange","yellow","black","gray","grayDark","grayDarker","grayLight","grayLighter","grayLightest","white","whiteDark","whiteDarker","bodyBackground","listOverBackground","border","tabBar","menu","menuExpanded","menuExpandedDivider","menuItem","menuItemText","menuItemSelectedText","notification","blueGrey","notificationHover","palette","primary","primaryLight","success","warning","alert","delete","loudInfo","materialuiTheme","createMuiTheme","typography","useNextVariants","secondary","dark","main","light","contrastText","styledTheme","layout","containerMargin","mui","StyledDrawer","styled","Drawer","attrs","classes","paper","withConfig","displayName","componentId","_ref","open","_ref2","theme","_ref3","Menu","react_default","a","createElement","variant","this","props","mobile","elevation","onClose","List_default","color","disablePadding","children","React","PureComponent","MenuContent","Fragment","ListItemSecondaryText","Typography","_ref4","MenuGroupListItem","_ref5","expanded","disabled","Object","objectWithoutProperties","ListItem_default","_ref6","_ref7","_ref8","action","hover","MenuGroupExpandLess","ExpandLess","_ref9","MenuGroupExpandMore","ExpandMore","_ref10","StyledListItemTextTypography","_ref11","selected","Typography_default","MenuGroup","_React$PureComponent2","_getPrototypeOf2","_this","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onToggleExpanded","e","stopPropagation","inherits","createClass","key","value","Icon","icon","divider","button","onClick","disableRipple","disableTouchRipple","ListItemIcon_default","style","marginRight","fontSize","ListItemText_default","disableTypography","label","Collapse_default","in","timeout","noWrap","subtitle","ListItemSecondaryAction_default","IconButton_default","dense","Divider_default","RootListItem","ListItem","_ref12","_ref13","_ref14","RootListItemIcon","ListItemIcon","_ref15","MenuRootItem","_React$PureComponent3","LinkContent","accessDenied","Lock_default","href","Link_default","NestedListItem","_ref16","_ref17","_ref18","NestedListItemIcon","_ref19","Text","div","MenuItem","_React$PureComponent4","Badge","badge","memo","SvgIcon_default","assign","viewBox","d","Root","StyledAppBar","AppBar","zIndex","drawer","Wrapper","Left","LeftMobile","Right","MenuButton","IconButton","ToolbarRight","TopBar","position","Tfso","component","paddingLeft","Toolbar_default","onMenuToggle","aria-label","Menu_default","TopMenuContent","setTitle","text","document","title","DocumentTitle","nextProps","tablet","desktop","getScreenSize","width","includes","ScreenSize","withWidth","withScreenSize","Component","screenSize","LayoutWrapper","LayoutHeader","LayoutBody","LayoutBodyLeft","LayoutBodyRight","_React$PureComponent","Layout","state","menuOpen","onCloseMenu","setState","menuIsOpen","onClickContent","DocumentTitle_DocumentTitle","docTitle","Topbar_TopBar","topMenuContent","Menu_Menu","menuContent","CustomCard","Card","CustomCardContent","CardContent","ProfileCardContent","ProfileTypography","ProfileAvatar","Avatar","spacing","unit","CustomCloseIconButton","RightPanel","TransitionComponent","Slide_default","direction","ProfileCard","onSignOut","renderContent","src","identity","profile","thumb","data","firstName","lastName","identifier","CardActions_default","ProfileCard_Right","Button_default","size","signOutText","desktopDialog","Popover_default","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","mobileDialog","Dialog_default","keepMounted","fullScreen","fullWidth","maxWidth","Close_default","lib_ScreenSize","Delay","_timer","show","_this2","setTimeout","delayMs","clearTimeout","beforeShow","defaultProps","throttle","fn","running","window","requestAnimationFrame","InfiniteScroll","_reachedTreshold","_lastScrollTop","_mounted","createRef","onScroll","node","current","clientHeight","scrollTop","scrollHeight","_this$props","_this$props$threshold","threshold","onReachEnd","onReachThreshold","thresholdPoint","thresholdReachable","reachedTreshold","reachedEnd","scrollTo","top","height","overflowY","ref","treshold","CloseIconButton","_templateObject","ReadListItem","read","_templateObject2","MobileToolbarWrapper","_templateObject3","NotificationItem","anchor","useRef","_React$useState","useState","_React$useState2","slicedToArray","onMenu","useCallback","callback","event","onClickAction","secondaryText","useMemo","date","Math","floor","abs","getTime","Date","now","toLocaleDateString","undefined","day","month","year","toLocaleTimeString","hour","minute","id","avatar","core_Menu_default","disableAutoFocusItem","MenuListProps","MenuItem_default","onToggleMarkRead","toggleMarkUnreadTitle","toggleMarkReadTitle","actions","map","i","buttonRef","MoreVert_default","Notifier","_anchorEl","onOpen","renderNotifyer","count","Badge_default","badgeContent","max","NotificationsActive_default","IconProps","NotificationsNone_default","renderToolbar","disableGutters","Grid_default","container","justify","alignItems","wrap","item","xs","onReadAll","readAllButtonText","renderLoading","Spacer","loading","Delay_Delay","LinearProgress_default","InfiniteScroll_InfiniteScroll","onLoadMore","DialogContent_default","renderMobile","renderDesktop","variantIcon","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","StyledSnack","other","SnackbarContent_default","Alert_templateObject","bgColor","Alert","message","aria-describedby","display","opacity","fontSizeMap","medium","large","wrapper","BigNumber","_ref2$size","pxToRem","_ref3$color","ConfirmationDialog","onCancel","onOk","okButtonText","cancelButtonText","DialogTitle_default","DialogActions_default","SearchField","editing","onBlur","onFocus","TextField_default","handleEvent","preventDefault","nativeEvent","stopImmediatePropagation","placeholder","margin","InputProps","startAdornment","InputAdornment_default","Search_default","TextFieldEditor","_inputRef","prevProps","blur","onKeyDown","defaultPrevented","ctrlKey","multiline","onChange","target","dirtyProp","dirty","enableDirtyCheck","otherProps","isDirty","inputRef","fontStyle","iconMap","up","TrendingUp","flat","TrendingFlat","down","TrendingDown","withTheme","iconProps","nativeColor","getColor","emojis","middleFinger","indexFinger","flex","brokenHeart","perfect","thumbsUp","thumbsDown","clap","heart","fire","bulb","crap","thinking","rocket","Emoji","propTypes","PropTypes","oneOf","keys","AvatarColor","ListPicker_templateObject","CustomDialogTitle","ListPicker_templateObject2","ListPicker","_listRef","filterValue","focusValue","onFilter","keyCode","focus","onSelect","_this3","renderItems","SearchField_SearchField","searchLabel","MenuList_default","options","filter","option","toLowerCase","indexOf","avatarColor","split","slice","words","Hoverable","toggleHover","hoverOn","hoverOff","restProps","onMouseEnter","onMouseLeave","Wizard","next","index","prev","hasOwnProperty","path","css","TfsoLoading_templateObject","StyledSvgIcon","Styled","once","fillRule","strokeWidth","MaterialUiIcon","fill","MaterialUiLink","rel","GitHubIcon","GitHubLink","Tooltip_default","tooltip","CenterTop","Home_templateObject","Home","TfsoLoading","paragraph","align","flexDirection","Zoom_default","appear","transitionDelay","Code","highlight","Prism","highlightElement","className","language","Demo","Paper_default","padding","marginBottom","DemoTitle","srcPath","demoPath","components_GitHubLink","DemoHelp","DemoContent","marginTop","isArray","child","DemoProps","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","overflowX","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","DemoProp","required","name","type","default","description","DemoCode","Code_default","code_Code","Icons","Icons_TfsoDemo","Icons_TfsoLoadingDemo","TfsoDemo","handleChange","defineProperty","demo_Demo","demo_DemoTitle","demo_DemoHelp","demo_DemoProps","demo_DemoProp","demo_DemoContent","select","TfsoLoadingDemo","history","createHashHistory","basename","hashType","Link","to","push","underline","AnchorLink","Anchor","location","hash","Section","SubHeading","Paragraph","Tip","Card_default","CardContent_default","Guideline","Guidelines","render","renderHeading","renderGuidelines","renderTips","renderContributing","Guidelines_SubHeading","Link_Anchor","Guidelines_Guideline","Link_Link","Guidelines_Tip","Guidelines_Paragraph","Box","ThemeColor_templateObject","Txt","ThemeColor_templateObject2","ThemeColor","ThemeColors","Theme_templateObject","Theme","components_ThemeColor","TrendingDemo","Trending","BigNumberDemo","backgroundColor","lib_BigNumber","variantMessage","AlertDemo","onPress","demo_DemoCode","Snackbar_default","autoHideDuration","lib_Alert","SearchFieldDemo","TextFieldEditorDemo","onReset","TextFieldEditor_TextFieldEditor","toString","ConfirmationDialogDemo","openConfirmationDialog","onClickOpenConfirmationDialog","lib_ConfirmationDialog","DemoDisplay","ListPickerDemo_templateObject","ListPickerDemo","selectedOption","buttonType","handleColor","onSwitch","lib_ListPicker","InputLabel_default","shrink","htmlFor","Select_default","EmojiDemo","lib_Emoji","ReactGridLayout","WidthProvider","RGL","GridItemContainer","gridItemWidthNumberMap","1","2","3","4","5","6","7","8","9","10","11","12","onequarter","onethird","half","twothirds","threequarters","full","numberGridItemWithMap","toGridItemWidth","w","min","trunc","toGridItemHeight","gridItemPositionToLayout","x","col","y","row","h","minH","minHeight","minW","minWidth","maxH","maxHeight","maxW","isDraggable","draggable","isResizable","resizable","static","layoutToGridItemPosition","GridLayout","_layoutWasChangedWorkaround","onLayoutChange","layouts","validateItemLayout","onDragResizeStop","oldItem","newItem","isEqual","items","_this$props$margin","rglLayout","values","cols","rowHeight","compactType","containerPadding","autoSize","measureBeforeMount","useCSSTransforms","preventCollision","onResizeStop","onDragStop","Item","GridLayoutDemo_templateObject","getContrastText","h5","fontWeight","fontFamily","GridLayoutDemo","onMouseDown","console","log","addItemId","addColor","addDraggable","addResizable","addStatic","addHeight","addWidth","addCol","addRow","onAddItem","_this$state","content","JSON","stringify","replace","itemLayout","Number","toConsumableArray","checked","GridLayout_GridLayout","FormControlLabel_default","control","Switch_default","inputProps","HoverableDemo","Hoverable_Hoverable","cursor","DelayDemo","CircularProgress_default","WizardDemo","Wizard_Wizard","Stepper_default","activeStep","Step_default","StepLabel_default","ScreenSizeDemo","ProfileCardDemo","license","client","user","culture","timeZone","country","created","modified","gender","birthDate","locationCoordinates","visibility","locale","timeZoneOffset","handleClick","currentTarget","onClient","onProfile","onSettings","onRequests","onHelp","Boolean","aria-owns","aria-haspopup","ProfileCard_ProfileCard","inset","Settings_default","SwapHoriz_default","Help_default","NotifyDemo","generateNotifications","readCount","random","makeItem","setHours","getHours","seen","onRead","Email_default","Chat_default","VpnKey_default","Avatar_default","Security_default","SupervisorAccount_default","onSeen","notifications","n","objectSpread","asyncToGenerator","regenerator_default","mark","_callee","_context","stop","reset","sort","b","Notify_NotificationItem","Notify_Notifier","renderNotifications","makeItems","startIndex","InfiniteScrollDemo","StyledBadge","NewBadge","menuGroups","home","HomeIcon","guidelines","StraightenIcon","components","ViewCompactIcon","emoji","bignumber","confirmationdialog","listpicker","searchfield","textfieldeditor","trending","StyleIcon","notify","profilecard","topbar","utils","BuildIcon","delay","hoverable","infinitescroll","wizard","screensize","icons","FontDownloadIcon","labs","CodeIcon","gridlayout","_unsubHistory","menuGroupsExpanded","onNavigation","getSelected","pathname","_path$split","_path$split2","group","onToggleGroupExpanded","expandSelected","listen","layout_namespaceObject","groupName","itemName","Layout_ClientSwitcher","clientName","components_MaterialUiLink","Layout_Profile","Page","_Page","ClientSwitcher","Profile","_this4","SvgIcon_SvgIcon_default","ReactDOM","CssBaseline_default","styles","styled_components_browser_esm","Layout_Layout","getElementById"],"mappings":"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","file":"static/js/main.1d5de9f5.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles'\nimport 'styled-components'\nimport './index.css'\n\nimport blueGrey from '@material-ui/core/colors/blueGrey'\n\nconst colorScheme = {\n    fiord: '#445566',\n    lynch: '#637b94',\n    dodgerBlue: '#11beff',\n    bayOfMany: '#224477',\n    easternBlue: '#22aabb',\n    apple: '#49bd39',\n    melrose: '#A3A4FB',\n    flamingo: '#f04b4b',\n    texasRose: '#ffb155',\n    dandelion: '#FFD966',\n    tundora: '#404040',\n    dustyGray: '#999999',\n    hippieBlue: '#6699bb',\n    emperor: '#555555',\n    silver: '#CCCCCC',\n    porcelain: '#E8E9EA',\n    wildSand: '#F6F6F6',\n    white: '#FFFFFF',\n    casper: '#AFC5D0'\n}\n\nconst colors = {\n    tfso: '#00c7f5',\n    base: colorScheme.fiord,\n    baseLight: '#586E85',\n    baseLight1: '#637b94',\n    baseLight2: '#8fa1b4',\n    baseLight3: '#bdc8d3',\n    baseLight4: '#ebeef1',\n    baseLight5: '#f4f6f8',\n    blue: colorScheme.dodgerBlue,\n    blueDark: colorScheme.bayOfMany,\n    blueDesaturated: colorScheme.hippieBlue,\n    grayBlue: colorScheme.casper,\n    teal: colorScheme.easternBlue,\n    green: colorScheme.apple,\n    greenLight: 'rgba(73, 189, 57, 0.4)',\n    purple: colorScheme.melrose,\n    red: colorScheme.flamingo,\n    redLight: 'rgba(240, 75, 75, 0.4)',\n    orange: colorScheme.texasRose,\n    yellow: colorScheme.dandelion,\n    black: colorScheme.tundora,\n    gray: colorScheme.dustyGray,\n    grayDark: '#6E6E6E',\n    grayDarker: '#454545',\n    grayLight: '#C4C4C4',\n    grayLighter: '#E6E6E6',\n    grayLightest: '#F7F7F7',\n    white: colorScheme.white,\n    whiteDark: '#F7F7F7',\n    whiteDarker: '#E6E6E6',\n    bodyBackground: '#F7F7F7',\n    listOverBackground: '#E6E6E6',\n    border: '#C4C4C4',\n    tabBar: colorScheme.white,\n    menu: colorScheme.fiord,\n    menuExpanded: '#3A4857',\n    menuExpandedDivider: colorScheme.texasRose,\n    menuItem: '#526578',\n    menuItemText: colorScheme.white,\n    menuItemSelectedText: colorScheme.texasRose,\n    notification: blueGrey['50'],\n    notificationHover: blueGrey['100'],\n}\n\nconst palette = {\n    primary: colors.base,\n    primaryLight: colors.baseLight,\n    success: colors.green,\n    warning: colors.orange,\n    alert: colors.red,\n    delete: colors.red,\n    loudInfo: colors.blue\n}\n\nconst layout = {\n    containerMargin: '15px'\n}\n\nexport const materialuiTheme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        secondary: {\n            dark: '#1b2c3c',\n            main: '#456',\n            light: '#708194'\n        },\n        primary: {\n            dark: '#0090cc',\n            main: '#11c0ff',\n            light: '#6df3ff',\n            contrastText: '#FFF'\n        }\n    }\n})\n\nexport const styledTheme = {\n    tfso: {\n        colors,\n        palette,\n        layout\n    },\n    mui: materialuiTheme, // Make the entire material-ui theme available to styled components as well\n}\n\nexport type TfsoTheme = typeof styledTheme\n\ndeclare module 'styled-components' {\n    export interface DefaultTheme extends TfsoTheme {}\n    export type WithTheme = { theme: DefaultTheme }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport List from '@material-ui/core/List'\nimport Drawer from '@material-ui/core/Drawer'\nimport Link from '@material-ui/core/Link'\nimport Collapse from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport LockIcon from '@material-ui/icons/Lock'\nimport styled from 'styled-components/macro'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItem, {ListItemProps} from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Divider from '@material-ui/core/Divider'\nimport Typography, {TypographyProps} from '@material-ui/core/Typography'\n\nconst StyledDrawer = styled(Drawer).attrs({\n    classes: {paper: 'MuiPaperStyle'}\n})`\n    &&{\n      width: ${({open}) => open ? 240 : 0}px;\n      height: 100%;\n    }\n    \n    .MuiPaperStyle{\n      position: static;\n      background-color: ${({theme}) => theme.tfso.colors.menu};\n      color: ${({theme}) => theme.tfso.colors.menuItemText};\n    }\n` as typeof Drawer\n\nexport type MenuProps = {\n    open: boolean\n    onClose: () => void\n    mobile: boolean\n    children: React.ReactNode\n}\n\nexport default class Menu extends React.PureComponent<MenuProps>{\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onClose: PropTypes.func.isRequired,\n        mobile: PropTypes.bool.isRequired,\n        children: PropTypes.node.isRequired\n    }\n\n    render(){\n        return (\n            <StyledDrawer variant={this.props.mobile ? 'temporary' : 'persistent'} elevation={0} open={this.props.open} onClose={this.props.onClose}>\n                <List color=\"inherit\" disablePadding>\n                    {this.props.children}\n                </List>\n            </StyledDrawer>\n        )\n    }\n}\n\nexport const MenuContent = props => <>{props.children}</>\n\nconst ListItemSecondaryText = styled(Typography)`&&{\n    color: ${({theme}) => theme.tfso.colors.grayLight};\n}` as typeof Typography\n\nexport type MenuGroupProps = {\n    icon: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    onToggleExpanded: () => void\n    expanded: boolean\n    children: React.ReactNode\n}\n\nconst ListItemWrapper = ({expanded, disabled, ...props}: ListItemProps & {expanded: boolean}) => <ListItem {...props} />\n\nconst MenuGroupListItem = styled(ListItemWrapper)`&&{\n    background-color: ${({theme, expanded}) => expanded ? theme.tfso.colors.menuExpanded : theme.tfso.colors.menu};\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n    > a{\n      text-decoration: none;\n    }\n    :focus :hover, :hover {\n        background-color: ${({theme}) => theme.mui.palette.action.hover};\n    };\n}` as typeof ListItemWrapper\n\nconst MenuGroupExpandLess = styled(ExpandLess)`&&{\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n}` as typeof ExpandLess\n\nconst MenuGroupExpandMore = styled(ExpandMore)`&&{\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n}` as typeof ExpandMore\n\nconst ListItemTextWrapper = ({selected, ...props}: TypographyProps & {selected?: boolean}) => <Typography {...props}/>\nconst StyledListItemTextTypography = styled(ListItemTextWrapper)`&&{\n      color: ${(props) => props.selected ? props.theme.tfso.colors.menuItemSelectedText : 'inherit'};\n}` as typeof ListItemTextWrapper\n\nexport class MenuGroup extends React.PureComponent<MenuGroupProps>{\n    static propTypes = {\n        icon: PropTypes.elementType.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        onToggleExpanded: PropTypes.func.isRequired,\n        expanded: PropTypes.bool.isRequired,\n        children: PropTypes.node.isRequired,\n        accessDenied: PropTypes.bool\n    }\n\n    onToggleExpanded = e => {\n        // Stop propagation to let parent layout close mobile menu on clicks that do navigation\n        e.stopPropagation()\n        this.props.onToggleExpanded()\n    }\n\n    render(){\n        const Icon = this.props.icon\n        return (\n            <>\n                <MenuGroupListItem divider={!this.props.expanded} expanded={this.props.expanded} button onClick={this.onToggleExpanded} disableRipple disableTouchRipple>\n                    <ListItemIcon style={{marginRight: 0, color: 'inherit'}}><Icon fontSize=\"small\"/></ListItemIcon>\n                    <ListItemText\n                        disableTypography\n                        primary={<StyledListItemTextTypography variant=\"body1\">{this.props.label}\n                            <Collapse in={!this.props.expanded} timeout='auto'>\n                                <ListItemSecondaryText variant='caption' noWrap>\n                                    {this.props.subtitle}\n                                </ListItemSecondaryText>\n                            </Collapse></StyledListItemTextTypography>}\n                    />\n                    <ListItemSecondaryAction>\n                        <IconButton onClick={this.onToggleExpanded} disableRipple disableTouchRipple>\n                            {this.props.expanded ? <MenuGroupExpandLess /> : <MenuGroupExpandMore />}\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </MenuGroupListItem>\n                <Collapse in={this.props.expanded} timeout=\"auto\">\n                    <List dense disablePadding>\n                        {this.props.children}\n                    </List>\n                    {this.props.expanded && <Divider />}\n                </Collapse>\n            </>\n        )\n    }\n}\n\nexport type MenuRootItemProps = {\n    icon: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    selected: boolean\n    href?: string | ((content: React.ReactChild) => React.ReactChild)\n    accessDenied?: boolean\n}\n\nconst RootListItem = styled(ListItem)`&&{\n    background-color: ${({theme}) => theme.tfso.colors.menu};\n    color: ${({theme}) => theme.tfso.colors.menuItemText};    \n    > a{\n      text-decoration: none;\n    }\n    :focus :hover, :hover {\n        background-color: ${({theme}) => theme.mui.palette.action.hover};\n    };\n}` as typeof ListItem\n\nconst RootListItemIcon = styled(ListItemIcon)`&&{\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n}` as typeof ListItemIcon\n\nexport class MenuRootItem extends React.PureComponent<MenuRootItemProps>{\n    static propTypes = {\n        icon: PropTypes.elementType.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired,\n        accessDenied: PropTypes.bool,\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n    }\n\n    render(){\n        const Icon = this.props.icon\n\n        const LinkContent = (\n            <RootListItem divider>\n                <RootListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'inherit' : 'inherit'}/></RootListItemIcon>\n\n                <ListItemText\n                    disableTypography\n                    primary={<StyledListItemTextTypography selected={this.props.selected} variant=\"body1\">{this.props.label}\n                        <ListItemSecondaryText variant='caption' noWrap>\n                            {this.props.subtitle}\n                        </ListItemSecondaryText></StyledListItemTextTypography>}\n                />\n\n                {this.props.accessDenied &&\n                    <LockIcon fontSize=\"small\"/>\n                }\n            </RootListItem>\n        )\n\n        return (\n            <>\n            {typeof this.props.href === 'string'\n                ? <Link href={this.props.href}>{LinkContent}</Link>\n                : this.props.href\n                    ? this.props.href(LinkContent)\n                    : LinkContent\n            }\n            </>\n        )\n    }\n}\n\nexport type MenuItemProps = {\n    icon?: React.ComponentType<SvgIconProps>\n    label: string\n    selected: boolean\n    href: string | ((content: React.ReactChild) => React.ReactChild)\n    accessDenied: boolean\n    badge?: React.SFC // any\n}\n\nconst NestedListItem = styled(ListItem)`&&{\n    padding-left: 52px;\n    background-color: ${({theme}) => theme.tfso.colors.menuExpanded};\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n    :hover{\n      background-color: ${({theme}) => theme.tfso.colors.menu}; // ${({theme}) => theme.mui.palette.action.hover};\n    };\n    \n    > a{\n      text-decoration: none;\n    }\n}` as typeof ListItem\n\nconst NestedListItemIcon = styled(ListItemIcon)`&&{\n      color: ${({theme}) => theme.tfso.colors.menuItemText};\n}` as typeof ListItemIcon\n\nconst Text = styled.div`\n   flex: 1;\n`\n\nexport class MenuItem extends React.PureComponent<MenuItemProps>{\n    static propTypes = {\n        icon: PropTypes.elementType,\n        label: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired,\n        accessDenied: PropTypes.bool,\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        badge: PropTypes.func\n    }\n\n    render(){\n        const Icon = this.props.icon\n        const Badge = this.props.badge\n\n        const LinkContent = (\n            <NestedListItem>\n                <Text>\n                    {Icon &&\n                        <NestedListItemIcon color=\"inherit\" style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'inherit'}/></NestedListItemIcon>\n                    }\n                    {!Badge\n                        ? <ListItemText\n                            disableTypography\n                            primary={<StyledListItemTextTypography\n                                selected={this.props.selected}\n                                variant=\"body2\">{this.props.label}</StyledListItemTextTypography>}\n                        />\n                        : <Badge>\n                            <ListItemText\n                                disableTypography\n                                primary={<StyledListItemTextTypography selected={this.props.selected} variant=\"body2\">{this.props.label}</StyledListItemTextTypography>}\n                            />\n                        </Badge>\n                    }\n                </Text>\n                {this.props.accessDenied &&\n                    <LockIcon fontSize=\"small\"/>\n                }\n            </NestedListItem>\n        )\n        return (\n            <>\n                {typeof this.props.href === 'string'\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\n                    : this.props.href(LinkContent)\n                }\n            </>\n        )\n    }\n}","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\n\n// Original icon colors: TODO: Use these?\n// blue: #00B8F3\n// white: #fff\n\nexport type TfsoIconProps = {} & SvgIconProps\n\nexport default React.memo((props: TfsoIconProps) => (\n    <SvgIcon\n        {...props}\n        viewBox='0 0 50.59 30.35'\n    >\n        <path\n            d={'M33.22,9.62A6,6,0,0,0,29.85,13a5.06,5.06,0,0,0-4.56-2.87,5.06,5.06,0,1,1,5.06-5.06A5.06,5.06,0,0,0,33.22,9.62ZM45.53,20.23A5.06,5.06,0,0,1,41,17.36a6,6,0,0,1-3.36,3.37,5.06,5.06,0,0,1,2.87,4.56,5.06,5.06,0,1,0,5.06-5.06Zm-25.3-5.06a5.06,5.06,0,1,0-10.12,0,5.06,5.06,0,0,1-5.06,5.06,5.06,5.06,0,1,0,5.06,5.06,5.06,5.06,0,0,1,9.62-2.19,6,6,0,0,1,3.37-3.37A5.06,5.06,0,0,1,20.23,15.18Zm15.18-5.06a5.06,5.06,0,0,0-5.06,5v.13a5.06,5.06,0,0,1-2.87,4.5,6,6,0,0,1,3.37,3.36,5.06,5.06,0,0,1,4.56-2.87,5.06,5.06,0,0,0,0-10.12ZM25.29,20.23a5.06,5.06,0,1,0,5.06,5.06A5.06,5.06,0,0,0,25.29,20.23Z'}\n        />\n    </SvgIcon>\n))","import React from 'react'\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport styled from 'styled-components/macro'\nimport TfsoIcon from '../icons/Tfso'\n\nconst Root = styled.div`\n  width: 100%;\n`\nconst StyledAppBar = styled(AppBar)`&&{\n  background: white;\n  z-index: ${props => props.theme.mui.zIndex.drawer + 1};  \n}` as typeof AppBar\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n`\nconst Left = styled.div`&&{\n  flex: 0 0 240px;\n  background-color: ${({theme}) => theme.tfso.colors.menu};\n  color: #fff;\n  padding-left: 10px;\n  padding-right: 10px;\n  display: flex;\n  align-items: center;\n}`\nconst LeftMobile = styled(Left)`&&{\n  flex: 0;\n}`\nconst Right = styled.div`&&{\n  flex: 1;\n}`\n\nconst MenuButton = styled(IconButton)`&&{\n  margin-left: -12px;\n  margin-right: 20px;\n}` as typeof IconButton\n\nconst ToolbarRight = styled.div`&&{\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}`\n\nexport type TopBarProps = {\n    onMenuToggle?: () => void\n    mobile: boolean\n    children?: React.ReactNode\n}\n\nexport default class TopBar extends React.PureComponent<TopBarProps>{\n    static propTypes = {\n        onMenuToggle: PropTypes.func,\n        mobile: PropTypes.bool.isRequired,\n        children: PropTypes.node\n    }\n\n    render(){\n        return (\n            <Root>\n                <StyledAppBar position=\"static\" color=\"default\" elevation={1}>\n                    <Wrapper>\n                        {this.props.mobile\n                            ? (\n                                <LeftMobile>\n                                    <TfsoIcon color=\"primary\" fontSize=\"large\" />\n                                </LeftMobile>\n                            )\n                            : (\n                                <Left>\n                                    <TfsoIcon color=\"primary\" fontSize=\"large\" />\n                                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" style={{paddingLeft: 7}}>\n                                        24SevenOffice\n                                    </Typography>\n                                </Left>\n                            )\n                        }\n                        <Right>\n                            <Toolbar variant=\"dense\">\n                                {this.props.onMenuToggle &&\n                                <MenuButton color=\"inherit\" aria-label=\"Open drawer\" onClick={e => this.props.onMenuToggle && this.props.onMenuToggle()}>\n                                    <MenuIcon/>\n                                </MenuButton>\n                                }\n                                <ToolbarRight>\n                                    {this.props.children}\n                                </ToolbarRight>\n                            </Toolbar>\n                        </Right>\n                    </Wrapper>\n                </StyledAppBar>\n            </Root>\n        )\n    }\n}\n\nexport type TopMenuContentProps = {\n    children: React.ReactNode\n}\n\nexport class TopMenuContent extends React.PureComponent<TopMenuContentProps>{\n    static propTypes = {\n        children: PropTypes.node.isRequired\n    }\n\n    render(){\n        return (\n            <React.Fragment>\n                {this.props.children}\n            </React.Fragment>\n        )\n    }\n}","import React from 'react'\n\nfunction setTitle(text){\n    document.title = text\n}\n\ntype Props = {\n    text: string\n}\n\nexport default class DocumentTitle extends React.PureComponent<Props>{\n    constructor(props){\n        super(props)\n        setTitle(props.text)\n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps.text !== this.props.text){\n            setTitle(nextProps.text)\n        }\n    }\n    render(){\n        return ''\n    }\n}","import React from 'react'\nimport withWidth, {WithWidth} from '@material-ui/core/withWidth'\nimport useTheme from '@material-ui/styles/useTheme'\nimport {unstable_useMediaQuery as useMediaQuery} from '@material-ui/core/useMediaQuery'\n\ntype Omit<T, K extends string> = Pick<T, Exclude<keyof T, K>>\n\nexport type ScreenSizeData = {\n    mobile: boolean\n    tablet: boolean\n    desktop: boolean\n}\n\nexport type InjectedScreenSizeProps = {\n    screenSize: ScreenSizeData\n}\n\nexport type ScreenSizeProps = {\n    children: (screenSize: ScreenSizeData) => any\n} & WithWidth\n\nconst mobile = ['xs', 'sm']\nconst tablet = ['sm', 'md']\nconst desktop = ['md', 'lg', 'xl']\n\nconst getScreenSize = width => ({\n    mobile: mobile.includes(width),\n    tablet: tablet.includes(width),\n    desktop: desktop.includes(width)\n})\n\nconst ScreenSize = withWidth()((props: ScreenSizeProps) => props.children(getScreenSize(props.width)))\n\nexport function withScreenSize<P extends InjectedScreenSizeProps>(Component: React.ComponentType<P>): React.ComponentType<Omit<P, keyof InjectedScreenSizeProps>>{\n    return (props: any) => {\n        return (\n            <ScreenSize>\n                {(screenSize) => <Component {...props} screenSize={screenSize} />}\n            </ScreenSize>\n        )\n    }\n}\n\nexport const useScreenSize = () => {\n    const theme = useTheme()\n\n    const width = [...theme.breakpoints.keys]\n        .reverse()\n        .reduce((output, key) => {\n            const matches = useMediaQuery(theme.breakpoints.only(key))\n            return !output && matches ? key : output\n        }, null) || 'xs'\n\n    return getScreenSize(width)\n}\n\nexport default ScreenSize","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\nimport TopBar from './Topbar'\nimport DocumentTitle from './DocumentTitle'\nimport Menu from './Menu'\nimport {withScreenSize, ScreenSizeData} from '../ScreenSize'\n\n// Wrap everything\nexport const LayoutWrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column; // Flex header and body from top to bottom\n`\n\n// Put topbar in here\nexport const LayoutHeader = styled.div`\n  \n`\n\n// Put everything below topbar here\nexport const LayoutBody = styled.div`\n  flex: 1; // Fill the rest of the page after header has taken its space\n  min-height: 0;\n  display: flex;\n`\n\n// Put menu here\nexport const LayoutBodyLeft = styled.div`\n\n`\n\n// Put your app here\nexport const LayoutBodyRight = styled.div`\n  flex: 1;\n  min-height: 0;\n  padding: 15px;\n  overflow-y: auto;\n`\n\ntype LayoutProps = {\n    docTitle: string\n    menuContent?: React.ReactNode\n    topMenuContent?: React.ReactNode\n} & {\n    screenSize: ScreenSizeData\n}\n\ntype LayoutState = {\n    menuOpen: boolean | null\n}\n\nexport default withScreenSize(class Layout extends React.PureComponent<LayoutProps, LayoutState>{\n    static propTypes = {\n        docTitle: PropTypes.string.isRequired,\n        menuContent: PropTypes.node,\n        topMenuContent: PropTypes.node\n    }\n\n    state: LayoutState = {\n        menuOpen: null\n    }\n\n    onCloseMenu = () => this.setState({menuOpen: false})\n    onMenuToggle = () => this.setState(state => ({menuOpen: !this.menuIsOpen()}))\n    menuIsOpen(){\n        if(this.state.menuOpen === null){\n            return !this.props.screenSize.mobile\n        }\n        return this.state.menuOpen\n    }\n    onClickContent = () => {\n        if(this.props.screenSize.mobile && this.menuIsOpen()){\n            this.onCloseMenu()\n        }\n    }\n\n    render(){\n        return (\n            <LayoutWrapper>\n                <DocumentTitle text={'24SevenOffice - ' + this.props.docTitle} />\n                <LayoutHeader>\n                    <TopBar\n                        onMenuToggle={this.onMenuToggle}\n                        mobile={this.props.screenSize.mobile}\n                    >\n                        {this.props.topMenuContent}\n                    </TopBar>\n                </LayoutHeader>\n                <LayoutBody>\n                    <LayoutBodyLeft onClick={this.onClickContent}>\n                        <Menu mobile={this.props.screenSize.mobile} open={this.menuIsOpen()} onClose={this.onCloseMenu}>\n                            {this.props.menuContent}\n                        </Menu>\n                    </LayoutBodyLeft>\n                    <LayoutBodyRight>\n                        {this.props.children}\n                    </LayoutBodyRight>\n                </LayoutBody>\n            </LayoutWrapper>\n        )\n    }\n})","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\nimport Popover from '@material-ui/core/Popover'\nimport Divider from '@material-ui/core/Divider'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport ScreenSize from '../ScreenSize'\n\nexport type ProfileCardProps = {\n    open: boolean\n    onClose: () => void\n    onSignOut: () => void\n\n    children?: React.ReactNode\n    identity: any\n    signOutText: string\n    anchorEl?: null | HTMLElement\n}\n\ntype State = {}\n\nconst CustomCard = styled(Card)`\n  &&{\n   box-shadow: none;\n  } \n` as typeof Card\n\nconst CustomCardContent = styled(CardContent)`\n  &&{\n    padding: 0;\n    box-shadow: none;\n  }\n` as typeof CardContent\n\nconst ProfileCardContent = styled(CardContent)`\n  display: flex;\n  align-items: center;\n  background-color: ${({theme, color}) => color || theme.tfso.palette.primaryLight};\n   //theme.mui.palette.secondary.dark\n` as typeof CardContent\n\nconst ProfileTypography = styled(Typography)`\n  &&{\n    color: ${({theme}) => theme.mui.palette.primary.contrastText}\n  }\n` as typeof Typography\n\nconst ProfileAvatar = styled(Avatar)`\n    &&{\n     width: 60px;\n     height: 60px;\n     margin: ${({theme}) => theme.mui.spacing.unit}px;  \n    }\n` as typeof Avatar\nconst CustomCloseIconButton = styled(IconButton)`\n  &&{\n     position: absolute;\n     right: 0;\n     margin: 0 auto;\n     color: ${({theme}) => theme.mui.palette.primary.contrastText};\n  }\n` as typeof IconButton\n\nconst RightPanel = styled.div`\n  flex: 1;\n  padding: ${({theme}) => theme.mui.spacing.unit}px;;\n`\n\nconst Right = styled.div`\n  text-align: right;\n  flex: 1;\n`\n\nconst TransitionComponent = props => <Slide direction='down' {...props} />\n\nexport default class ProfileCard extends React.PureComponent<ProfileCardProps, State>{\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onClose: PropTypes.func.isRequired,\n        // identity: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n        signOutText: PropTypes.string.isRequired\n    }\n\n    onClose = () => {\n        this.props.onClose()\n    }\n\n    onSignOut = () => {\n        this.props.onSignOut()\n    }\n\n    renderContent = () => (\n        <CustomCard>\n            <ProfileCardContent>\n                <ProfileAvatar src={this.props.identity.profile.thumb.data} aria-label={this.props.identity.profile.firstName} />\n                <RightPanel>\n                    <ProfileTypography variant='h6'>{this.props.identity.profile.firstName + ' ' + this.props.identity.profile.lastName}</ProfileTypography>\n                    <ProfileTypography variant='body2'>{this.props.identity.profile.identifier}</ProfileTypography>\n                </RightPanel>\n            </ProfileCardContent>\n            <Divider />\n            <CustomCardContent>\n                {this.props.children}\n            </CustomCardContent>\n            <CardActions>\n                <Right>\n                    <Button variant=\"outlined\" size=\"small\" color=\"secondary\" onClick={this.onSignOut}>\n                        {this.props.signOutText}\n                    </Button>\n                </Right>\n            </CardActions>\n        </CustomCard>\n    )\n\n    render(){\n        const desktopDialog = (\n            <Popover\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                open={this.props.open}\n                onClose={this.onClose}\n            >\n                {this.renderContent()}\n            </Popover>\n        )\n\n        const mobileDialog = (\n            <Dialog\n                TransitionComponent={TransitionComponent}\n                keepMounted={false}\n                fullScreen={true}\n                open={this.props.open}\n                onClose={this.onClose}\n                fullWidth\n                maxWidth='sm'\n            >\n                <CustomCloseIconButton onClick={this.props.onClose} aria-label=\"Close\">\n                    <CloseIcon />\n                </CustomCloseIconButton>\n                {this.renderContent()}\n            </Dialog>\n        )\n\n        return (\n            <ScreenSize>\n                {({mobile}) => mobile ? mobileDialog : desktopDialog}\n            </ScreenSize>\n        )\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport type DelayProps = {\n    beforeShow?: React.ReactNode\n    /**\n     * @default 1000\n     */\n    delayMs?: number\n    /**\n     * @deprecated ??\n     */\n    show?: boolean\n    children: React.ReactNode\n}\n\ntype State = {\n    show: boolean\n}\n\nexport default class Delay extends React.PureComponent<DelayProps, State>{\n    static propTypes = {\n        beforeShow: PropTypes.node,\n        delayMs: PropTypes.number,\n        show: PropTypes.bool,\n        children: PropTypes.node.isRequired\n    }\n    static defaultProps = {\n        delayMs: 1000\n    }\n\n    _timer: any = null\n    state = {\n        show: false\n    }\n    componentDidMount(){\n        this._timer = setTimeout(() => {\n            this.setState({show: true})\n        }, this.props.delayMs || 1000)\n    }\n    componentWillUnmount(){\n        clearTimeout(this._timer)\n    }\n    render(){\n        if(this.props.show || this.state.show){\n            return this.props.children\n        }\n\n        return this.props.beforeShow || null\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst throttle = (fn: (...args: any[]) => void) => {\n    let running = false\n    return (...args: any[]) => {\n        if(!running){\n            // TODO: Use timeout if RAF is unavailable\n            window.requestAnimationFrame(() => {\n                fn(args)\n                running = false\n            })\n            running = true\n        }\n    }\n}\n\nexport type InfiniteScrollProps = {\n    /**\n     * Invoked when the bottom of the scrollcontainer is reached\n     * Must be async, to prevent choppy scrolling\n     */\n    onReachEnd?: () => Promise<void>\n\n    /**\n     * Invoked when the treshold distance to the bottom of the scrollcontainer is reached\n     * Must be async, to prevent choppy scrolling\n     */\n    onReachThreshold?: () => Promise<void>\n\n    /**\n     * A number >= 0 and < 1\n     * Defines in percentage (factor) of the viewable containers height the distance from the bottom where the threshold is\n     * @default 0.1\n     */\n    threshold?: number\n\n    /**\n     * The height of the container\n     * @default 'calc(100%)'\n     */\n    height?: string | number\n\n    /**\n     * Children, whatever you want\n     */\n    children: React.ReactNode\n}\n\nexport default class InfiniteScroll extends React.PureComponent<InfiniteScrollProps>{\n    static defaultProps = {\n        treshold: 0.1,\n        height: 'calc(100%)'\n    }\n\n    static propTypes = {\n        onReachEnd: PropTypes.func,\n        onReachThreshold: PropTypes.func,\n        threshold: function(props: InfiniteScrollProps, propName: string, componentName: string){\n            const propValue = props[propName]\n            if(propValue === undefined){\n                return\n            }\n\n            const propType = typeof propValue\n            if(propType !== 'number'){\n                return new Error(`Invalid prop \\`${propName}\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`, expected a number.`)\n            }\n            if(propValue >= 1 || propValue < 0){\n                return new Error(`Invalied prop ${propValue} of value \\`${propName}\\` supplied to \\`${componentName}\\`, expected a number < 1 and >= 0.`)\n            }\n        },\n        height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        children: PropTypes.node.isRequired,\n    }\n\n    // Initially we must assume that the end is nigh\n    // Lest we prematurely raise the event\n    // (Because the children may not be spawned, and the clientHeight may be less than the scrollHeight)\n    // Also, keeping this 'state' as regular ol class members, since we don't actually want a re-render after mutating these\n    _reachedTreshold = true\n    _lastScrollTop = 0\n    _mounted = false\n\n    _ref: React.RefObject<HTMLDivElement> = React.createRef()\n\n    componentDidMount(){\n        const node = this._ref.current\n        if(!node){ return }\n        node.scrollTo({top: 0}) // Dunno why, but for some reason the node is scrolled to bottom when mounting\n\n        this._mounted = true\n    }\n\n    onScroll = throttle(() => {\n        if(!this._mounted){ return }\n\n        const node = this._ref.current\n        if(!node){ return }\n\n        const {clientHeight, scrollTop, scrollHeight} = node\n        if(clientHeight >= scrollHeight){ return }\n\n        const {threshold = 0.1, onReachEnd, onReachThreshold} = this.props\n        const thresholdPoint = scrollHeight - clientHeight - clientHeight * threshold\n        const thresholdReachable = clientHeight < thresholdPoint\n        const reachedTreshold = scrollTop >= thresholdPoint\n        const reachedEnd = scrollTop + clientHeight === scrollHeight\n\n        if(scrollTop <= this._lastScrollTop){\n            // Scrolling up\n            this._lastScrollTop = scrollTop\n            this._reachedTreshold = reachedTreshold\n            return\n        }\n        this._lastScrollTop = scrollTop\n\n        // Reaching the treshold can occur multiple times, handle differently\n        if(reachedTreshold){\n            if(!this._reachedTreshold || !thresholdReachable && reachedEnd){\n                onReachThreshold && onReachThreshold()\n            }\n            this._reachedTreshold = true\n        }else if(this._reachedTreshold){\n            this._reachedTreshold = false\n        }\n\n        // Reaching the end can only occur once\n        if(reachedEnd){\n            onReachEnd && onReachEnd()\n        }\n    })\n\n    render(){\n        return (\n            <div style={{height: this.props.height || 'calc(100%)', width: '100%', overflowY: 'auto'}} ref={this._ref} onScroll={this.onScroll}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive'\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone'\nimport CloseIcon from '@material-ui/icons/Close'\nimport MoreIcon from '@material-ui/icons/MoreVert'\n\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Popover from '@material-ui/core/Popover'\nimport Badge from '@material-ui/core/Badge'\nimport List from '@material-ui/core/List'\nimport ListItem, {ListItemProps} from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport IconButton from '@material-ui/core/IconButton'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\n\nimport ScreenSize from '../ScreenSize'\nimport Delay from '../Delay'\nimport InfiniteScroll from '../InfiniteScroll'\n\nconst TransitionComponent = props => <Slide direction='down' {...props} />\n\nconst CloseIconButton = styled(IconButton)`&&{\n    position: absolute;\n    right: ${({theme}) => theme.mui.spacing.unit}px;\n    top: ${({theme}) => theme.mui.spacing.unit}px;\n}` as typeof IconButton\n\nconst ListItemWrapper = ({read, ...props}: ListItemProps & {read?: boolean}) => <ListItem {...props} />\nconst ReadListItem = styled(ListItemWrapper)`&&{\n    background-color: ${({read, theme}) => read ? 'inherit' : theme.tfso.colors.notification};\n    :hover {\n        background-color: ${({read, theme}) => read ? theme.mui.palette.action.hover : theme.tfso.colors.notificationHover};\n    };\n}`\n\nconst MobileToolbarWrapper = styled.div`&&{\n    margin: 0;\n    padding: 24px 24px 0 24px;\n    flex: 0 0 auto;\n}`\n\nconst getNotificateSecondaryText = (date: Date) => {\n    const hours = Math.floor(Math.abs(date.getTime() - Date.now()) / 3600000)\n    return hours >= 24\n        ? date.toLocaleDateString(undefined, {day: 'numeric', month: 'long', year: 'numeric'})\n        : date.toLocaleTimeString(undefined, {hour: '2-digit', minute: '2-digit'})\n}\n\nexport type NotificationItemProps = {\n    /**\n     * Unique identifier of the Notification.\n     * Spread to the `ListItem` component.\n     */\n    id: string\n\n    /**\n     * Date when the notification was created.\n     */\n    date: Date\n\n    /**\n     * `true` when the notification has been displayed to the user.\n     */\n    seen?: boolean\n    /**\n     * `true` when the user has marked the notification as read either by:\n     * - marking all notifications as read.\n     * - clicking on the notification.\n     */\n    read?: boolean\n\n    /**\n     * Invoked when the user clicks `Mark as read` or `Mark as unread`.\n     * You should persist the changes on the notification.\n     * (The notification is not changed by this component)\n     */\n    onToggleMarkRead: () => void\n\n    /**\n     * Text to the displayed on the ToggleMarkRead button when the notification is _not_ read\n     */\n    toggleMarkReadTitle: string\n\n    /**\n     * Text to the displayed on the ToggleMarkRead button when the notification _is_ read\n     */\n    toggleMarkUnreadTitle: string\n\n    /**\n     * Callback when the user clicks the notification.\n     * you should set `read` to `true` in this callback before anything else.\n     */\n    onClick: () => void\n\n    /**\n     * Should be either an `<Avatar>`, `<SvgIcon>` or `undefined`\n     */\n    avatar?: React.ReactElement\n\n    /**\n     * <Typography> formatted text, or string\n     */\n    children: React.ReactChild\n\n    /**\n     * Custom actions displayed in a menu when clicking the three vertical dots on the Notification\n     */\n    actions?: Array<{action: () => void, title: string}>\n}\n\nconst NotificationItem = (props: NotificationItemProps) => {\n    const anchor = React.useRef()\n    const [state, setState] = React.useState({menuOpen: false})\n\n    const onMenu = React.useCallback((menuOpen: boolean, callback?: () => void) => (event: React.SyntheticEvent) => {\n        event.stopPropagation()\n        setState({menuOpen})\n        callback && callback()\n    }, [])\n    const onClickAction = React.useCallback((action: () => void) => onMenu(false, action), [onMenu])\n\n    const secondaryText = React.useMemo(() => getNotificateSecondaryText(props.date), [props.date])\n\n    return (\n        <ReadListItem\n            id={props.id}\n            button\n            onClick={props.onClick}\n            divider\n            read={props.read}\n        >\n            {props.avatar && <ListItemIcon>{props.avatar}</ListItemIcon>}\n            <ListItemText secondary={secondaryText}>\n                {props.children}\n            </ListItemText>\n            <Menu\n                disableAutoFocusItem\n                MenuListProps={{disablePadding: true}}\n                open={state.menuOpen}\n                anchorEl={anchor.current}\n                onClose={onMenu(false)}\n            >\n                <MenuItem onClick={onClickAction(props.onToggleMarkRead)}>{props.read ? props.toggleMarkUnreadTitle : props.toggleMarkReadTitle}</MenuItem>\n                {props.actions && props.actions\n                    .map((action, i) => <MenuItem key={i} onClick={onClickAction(action.action)}>{action.title}</MenuItem>)\n                }\n            </Menu>\n            <ListItemSecondaryAction>\n                <IconButton onClick={onMenu(true)} buttonRef={anchor}>\n                    <MoreIcon fontSize='small'/>\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ReadListItem>\n    )\n}\n\nNotificationItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    date: PropTypes.object.isRequired,\n    seen: PropTypes.bool,\n    read: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    avatar: PropTypes.node,\n    onToggleMarkRead: PropTypes.func.isRequired,\n    toggleMarkReadTitle: PropTypes.string.isRequired,\n    toggleMarkUnreadTitle: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n    actions: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        action: PropTypes.func.isRequired\n    }))\n}\n\nexport {NotificationItem}\n\nexport type NotifierProps = {\n    /**\n     * Number of new notifications\n     */\n    count: number\n\n    /**\n     * Display a loading indicator\n     */\n    loading?: boolean\n\n    open: boolean\n\n    /**\n     * Provide your translated value of e.g `Mark all as read`\n     */\n    readAllButtonText: string\n\n    /**\n     * Callback when the user clicked the bell and opens the list of notifications.\n     * You may want to fetch new notifications here.\n     * When you're done fetching data, it is your responsibility to mark all notifications as read if the notifications is still open.\n     */\n    onOpen: () => void\n\n    /**\n     * Invoked when the user clicks the `Mark all as read` button\n     * You should set the notifications as read here.\n     */\n    onReadAll: () => void\n\n    /**\n     * Invoked when the user scrolled to the end of the list\n     */\n    onLoadMore: () => Promise<void>\n\n    /**\n     * Invoked when the list is closed.\n     */\n    onClose: () => void\n\n    /**\n     * Render your notifications here.\n     * The children will be wrapped in a `List`component.\n     * Typically a `NotificationItem`, but anything goes.\n     */\n    children: React.ReactNode\n\n    /**\n     * Properties for the Notification Bell icon\n     */\n    IconProps?: SvgIconProps\n}\n\nexport default class Notifier extends React.PureComponent<NotifierProps>{\n    static propTypes = {\n        count: PropTypes.number.isRequired,\n        loading: PropTypes.bool,\n        open: PropTypes.bool.isRequired,\n        readAllButtonText: PropTypes.string.isRequired,\n        onOpen: PropTypes.func.isRequired,\n        onReadAll: PropTypes.func.isRequired,\n        onLoadMore: PropTypes.func.isRequired,\n        onClose: PropTypes.func.isRequired,\n        children: PropTypes.node.isRequired,\n        IconProps: PropTypes.object,\n    }\n\n    _anchorEl: React.RefObject<HTMLButtonElement> = React.createRef()\n\n    onOpen = () => {\n        this.props.onOpen()\n    }\n\n    onClose = () => {\n        this.props.onClose()\n    }\n\n    renderNotifyer = () => (\n        <IconButton buttonRef={this._anchorEl} onClick={this.onOpen} >\n            {this.props.count > 0\n                ? <Badge color='error' badgeContent={this.props.count} max={9}><NotificationsActiveIcon {...this.props.IconProps} /></Badge>\n                : <NotificationsNoneIcon {...this.props.IconProps} />\n            }\n        </IconButton>\n    )\n\n    renderToolbar = (mobile: boolean) => (\n        <>\n            <Toolbar variant='dense' disableGutters={mobile} style={{marginRight: mobile ? 32 : 0}}>\n                <Grid container justify='space-between' alignItems='baseline' spacing={8} wrap='nowrap'>\n                    <Grid item xs>\n                        <Typography variant={mobile ? 'subtitle1' : 'subtitle2'} >Notifications</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Button onClick={this.props.onReadAll} variant='text' size='small' color='primary' fullWidth>\n                            {this.props.readAllButtonText}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n            {this.renderLoading()}\n            <Divider />\n        </>\n    )\n\n    renderContent(mobile: boolean){\n        return (\n            <InfiniteScroll height={mobile ? undefined : 500} threshold={0.2} onReachThreshold={this.props.onLoadMore}>\n                <List dense disablePadding>\n                    {this.props.children}\n                </List>\n            </InfiniteScroll>\n        )\n    }\n\n    renderDesktop(){\n        return (\n            <Popover\n                open={this.props.open}\n                onClose={this.onClose}\n                anchorEl={this._anchorEl.current}\n                anchorOrigin={{horizontal: 'right', vertical: 'bottom'}}\n                transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            >\n                {this.renderToolbar(false)}\n                {this.renderContent(false)}\n            </Popover>\n        )\n    }\n\n    renderMobile(){\n        return (\n            <Dialog\n                TransitionComponent={TransitionComponent}\n                open={this.props.open}\n                onClose={this.onClose}\n                fullScreen\n            >\n                <MobileToolbarWrapper>\n                    {this.renderToolbar(true)}\n                    <CloseIconButton onClick={this.onClose}><CloseIcon /></CloseIconButton>\n                </MobileToolbarWrapper>\n                <DialogContent>\n                    {this.renderContent(true)}\n                </DialogContent>\n            </Dialog>\n        )\n    }\n\n    renderLoading = () => {\n        const Spacer = <div style={{height: 4}} />\n        return (\n            this.props.loading ? (\n                <Delay delayMs={200} beforeShow={Spacer}>\n                    <LinearProgress color='secondary' />\n                </Delay>\n            ) : Spacer\n        )\n    }\n\n    render(){\n        return (\n            <>\n                {this.renderNotifyer()}\n                <ScreenSize>\n                    {({mobile}) => mobile ? this.renderMobile() : this.renderDesktop()}\n                </ScreenSize>\n            </>\n        )\n    }\n}","import React from 'react'\nimport styled, {DefaultTheme} from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport MuiSnackbarContent from '@material-ui/core/SnackbarContent'\nimport WarningIcon from '@material-ui/icons/Warning'\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n}\n\nconst bgColor = (variant: AlertVariant, palette: DefaultTheme['tfso']['palette']) => {\n    switch(variant){\n    case 'success': return palette.success\n    case 'error': return palette.alert\n    case 'info': return palette.primaryLight\n    case 'warning': return palette.warning\n    }\n}\n\nconst SnackbarContent = ({variant, ...other}) => <MuiSnackbarContent {...other} />\nconst StyledSnack = styled(SnackbarContent)`&&{\n    background-color: ${({variant, theme}) => bgColor(variant, theme.tfso.palette)}\n}`\n\ntype AlertVariant = 'success' | 'warning' | 'error' | 'info'\n\nexport type AlertProps = {\n    message: React.ReactNode\n    onClose(): void\n    variant: AlertVariant\n}\n\nconst Alert = (props: AlertProps) => {\n    const {message, onClose, variant} = props\n    const Icon = variantIcon[variant]\n\n    return (\n        <StyledSnack\n            variant={variant}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" style={{display: 'flex', alignItems: 'center'}}>\n                    <Icon style={{fontSize: 20, opacity: 0.9, marginRight: 10}} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    onClick={onClose}\n                >\n                    <CloseIcon style={{fontSize: 20}} />\n                </IconButton>,\n            ]}\n        />\n    )\n}\n\nAlert.propTypes = {\n    message: PropTypes.node.isRequired,\n    onClose: PropTypes.func.isRequired,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\n}\n\nexport default Alert","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\n\nexport type BigNumberProps = {\n    /**\n     * Choose `light` when you have a dark background, otherwise `dark`\n     * @default light\n     */\n    color?: 'light' | 'dark'\n\n    /**\n     * @default large\n     */\n    size?: 'medium' | 'large'\n    children: string | number\n}\n\nconst fontSizeMap: {[P in Required<BigNumberProps>['size']]: number} = {\n    medium: 32,\n    large: 48\n}\n\nconst defaultProps: Required<Pick<BigNumberProps, 'color' | 'size'>> = {\n    color: 'light',\n    size: 'large',\n}\n\nconst wrapper = ({size, color, ...props}: Required<BigNumberProps>) => <div {...props} />\n// TODO: These should be on the BigNumber component instead..\nwrapper.defaultProps = defaultProps\nwrapper.propTypes = {\n    color: PropTypes.oneOf(['light', 'dark']),\n    size: PropTypes.oneOf(['medium', 'large']),\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]).isRequired\n}\n\nconst BigNumber = styled(wrapper)`&&{\n    font-size: ${({theme, size = defaultProps.size}) => theme.mui.typography.pxToRem(fontSizeMap[size])};\n    line-height: normal;\n    letter-spacing: 0.08em;\n    color: ${({color = defaultProps.color}) => color === 'light' ? '#FFFFFF' : '#404040'};\n    white-space: nowrap\n}`\n\nexport default BigNumber as React.ComponentType<BigNumberProps>","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\nimport Slide from '@material-ui/core/Slide'\n\nexport type ConfirmationDialogProps = {\n    open: boolean\n    title?: string\n    message: string\n    okButtonText: string\n    cancelButtonText: string\n    onOk: () => void\n    onCancel: () => void\n}\n\nconst TransitionComponent = props => <Slide direction='up' {...props} />\n\nconst ConfirmationDialog = (props: ConfirmationDialogProps) => {\n    const {open, onCancel, onOk, title, message, okButtonText, cancelButtonText} = props\n    return (\n        <Dialog\n            TransitionComponent={TransitionComponent}\n            keepMounted={false}\n            open={open}\n            onClose={onCancel}\n            maxWidth={'xs'}\n        >\n            {title && <DialogTitle>{title}</DialogTitle>}\n            <DialogContent>{message}</DialogContent>\n            <DialogActions>\n                <Button onClick={onCancel} color=\"primary\">{cancelButtonText}</Button>\n                <Button onClick={onOk} color=\"secondary\">{okButtonText}</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nConfirmationDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    title: PropTypes.string,\n    message: PropTypes.string.isRequired,\n    okButtonText: PropTypes.string.isRequired,\n    cancelButtonText: PropTypes.string.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n}\n\nexport default ConfirmationDialog","import React from 'react'\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport SearchIcon from '@material-ui/icons/Search'\n\nexport type SearchFieldProps = TextFieldProps\n\ntype State = {\n    editing: boolean\n}\n\nexport default class SearchField extends React.PureComponent<SearchFieldProps, State>{\n    static defaultProps = {\n        placeholder: 'Search',\n        margin: 'dense',\n        InputProps: {\n            startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>\n        }\n    }\n\n    state: State = {\n        editing: false\n    }\n\n    onBlur = (e: React.EventHandler<any>) => {\n        this.setState({editing: false})\n        const {onBlur} = this.props\n        onBlur && onBlur(e)\n    }\n\n    onFocus = (e: React.EventHandler<any>) => {\n        this.setState({editing: true})\n        const {onFocus} = this.props\n        onFocus && onFocus(e)\n    }\n\n    render(){\n        return (\n            <TextField\n                fullWidth={this.state.editing}\n                {...this.props}\n                onBlur={this.onBlur}\n                onFocus={this.onFocus}\n            />\n        )\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\n\ntype Props = {\n    value: string\n    onChange: (value: string) => void\n    dirty?: boolean\n    enableDirtyCheck?: boolean\n}\n\ntype State = {\n    editing: boolean\n    value: string\n    prevProps: Props\n}\n\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>\n\nfunction handleEvent(event: React.KeyboardEvent<HTMLDivElement>){\n    event.preventDefault()\n    event.stopPropagation()\n    // the above only prevents other synthetic events, if we want to prevent global listeners too, we need to stop the propagation on the native event as well\n    event.nativeEvent.stopImmediatePropagation()\n}\n\nexport type TextFieldEditorProps = Props & Partial<Omit<TextFieldProps, 'value' | 'onChange'>>\n\nexport default class TextFieldEditor extends React.PureComponent<TextFieldEditorProps, State>{\n    static propTypes = {\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        dirty: PropTypes.bool\n    }\n\n    _inputRef: React.RefObject<HTMLInputElement> = React.createRef()\n\n    state: State = {\n        editing: false,\n        value: this.props.value,\n        prevProps: this.props\n    }\n\n    static getDerivedStateFromProps(props: Readonly<TextFieldEditorProps>, state: Readonly<State>){\n        const prevProps = state.prevProps\n\n        if(prevProps.value !== props.value){ return {value: props.value, prevProps: props} }\n\n        return {prevProps: props}\n    }\n\n    blur = () => { this._inputRef.current && this._inputRef.current.blur() }\n\n    onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n        this.props.onKeyDown && this.props.onKeyDown(event)\n        if(event.defaultPrevented){ return }\n\n        if(event.ctrlKey){\n            switch(event.key){\n            case 's':\n            // this event should not be 'handled' here (eg. invoke handleEvent(event)), control may want to perform other actions on ctrl+s\n            // It should behave as a save changes in the control as well however\n                this.blur()\n                break\n            case 'z':\n                handleEvent(event)\n                this.setState({editing: false, value: this.props.value}, this.blur)\n                break\n            default: break\n            }\n        }else{\n            switch(event.key){\n            case 'Enter':\n                if(this.props.multiline){ break }\n                handleEvent(event)\n                this.blur()\n                break\n            case 'Escape':\n                handleEvent(event)\n                this.setState({editing: false, value: this.props.value}, this.blur)\n                break\n            default: break\n            }\n        }\n    }\n\n    onFocus = (e: React.EventHandler<any>) => {\n        this.setState({editing: true})\n        this.props.onFocus && this.props.onFocus(e)\n    }\n\n    onBlur = (e: React.EventHandler<any>) => {\n        if(!this.state.editing){ return } // The method should be safe to call multiple times, but we don't want to raise the event multiple times if we dont need to\n\n        this.props.onChange(this.state.value)\n        this.setState({editing: false})\n        this.props.onBlur && this.props.onBlur(e)\n    }\n\n    onChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement | HTMLSelectElement>) => {\n        const value = event.target.value\n        this.setState({value, editing: true})\n    }\n\n    render(){\n        const {dirty: dirtyProp, onChange: onChangeProp, value: valueProp, enableDirtyCheck, ...otherProps} = this.props\n        const {value} = this.state\n\n        const isDirty = enableDirtyCheck ? this.props.value !== value || !!dirtyProp : !!dirtyProp\n\n        return (\n            <TextField\n                {...otherProps as any}\n                inputRef={this._inputRef}\n                value={value}\n                onFocus={this.onFocus}\n                onChange={this.onChange}\n                onBlur={this.onBlur}\n                onKeyDown={this.onKeyDown}\n                InputProps={{style: {fontStyle: isDirty ? 'italic' : 'normal'}}}\n            />\n        )\n    }\n}","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport {withTheme, DefaultTheme, WithTheme} from 'styled-components'\n\nimport TrendingUp from '@material-ui/icons/TrendingUp'\nimport TrendingFlat from '@material-ui/icons/TrendingFlat'\nimport TrendingDown from '@material-ui/icons/TrendingDown'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\n\nexport type TrendingProps = {\n    variant: 'up' | 'down' | 'flat'\n} & SvgIconProps\n\nconst iconMap: {[P in TrendingProps['variant']]: React.ComponentType<SvgIconProps>} = {\n    up: TrendingUp,\n    flat: TrendingFlat,\n    down: TrendingDown,\n}\n\nconst getColor = (variant: TrendingProps['variant'], theme: DefaultTheme) => {\n    switch(variant){\n    case 'up': return theme.tfso.palette.success\n    case 'down': return theme.tfso.palette.warning\n    case 'flat': return theme.tfso.palette.alert\n    default: return undefined\n    }\n}\n\nconst trending = ({variant, theme, ...iconProps}: TrendingProps & WithTheme) => {\n    const Icon = iconMap[variant]\n    const nativeColor = getColor(variant, theme)\n    return (\n        <Icon\n            nativeColor={nativeColor}\n            {...iconProps}\n        />\n    )\n}\n\ntrending.propTypes = {\n    variant: PropTypes.oneOf(['up', 'down', 'flat']).isRequired\n}\n\nexport default React.memo(withTheme(trending))","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\n// https://www.w3schools.com/charsets/ref_emoji.asp\nconst emojis = {\n    middleFinger: <>&#128405;</>,\n    indexFinger: <>&#128070;</>,\n    flex: <>&#128170;</>,\n    brokenHeart: <>&#128148;</>,\n    perfect: <>&#128076;</>,\n    thumbsUp: <>&#128077;</>,\n    thumbsDown: <>&#128078;</>,\n    clap: <>&#128079;</>,\n    heart: <>&#128152;</>,\n    fire: <>&#128293;</>,\n    bulb: <>&#128161;</>,\n    crap: <>&#128169;</>,\n    thinking: <>&#129300;</>,\n    rocket: <>&#128640;</>,\n}\n\nexport type EmojiProps = {\n    variant: keyof typeof emojis\n}\n\nconst Emoji = (props: EmojiProps) => emojis[props.variant]\n\nEmoji.propTypes = {\n    variant: PropTypes.oneOf(Object.keys(emojis))\n}\n\nexport default Emoji","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Slide from '@material-ui/core/Slide'\nimport Typography from '@material-ui/core/Typography'\nimport MenuList from '@material-ui/core/MenuList'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Avatar from '@material-ui/core/Avatar'\nimport SearchField from './SearchField'\nimport Popover from '@material-ui/core/Popover'\nimport styled from 'styled-components'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport {InjectedScreenSizeProps, withScreenSize} from './ScreenSize'\n\nexport type ListPickerProps = {\n    open: boolean\n    onCancel: () => void\n    onSelect: (value: string) => void\n    children?: undefined\n    options: {value: string, label: string}[]\n    cancelButtonText: string\n    searchLabel?: string\n    anchorEl?: null | HTMLElement\n    disabled?: string\n    selected?: string\n    avatarColor?: string\n}\n\ntype State = {\n    filterValue: string,\n    focusValue: string\n}\n\nconst AvatarColor = styled(Avatar)`&&{\n    background-color: ${({theme, color}) => color || theme.mui.palette.primary.dark};\n    color: ${({theme}) => theme.mui.palette.primary.contrastText};\n}` as typeof Avatar\n\nconst CustomDialogTitle = styled.div`\n  display: flex;\n  flex-flow: row-reverse;\n  padding: 5px;\n`\n\nconst TransitionComponent = props => <Slide direction='down' {...props} />\n\n// @ts-ignore\nexport default withScreenSize(class ListPicker extends React.PureComponent<ListPickerProps & InjectedScreenSizeProps, State>{\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onCancel: PropTypes.func.isRequired,\n        onSelect: PropTypes.func.isRequired,\n        options: PropTypes.arrayOf(PropTypes.shape({value: PropTypes.string.isRequired, label: PropTypes.string.isRequired})).isRequired,\n        cancelButtonText: PropTypes.string.isRequired,\n        searchLabel: PropTypes.string,\n        disabled: PropTypes.string,\n        selected: PropTypes.string,\n        avatarColor: PropTypes.string\n    }\n    _inputRef: React.RefObject<HTMLLIElement> = React.createRef()\n    _listRef: React.RefObject<HTMLInputElement> = React.createRef()\n    state: State = {\n        filterValue: '',\n        focusValue: ''\n    }\n\n    componentDidUpdate(prevProps){\n        if(!prevProps.open && this.props.open && !this.props.screenSize.mobile){\n            setTimeout(() => {\n                this._inputRef.current && this._inputRef.current.focus()\n            }, 1)\n        }\n    }\n\n    onFilter = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({filterValue: event.target.value})\n    }\n    onKeyDown = (event: React.KeyboardEvent) => {\n        if(!(event && event.keyCode === 40)){\n            return\n        }\n        this._listRef.current && this._listRef.current.focus()\n    }\n\n    onSelect = (value) => {\n        this.props.onSelect(value)\n    }\n\n    onClose = () => {\n        this.props.onCancel()\n    }\n\n    render(){\n        const renderItems = (\n            <>\n                <SearchField\n                    placeholder={this.props.searchLabel}\n                    inputRef={this._inputRef}\n                    onChange={this.onFilter}\n                    value={this.state.filterValue}\n                    onKeyDown={this.onKeyDown}\n                />\n                <\n                    // @ts-ignore\n                    MenuList ref={this._listRef}>\n                    {this.props.options\n                        .filter(option => option.label.toLowerCase().indexOf(this.state.filterValue) > -1 || option.value.indexOf(this.state.filterValue) > -1)\n                        .map((option, i) => (\n                            <MenuItem\n                                disabled={option.value == this.props.disabled}\n                                selected={option.value == this.props.selected}\n                                key={i}\n                                onClick={() => { this.onSelect(option.value) }}\n                            >\n                                <AvatarColor color={this.props.avatarColor}>\n                                    <Typography variant='caption' color='inherit'>\n                                        {option.label.split(' ')\n                                            .slice(0, 3)\n                                            .map((words) => (\n                                                words[0]\n                                            ))\n                                        }\n                                    </Typography>\n                                </AvatarColor>\n                                <ListItemText primary={option.label} />\n                            </MenuItem>\n                        ))\n                    }\n                </MenuList>\n            </>\n        )\n\n        const desktopDialog = (\n            <Popover\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                open={this.props.open}\n                onClose={this.onClose}\n            >\n                <DialogContent>\n                    {renderItems}\n                </DialogContent>\n            </Popover>\n        )\n\n        const mobileDialog = (\n            <Dialog\n                TransitionComponent={TransitionComponent}\n                keepMounted={false}\n                fullScreen={true}\n                open={this.props.open}\n                onClose={this.onClose}\n                fullWidth\n                maxWidth='sm'\n            >\n                <CustomDialogTitle>\n                    <IconButton onClick={this.onClose} aria-label=\"Close\">\n                        <CloseIcon />\n                    </IconButton>\n                </CustomDialogTitle>\n                <DialogContent>\n                    {renderItems}\n                </DialogContent>\n            </Dialog>\n        )\n\n        const {mobile} = this.props.screenSize\n        return mobile ? mobileDialog : desktopDialog\n    }\n})","import React, {HTMLProps} from 'react'\nimport PropTypes from 'prop-types'\n\ntype Props = {\n    children: (hover: boolean, ref: React.RefObject<any>) => React.ReactNode\n} & HTMLProps<HTMLDivElement>\n\ntype State = {\n    hover: boolean\n}\n\nexport default class Hoverable extends React.PureComponent<Props, State>{\n    private ref: React.RefObject<any>\n\n    static propTypes = {\n        children: PropTypes.func.isRequired\n    }\n\n    constructor(props){\n        super(props)\n\n        this.ref = React.createRef()\n\n        this.state = {\n            hover: false\n        }\n    }\n\n    toggleHover = () => {\n        this.setState(state => ({hover: !state.hover}))\n    }\n\n    hoverOn = () => this.setState({hover: true})\n    hoverOff = () => this.setState({hover: false})\n\n    render(){\n        const {children, ...restProps} = this.props\n\n        return (\n            <div\n                ref={this.ref}\n                onMouseEnter={this.hoverOn}\n                onMouseLeave={this.hoverOff}\n                {...restProps}\n            >\n                {children(this.state.hover, this.ref)}\n            </div>\n        )\n    }\n}","import React, {HTMLProps} from 'react'\nimport PropTypes from 'prop-types'\n\ntype Props = {\n    children: (tabIndex: number, next: () => void, prev: () => void) => React.ReactNode\n    index?: number\n    length?: number\n} & HTMLProps<HTMLDivElement>\n\ntype State = {\n    index: number\n}\n\nexport default class Wizard extends React.PureComponent<Props, State>{\n    static propTypes = {\n        children: PropTypes.func.isRequired,\n        index: PropTypes.number,\n        length: PropTypes.number\n    }\n\n    constructor(props){\n        super(props)\n        this.state = {index: props.index || 0}\n    }\n\n    static getDerivedStateFromProps(nextProps){\n        if(nextProps.hasOwnProperty('index')){\n            return {index: nextProps.index}\n        }\n        return null\n    }\n\n    next = () => this.setState(state => {\n        if(this.props.length && state.index + 1 >= this.props.length) return state\n        return {index: state.index + 1}\n    })\n    prev = () => this.setState(state => {\n        if(state.index - 1 < 0) return state\n        return {index: state.index - 1}\n    })\n\n    render(){\n        const {children, ...restProps} = this.props\n\n        return (\n            <div {...restProps}>\n                {children(this.state.index, this.next, this.prev)}\n            </div>\n        )\n    }\n}","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Styled, {css} from 'styled-components/macro'\n\nexport type TfsoLoadingIconProps = {\n    /**\n     * @default infinite\n     */\n    once?: boolean\n} & SvgIconProps\n\nconst TfsoLoadingIconWrapper = ({once, ...other}: TfsoLoadingIconProps) => <SvgIcon {...other}/>\n\nconst path = css`\n    opacity: 1;\n    animation-delay: 1.5s;\n`\nconst StyledSvgIcon: React.ComponentType<SvgIconProps> = Styled(TfsoLoadingIconWrapper)`&&{\n    #path1{\n        ${path}\n        animation: fade-in1 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path2{\n        ${path}\n        animation: fade-in2 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path3{\n        ${path}\n        animation: fade-in3 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path4{\n        ${path}\n        animation: fade-in4 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path5{\n        ${path}\n        animation: fade-in5 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    @keyframes fade-in1 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 1; }\n        40% { opacity: 1; }\n        60% { opacity: 1; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in2 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 1; }\n        60% { opacity: 1; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in3 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 0.2; }\n        60% { opacity: 1; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in4 {\n        0%   { opacity:0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 0.2; }\n        60% { opacity: 0.2; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in5 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 0.2; }\n        60% { opacity: 0.2; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n}` as any // seems like returntype of styled-components adds string as a type of _ref.. dunnp why\n\nexport default React.memo((props: TfsoLoadingIconProps) => (\n    <StyledSvgIcon\n        {...props}\n        viewBox=\"0 0 37 23\"\n        fillRule='evenodd'\n        strokeWidth=\"1\"\n    >\n        <path d=\"M21.79 9.81C21.17789 8.5323532 19.886707 7.7195303 18.47 7.72 16.444136 7.7143752 14.803816 6.0724096 14.800223 4.0465408 14.79663 2.020672 16.431115 0.37289845 18.456947 0.36008776 20.482778 0.34727707 22.137972 1.9742478 22.16 4c-0.01782 1.4288443 0.793121 2.7388262 2.08 3.36-1.120033 0.4431782-2.006822 1.3299671-2.45 2.45l0 0z\" id=\"path5\"/>\n        <path d=\"m33.24 15.09c-1.427527 0.01209-2.733245-0.802525-3.35-2.09-0.443178 1.120033-1.329967 2.006822-2.45 2.45 1.275973 0.613987 2.088053 1.903991 2.09 3.32 0 2.032408 1.647592 3.68 3.68 3.68 2.032408 0 3.68-1.647592 3.68-3.68 0-2.032408-1.647592-3.68-3.68-3.68l0.03 0 0 0z\" id=\"path4\"/>\n        <path d=\"m14.79 11.41c0-2.0351693-1.649831-3.685-3.685-3.685-2.0351693 0-3.685 1.6498307-3.685 3.685 0 2.032408-1.6475921 3.68-3.68 3.68-2.0324079 0-3.68 1.647592-3.68 3.68 0 2.032408 1.6475921 3.68 3.68 3.68 2.0324079 0 3.68-1.647592 3.68-3.68-0.00119-1.719312 1.1882715-3.210312 2.864877-3.591141 1.676605-0.380829 3.39346 0.450022 4.135123 2.001141 0.443178-1.120033 1.329967-2.006822 2.45-2.45-1.27208-0.616837-2.079908-1.906255-2.08-3.32l0 0 0 0z\" id=\"path2\"/>\n        <path d=\"m25.84 7.73c-2.016889-0.0001192-3.658077 1.6232303-3.68 3.64l0 0.09c-0.02094 1.397916-0.830116 2.663946-2.09 3.27 1.120033 0.443178 2.006822 1.329967 2.45 2.45 0.613987-1.275973 1.903991-2.088053 3.32-2.09 2.035169 0 3.685-1.649831 3.685-3.685 0-2.0351693-1.649831-3.685-3.685-3.685l0 0.01 0 0z\" id=\"path3\"/>\n        <path d=\"m18.47 15.1c-2.031097 0.0055-3.673671 1.655547-3.669994 3.686649 0.0037 2.031101 1.652215 3.675171 3.683318 3.673336C20.514428 22.45815 22.159993 20.811104 22.16 18.78 22.162665 17.800536 21.774754 16.860421 21.082167 16.167833 20.389579 15.475246 19.449463 15.087335 18.47 15.09l0 0.01 0 0z\" id=\"path1\"/>\n    </StyledSvgIcon>\n))\n","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Link from '@material-ui/core/Link'\n\nexport const MaterialUiIcon = React.memo((props: SvgIconProps) => (\n    <SvgIcon {...props} viewBox=\"0 0 600 476.6\">\n        <path d=\"m0 259.8v-259.8l225 129.9v86.6l-150-86.6v173.2z\" fill=\"#00b0ff\"/>\n        <path d=\"m225 129.9 225-129.9v259.8l-150 86.6-75-43.3 150-86.6v-86.6l-150 86.6z\" fill=\"#0081cb\"/>\n        <path d=\"m225 303.1v86.6l150 86.6v-86.6z\" fill=\"#00b0ff\"/>\n        <path d=\"m375 476.3 225-129.9v-173.2l-75 43.3v86.6l-150 86.6zm150-346.4v-86.6l75-43.3v86.6z\" fill=\"#0081cb\"/>\n    </SvgIcon>\n))\n\nexport type MaterialUiLinkProps = {\n    iconProps?: SvgIconProps\n}\n\nconst MaterialUiLink = (props: MaterialUiLinkProps) => (\n    <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\n        <MaterialUiIcon fontSize='large' {...props.iconProps as any} style={{height: '100%'}} />\n    </Link>\n)\n\nexport default MaterialUiLink\n","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Link from '@material-ui/core/Link'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nexport const GitHubIcon = React.memo((props: SvgIconProps) => (\n    <SvgIcon {...props}>\n        <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\n    </SvgIcon>\n))\n\nexport type GitHubLinkProps = {\n    path?: string\n    tooltip?: string\n    iconProps?: SvgIconProps\n}\n\nconst GitHubLink = (props: GitHubLinkProps) => {\n    return (\n        <Link href={`https://github.com/tfso/react-tfso-components${props.path ? `/${props.path}` : ''}`} target='_blank' rel='noreferrer' >\n            <Tooltip title={props.tooltip ? props.tooltip : 'View on GitHub'}>\n                <GitHubIcon fontSize={props.iconProps && props.iconProps.fontSize || 'large'} {...props.iconProps as any} />\n            </Tooltip>\n        </Link>\n    )\n}\n\nexport default GitHubLink\n","import React from 'react'\n\nimport styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Zoom from '@material-ui/core/Zoom'\nimport Link from '@material-ui/core/Link'\n\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\nimport {MaterialUiIcon} from '../components/MaterialUiLink'\nimport {GitHubIcon} from '../components/GitHubLink'\n\n// TODO: this could be a Util HOC component\nconst CenterTop = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    flex-direction: column;\n    height: 100%;\n`\n\nconst Home = () => {\n    return (\n        <CenterTop>\n            <TfsoLoading once color='primary' fontSize='inherit' style={{fontSize: 400}} />\n            <Typography variant='h3' color='primary' paragraph>\n                REACT-TFSO-COMPONENTS\n            </Typography>\n            <Typography variant='h6' align='center' color='textSecondary' paragraph>\n                Something something useful description something dark side (TODO) <br />\n                Supplementary React components based on Material-UI with Tfso styling<br />\n            </Typography>\n            <Grid container justify='center'>\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\n                    <Zoom in appear style={{transitionDelay: '250ms'}} >\n                        <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\n                            <MaterialUiIcon style={{fontSize: 150}} />\n                        </Link>\n                    </Zoom>\n                    <Zoom in appear style={{transitionDelay: '750ms'}} >\n                        <Typography variant='h6'>\n                            Find standard components <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>here</Link>\n                        </Typography>\n                    </Zoom>\n                </Grid>\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\n                    <Zoom in appear style={{transitionDelay: '500ms'}}>\n                        <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >\n                            <GitHubIcon style={{fontSize: 150}} color='primary' />\n                        </Link>\n                    </Zoom>\n                    <Zoom in appear style={{transitionDelay: '1000ms'}} >\n                        <Typography variant='h6'>\n                            View source on <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >GitHub</Link>\n                        </Typography>\n                    </Zoom>\n                </Grid>\n            </Grid>\n        </CenterTop>\n    )\n}\n\nexport default Home","import React from 'react'\nimport Prism from 'prismjs'\n\n// Load languages\nimport 'prismjs/components/prism-clike'\nimport 'prismjs/components/prism-css'\nimport 'prismjs/components/prism-markup'\nimport 'prismjs/components/prism-javascript'\nimport 'prismjs/components/prism-typescript'\nimport 'prismjs/components/prism-jsx'\nimport 'prismjs/components/prism-tsx'\n\n// Load style\nimport 'prismjs/themes/prism.css'\n\ntype CodeProps = {\n    language: 'js' | 'ts' | 'tsx' | 'jsx'\n    children: React.ReactNode\n}\n\nexport class Code extends React.PureComponent<CodeProps>{\n    _ref: React.RefObject<HTMLPreElement> = React.createRef()\n\n    componentDidMount(){\n        this.highlight()\n    }\n\n    componentDidUpdate(){\n        this.highlight()\n    }\n\n    highlight = () => {\n        if(!this._ref.current){ return }\n        Prism.highlightElement(this._ref.current!)\n    }\n\n    render(){\n        return (\n            <pre ref={this._ref} className={`language-${this.props.language}`}>\n                <code className={`language-${this.props.language}`}>\n                    {this.props.children}\n                </code>\n            </pre>\n        )\n    }\n}","import React, {ReactChild} from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport Divider from '@material-ui/core/Divider'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport CodeIcon from '@material-ui/icons/Code'\n\nimport GitHubLink from './GitHubLink'\nimport {Code} from './code'\n\nexport const Demo = (props) => <Paper style={{padding: 15, marginBottom: 30}}>{props.children}</Paper>\n\nexport type DemoTitleProps = {\n    children: string\n    /**\n     * The path to the Demo component. `src/demo/demos/` will be appended in front of the path\n     */\n    demoPath?: string\n\n    /**\n     * The path to the Implementation of the component. `src/lib/` will be appended in front of the path\n     */\n    srcPath?: string\n}\nexport const DemoTitle = (props: DemoTitleProps) => {\n    return (\n        <Grid container justify='space-between' alignItems='baseline' >\n            <Grid item>\n                <Typography variant=\"h5\">\n                    {props.children}\n                </Typography>\n            </Grid>\n            {props.srcPath || props.demoPath\n                ? <Grid item xs container spacing={16} justify='flex-end' wrap='nowrap'>\n                    {props.demoPath && <Grid item><GitHubLink iconProps={{fontSize: 'default', color: 'secondary'}} path={`blob/master/src/demo/demos/${props.demoPath}`} tooltip={`View demo source for ${props.children}`} /></Grid>}\n                    {props.srcPath && <Grid item><GitHubLink iconProps={{fontSize: 'default', color: 'primary'}} path={`blob/master/src/lib/${props.srcPath}`} tooltip={`View source for ${props.children}`}/></Grid> }\n                </Grid>\n                : null\n            }\n        </Grid>\n    )\n}\nexport const DemoHelp = (props) => <Typography variant='subtitle1' paragraph>{props.children}</Typography>\nexport const DemoContent = (props: { children: Array<ReactChild> | ReactChild}) => (\n    <div style={{marginTop: 30}}>\n        <Typography variant=\"subtitle1\" >Example</Typography>\n        <Divider />\n        <br />\n        <Grid container spacing={16} alignItems='center'>\n            {props.children && Array.isArray(props.children)\n                ? props.children.map((child, i) => (\n                    <Grid item key={i} xs={i === 0 ? 12 : false}>\n                        {child}\n                    </Grid>\n                ))\n                : <Grid item xs={12} >{props.children}</Grid>\n            }\n        </Grid>\n    </div>\n)\n\nexport type DemoPropsProps = {\n    title?: string\n    children: React.ReactNode\n}\n\nexport const DemoProps = (props: DemoPropsProps) => (\n    <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography variant='h6'>{props.title || 'Props'}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails style={{overflowX: 'auto'}}>\n            <Table >\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Type</TableCell>\n                        <TableCell>Default</TableCell>\n                        <TableCell>Description</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.children}\n                </TableBody>\n            </Table>\n        </ExpansionPanelDetails>\n    </ExpansionPanel>\n)\n\nexport type DemoPropProps = {\n    name: string\n    type: string\n    default?: string\n    description?: string\n    required?: boolean\n}\n\nexport const DemoProp = (props: DemoPropProps) => (\n    <TableRow>\n        <TableCell><code>{`${props.required ? '* ' : ''}${props.name}`}</code></TableCell>\n        <TableCell><code>{props.type}</code></TableCell>\n        <TableCell><code>{props.default}</code></TableCell>\n        <TableCell><Typography>{props.description}</Typography></TableCell>\n    </TableRow>\n)\n\ntype DemoCodeProps = Code['props']\nexport const DemoCode = (props: DemoCodeProps) => (\n    <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<CodeIcon />}>\n            <Typography variant='h6'>{`View Demo (${props.language})`}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n            <Code {...props} />\n        </ExpansionPanelDetails>\n    </ExpansionPanel>\n)","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\nimport Tfso, {TfsoIconProps} from '../../lib/icons/Tfso'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\n\nexport default class Icons extends React.PureComponent{\n    render(){\n        return (\n            <>\n                <TfsoDemo />\n                <TfsoLoadingDemo />\n            </>\n        )\n    }\n}\n\ntype TfsoLogoDemoState = {\n    color: TfsoIconProps['color']\n    fontSize: TfsoIconProps['fontSize']\n    nativeColor: TfsoIconProps['nativeColor']\n}\n\nclass TfsoDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\n    state:TfsoLogoDemoState = {\n        color: 'primary',\n        fontSize: 'large',\n        nativeColor: ''\n    }\n\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/Tfso.tsx'>Tfso</DemoTitle>\n                <DemoHelp>Tfso logo icon</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\n                </DemoProps>\n                <DemoContent>\n                    <Tfso\n                        color={this.state.color}\n                        fontSize={this.state.fontSize}\n                        nativeColor={this.state.nativeColor}\n                    />\n                    <TextField\n                        select\n                        label='color'\n                        value={this.state.color}\n                        onChange={this.handleChange('color')}\n                    >\n                        <MenuItem value='inherit' >inherit</MenuItem>\n                        <MenuItem value='primary' >primary</MenuItem>\n                        <MenuItem value='secondary' >secondary</MenuItem>\n                        <MenuItem value='default' >default</MenuItem>\n                        <MenuItem value='action' >action</MenuItem>\n                        <MenuItem value='disabled' >disabled</MenuItem>\n                        <MenuItem value='error' >error</MenuItem>\n                    </TextField>\n                    <TextField\n                        select\n                        label='fontSize'\n                        value={this.state.fontSize}\n                        onChange={this.handleChange('fontSize')}\n                    >\n                        <MenuItem value='small'>small</MenuItem>\n                        <MenuItem value='default'>default</MenuItem>\n                        <MenuItem value='large'>large</MenuItem>\n\n                    </TextField>\n                    <TextField\n                        label='nativeColor'\n                        placeholder='#00B8F3'\n                        value={this.state.nativeColor}\n                        onChange={this.handleChange('nativeColor')}\n                    />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}\n\nclass TfsoLoadingDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\n    state:TfsoLogoDemoState = {\n        color: 'primary',\n        fontSize: 'large',\n        nativeColor: ''\n    }\n\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/TfsoLoading.tsx'>Tfso Loading</DemoTitle>\n                <DemoHelp>Tfso logo loading icon</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='once' type='boolean' default='false' description='If true, the icon will animate once'/>\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\n                </DemoProps>\n                <DemoContent>\n                    <TfsoLoading\n                        color={this.state.color}\n                        fontSize={this.state.fontSize}\n                        nativeColor={this.state.nativeColor}\n                    />\n                    <TextField\n                        select\n                        label='color'\n                        value={this.state.color}\n                        onChange={this.handleChange('color')}\n                    >\n                        <MenuItem value='inherit' >inherit</MenuItem>\n                        <MenuItem value='primary' >primary</MenuItem>\n                        <MenuItem value='secondary' >secondary</MenuItem>\n                        <MenuItem value='default' >default</MenuItem>\n                        <MenuItem value='action' >action</MenuItem>\n                        <MenuItem value='disabled' >disabled</MenuItem>\n                        <MenuItem value='error' >error</MenuItem>\n                    </TextField>\n                    <TextField\n                        select\n                        label='fontSize'\n                        value={this.state.fontSize}\n                        onChange={this.handleChange('fontSize')}\n                    >\n                        <MenuItem value='small'>small</MenuItem>\n                        <MenuItem value='default'>default</MenuItem>\n                        <MenuItem value='large'>large</MenuItem>\n                    </TextField>\n                    <TextField\n                        label='nativeColor'\n                        placeholder='#00B8F3'\n                        value={this.state.nativeColor}\n                        onChange={this.handleChange('nativeColor')}\n                    />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import {createHashHistory} from 'history'\n\nconst history = createHashHistory({\n    basename: '',\n    hashType: 'slash',\n})\nexport default history","import React from 'react'\n\nimport history from '../history'\n\nimport MuiLink, {LinkProps as MuiLinkProps} from '@material-ui/core/Link'\nimport styled from 'styled-components/macro'\n\nexport type LinkProps = {\n    to?: string\n    children: React.ReactNode\n} & MuiLinkProps\n\nexport default class Link extends React.PureComponent<LinkProps>{\n    onClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n        this.props.onClick && this.props.onClick(event)\n\n        if(event.defaultPrevented || !this.props.to){\n            return\n        }\n        event.preventDefault()\n        history.push(this.props.to.toLowerCase())\n    }\n\n    render(){\n        const {to, href, underline, ...other} = this.props\n        return <MuiLink\n            {...other}\n            href={to && to.toLowerCase() || href}\n            underline={underline || 'none'}\n            rel={this.props.target === '_blank' ? 'noreferrer' : undefined}\n            onClick={this.onClick}\n        />\n    }\n}\n\nconst AnchorLink = styled(Link)`&&{\n    opacity: 0.2;\n    :hover{\n        opacity: 1;\n    }\n}`\n\nconst getPage = () => window.location.hash.split('/')[1]\nexport const Anchor = (props: {id: string}) => {\n    const id = `/${getPage()}/${props.id.toLowerCase()}`\n    return (\n        <AnchorLink id={id} to={id}>#</AnchorLink>\n    )\n}","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport Typography, {TypographyProps} from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport {Code} from '../components/code'\nimport Link, {Anchor} from '../components/Link'\n\n// https://www.w3schools.com/charsets/ref_emoji.asp\nconst emojis = {\n    middleFinger: <>&#128405;</>,\n    indexFinger: <>&#128070;</>,\n    flex: <>&#128170;</>,\n    brokenHeart: <>&#128148;</>,\n    perfect: <>&#128076;</>,\n    thumbsUp: <>&#128077;</>,\n    thumbsDown: <>&#128078;</>,\n    clap: <>&#128079;</>,\n    heart: <>&#128152;</>,\n    fire: <>&#128293;</>,\n    bulb: <>&#128161;</>,\n    crap: <>&#128169;</>,\n    thinking: <>&#129300;</>,\n    rocket: <>&#128640;</>\n}\n\nconst Section = styled.div`&&{\n    margin-top: ${({theme}) => theme.mui.spacing.unit * 4}px;\n    margin-bottom: ${({theme}) => theme.mui.spacing.unit * 2}px;\n}`\n\nconst SubHeading = (props: TypographyProps) => <Typography variant='h4' paragraph {...props} />\nconst Paragraph = (props: TypographyProps) => <Typography variant='body1' paragraph {...props} component='div'/>\nconst Tip = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\n    <Card elevation={0}>\n        <CardContent>\n            <Typography variant='h6'>Why?</Typography>\n            <Typography variant='body1' component='div'>{props.children}</Typography>\n        </CardContent>\n    </Card>\n    <br />\n</>)\n\nconst Guideline = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\n    <Card elevation={0}>\n        <CardContent>\n            <Typography variant='body1' component='div'>{props.children}</Typography>\n        </CardContent>\n    </Card>\n</>)\n\nexport default class Guidelines extends React.PureComponent{\n    render = () => (<>\n        {this.renderHeading()}\n        {this.renderGuidelines()}\n        {this.renderTips()}\n        {this.renderContributing()}\n    </>)\n\n    renderHeading = () => (\n        <>\n            <Typography variant='h2' paragraph>\n                Guidelines\n            </Typography>\n            <Typography variant='subtitle1' paragraph>\n                <b>{'{WIP} '}</b>Some general guidelines for developing React applications in TFSO\n            </Typography>\n        </>\n    )\n\n    renderGuidelines = () => (\n        <Section>\n            <SubHeading>General <Anchor id={'general'}/></SubHeading>\n            <Guideline title='Material Design'>\n                We strive to follow <Link underline='hover' href='https://material.io/design/' target='_blank'>Google's Material Design</Link> principles. <br />\n                Use components and icons from the <Link underline='hover' href='https://material-ui.com/' target='_blank'>MaterialUi package</Link><br />\n                This package also provides a theme to be used with <code>material-ui</code>, <Link underline='hover' to='/theme'>get started using it here</Link>\n            </Guideline>\n        </Section>\n    )\n\n    renderTips = () => (\n        <Section>\n            <SubHeading>\n                {emojis.indexFinger} Do's &amp; Don'ts {emojis.middleFinger} <Anchor id={'dodont'} />\n            </SubHeading>\n            <Tip title={<>Specific imports</>}>\n                Reducing bundle size!<br />\n                <b>Bad:</b>\n                <Code language='js'>\n                    {\n                        `import { Button } from '@material-ui/core' // All of material-ui/core will be included in the bundle!\nimport { Alert } from 'react-tfso-components' // All of react-tfso-components will be included in the bundle!`\n                    }\n                </Code>\n                <b>Good:</b>\n                <Code language='js'>\n                    {\n                        `import Button from '@material-ui/core/Button'\nimport Alert from 'react-tfso-components/dist/Alert'`\n                    }\n                </Code>\n            </Tip>\n\n            <Tip title={<>{/* emojis.thumbsUp */}Extend from <code>React.PureComponent</code> instead of <code>React.Component</code></>}>\n                Your components should never mutate the state directly or have mutable properties.<br/>\n                Hence they are pure, and should extend React.PureComponent, which is more performant.\n            </Tip>\n            <Tip title={<>{/* emojis.thumbsDown */}Don't use <code>componentWillReceiveProps</code></>}>\n                It's deprecated and going away in React 17 {emojis.brokenHeart}<br />\n                More information <Link underline='hover' href='https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops' target='_blank'>here</Link>\n            </Tip>\n            <Tip title={<>{/* emojis.thumbsDown */}Avoid copying props to state</>}>\n                ...unless you absolutely need to, there are legit reasons, however there is most likely a better solution. <br />\n                Perhaps you should invoke a callback provided by props and let the parent component handle something?\n            </Tip>\n        </Section>\n    )\n\n    renderContributing = () => (<>\n        <SubHeading>\n            Contributing to <code>react-tfso-components</code> {emojis.rocket} <Anchor id='contributing' />\n        </SubHeading>\n        <Paragraph>\n            Components in this package should:\n            <ul>\n                <li>Be written in typescript or provide type declarations (d.ts)</li>\n                <li>Be composible</li>\n                <li>Not be specific to a domain/usage (they should be as generic as possible)</li>\n                <li>Validate props using `<code>prop-types`</code></li>\n                <li>Be Pure (function component or extending <code>React.PureComponent</code>)</li>\n                <li>Have descriptive and easy to understand Props:\n                    <ul>\n                        <li>Use commonly known verbs/names</li>\n                        <li>Function props should begin with 'on', (onFocus, onChange etc.)</li>\n                        <li>Boolean props should <i>not</i> begin with 'is', (open instead of isOpen)</li>\n                        <li>Boolean props should be optional, (eg. <code>open?: boolean</code>), <code>undefined</code> should be evaluated as <code>false</code></li>\n                        <li><code>children</code> should always be explicitly typed (eg: <code>children: string</code>)</li>\n                        <li><code>children</code> should be defined as\n                            <ul>\n                                <li><code>React.ReactCild</code> for single child<br /></li>\n                                <li><code>React.ReactNode</code> for multiple children</li>\n                                <li>primitive type (<code>undefined</code>, <code>string</code>, <code>number</code> etc.)</li>\n                            </ul>\n                        </li>\n                    </ul>\n                </li>\n                <li>Have a demo with documentation so that developers can easily find and use your component</li>\n            </ul>\n        </Paragraph>\n    </>)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport {styledTheme} from '../../lib/theme/index'\n\nconst bgColor = (color: '') => {\n    const colors = styledTheme['tfso']['colors']\n    return colors[color]\n}\n\nexport type ThemeColorProps = {\n    color: React.ReactNode\n}\n\nconst Box = styled.div`\n    background-color: ${({color, theme}) => theme.tfso.colors[color]};\n    width: 230px;\n    height: 230px;\n    text-align: center;\n`\n\nconst Txt = styled.div`\n  font-size: 2em;\n  line-height: 2em;\n  color: ${({dark, theme}) => dark ? '#000' : theme.mui.palette.secondary.contrastText}\n`\n\nconst ThemeColor = (props: ThemeColorProps) => {\n    const {color} = props\n    return (\n        <Box color={color}>\n            theme.tfso.colors.{color}<br/><br/>\n            <Txt>{bgColor(color)}</Txt>\n            <Txt dark>{bgColor(color)}</Txt>\n        </Box>\n    )\n}\n\nThemeColor.propTypes = {\n    color: PropTypes.node.isRequired\n}\n\nexport default ThemeColor","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport ThemeColor from '../components/ThemeColor'\nimport {styledTheme} from '../../lib/theme/index'\n\nconst ThemeColors = styled.div`\n  clear: both;\n  > div{\n    float: left;\n      :hover{\n        width: 460px;\n        height: 230px;\n      }\n  }\n`\n\nexport default class Theme extends React.PureComponent{\n    render(){\n        return (\n            <>\n                <Typography variant='h2'>\n                    Theme &amp; Styling\n                </Typography>\n                <Typography variant='subtitle1'>\n                    There is more TODO\n                </Typography>\n                <ThemeColors>\n                    {Object.keys(styledTheme['tfso']['colors']).map(color => (\n                        <ThemeColor key={color} color={color}/>\n                    ))}\n                </ThemeColors>\n            </>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport Trending, {TrendingProps} from '../../lib/Trending'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\ntype TrendingDemoState = {\n    variant: TrendingProps['variant']\n}\n\nexport default class TrendingDemo extends React.PureComponent<{}, TrendingDemoState>{\n    state: TrendingDemoState = {\n        variant: 'up'\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='TrendingDemo.tsx' srcPath='Trending.tsx' >Trending</DemoTitle>\n                <DemoHelp>\n                    A colored icon indicating a trending direction. <br/>\n                    Tip: You can use the <code>color</code> or <code>nativeColor</code> property to override the color of the icon.\n                </DemoHelp>\n                <DemoProps>\n                    <DemoProp name='variant' type='up | down | flat' default='' description=''></DemoProp>\n                    <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp>\n                </DemoProps>\n                <DemoContent>\n                    <Trending variant={this.state.variant} fontSize='large' />\n                    <TextField\n                        select\n                        value={this.state.variant}\n                        onChange={e => this.setState({variant: e.target.value as any})}\n                        label='variant'\n                    >\n                        <MenuItem value='up'>up</MenuItem>\n                        <MenuItem value='flat'>flat</MenuItem>\n                        <MenuItem value='down'>down</MenuItem>\n                    </TextField>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport BigNumber, {BigNumberProps} from '../../lib/BigNumber'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\ntype BigNumberState = {\n    color: BigNumberProps['color']\n    size: BigNumberProps['size']\n}\n\nexport default class BigNumberDemo extends React.PureComponent<{}, BigNumberState>{\n    state: BigNumberState = {\n        color: 'dark',\n        size: 'large',\n    }\n\n    handleChange = (key: keyof BigNumberState) => (event: React.ChangeEvent<HTMLSelectElement>) => this.setState({[key]: event.target.value} as any)\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='BigNumberDemo.tsx' srcPath='BigNumber.tsx' >BigNumber</DemoTitle>\n                <DemoHelp>\n                    A Big Number is a number stands out\n                </DemoHelp>\n                <DemoProps>\n                    <DemoProp name='color' type='light | dark' default='light' description=''></DemoProp>\n                    <DemoProp name='size' type='medium | large' default='larger' description=''></DemoProp>\n                    <DemoProp name='children' type='string | number' default='' description=''></DemoProp>\n                    {/* <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp> */}\n                </DemoProps>\n                <DemoContent>\n                    <Grid container alignItems='center' spacing={32}>\n                        <Grid item>\n                            <div style={{backgroundColor: this.state.color === 'light' ? '#11beff' : 'inherit', padding: 10}}>\n                                <BigNumber\n                                    size={this.state.size}\n                                    color={this.state.color}\n                                >$123</BigNumber>\n                            </div>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant='caption'>NB: The BigNumber component does not set the background color!<br /> The background color used here is just for illustrative purposes.</Typography>\n                        </Grid>\n                    </Grid>\n                    <TextField\n                        select\n                        label='size'\n                        value={this.state.size}\n                        onChange={this.handleChange('size')}\n                    >\n                        <MenuItem value='medium'>medium</MenuItem>\n                        <MenuItem value='large'>large</MenuItem>\n                    </TextField>\n                    <TextField\n                        select\n                        label='color'\n                        value={this.state.color}\n                        onChange={this.handleChange('color')}\n                    >\n                        <MenuItem value='light'>light</MenuItem>\n                        <MenuItem value='dark'>dark</MenuItem>\n                    </TextField>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle, DemoCode} from '../components/demo'\n\nimport Alert, {AlertProps} from '../../lib/Alert'\n\nconst variantMessage: {[P in AlertProps['variant']]: string } = {\n    success: 'GRATE SUCCÉSS!',\n    info: 'Informational information',\n    warning: 'You better not do that, Brian',\n    error: 'That failed horribly...',\n}\n\nexport default class AlertDemo extends React.PureComponent<{}, {variant: AlertProps['variant'], message: string, open: boolean}>{\n    state = {\n        variant: 'success' as AlertProps['variant'],\n        open: false,\n        message: 'GRATE SUCCÉSS!'\n    }\n\n    onClose = () => this.setState({open: false})\n\n    onPress = (variant: AlertProps['variant']) => {\n        const message = variantMessage[variant]\n        return () => this.setState({open: true, message, variant})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='AlertDemo.tsx' srcPath='Alert.tsx' >Alert</DemoTitle>\n                <DemoHelp>A dismissable alert-box that can be used in a SnackBar or as a standard component in a page</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='message' type='string | ReactNode' description='The message string or Element to be displayed' />\n                    <DemoProp name='variant' type='success | error | info | warning' description='The variant of the alert. Icon and background-color is selected based on the variant' />\n                    <DemoProp name='onClose' type='() => void' description='Callback function invoked when the alert is dismissed' />\n                </DemoProps>\n                <DemoCode language='tsx'>\n                    {`import React from 'react'\nimport Alert from 'react-tfso-components/dist/Alert'\nimport Snacbar from '@material-ui/core/Snackbar'\nimport Button from '@material-ui/core/Button'\n\nclass Alerter extends React.PureComponent<{}, {open: boolean}> {\n    state = {\n        open: false\n    }\n\n    onClose = () => this.setState({open: false})\n\n    render(){\n        return(\n            <React.Fragment>\n                <Snackbar\n                    open={this.state.open}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    autoHideDuration={2000}\n                    onClose={this.onClose}\n                >\n                    <Alert\n                        onClose={this.onClose}\n                        message='An unexpected error occured'\n                        variant='error'\n                    />\n                </Snackbar>\n                <Button variant='outlined' onClick={() => this.setState({open: true})}>Show Alert</Button>\n            </React.Fragment>\n        )\n    }\n}`\n                    }\n                </DemoCode>\n                <DemoContent>\n                    <Snackbar\n                        open={this.state.open}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        autoHideDuration={2000}\n                        onClose={this.onClose}\n                    >\n                        <Alert\n                            onClose={this.onClose}\n                            message={this.state.message}\n                            variant={this.state.variant}\n                        />\n                    </Snackbar>\n                    <Button variant='outlined' onClick={this.onPress('success')}>Open Success</Button>\n                    <Button variant='outlined' onClick={this.onPress('info')}>Open Info</Button>\n                    <Button variant='outlined' onClick={this.onPress('warning')}>Open Warning</Button>\n                    <Button variant='outlined' onClick={this.onPress('error')}>Open Error</Button>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport SearchField from '../../lib/SearchField'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\n\nexport default class SearchFieldDemo extends React.PureComponent{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='SearchFieldDemo.tsx' srcPath='SearchField.tsx' >SearchField</DemoTitle>\n                <DemoHelp>A TextField that gets full width on typing. It also has a search icon adornnment.</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='placeholder' type='string (optional)' default='Search' description=''></DemoProp>\n                    <DemoProp name='margin' type='none | dense | normal (optional)' default='dense' description=''></DemoProp>\n                    <DemoProp name='InputProps' type=\"TextFieldProps['InputProps'] (optional)\" default='{ startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>}' description=''></DemoProp>\n                    <DemoProp name='...' type='TextFieldProps' default='' description='Any other prop is spread to the TextField'></DemoProp>\n                </DemoProps>\n                <DemoContent>\n                    <SearchField />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextFieldEditor from '../../lib/TextFieldEditor'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Typography from '@material-ui/core/Typography'\n\nexport default class TextFieldEditorDemo extends React.PureComponent{\n    state = {\n        value: 'demo',\n        dirty: false,\n        enableDirtyCheck: false\n    }\n\n    onReset = () => {\n        this.setState({value: ''})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='TextFieldEditorDemo.tsx' srcPath='TextFieldEditor.tsx' >TextFieldEditor</DemoTitle>\n                <DemoHelp>A wrapper around material-ui's TextField with some added features</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='value' type='string' default='' description='' />\n                    <DemoProp name='onChange' type='(value: string) => void' default='' description='Invoked when the user has finished editing the value (editor looses focus by clicking or tabbing away, pressing the Enter or ctrl+s' />\n                    <DemoProp name='dirty' type='boolean (optional)' default='false' description='If true, it is rendered in italic after onChange' />\n                    <DemoProp name='enableDirtyCheck' type='boolean (optional)' default='false' description='If true, the component will do internal dirty checking when editing' />\n                    <DemoProp name='...' type='TextFieldProps' description='Any other prop is spread to the TextField' />\n                </DemoProps>\n                <ExpansionPanel>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} >\n                        <Typography>Keybindings</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <code>\n                                ctrl + s:&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is NOT handled!)<br/>\n                                ctrl + z:&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\n                                Enter:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is handled)<br/>\n                                Escape:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\n                        </code>\n                        <br/>\n                        <i>When the event is handled `preventDefault()` and `stopPropagation()` is invoked on the `React.KeyboardEvent`</i><br/>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <DemoContent>\n                    <TextFieldEditor\n                        value={this.state.value}\n                        enableDirtyCheck={this.state.enableDirtyCheck}\n                        dirty={this.state.dirty}\n                        onChange={(value: string) => this.setState({value})}\n                    />\n                    <Button variant='outlined' onClick={() => this.setState({value: 'demo'})}>Reset</Button>\n                    <Button variant='outlined' onClick={() => this.setState({dirty: !this.state.dirty})}>Dirty: {this.state.dirty.toString()}</Button>\n                    <Button variant='outlined' onClick={() => this.setState({enableDirtyCheck: !this.state.enableDirtyCheck})}>Enable dirty check: {this.state.enableDirtyCheck.toString()}</Button>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport ConfirmationDialog from '../../lib/ConfirmationDialog'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\n\nexport default class ConfirmationDialogDemo extends React.PureComponent{\n    state = {\n        openConfirmationDialog: false\n    }\n\n    onClickOpenConfirmationDialog = () => {\n        this.setState({openConfirmationDialog: true})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='ConfirmationDialogDemo.tsx' srcPath='ConfirmationDialog.tsx' >ConfirmationDialog</DemoTitle>\n                <DemoHelp>A Dialog containing Ok and Cancel buttons</DemoHelp>\n                <DemoProps>\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show dialog\" />\n                    <DemoProp name=\"title\" type=\"string (optional)\" default=\"\" description=\"Dialog title\" />\n                    <DemoProp name=\"message\" type=\"string\" default=\"\" description=\"Dialog content\" />\n                    <DemoProp name=\"okButtonText\" type=\"string\" default=\"\" description=\"\" />\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"\" />\n                    <DemoProp name=\"onOk\" type=\"function\" default=\"\" description=\"\" />\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"\" />\n                </DemoProps>\n                <DemoContent>\n                    <Button variant='outlined' onClick={this.onClickOpenConfirmationDialog}>Open ConfirmationDialog</Button>\n                    <ConfirmationDialog\n                        open={this.state.openConfirmationDialog}\n                        okButtonText='Ok'\n                        cancelButtonText='Cancel'\n                        onOk={() => this.setState({openConfirmationDialog: false})}\n                        onCancel={() => this.setState({openConfirmationDialog: false})}\n                        message='Confirmation dialog message'\n                        title='Confirmation dialog title'\n                    />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport ListPicker from '../../lib/ListPicker'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport styled from 'styled-components'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nconst DemoDisplay = styled.div`\n  flex: 1;\n`\n\nexport default class ListPickerDemo extends React.PureComponent{\n    _anchorEl: React.RefObject<HTMLButtonElement> = React.createRef()\n    state = {\n        selectedOption: undefined,\n        selected: 'none',\n        buttonType: 'default',\n        open: false,\n        color: 'default',\n        options: [{\n            value: '23324',\n            label: 'Vrådal & Rypefjord AS'\n        }, {\n            value: '353453',\n            label: '24SevenOffice Norge'\n        }, {\n            value: '234234324',\n            label: '24sevenOffice Labs'\n        }, {\n            value: '534536553',\n            label: '24SevenOffice Denmark'\n        }, {\n            value: '23424534324',\n            label: '24sevenOffice Finland'\n        }, {\n            value: '53453233',\n            label: '24SevenOffice Sweden'\n        }]\n    }\n\n    onClickOpenConfirmationDialog = () => {\n        this.setState({\n            open: true\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            selected: event.target.value\n        })\n    }\n\n    handleColor = (event) => {\n        this.setState({\n            color: event.target.value\n        })\n    }\n\n    onSwitch =(value) => {\n        this.setState({selectedOption: value})\n        this.onCancel()\n    }\n\n    onCancel =() => {\n        this.setState({open: false})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='ListPickerDemo.tsx' srcPath='ListPicker.tsx' >ListPicker</DemoTitle>\n                <DemoHelp>Dialog(mobile) or Popover(desktop) showing list of options. Made with switching client's in mind</DemoHelp>\n                <DemoProps>\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show list of options\" />\n                    <DemoProp name=\"options\" type=\"arrayOf<{ value: string, label: string }>\" description=\"Array of items to display\"/>\n                    <DemoProp name=\"disabled\" type=\"string\" default=\"\" description=\"Disables current item in list\" />\n                    <DemoProp name=\"selected\" type=\"string\" default=\"\" description=\"Selects current item in list\" />\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"Text for cancel button\" />\n                    <DemoProp name=\"onSwitch\" type=\"function\" default=\"\" description=\"Returns value for selected option\" />\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"Fires when list closes\" />\n                    <DemoProp name=\"avatarColor\" type=\"string\" default=\"\" description=\"Valid values are types of #f7f7f7 or green\" />\n                </DemoProps>\n                <DemoContent>\n                    <ListPicker\n                        anchorEl={this._anchorEl.current}\n                        open={this.state.open}\n                        cancelButtonText='Cancel'\n                        searchLabel='Search list'\n                        onCancel={this.onCancel}\n                        onSelect={this.onSwitch}\n                        options={this.state.options}\n                        disabled='234234324'\n                        selected={this.state.selected}\n                        avatarColor={this.state.color == 'default' ? '' : this.state.color}\n                    />\n                    <Button variant='outlined' buttonRef={this._anchorEl} onClick={this.onClickOpenConfirmationDialog}>Open list</Button>\n                    <InputLabel shrink htmlFor=\"age-label-placeholder\">\n                        AvatarColor\n                    </InputLabel>\n                    <Select\n                        onChange={this.handleColor}\n                        value={this.state.color}\n                    >\n                        <MenuItem key='default' value='default'>Default</MenuItem>\n                        <MenuItem key='green' value='green' >Green</MenuItem>\n                        <MenuItem key='purple' value='purple' >Purple</MenuItem>\n                        <MenuItem key='orange' value='orange' >Orange</MenuItem>\n                    </Select>\n                    <InputLabel shrink htmlFor=\"age-label-placeholder\">\n                        Set selected\n                    </InputLabel>\n                    <Select\n                        onChange={this.handleChange}\n                        value={this.state.selected}\n                    >\n                        <MenuItem value='none'>None</MenuItem>\n                        { this.state.options\n                            .map((option, i) => (\n                                <MenuItem\n                                    key={i}\n                                    value={option.value}\n                                >\n                                    {option.label}\n                                </MenuItem>\n                            ))\n                        }\n                    </Select>\n                    {this.state && this.state.selectedOption\n                        ? <DemoDisplay>You have selected: {this.state.selectedOption} {\n                            this.state.options\n                                .map((option) => {\n                                    if(option.value == this.state.selectedOption){\n                                        return '(' + option.label + ')'\n                                    }\n                                })}</DemoDisplay>\n                        : ''\n                    }\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\nimport Emoji from '../../lib/Emoji'\n\nimport Typography from '@material-ui/core/Typography'\n\ntype State = {\n    // variant\n}\n\nexport default class EmojiDemo extends React.PureComponent<{}, State>{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle srcPath='Emoji.tsx' demoPath='EmojiDemo.tsx'>Emoji</DemoTitle>\n                <DemoHelp>A simple html Emoji component</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='variant' type='string' default='' description=''/>\n                </DemoProps>\n                <DemoContent>\n                    <Typography variant=\"h2\">\n                        <Emoji variant='heart' />\n                        <Emoji variant='thumbsUp' />\n                        <Emoji variant='fire' />\n                    </Typography>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\nimport isEqual from 'lodash/isEqual'\n\nimport Paper, {PaperProps} from '@material-ui/core/Paper'\n\nimport RGL, {Layout, WidthProvider} from 'react-grid-layout/'\nimport 'react-grid-layout/css/styles.css'\nimport 'react-resizable/css/styles.css'\n\nconst ReactGridLayout = WidthProvider(RGL)\n\nconst BackgroundPaper = ({backgroundColor, ...props}: { backgroundColor: string } & PaperProps) => (<Paper {...props} />)\nconst GridItemContainer = styled(BackgroundPaper)`&&{\n    background-color: ${({backgroundColor}) => backgroundColor};\n    width: 100%;\n    height: 100%;\n}`\n\ntype GridItemWidth = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'\ntype GridItemHeight = number\nconst gridItemWidths = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 'onequarter', 'onethird', 'half', 'twothirds', 'threequarters', 'full']\nconst gridItemWidthNumberMap: {[P in GridItemWidth]: number} = {1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 11: 11, 12: 12, 'onequarter': 3, 'onethird': 4, 'half': 6, 'twothirds': 8, 'threequarters': 9, 'full': 12}\nconst numberGridItemWithMap: {[n: number]: GridItemWidth} = {1: 1, 2: 2, 3: 'onequarter', 4: 'onethird', 5: 5, 6: 'half', 7: 7, 8: 'twothirds', 9: 'threequarters', 10: 10, 11: 11, 12: 'full'}\n\nconst toGridItemWidth = (w?: number): GridItemWidth | undefined => w === undefined ? undefined : numberGridItemWithMap[Math.min(6, Math.trunc(w))]\nconst toGridItemHeight = (w?: number): GridItemHeight | undefined => w === undefined ? undefined : Math.min(12, Math.trunc(w)) as GridItemHeight\n\nconst gridItemPositionToLayout = (position: GridItemPosition): Layout => ({\n    i: position.id,\n    x: position.col,\n    y: position.row,\n    h: position.height,\n    w: gridItemWidthNumberMap[position.width],\n    minH: position.minHeight,\n    minW: position.minWidth && gridItemWidthNumberMap[position.minWidth] || undefined,\n    maxH: position.maxHeight,\n    maxW: position.maxWidth && gridItemWidthNumberMap[position.maxWidth] || undefined,\n    isDraggable: position.draggable !== undefined ? position.draggable : false,\n    isResizable: position.resizable !== undefined ? position.resizable : false,\n    static: position.static,\n})\n\nconst layoutToGridItemPosition = (layout: Layout): GridItemPosition => ({\n    id: layout.i!,\n    col: layout.x,\n    row: layout.y,\n    width: toGridItemWidth(layout.w)!,\n    height: toGridItemHeight(layout.h)!,\n    minHeight: toGridItemHeight(layout.minH),\n    minWidth: toGridItemWidth(layout.minW),\n    maxHeight: toGridItemHeight(layout.maxH),\n    maxWidth: toGridItemWidth(layout.maxW),\n    draggable: layout.isDraggable,\n    resizable: layout.isResizable,\n    static: layout.static,\n})\n\nexport type GridItem = {\n    id: string\n    backgroundColor?: string\n    children: React.ReactNode\n}\n\nexport type GridItemPosition = {\n    id: string\n    col: number\n    row: number\n    width: GridItemWidth\n    height: GridItemHeight\n    minWidth?: GridItemWidth\n    minHeight?: GridItemHeight\n    maxWidth?: GridItemWidth\n    maxHeight?: GridItemHeight\n    draggable?: boolean\n    resizable?: boolean\n    static?: boolean\n}\n\nexport type GridLayoutProps = {\n    items: Array<GridItem>\n    layout: Array<GridItemPosition>\n    /**\n     * @default 16\n     */\n    margin?: number\n    onLayoutChange?: (layout: Array<GridItemPosition>) => void\n    children?: undefined\n}\n\nexport default class GridLayout extends React.PureComponent<GridLayoutProps>{\n    static defaultProps: Partial<GridLayoutProps> = {\n        margin: 16,\n    }\n\n    static propTypes = {\n        margin: PropTypes.number,\n        onLayoutChange: PropTypes.func,\n        items: PropTypes.arrayOf(PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            backgroundColor: PropTypes.string,\n            children: PropTypes.node.isRequired\n        })).isRequired,\n        layout: PropTypes.arrayOf(PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            col: PropTypes.number.isRequired,\n            row: PropTypes.number.isRequired,\n            width: PropTypes.oneOf(gridItemWidths).isRequired,\n            height: PropTypes.number.isRequired,\n            minWidth: PropTypes.oneOf(gridItemWidths),\n            minHeight: PropTypes.number,\n            maxWidth: PropTypes.oneOf(gridItemWidths),\n            maxHeight: PropTypes.number,\n            draggable: PropTypes.bool,\n            resizable: PropTypes.bool,\n            static: PropTypes.bool,\n        })).isRequired\n    }\n\n    _layoutWasChangedWorkaround = false\n\n    componentDidMount(){\n        this.validateItemLayout()\n    }\n\n    onLayoutChange = (layouts: Array<Layout>) => {\n        const {onLayoutChange} = this.props\n        onLayoutChange &&\n            this._layoutWasChangedWorkaround &&\n            onLayoutChange(layouts.map(layoutToGridItemPosition))\n        this._layoutWasChangedWorkaround = false\n    }\n\n    validateItemLayout = () => {\n        if(process.env.NODE_ENV === 'production') return\n\n        const items = new Set(this.props.items.map(item => item.id))\n        const layouts = new Set(this.props.layout.map(layout => layout.id))\n\n        items.forEach(item => {\n            if(!layouts.has(item)){\n                console.error(`Error: Item with id: ${item} is missing layout`)\n            }\n        })\n\n        layouts.forEach(layout => {\n            if(!items.has(layout)){\n                console.warn(`Warning: Layout with id: ${layout} does not correspond to any item`)\n            }\n        })\n    }\n\n    onDragResizeStop = (layout: Layout[], oldItem: Layout, newItem: Layout) => {\n        this._layoutWasChangedWorkaround = !isEqual(oldItem, newItem)\n    }\n\n    render(){\n        const {items, layout, margin = 16} = this.props\n        const rglLayout = Object.values(layout).map(gridItemPositionToLayout)\n\n        return (\n            <ReactGridLayout\n                className='layout'\n                cols={12}\n                rowHeight={90}\n                layout={rglLayout}\n                compactType={'vertical'}\n                margin={[margin, margin]}\n                containerPadding={[0, 0]}\n                autoSize\n                measureBeforeMount\n                // width= // TODO: set this one such that width is fixed, should be someting large, but not too large... hmm.\n                useCSSTransforms\n                preventCollision={false}\n                onLayoutChange={this.onLayoutChange}\n                onResizeStop={this.onDragResizeStop}\n                onDragStop={this.onDragResizeStop}\n            >\n                {items.map(({id, backgroundColor, children}) => (\n                    <GridItemContainer\n                        key={id}\n                        backgroundColor={backgroundColor || 'inherit'}\n                    >\n                        {children}\n                    </GridItemContainer>))\n                }\n            </ReactGridLayout>\n        )\n    }\n}","import React from 'react'\nimport styled from 'styled-components'\n\nimport {Demo, DemoContent, DemoTitle, DemoHelp, DemoProps, DemoProp} from '../components/demo'\nimport GridLayout, {GridLayoutProps, GridItemPosition} from '../../lib/GridLayout'\nimport Link from '../components/Link'\nimport TextField from '@material-ui/core/TextField'\nimport Switch from '@material-ui/core/Switch'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Button from '@material-ui/core/Button'\n\nconst ItemWrapper = ({backgroundColor, ...props}: React.HTMLAttributes<HTMLDivElement> & {backgroundColor: string}) => <div {...props} />\nconst Item = styled(ItemWrapper)`&&{\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: ${({theme, backgroundColor}) => theme.mui.palette.getContrastText(backgroundColor)};\n    font-size: ${({theme}) => theme.mui.typography.h5.fontSize};\n    font-weight: ${({theme}) => theme.mui.typography.h5.fontWeight};\n    font-family: ${({theme}) => theme.mui.typography.h5.fontFamily};\n}`\n\ntype State = {\n    items: GridLayoutProps['items']\n    layout: GridLayoutProps['layout']\n    addItemId: number\n    addResizable: boolean\n    addDraggable: boolean\n    addStatic: boolean\n    addColor: string\n    addWidth: number\n    addHeight: number\n    addCol: number,\n    addRow: number,\n}\n\nexport default class GridLayoutDemo extends React.PureComponent<{}, State>{\n    state: State = {\n        items: [\n            {\n                id: 'a',\n                backgroundColor: '#f0f',\n                children: <Item backgroundColor={'#f0f'}>a</Item>\n            },\n            {\n                id: 'b',\n                backgroundColor: '#0ff',\n                children: <Item backgroundColor={'#0ff'}>b (Static object)</Item>\n            },\n            {\n                id: 'c',\n                backgroundColor: '#ff0',\n                children: <Item backgroundColor={'#ff0'}>\n                    c (Fixed size)\n                    <Button onMouseDown={(e) => e.stopPropagation()} onClick={(e) => console.log('buttonclick')}>Button</Button>\n                </Item>\n            },\n            {\n                id: 'd',\n                backgroundColor: '#f8f',\n                children: <Item backgroundColor={'#f8f'}>d</Item>\n            },\n        ],\n        layout: [\n            {\n                id: 'a',\n                width: 'onequarter',\n                height: 1,\n                col: 0,\n                row: 0,\n                draggable: true,\n                resizable: true\n            },\n            {\n                id: 'b',\n                width: 'onequarter',\n                height: 1,\n                col: 3,\n                row: 0,\n                static: true\n            },\n            {\n                id: 'c',\n                width: 'onequarter',\n                height: 1,\n                col: 6,\n                row: 0,\n                draggable: true,\n            },\n            {\n                id: 'd',\n                width: 'full',\n                height: 2,\n                col: 0,\n                row: 1,\n                resizable: true,\n                draggable: true,\n            },\n        ],\n        addItemId: 1,\n        addColor: '#ccc',\n        addDraggable: true,\n        addResizable: true,\n        addStatic: false,\n        addHeight: 2,\n        addWidth: 6,\n        addCol: 0,\n        addRow: 2\n    }\n\n    onAddItem = () => {\n        const {\n            addItemId: id,\n            addColor: backgroundColor,\n            addDraggable: draggable,\n            addResizable: resizable,\n            addStatic,\n            addWidth: width,\n            addHeight: height,\n            addCol: col,\n            addRow: row,\n            items,\n            layout\n        } = this.state\n\n        const content = JSON.stringify({draggable, resizable, static: addStatic}, undefined, 2).replace(/\"([^(\")\"]+)\":/g, '$1:')\n        const item = {\n            id: id.toString(),\n            backgroundColor,\n            children: <Item backgroundColor={backgroundColor}>{`${id} (${content})`}</Item>\n        }\n\n        const itemLayout = {\n            id: id.toString(),\n            width: Number(width),\n            height: Number(height),\n            draggable,\n            resizable,\n            static: addStatic,\n            col,\n            row: col + width > 12 ? row + 1 : row\n        } as GridItemPosition\n\n        const addCol = col + width\n        this.setState({\n            items: [...items, item],\n            layout: [...layout, itemLayout],\n            addItemId: this.state.addItemId + 1,\n            addCol: addCol >= 12 ? 0 : addCol,\n            addRow: addCol === 0 ? row + height : col + width > 12 ? row + 1 : row\n        })\n    }\n\n    handleChange = (key: keyof State) => (event: React.ChangeEvent<HTMLInputElement>, checked?: boolean) => {\n        let value: string | number | boolean | undefined\n        switch(key){\n        case 'addStatic':\n        case 'addResizable':\n        case 'addDraggable':\n            value = !!checked\n            break\n        case 'addWidth':\n        case 'addHeight':\n            value = Number(event.target.value)\n            break\n        default:\n            value = event.target.value\n            break\n        }\n        this.setState({[key]: value} as any)\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle srcPath='GridLayout.tsx' demoPath='GridLayoutDemo.tsx'>GridLayout</DemoTitle>\n                <DemoHelp>A draggable and movable grid layout based on <Link href='https://github.com/STRML/react-grid-layout' target='_blank'>react-grid-layout</Link></DemoHelp>\n                <DemoProps title='GridLayoutProps' >\n                    <DemoProp name='margin' type='number' default='16' description='The margin between each item' />\n                    <DemoProp required name='onLayoutChange' type='(layout: GridItemPosition[]) => void' default='' description='' />\n                    <DemoProp required name='items' type='GridItem[]' default='' description='' />\n                    <DemoProp required name='layout' type='GridItemPosition[]' default='' description='' />\n                </DemoProps>\n                <DemoProps title='GridItem' >\n                    <DemoProp required name='id' type='string' default='' description='Id of the item. A corresponding GridItemPosition must be supplied to the layout' />\n                    <DemoProp name='backgroundColor' type='string' default='inherit' description='The backgroundcolor of the item' />\n                    <DemoProp required name='children' type='React.ReactNode' default='' description='' />\n                </DemoProps>\n                <DemoProps title='GridItemPosition' >\n                    <DemoProp required name='id' type='string' default='' description='Used to positition the GridItem with the same id' />\n                    <DemoProp required name='col' type='number' default='' description='Column in which the item is positioned' />\n                    <DemoProp required name='row' type='number' default='' description='Row in which the item is positioned' />\n                    <DemoProp required name='width' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\n                    <DemoProp required name='height' type='number' default='' description='Height in number of rows' />\n                    <DemoProp name='draggable' type='boolean' default='false' description='If true, the item can be repositioned by dragging' />\n                    <DemoProp name='resizable' type='boolean' default='false' description='If true, the item can be resized' />\n                    <DemoProp name='static' type='boolean' default='false' description='If true, the item is locked in place (draggable and resizable is overriden to false)' />\n                    <DemoProp name='minWidth' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\n                    <DemoProp name='minHeight' type='number' default='' description='Height in number of rows' />\n                    <DemoProp name='maxWidth' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\n                    <DemoProp name='maxHeight' type='number' default='' description='Height in number of rows' />\n                </DemoProps>\n                <DemoHelp>\n                    To prevent dragging when clicking and holding buttons within gridItems, you must stop the event propagation of the onMouseDown event on the button.<br />\n                    <code>{`onMouseDown={(e) => e.stopPropagation()}`}</code>\n                </DemoHelp>\n                <DemoContent>\n                    <GridLayout\n                        items={this.state.items}\n                        layout={this.state.layout}\n                    />\n                    <FormControlLabel label='static' control={<Switch checked={this.state.addStatic} onChange={this.handleChange('addStatic')}/>}/>\n                    <FormControlLabel label='resizable' control={<Switch checked={this.state.addResizable} onChange={this.handleChange('addResizable')}/>}/>\n                    <FormControlLabel label='draggable' control={<Switch checked={this.state.addDraggable} onChange={this.handleChange('addDraggable')}/>}/>\n                    <TextField label='width' value={this.state.addWidth} onChange={this.handleChange('addWidth')} type='number' inputProps={{max: 12, min: 1}} />\n                    <TextField label='height' value={this.state.addHeight} onChange={this.handleChange('addHeight')} type='number' inputProps={{max: 6, min: 1}} />\n                    <TextField label='backgroundColor' value={this.state.addColor} onChange={this.handleChange('addColor')} />\n                    <Button onClick={this.onAddItem} color='primary' variant='contained'>Add item</Button>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport {Hoverable} from '../../lib'\n\nexport default class HoverableDemo extends React.PureComponent{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='Utils.tsx' srcPath='Hoverable.tsx'>Hoverable</DemoTitle>\n                <DemoHelp>A HOC that passes hover true/false as a render prop</DemoHelp>\n                <DemoProps>\n                    <DemoProp name=\"children\" type=\"(hover: boolean, ref: RefObject) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\n                </DemoProps>\n                <DemoContent>\n                    <Hoverable>\n                        {(hover) => (\n                            <React.Fragment>\n                                {hover\n                                    ? <div key=\"1\" style={{backgroundColor: '#6699bb', padding: 15, color: '#FFF', cursor: 'pointer'}}>You're hovering me!</div>\n                                    : <div key=\"2\" style={{padding: 15, height: '100%'}}>Hover your mouse over me</div>\n                                }\n                            </React.Fragment>\n                        )}\n                    </Hoverable>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport {Delay} from '../../lib'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nexport default class DelayDemo extends React.PureComponent{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='Utils.tsx' srcPath='Delay.tsx'>Delay</DemoTitle>\n                <DemoHelp>Shows the component inside after a set delay. Can be used to only show loaders if exceptionally slow</DemoHelp>\n                <DemoProps>\n                    <DemoProp name=\"beforeShow\" type=\"React element or string (optional)\" default=\"\" description=\"What you want to show before the delay is finished\" />\n                    <DemoProp name=\"delayMs\" type=\"Number (optional)\" default=\"1000\" description=\"Delay time in ms\" />\n                    <DemoProp name=\"show\" type=\"Boolean (optional)\" default=\"false\" description=\"Force show content\" />\n                    <DemoProp name=\"children\" type=\"React element\" default=\"\" description=\"Content to show after delay\" />\n                </DemoProps>\n                <DemoContent>\n                    <Delay beforeShow=\"Waiting for delay...\">\n                        <CircularProgress />\n                    </Delay>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport {Wizard} from '../../lib'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Button from '@material-ui/core/Button'\n\nexport default class WizardDemo extends React.PureComponent{\n    render(){\n        const length = 3\n        return (\n            <Demo>\n                <DemoTitle demoPath='Utils.tsx' srcPath='Wizard.tsx'>Wizard</DemoTitle>\n                <DemoHelp>A HOC that passes an index and next/prev functions in a render prop. Can be used along with material ui stepper or any other wizard</DemoHelp>\n                <DemoProps>\n                    <DemoProp name=\"children\" type=\"(index: number, next: function, prev: function) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\n                    <DemoProp name=\"index\" type=\"number (optional)\" default=\"\" description=\"Force the current index to a certain value\" />\n                    <DemoProp name=\"length\" type=\"number (optional)\" default=\"\" description=\"The max length. The index will always be lower than this\" />\n                </DemoProps>\n                <DemoContent>\n                    <Wizard length={length + 1}>\n                        {(index, next, prev) => (\n                            <React.Fragment>\n                                <Stepper activeStep={index}>\n                                    <Step key=\"Step 1\">\n                                        <StepLabel>Step 1</StepLabel>\n                                    </Step>\n                                    <Step key=\"Step 2\">\n                                        <StepLabel>Step 2</StepLabel>\n                                    </Step>\n                                    <Step key=\"Step 3\">\n                                        <StepLabel>Step 3</StepLabel>\n                                    </Step>\n                                </Stepper>\n                                <div>\n                                    <Button onClick={prev} disabled={index <= 0}>Prev</Button>\n                                    <Button onClick={next} disabled={index >= length}>Next</Button>\n                                    {index >= length && 'All steps completed!'}\n                                </div>\n                            </React.Fragment>\n                        )}\n                    </Wizard>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoTitle} from '../components/demo'\nimport {ScreenSize} from '../../lib'\n\nexport default class ScreenSizeDemo extends React.PureComponent{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='ScreenSize.tsx' srcPath='ScreenSize.tsx'>ScreenSize</DemoTitle>\n                <DemoHelp>Gives you current screen size (mobile, tablet, desktop). Comes in hoc, render prop, and hook variants</DemoHelp>\n                <DemoContent>\n                    Drag screen to different sizes to test. Note that there is some overlap.\n                    <ScreenSize>\n                        {(screenSize) => {\n                            return (\n                                <>\n                                <div>Mobile: {screenSize.mobile.toString()}</div>\n                                <div>Tablet: {screenSize.tablet.toString()}</div>\n                                <div>Desktop: {screenSize.desktop.toString()}</div>\n                                </>\n                            )\n                        }}\n                    </ScreenSize>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\nimport ProfileCard from '../../lib/layout/ProfileCard'\n\nimport Button from '@material-ui/core/Button'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItem from '@material-ui/core/ListItem'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport HelpIcon from '@material-ui/icons/Help'\nimport List from '@material-ui/core/List'\nimport ScreenSize from '../../lib/ScreenSize'\n\ntype State = {\n    // variant\n}\n\nexport default class ProfileCardDemo extends React.PureComponent<{}, State>{\n    state = {\n        anchorEl: null,\n        identity: {\n            license: '2947b4ae-0d40-447b-886f-dcd3aa11648b;693081080913543;1198',\n            identity: {\n                id: '2947b4ae-0d40-447b-886f-dcd3aa11648b'\n            },\n            client: {\n                id: '693081080913543',\n                name: 'Vrådal & Shared Employees & Co'\n            },\n            user: {\n                id: '1198'\n            },\n            profile: {\n                id: '2947b4ae-0d40-447b-886f-dcd3aa11648b',\n                firstName: 'Sjef',\n                lastName: 'Sjefesenen',\n                identifier: 'sjef@kpdemo.no',\n                culture: 'nn-NO',\n                language: 'NO',\n                timeZone: 'Europe/Copenhagen',\n                country: 'ES',\n                created: '2008-08-04T09:04:36.913+00:00',\n                modified: '2019-03-12T00:53:56.946+00:00',\n                gender: 'Male',\n                birthDate: '2018-11-20',\n                location: 'Disneyland',\n                locationCoordinates: '33.8120918,-117.91897419999998',\n                visibility: 'Public',\n                thumb: {data: 'data:image/png;base64, '}\n            },\n            locale: {\n                country: 'NO',\n                culture: 'nn-NO',\n                language: 'NO',\n                timeZoneOffset: '01:00:00',\n                timeZone: 'Europe/Copenhagen'\n            }\n        }\n    }\n\n    handleClick = event => {\n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    }\n\n    onSignOut = () => {\n        console.log('sign out')\n    }\n\n    onSwitch = () => {\n        console.log('switch ')\n    }\n\n    onClient = () => {\n        console.log('client click')\n    }\n\n    onClose = () => {\n        this.setState({\n            anchorEl: null,\n        })\n    }\n\n    onProfile = () => {\n        console.log('onProffil')\n    }\n    onSettings = () => {\n        console.log('on setting')\n    }\n    onRequests = () => {\n        console.log('on request')\n    }\n\n    onHelp = () => {\n        console.log('on help')\n    }\n\n    render(){\n        const {anchorEl} = this.state\n        const open = Boolean(anchorEl)\n        return (\n            <Demo>\n                <DemoTitle srcPath='ProfileCard.tsx' demoPath='ProfileCardDemo.tsx'>Profile Card</DemoTitle>\n                <DemoHelp>Testing</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='open' type='boolean' default='' description=''/>\n                    <DemoProp name='onClose' type='function' default='' description=''/>\n                    <DemoProp name='onSignOut' type='function' default='' description=''/>\n                    <DemoProp name='signOutText' type='string' description='Text for sign out button'/>\n                    <DemoProp name='anchorEl' type='HTMLElement' default='' description='Element to anchors the pop up'/>\n                    <DemoProp name='children' type='React.ReactNode' default='' description='ListItems to add to the menu below settings'/>\n                </DemoProps>\n                <DemoContent>\n                    <Button\n                        aria-owns={open ? 'simple-popper' : undefined}\n                        aria-haspopup=\"true\"\n                        variant=\"contained\"\n                        onClick={this.handleClick}\n                    >\n                        View profile\n                    </Button>\n                    <ProfileCard identity={this.state.identity} signOutText=\"Sign out\" open={open} onClose={this.onClose} onSignOut={this.onSignOut} anchorEl={anchorEl}>\n                        <ScreenSize>\n                            {({mobile}) => (\n                                <List dense={!mobile}>\n                                    <ListItem button onClick={this.onProfile}>\n                                        <ListItemText inset primary=\"Profile\"/>\n                                    </ListItem>\n                                    <ListItem button onClick={this.onRequests}>\n                                        <ListItemText inset primary=\"Forespørsler\"/>\n                                    </ListItem>\n                                    <ListItem button divider onClick={this.onSettings}>\n                                        <Tooltip title='Profile settings'>\n                                            <ListItemIcon>\n                                                <SettingsIcon fontSize='small'/>\n                                            </ListItemIcon>\n                                        </Tooltip>\n                                        <ListItemText inset primary=\"Settings\"/>\n                                    </ListItem>\n                                    {mobile && <ListItem divider button>\n                                        <Tooltip title='Switch client'>\n                                            <ListItemIcon onClick={this.onSwitch}>\n                                                <SwapHorizIcon />\n                                            </ListItemIcon>\n                                        </Tooltip>\n                                        <ListItemText onClick={this.onClient} inset primary={this.state.identity.client.name} secondary='Administrer'/>\n                                    </ListItem>}\n                                    <ListItem button divider onClick={this.onHelp}>\n                                        <Tooltip title='Help me'>\n                                            <ListItemIcon>\n                                                <HelpIcon fontSize='small'/>\n                                            </ListItemIcon>\n                                        </Tooltip>\n                                        <ListItemText primary=\"Help\"/>\n                                    </ListItem>\n                                </List>\n                            )}\n                        </ScreenSize>\n                    </ProfileCard>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport {Demo, DemoContent, DemoTitle, DemoHelp, DemoProps, DemoProp} from '../components/demo'\nimport Notifier, {NotificationItem, NotificationItemProps} from '../../lib/layout/Notify'\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\n\nimport MailIcon from '@material-ui/icons/Email'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport KeyIcon from '@material-ui/icons/VpnKey'\nimport SecurityIcon from '@material-ui/icons/Security'\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount'\n\ntype State = {\n    open: boolean\n    notifications: NotificationItemProps[],\n    loading: boolean\n}\n\nexport default class NotifyDemo extends React.PureComponent<{}, State>{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            open: false,\n            notifications: this.generateNotifications(),\n            loading: false,\n        }\n    }\n\n    generateNotifications = () => {\n        let key = 0\n        const readCount = 3 + Math.random() * 2\n        const makeItem = (children: React.ReactChild, avatar?: React.ReactElement): NotificationItemProps => {\n            let date = new Date()\n            date.setHours(date.getHours() - key * 12 * Math.random())\n            const read = key >= readCount\n            const seen = key >= 2\n            const id = `${read ? 'p' : 'n'}-${key++}`\n            return {\n                read,\n                seen: seen,\n                id,\n                date,\n                children,\n                avatar,\n                onClick: () => console.log('Clicked notification', id),\n                onToggleMarkRead: this.onRead(id),\n                toggleMarkReadTitle: 'Mark as read',\n                toggleMarkUnreadTitle: 'Mark as unread'\n            }\n        }\n        return [\n            makeItem(<Typography>New mail from <b>verk@stag.no</b></Typography>, <MailIcon />),\n            makeItem(<Typography><b>Fru Hansen</b> sendt you a message</Typography>, <ChatIcon />),\n            makeItem(<Typography>Access to <b>Sagene Verk &amp; Byll</b> was granted by <b>Søstrene Hansonsen</b></Typography>, <KeyIcon />),\n            makeItem(<Typography>Something may or may not have happened</Typography>, <Avatar>42</Avatar>),\n            makeItem(<Typography>Acces was denied to <b>Loff på tverrstaget</b></Typography>, <SecurityIcon />),\n            makeItem(<Typography><b>Kari</b> requested access to <b>Stagrapport</b></Typography>, <SecurityIcon />),\n            makeItem(<Typography>Notification without avatar notifying <b>something</b></Typography>),\n            makeItem(<Typography>You where notified of something that happened</Typography>, <SupervisorAccountIcon />),\n            makeItem(<Typography>Sometime something happened</Typography>, <Avatar>Foo</Avatar>),\n            makeItem(<Typography>Access to <b>Hostekrampefabrikken</b> was granted by <b>Kols</b></Typography>, <KeyIcon />),\n            makeItem(<Typography>Something definitely have happened</Typography>, <Avatar>42</Avatar>),\n            makeItem(<Typography><b>Kjell Aronsen</b> requested access to <b>Tettstedet</b></Typography>, <SecurityIcon />),\n            makeItem(<Typography>The watchdog service <b>los på mongotraller</b> is out of order</Typography>),\n        ]\n    }\n\n    renderNotifications(){\n        return this.state.notifications\n            .sort((a, b) => b.date.getTime() - a.date.getTime())\n            .map(n => <NotificationItem key={n.id} {...n} />)\n    }\n\n    onOpen = () => {\n        this.setState({loading: true, open: true})\n        setTimeout(() => this.setState({loading: false}, this.onSeen), 3000)\n    }\n\n    onSeen = () => {\n        if(!this.state.open){\n            return\n        }\n\n        this.setState(state => ({\n            notifications: state.notifications.map(n => ({...n, seen: true}))\n        }))\n    }\n\n    onClose = () => {\n        this.setState({open: false})\n    }\n\n    onRead = (id: string) => () => this.setState(state => ({\n        notifications: state.notifications.map(n => n.id === id ? {...n, read: !n.read} : n)\n    }))\n\n    onReadAll = () => {\n        this.setState(state => ({\n            notifications: state.notifications.map(n => ({...n, read: true}))\n        }))\n    }\n\n    onLoadMore = async () => {\n        this.setState({loading: true})\n        setTimeout(() => this.setState({loading: false}, this.onSeen), 3000)\n    }\n\n    reset = () => {\n        this.setState({notifications: this.generateNotifications()})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='NotifyDemo.tsx' srcPath='Notify.tsx'>Notify</DemoTitle>\n                <DemoHelp>A Notification icon with a dropdown list of notifications</DemoHelp>\n                <DemoProps title='Notifier'>\n                    <DemoProp required name='count' type='number' default='' description='Number of unseen notifications'/>\n                    <DemoProp name='loading' type='boolean' default='false' description='Display a loading indicator'/>\n                    <DemoProp required name='open' type='boolean' default='' description='Whether the notifications list is open'/>\n                    <DemoProp required name='readAllButtonText' type='' default='' description='Your translated value of e.g `Mark all as read`'/>\n                    <DemoProp required name='onOpen' type='() => void' default='' description='Callback invoked when the list of notifications is opened, refresh/fetch notifications here'/>\n                    <DemoProp required name='onReadAll' type='() => void' default='' description='Callback invoked when the user marks all notifications as read'/>\n                    <DemoProp required name='onLoadMore' type='() => Promise<void>' default='' description='Callback invoked when the user scrolled to near the end of the list'/>\n                    <DemoProp required name='onClose' type='() => void' default='' description='Callback invoked when the list is closed. Set open to false here to close the list'/>\n                    <DemoProp name='IconProps' type='SvgIconProps' default='' description='Spread to the Notification Bell icon'/>\n                    <DemoProp required name='children' type='React.ReactNode' default='' description='Render your NotificationItems here. The children will be wrappen in a <List>'/>\n                </DemoProps>\n                <DemoProps title='NotificationItem'>\n                    <DemoProp required name='id' type='string' description='Unique identifier of the Notification'/>\n                    <DemoProp required name='date' type='Date' description='Date when the notification was created'/>\n                    <DemoProp name='seen' type='boolean' default='false' description='Whether the notification has been displayed to the user'/>\n                    <DemoProp name='read' type='boolean' default='false' description='Whether the notification has been read by the user'/>\n                    <DemoProp required name='onClick' type='() => void' description='Callback invoked when the user clicks the notification'/>\n                    <DemoProp required name='onToggleMarkRead' type='() => void' description='Callback invoked when the user marks the notification as read'/>\n                    <DemoProp required name='toggleMarkReadTitle' type='string' description='Text on the ToggleMarkRead button when the notification is not read'/>\n                    <DemoProp required name='toggleMarkUnreadTitle' type='string' description='Text on the ToggleMarkRead button when the notification is read'/>\n                    <DemoProp name='avatar' type='React.ReactElement' description='Should be either an <Avatar>, <SvgIcon> or undefined'/>\n                    <DemoProp name='actions' type='{action: () => void, title: string}[]' description='Custom actions displayed in a menu when clicking the three vertical dots on the Notification'/>\n                    <DemoProp required name='children' type='React.ReactChild' description='String or HTML formatted text'/>\n                </DemoProps>\n                <DemoContent>\n                    <Notifier\n                        open={this.state.open}\n                        readAllButtonText='Mark all as read'\n                        count={this.state.notifications.filter(n => !n.seen).length}\n                        onOpen={this.onOpen}\n                        onClose={this.onClose}\n                        onLoadMore={this.onLoadMore}\n                        onReadAll={this.onReadAll}\n                        loading={this.state.loading}\n                    >\n                        {this.renderNotifications()}\n                    </Notifier>\n                    <Button onClick={this.reset}>Reset</Button>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\nimport InfiniteScroll from '../../lib/InfiniteScroll'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\n\ntype State = {\n    items: JSX.Element[]\n}\n\nconst makeItems = (startIndex = 0, count = 200) => {\n    const items: JSX.Element[] = []\n    for(let i = startIndex; i < startIndex + count; i++){\n        items.push(<ListItem key={i} divider>{i}</ListItem>)\n    }\n    return items\n}\n\nexport default class InfiniteScrollDemo extends React.PureComponent<{}, State>{\n    state: State = {\n        items: makeItems()\n    }\n\n    onReachThreshold = async () => {\n        this.setState(state => ({items: [...state.items, ...makeItems(state.items.length)]}))\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle>InfiniteScroll</DemoTitle>\n                <DemoHelp>A wrapper component that invokes callbacks when scrolling to a threshold</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='threshold' type='1 > number >= 0' default='0.1' description='Defines in percentage (factor) of the viewable containers height the distance from the bottom where the threshold is'></DemoProp>\n                    <DemoProp name='height' type='string | number' default='calc(100%)' description='The height of the scroll container'></DemoProp>\n                    <DemoProp name='onReachThreshold' type='() => void' description='Callback invoked when scroll has reached the threshold'></DemoProp>\n                    <DemoProp name='onReachEnd' type='() => void' description='Callback invoked when the scroll has reached the end'></DemoProp>\n                    <DemoProp required name='children' type='React.ReactNode'></DemoProp>\n                </DemoProps>\n                <DemoContent>\n                    <InfiniteScroll\n                        height={300}\n                        threshold={0.5}\n                        onReachThreshold={this.onReachThreshold}\n                    >\n                        <List>\n                            {this.state.items}\n                        </List>\n                    </InfiniteScroll>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport styled from 'styled-components/macro'\nimport {layout} from '../lib'\nimport Home from './pages/Home'\nimport Icons from './pages/Icons'\nimport GitHubLink from './components/GitHubLink'\nimport MaterialUiLink from './components/MaterialUiLink'\nimport Guidelines from './pages/Guidelines'\nimport Theme from './pages/Theme'\nimport HomeIcon from '@material-ui/icons/Home'\nimport CodeIcon from '@material-ui/icons/Code'\nimport StyleIcon from '@material-ui/icons/Style'\nimport BuildIcon from '@material-ui/icons/Build'\nimport StraightenIcon from '@material-ui/icons/Straighten'\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact'\nimport FontDownloadIcon from '@material-ui/icons/FontDownload'\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz'\nimport HelpIcon from '@material-ui/icons/Help'\nimport history from './history'\nimport {Location, UnregisterCallback} from 'history'\nimport Link from './components/Link'\nimport TrendingDemo from './demos/TrendingDemo'\nimport BigNumberDemo from './demos/BigNumberDemo'\nimport AlertDemo from './demos/AlertDemo'\nimport SearchFieldDemo from './demos/SearchFieldDemo'\nimport TextFieldEditorDemo from './demos/TextFieldEditorDemo'\nimport ConfirmationDialogDemo from './demos/ConfirmationDialogDemo'\nimport ListPickerDemo from './demos/ListPickerDemo'\nimport EmojiDemo from './demos/EmojiDemo'\nimport GridLayoutDemo from './demos/GridLayoutDemo'\nimport HoverableDemo from './demos/HoverableDemo'\nimport DelayDemo from './demos/DelayDemo'\nimport WizardDemo from './demos/WizardDemo'\nimport ScreenSizeDemo from './demos/ScreenSizeDemo'\nimport ProfileCardDemo from './demos/ProfileCardDemo'\nimport Avatar from '@material-ui/core/Avatar'\nimport List from '@material-ui/core/List'\nimport Button from '@material-ui/core/Button'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport SettingsIcon from '@material-ui/core/SvgIcon/SvgIcon'\nimport ScreenSize from '../lib/ScreenSize'\nimport ListPicker from '../lib/ListPicker'\nimport NotifyDemo from './demos/NotifyDemo'\nimport InfiniteScrollDemo from './demos/InfiniteScrollDemo'\nimport Badge from '@material-ui/core/Badge'\n\nconst StyledBadge = styled(Badge).attrs({\n    classes: {badge: 'MuiBadgeStyle'}\n})`\n    .MuiBadgeStyle{\n      top: 50%;\n      right: -7px;\n      background-color: ${({theme}) => theme.tfso.colors.baseLight1};\n      color: ${({theme}) => theme.tfso.colors.menuItemText};\n      padding: 0 7px;\n      font-size: 0.62rem\n    }\n` as typeof Badge\n\nconst NewBadge = ({children}) => (\n    <StyledBadge badgeContent=\"New\">{children}</StyledBadge>\n)\n\nconst menuGroups = {\n    home: {\n        label: 'Tfso-Components',\n        subtitle: 'Where magic happens',\n        icon: HomeIcon,\n        component: Home\n    },\n    guidelines: {\n        label: 'Guidelines',\n        subtitle: 'How to frontend',\n        icon: StraightenIcon,\n        component: Guidelines\n    },\n    components: {\n        label: 'Components',\n        subtitle: 'Presentational',\n        icon: ViewCompactIcon,\n        items: {\n            emoji: {\n                label: 'Emoji',\n                component: EmojiDemo,\n                accessDenied: true,\n                badge: NewBadge\n            },\n            alert: {\n                label: 'Alert',\n                component: AlertDemo\n            },\n            bignumber: {\n                label: 'BigNumber',\n                component: BigNumberDemo,\n                badge: NewBadge\n            },\n            confirmationdialog: {\n                label: 'ConfirmationDialog',\n                component: ConfirmationDialogDemo\n            },\n            listpicker: {\n                label: 'ListPicker',\n                component: ListPickerDemo,\n            },\n            searchfield: {\n                label: 'SearchField',\n                component: SearchFieldDemo\n            },\n            textfieldeditor: {\n                label: 'TextFieldEditor',\n                component: TextFieldEditorDemo\n            },\n            trending: {\n                label: 'Trending',\n                component: TrendingDemo\n            }\n        }\n    },\n    style: {\n        label: 'Style',\n        subtitle: 'Much Dashing',\n        icon: StyleIcon,\n        component: Theme,\n        accessDenied: true,\n        items: {\n            layout: {\n                label: 'Layout',\n                component: () => <div>TODO<br />This page uses the Layout</div>\n            },\n            menu: {\n                label: 'Menu',\n                component: () => <div>TODO<br />The menu to the left</div>\n            },\n            notify: {\n                label: 'Notify',\n                component: NotifyDemo\n            },\n            profilecard: {\n                label: 'ProfileCard',\n                component: ProfileCardDemo\n            },\n            theme: {\n                label: 'Theme',\n                component: Theme\n            },\n            topbar: {\n                label: 'Topbar',\n                component: () => <div>TODO<br />The topbar above</div>\n            }\n        }\n    },\n    utils: {\n        label: 'Utils',\n        subtitle: 'Utility',\n        icon: BuildIcon,\n        items: {\n            delay: {\n                label: 'Delay',\n                component: DelayDemo\n            },\n            hoverable: {\n                label: 'Hoverable',\n                component: HoverableDemo\n            },\n            infinitescroll: {\n                label: 'InfiniteScroll',\n                component: InfiniteScrollDemo\n            },\n            wizard: {\n                label: 'Wizard',\n                component: WizardDemo\n            },\n            screensize: {\n                label: 'ScreenSize',\n                component: ScreenSizeDemo\n            }\n        }\n    },\n    icons: {\n        label: 'Icons',\n        subtitle: 'Well duh',\n        component: Icons,\n        icon: FontDownloadIcon\n    },\n    labs: {\n        label: 'Labs',\n        subtitle: 'Works in progress',\n        icon: CodeIcon,\n        accessDenied: true,\n        items: {\n            gridlayout: {\n                label: 'GridLayout',\n                component: GridLayoutDemo\n            },\n            notify: {\n                label: 'Notify',\n                component: NotifyDemo\n            }\n        }\n    },\n}\n\nconst identity = {\n    license: '2947b4ae-0d40-447b-886f-dcd3aa11648b;693081080913543;1198',\n    identity: {\n        id: '2947b4ae-0d40-447b-886f-dcd3aa11648b'\n    },\n    client: {\n        id: '693081080913543',\n        name: 'Snerk og Verk Stagforretning'\n    },\n    user: {\n        id: '1198'\n    },\n    profile: {\n        id: '2947b4ae-0d40-447b-886f-dcd3aa11648b',\n        firstName: 'Sjef',\n        lastName: 'Sjefesenen',\n        identifier: 'sjef@kpdemo.no',\n        culture: 'nn-NO',\n        language: 'NO',\n        timeZone: 'Europe/Copenhagen',\n        country: 'ES',\n        created: '2008-08-04T09:04:36.913+00:00',\n        modified: '2019-03-12T00:53:56.946+00:00',\n        gender: 'Male',\n        birthDate: '2018-11-20',\n        location: 'Disneyland',\n        locationCoordinates: '33.8120918,-117.91897419999998',\n        visibility: 'Public',\n        thumb: {data: 'data:image/png;base64, '}\n    },\n    locale: {\n        country: 'NO',\n        culture: 'nn-NO',\n        language: 'NO',\n        timeZoneOffset: '01:00:00',\n        timeZone: 'Europe/Copenhagen'\n    }\n}\n\ntype LayoutState = {\n    location: Location<any>\n    menuGroupsExpanded: any\n}\n\nexport default class Layout extends React.PureComponent<{}, LayoutState>{\n    _unsubHistory: UnregisterCallback | null = null\n    componentDidMount(){\n        this.expandSelected()\n        this._unsubHistory = history.listen(this.onNavigation)\n    }\n    componentWillUnmount(){\n        this._unsubHistory && this._unsubHistory()\n    }\n\n    state: LayoutState = {\n        location: history.location,\n        menuGroupsExpanded: {}\n    }\n\n    onNavigation = (location: Location<any>) => {\n        this.setState({location})\n    }\n\n    getSelected = () => {\n        const {location: {pathname}} = this.state\n        const path = pathname.slice(pathname.indexOf('#') + 2)\n        const [group, item] = path.split('/')\n\n        return {group: group || 'home', item}\n    }\n\n    expandSelected(){\n        const {group} = this.getSelected()\n        this.onToggleGroupExpanded(group)\n    }\n\n    onToggleGroupExpanded = (name) => {\n        this.setState(state => ({\n            menuGroupsExpanded: {\n                ...state.menuGroupsExpanded,\n                [name]: !state.menuGroupsExpanded[name]\n            }\n        }))\n    }\n\n    render(){\n        const menuContent = (\n            <layout.MenuContent>\n                {Object.keys(menuGroups).map(groupName => {\n                    const group = menuGroups[groupName]\n                    if(group.component){\n                        return (\n                            <layout.MenuRootItem\n                                key={group.label}\n                                label={group.label}\n                                selected={this.getSelected().group === groupName}\n                                icon={group.icon}\n                                subtitle={group.subtitle}\n                                href={(content) => {\n                                    return (\n                                        <Link to={`/${groupName}`} key={groupName}>\n                                            {content}\n                                        </Link>\n                                    )\n                                }}\n                                accessDenied={group.accessDenied}\n                            />\n                        )\n                    }\n\n                    return (\n                        <layout.MenuGroup\n                            expanded={!!this.state.menuGroupsExpanded[groupName]}\n                            key={group.label}\n                            label={group.label}\n                            icon={group.icon}\n                            subtitle={group.subtitle}\n                            onToggleExpanded={() => this.onToggleGroupExpanded(groupName)}\n                            accessDenied={group.accessDenied}\n                        >\n                            {Object.keys(group.items).sort((a, b) => a > b ? 1 : -1).map(itemName => {\n                                const item = group.items[itemName]\n                                const selected = this.getSelected()\n                                return (\n                                    <layout.MenuItem\n                                        key={item.label}\n                                        label={item.label}\n                                        selected={selected.item === itemName && selected.group === groupName}\n                                        icon={item.icon}\n                                        href={(content) => {\n                                            return (\n                                                <Link to={`/${groupName}/${itemName}`} key={itemName}>\n                                                    {content}\n                                                </Link>\n                                            )\n                                        }}\n                                        accessDenied={item.accessDenied}\n                                        badge={item.badge}\n                                    />\n                                )\n                            })}\n                        </layout.MenuGroup>\n                    )\n                })}\n            </layout.MenuContent>\n        )\n        const topMenuContent = (\n            <layout.TopMenuContent>\n                <ScreenSize>\n                    {({mobile}) => (\n                        mobile\n                            ? null\n                            : <ClientSwitcher clientName={identity.client.name} />\n                    )}\n                </ScreenSize>\n                <div style={{padding: '4px 8px'}}><MaterialUiLink /></div>\n                <div style={{padding: '4px 8px'}}><GitHubLink /></div>\n                <Profile />\n            </layout.TopMenuContent>\n        )\n\n        const selected = this.getSelected()\n        const group = menuGroups[selected.group]\n\n        let content: React.ReactNode = 'Not found'\n        if(group.component){\n            const Page = group.component\n            content = <Page />\n        }else if(group.items && group.items[selected.item]){\n            const Page = group.items[selected.item].component\n            content = <Page />\n        }\n\n        return (\n            <layout.Layout\n                menuContent={menuContent}\n                topMenuContent={topMenuContent}\n                docTitle=\"Tfso Components\"\n            >\n                {content}\n            </layout.Layout>\n        )\n    }\n}\n\nclass ClientSwitcher extends React.PureComponent<any>{\n    state = {\n        open: false,\n        anchorEl: null\n    }\n\n    onOpen = (e) => this.setState({open: true, anchorEl: e.currentTarget})\n    onClose = () => this.setState({open: false, anchorEl: null})\n\n    render(){\n        const options = [\n            {value: '1', label: 'Test 1'},\n            {value: '2', label: 'Test 2'},\n            {value: '3', label: 'Test 3'},\n            {value: '4', label: 'Test 4'},\n        ]\n        return (\n            <>\n                <Button onClick={this.onOpen}>{this.props.clientName}</Button>\n                <ListPicker\n                    anchorEl={this.state.anchorEl}\n                    open={this.state.open}\n                    cancelButtonText='Cancel'\n                    searchLabel='Search list'\n                    onCancel={this.onClose}\n                    onSelect={this.onClose}\n                    options={options}\n                    avatarColor={'default'}\n                />\n            </>\n        )\n    }\n}\n\nclass Profile extends React.PureComponent{\n    state = {\n        open: false,\n        anchorEl: null\n    }\n\n    onOpen = (e) => this.setState({open: true, anchorEl: e.currentTarget})\n    onClose = () => this.setState({open: false, anchorEl: null})\n\n    render(){\n        return (\n            <>\n                <Button onClick={this.onOpen} size=\"small\">\n                    <Avatar src={identity.profile.thumb.data} />\n                </Button>\n                <layout.ProfileCard\n                    anchorEl={this.state.anchorEl}\n                    open={this.state.open}\n                    onClose={this.onClose}\n                    onSignOut={() => {}}\n                    identity={identity}\n                    signOutText=\"Log out\"\n                >\n                    <ScreenSize>\n                        {({mobile}) => (\n                            <List dense={!mobile}>\n                                <ListItem button>\n                                    <ListItemText inset primary=\"Profile\"/>\n                                </ListItem>\n                                <ListItem button>\n                                    <ListItemText inset primary=\"Forespørsler\"/>\n                                </ListItem>\n                                <ListItem button divider>\n                                    <Tooltip title='Profile settings'>\n                                        <ListItemIcon>\n                                            <SettingsIcon fontSize='small'/>\n                                        </ListItemIcon>\n                                    </Tooltip>\n                                    <ListItemText inset primary=\"Settings\"/>\n                                </ListItem>\n                                {mobile && <ListItem divider button>\n                                    <Tooltip title='Switch client'>\n                                        <ListItemIcon>\n                                            <SwapHorizIcon />\n                                        </ListItemIcon>\n                                    </Tooltip>\n                                    <ClientSwitcher clientName={identity.client.name} />\n                                </ListItem>}\n                                <ListItem button divider>\n                                    <Tooltip title='Help me'>\n                                        <ListItemIcon>\n                                            <HelpIcon fontSize='small'/>\n                                        </ListItemIcon>\n                                    </Tooltip>\n                                    <ListItemText primary=\"Help\"/>\n                                </ListItem>\n                            </List>\n                        )}\n                    </ScreenSize>\n                </layout.ProfileCard>\n            </>\n        )\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {theme} from '../lib'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport {ThemeProvider as StyledThemeProvider} from 'styled-components'\nimport {MuiThemeProvider} from '@material-ui/core/styles'\nimport Layout from './Layout'\n\nReactDOM.render(\n    <React.Fragment>\n        <CssBaseline />\n        <MuiThemeProvider theme={theme.materialuiTheme}>\n            <StyledThemeProvider theme={theme.styledTheme}>\n                <Layout />\n            </StyledThemeProvider>\n        </MuiThemeProvider>\n    </React.Fragment>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}