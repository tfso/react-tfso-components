{"version":3,"sources":["lib/theme/index.ts","lib/layout/Menu.tsx","lib/icons/Tfso.tsx","lib/layout/Topbar.tsx","lib/layout/DocumentTitle.tsx","lib/utils/ScreenSize.tsx","lib/layout/Layout.tsx","lib/Alert.tsx","lib/BigNumber.tsx","lib/ConfirmationDialog.tsx","lib/SearchField.tsx","lib/TextFieldEditor.tsx","lib/Trending.tsx","lib/Emoji.tsx","lib/Delay.tsx","lib/Hoverable.tsx","lib/Wizard.tsx","lib/icons/TfsoLoading.tsx","demo/components/MaterialUiLink.tsx","demo/components/GitHubLink.tsx","demo/pages/Home.tsx","demo/components/code.tsx","demo/components/demo.tsx","demo/pages/Icons.tsx","demo/history.ts","demo/components/Link.tsx","demo/pages/Guidelines.tsx","demo/components/ThemeColor.tsx","demo/pages/Theme.tsx","demo/demos/TrendingDemo.tsx","demo/demos/BigNumberDemo.tsx","demo/demos/AlertDemo.tsx","demo/demos/SearchFieldDemo.tsx","demo/demos/TextFieldEditorDemo.tsx","demo/demos/ConfirmationDialogDemo.tsx","lib/ListPicker.tsx","demo/demos/ListPickerDemo.tsx","demo/demos/EmojiDemo.tsx","lib/GridLayout.tsx","demo/demos/GridLayoutDemo.tsx","demo/demos/HoverableDemo.tsx","demo/demos/DelayDemo.tsx","demo/demos/WizardDemo.tsx","demo/Layout.tsx","demo/index.tsx"],"names":["colorScheme","colors","tfso","baseColor","baseLightColor","baseLight2Color","baseLight3Color","baseLight4Color","baseLight5Color","blueColor","blueDarkColor","blueDesaturatedColor","grayBlueColor","tealColor","greenColor","greenLightColor","purpleColor","redColor","redLightColor","orangeColor","yellowColor","blackColor","grayColor","grayDarkColor","grayDarkerColor","grayLightColor","grayLighterColor","grayLightestColor","whiteColor","whiteDarkColor","whiteDarkerColor","bodyBackgroundColor","listOverBackgroundColor","borderColor","tabBarColor","palette","primary","primaryLight","success","warning","alert","delete","materialuiTheme","createMuiTheme","typography","useNextVariants","secondary","dark","main","light","contrastText","styledTheme","layout","containerMargin","mui","StyledDrawer","styled","Drawer","attrs","classes","paper","withConfig","displayName","componentId","_ref","open","Menu","react_default","a","createElement","variant","this","props","mobile","elevation","onClose","List_default","disablePadding","children","React","PureComponent","MenuContent","Fragment","MenuGroup","_React$PureComponent2","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onToggleExpanded","e","stopPropagation","inherits","createClass","key","value","Icon","icon","backgroundColor","expanded","ListItem_default","divider","style","button","onClick","ListItemIcon_default","marginRight","fontSize","color","ListItemText_default","subtitle","primaryTypographyProps","secondaryTypographyProps","label","ListItemSecondaryAction_default","IconButton_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","dense","Divider_default","MenuRootItem","_React$PureComponent3","LinkContent","selected","href","Link_default","NestedListItem","ListItem","MenuItem","_React$PureComponent4","memo","SvgIcon_default","assign","viewBox","d","Root","div","StyledAppBar","AppBar","theme","zIndex","drawer","Wrapper","Left","LeftMobile","Right","MenuButton","IconButton","ToolbarRight","TopBar","position","Tfso","Typography_default","paddingLeft","title","Toolbar_default","onMenuToggle","aria-label","Menu_default","TopMenuContent","setTitle","text","document","DocumentTitle","nextProps","tablet","desktop","getScreenSize","width","includes","ScreenSize","withWidth","Component","LayoutWrapper","LayoutHeader","LayoutBody","LayoutBodyLeft","LayoutBodyRight","withScreenSize","_temp","_React$PureComponent","Layout","state","menuOpen","onCloseMenu","setState","menuIsOpen","onClickContent","screenSize","DocumentTitle_DocumentTitle","docTitle","Topbar_TopBar","topMenuContent","Menu_Menu","menuContent","variantIcon","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","StyledSnack","other","objectWithoutProperties","SnackbarContent_default","_templateObject","_ref2","bgColor","Alert","message","aria-describedby","id","display","alignItems","opacity","action","Close_default","fontSizeMap","medium","large","defaultProps","size","wrapper","BigNumber","_ref2$size","pxToRem","_ref3","_ref3$color","TransitionComponent","Slide_default","direction","ConfirmationDialog","onCancel","onOk","okButtonText","cancelButtonText","Dialog_default","keepMounted","maxWidth","DialogTitle_default","DialogContent_default","DialogActions_default","Button_default","SearchField","editing","onBlur","onFocus","TextField_default","fullWidth","handleEvent","event","preventDefault","nativeEvent","stopImmediatePropagation","placeholder","margin","InputProps","startAdornment","InputAdornment_default","Search_default","TextFieldEditor","_inputRef","createRef","prevProps","blur","current","onKeyDown","defaultPrevented","ctrlKey","multiline","onChange","target","_this$props","dirtyProp","dirty","enableDirtyCheck","otherProps","isDirty","inputRef","fontStyle","iconMap","up","TrendingUp","flat","TrendingFlat","down","TrendingDown","withTheme","iconProps","nativeColor","getColor","emojis","middleFinger","indexFinger","flex","brokenHeart","perfect","thumbsUp","thumbsDown","clap","heart","fire","bulb","crap","thinking","rocket","Emoji","propTypes","PropTypes","oneOf","keys","Delay","_timer","show","_this2","setTimeout","delayMs","clearTimeout","beforeShow","Hoverable","ref","toggleHover","hover","hoverOn","hoverOff","restProps","onMouseEnter","onMouseLeave","Wizard","next","index","prev","hasOwnProperty","path","css","TfsoLoading_templateObject","StyledSvgIcon","Styled","once","_ref4","_ref5","_ref6","fillRule","strokeWidth","MaterialUiIcon","fill","MaterialUiLink","rel","GitHubIcon","GitHubLink","Tooltip_default","tooltip","CenterTop","Home_templateObject","Home","TfsoLoading","paragraph","align","Grid_default","container","justify","item","xs","flexDirection","Zoom_default","appear","transitionDelay","Code","highlight","Prism","highlightElement","className","language","Demo","Paper_default","padding","marginBottom","DemoTitle","srcPath","demoPath","spacing","components_GitHubLink","DemoHelp","DemoContent","marginTop","isArray","map","child","i","DemoProps","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpansionPanelDetails_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","DemoProp","required","name","type","default","description","DemoCode","Code_default","code_Code","Icons","Icons_TfsoDemo","Icons_TfsoLoadingDemo","TfsoDemo","handleChange","defineProperty","demo_Demo","demo_DemoTitle","demo_DemoHelp","demo_DemoProps","demo_DemoProp","demo_DemoContent","select","MenuItem_default","TfsoLoadingDemo","history","createHashHistory","basename","hashType","Link","to","push","toLowerCase","underline","undefined","AnchorLink","Anchor","window","location","hash","split","Section","unit","SubHeading","Paragraph","component","Tip","Card_default","CardContent_default","Guideline","Guidelines","render","renderHeading","renderGuidelines","renderTips","renderContributing","Guidelines_SubHeading","Link_Anchor","Guidelines_Guideline","Link_Link","Guidelines_Tip","Guidelines_Paragraph","Box","ThemeColor_templateObject","Txt","_templateObject2","ThemeColor","ThemeColors","Theme_templateObject","Theme","components_ThemeColor","TrendingDemo","Trending","BigNumberDemo","lib_BigNumber","variantMessage","AlertDemo","onPress","demo_DemoCode","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","lib_Alert","SearchFieldDemo","SearchField_SearchField","TextFieldEditorDemo","onReset","TextFieldEditor_TextFieldEditor","toString","ConfirmationDialogDemo","openConfirmationDialog","onClickOpenConfirmationDialog","lib_ConfirmationDialog","AvatarColor","Avatar","ListPicker_templateObject","CustomDialogTitle","ListPicker_templateObject2","ListPicker","_listRef","filterValue","focusValue","onFilter","keyCode","focus","onSwitch","_this3","renderItems","searchLabel","MenuList_default","options","filter","option","indexOf","disabled","avatarColor","slice","words","desktopDialog","Popover_default","anchorEl","transformOrigin","mobileDialog","fullScreen","utils_ScreenSize","DemoDisplay","ListPickerDemo_templateObject","ListPickerDemo","_anchorEl","selectedOption","buttonType","handleColor","ListPicker_ListPicker","buttonRef","InputLabel_default","shrink","htmlFor","Select_default","index_es","EmojiDemo","lib_Emoji","GridItemContainer","gridItemWidthNumberMap","1","2","3","4","5","6","7","8","9","10","11","12","onequarter","onethird","half","twothirds","threequarters","full","numberGridItemWithMap","toGridItemWidth","w","Math","min","trunc","toGridItemHeight","gridItemPositionToLayout","x","col","y","row","h","height","minH","minHeight","minW","minWidth","maxH","maxHeight","maxW","isDraggable","draggable","isResizable","resizable","static","layoutToGridItemPosition","GridLayout","_layoutWasChangedWorkaround","onLayoutChange","layouts","validateItemLayout","onResize","oldItem","newItem","placeHolder","onDragStop","isEqual","onResizeStop","items","_this$props$margin","rglLayout","values","react_grid_layout_default","cols","rowHeight","breakpoints","lg","compactType","GridLayoutDemo","GridLayout_GridLayout","HoverableDemo","Hoverable_Hoverable","cursor","DelayDemo","Delay_Delay","CircularProgress_default","WizardDemo","Wizard_Wizard","Stepper_default","activeStep","Step_default","StepLabel_default","menuGroups","home","HomeIcon","guidelines","StraightenIcon","components","ViewCompactIcon","emoji","bignumber","confirmationdialog","listpicker","searchfield","textfieldeditor","trending","StyleIcon","utils","BuildIcon","delay","hoverable","wizard","icons","FontDownloadIcon","labs","CodeIcon","gridlayout","_unsubHistory","menuGroupsExpanded","onNavigation","getSelected","pathname","_path$split","_path$split2","slicedToArray","group","onToggleGroupExpanded","objectSpread","expandSelected","listen","layout_namespaceObject","groupName","content","itemName","components_MaterialUiLink","Page","_Page","ReactDOM","CssBaseline_default","styles","styled_components_browser_esm","Layout_Layout","getElementById"],"mappings":"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","file":"static/js/main.34434a20.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles'\nimport 'styled-components'\n\nconst colorScheme = {\n    fiord: '#445566',\n    lynch: '#637b94',\n    dodgerBlue: '#11beff',\n    bayOfMany: '#224477',\n    easternBlue: '#22aabb',\n    apple: '#49bd39',\n    melrose: '#A3A4FB',\n    flamingo: '#f04b4b',\n    texasRose: '#ffb155',\n    dandelion: '#FFD966',\n    tundora: '#404040',\n    dustyGray: '#999999',\n    hippieBlue: '#6699bb',\n    emperor: '#555555',\n    silver: '#CCCCCC',\n    porcelain: '#E8E9EA',\n    wildSand: '#F6F6F6',\n    white: '#FFFFFF',\n    casper: '#AFC5D0'\n}\n\nconst colors = {\n    tfso: '#00c7f5',\n    baseColor: colorScheme.fiord,\n    baseLightColor: '#637b94',\n    baseLight2Color: '#8fa1b4',\n    baseLight3Color: '#bdc8d3',\n    baseLight4Color: '#ebeef1',\n    baseLight5Color: '#f4f6f8',\n    blueColor: colorScheme.dodgerBlue,\n    blueDarkColor: colorScheme.bayOfMany,\n    blueDesaturatedColor: colorScheme.hippieBlue,\n    grayBlueColor: colorScheme.casper,\n    tealColor: colorScheme.easternBlue,\n    greenColor: colorScheme.apple,\n    greenLightColor: 'rgba(73, 189, 57, 0.4)',\n    purpleColor: colorScheme.melrose,\n    redColor: colorScheme.flamingo,\n    redLightColor: 'rgba(240, 75, 75, 0.4)',\n    orangeColor: colorScheme.texasRose,\n    yellowColor: colorScheme.dandelion,\n    blackColor: colorScheme.tundora,\n    grayColor: colorScheme.dustyGray,\n    grayDarkColor: '#6E6E6E',\n    grayDarkerColor: '#454545',\n    grayLightColor: '#C4C4C4',\n    grayLighterColor: '#E6E6E6',\n    grayLightestColor: '#F7F7F7',\n    whiteColor: colorScheme.white,\n    whiteDarkColor: '#F7F7F7',\n    whiteDarkerColor: '#E6E6E6',\n    bodyBackgroundColor: '#F7F7F7',\n    listOverBackgroundColor: '#E6E6E6',\n    borderColor: '#C4C4C4',\n    tabBarColor: colorScheme.white\n}\n\nconst palette = {\n    primary: colors.baseColor,\n    primaryLight: colors.baseLightColor,\n    success: colors.greenColor,\n    warning: colors.orangeColor,\n    alert: colors.redColor,\n    delete: colors.redColor,\n}\n\nconst layout = {\n    containerMargin: '15px'\n}\n\nexport const materialuiTheme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        secondary: {\n            dark: '#1b2c3c',\n            main: '#456',\n            light: '#708194'\n        },\n        primary: {\n            dark: '#0090cc',\n            main: '#11c0ff',\n            light: '#6df3ff',\n            contrastText: '#FFF'\n        }\n    }\n})\n\nexport const styledTheme = {\n    tfso: {\n        colors,\n        palette,\n        layout\n    },\n    mui: materialuiTheme, // Make the entire material-ui theme available to styled components as well\n}\n\nexport type TfsoTheme = typeof styledTheme\n\ndeclare module 'styled-components' {\n    export interface DefaultTheme extends TfsoTheme {}\n    export type WithTheme = { theme: DefaultTheme }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport List from '@material-ui/core/List'\nimport Drawer from '@material-ui/core/Drawer'\nimport Link from '@material-ui/core/Link'\nimport Collapse from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport styled from 'styled-components/macro'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Divider from '@material-ui/core/Divider'\n\nconst StyledDrawer = styled(Drawer).attrs({\n    classes: {paper: 'MuiPaperStyle'}\n})`\n    &&{\n      width: ${({open}) => open ? 240 : 0}px;\n      height: 100%;\n    }\n    \n    .MuiPaperStyle{\n      position: static;\n    }\n`\n\nexport type MenuProps = {\n    open: boolean\n    onClose: () => void\n    mobile: boolean\n    children: React.ReactNode\n}\n\nexport default class Menu extends React.PureComponent<MenuProps>{\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onClose: PropTypes.func.isRequired,\n        mobile: PropTypes.bool.isRequired,\n        children: PropTypes.node.isRequired\n    }\n\n    render(){\n        return (\n            <StyledDrawer variant={this.props.mobile ? 'temporary' : 'persistent'} elevation={0} open={this.props.open} onClose={this.props.onClose}>\n                <List disablePadding>\n                    {this.props.children}\n                </List>\n            </StyledDrawer>\n        )\n    }\n}\n\nexport const MenuContent = props => <>{props.children}</>\n\nexport type MenuGroupProps = {\n    icon: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    onToggleExpanded: () => void\n    expanded: boolean\n    children: React.ReactNode\n}\n\nexport class MenuGroup extends React.PureComponent<MenuGroupProps>{\n    static propTypes = {\n        icon: PropTypes.elementType.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        onToggleExpanded: PropTypes.func.isRequired,\n        expanded: PropTypes.bool.isRequired,\n        children: PropTypes.node.isRequired\n    }\n\n    onToggleExpanded = e => {\n        // Stop propagation to let parent layout close mobile menu on clicks that do navigation\n        e.stopPropagation()\n        this.props.onToggleExpanded()\n    }\n\n    render(){\n        const Icon = this.props.icon\n        const backgroundColor = this.props.expanded ? '#fafaf9' : 'inherit'\n\n        return (\n            <>\n                <ListItem divider={!this.props.expanded} style={{backgroundColor}} button onClick={this.onToggleExpanded}>\n                    <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color='secondary'/></ListItemIcon>\n                    <ListItemText\n                        secondary={this.props.subtitle}\n                        primaryTypographyProps={{color: 'secondary'}}\n                        secondaryTypographyProps={{variant: 'caption'}}\n                    >\n                        {this.props.label}\n                    </ListItemText>\n                    <ListItemSecondaryAction>\n                        <IconButton onClick={this.onToggleExpanded}>\n                            {this.props.expanded ? <ExpandLess /> : <ExpandMore />}\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <Collapse in={this.props.expanded} timeout=\"auto\" style={{backgroundColor}}>\n                    <List dense disablePadding>\n                        {this.props.children}\n                    </List>\n                    <Divider />\n                </Collapse>\n            </>\n        )\n    }\n}\n\nexport type MenuRootItemProps = {\n    icon: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    selected: boolean\n    href?: string | ((content: React.ReactChild) => React.ReactChild)\n}\n\nexport class MenuRootItem extends React.PureComponent<MenuRootItemProps>{\n    static propTypes = {\n        icon: PropTypes.elementType.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired,\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n    }\n\n    render(){\n        const Icon = this.props.icon\n\n        const LinkContent = (\n            <ListItem divider>\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'secondary'}/></ListItemIcon>\n                <ListItemText\n                    secondary={this.props.subtitle}\n                    primaryTypographyProps={{color: this.props.selected ? 'primary' : 'secondary'}}\n                    secondaryTypographyProps={{variant: 'caption'}}\n                >\n                    {this.props.label}\n                </ListItemText>\n            </ListItem>\n        )\n\n        return (\n            <>\n                {typeof this.props.href === 'string'\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\n                    : this.props.href\n                        ? this.props.href(LinkContent)\n                        : LinkContent\n                }\n            </>\n        )\n    }\n}\n\nexport type MenuItemProps = {\n    icon?: React.ComponentType<SvgIconProps>\n    label: string\n    selected: boolean\n    href: string | ((content: React.ReactChild) => React.ReactChild)\n}\n\nconst NestedListItem = styled(ListItem)`&&{\n    padding-left: 52px;\n}`\n\nexport class MenuItem extends React.PureComponent<MenuItemProps>{\n    static propTypes = {\n        icon: PropTypes.elementType,\n        label: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired,\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n    }\n\n    render(){\n        const Icon = this.props.icon\n        const LinkContent = (\n            <NestedListItem>\n                {Icon &&\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'secondary'}/></ListItemIcon>\n                }\n                <ListItemText primaryTypographyProps={{color: this.props.selected ? 'primary' : 'secondary'}}>{this.props.label}</ListItemText>\n            </NestedListItem>\n        )\n\n        return (\n            <>\n                {typeof this.props.href === 'string'\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\n                    : this.props.href(LinkContent)\n                }\n            </>\n        )\n    }\n}","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\n\n// Original icon colors: TODO: Use these?\n// blue: #00B8F3\n// white: #fff\n\nexport type TfsoIconProps = {} & SvgIconProps\n\nexport default React.memo((props: TfsoIconProps) => (\n    <SvgIcon\n        {...props}\n        viewBox='0 0 50.59 30.35'\n    >\n        <path\n            d={'M33.22,9.62A6,6,0,0,0,29.85,13a5.06,5.06,0,0,0-4.56-2.87,5.06,5.06,0,1,1,5.06-5.06A5.06,5.06,0,0,0,33.22,9.62ZM45.53,20.23A5.06,5.06,0,0,1,41,17.36a6,6,0,0,1-3.36,3.37,5.06,5.06,0,0,1,2.87,4.56,5.06,5.06,0,1,0,5.06-5.06Zm-25.3-5.06a5.06,5.06,0,1,0-10.12,0,5.06,5.06,0,0,1-5.06,5.06,5.06,5.06,0,1,0,5.06,5.06,5.06,5.06,0,0,1,9.62-2.19,6,6,0,0,1,3.37-3.37A5.06,5.06,0,0,1,20.23,15.18Zm15.18-5.06a5.06,5.06,0,0,0-5.06,5v.13a5.06,5.06,0,0,1-2.87,4.5,6,6,0,0,1,3.37,3.36,5.06,5.06,0,0,1,4.56-2.87,5.06,5.06,0,0,0,0-10.12ZM25.29,20.23a5.06,5.06,0,1,0,5.06,5.06A5.06,5.06,0,0,0,25.29,20.23Z'}\n        />\n    </SvgIcon>\n))","import React from 'react'\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport styled from 'styled-components/macro'\nimport TfsoIcon from '../icons/Tfso'\n\nconst Root = styled.div`\n  width: 100%;\n`\nconst StyledAppBar = styled(AppBar)`&&{\n  background: white;\n  z-index: ${props => props.theme.mui.zIndex.drawer + 1};  \n}`\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n`\nconst Left = styled.div`&&{\n  flex: 0 0 240px;\n  background-color: ${({theme}) => theme.tfso.colors.tfso};\n  color: #fff;\n  padding-left: 10px;\n  padding-right: 10px;\n  display: flex;\n  align-items: center;\n}`\nconst LeftMobile = styled(Left)`&&{\n  flex: 0;\n}`\nconst Right = styled.div`&&{\n  flex: 1;\n}`\n\nconst MenuButton = styled(IconButton)`&&{\n  margin-left: -12px;\n  margin-right: 20px;\n}`\n\nconst ToolbarRight = styled.div`&&{\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}`\n\nexport type TopBarProps = {\n    title: string\n    onMenuToggle?: () => void\n    mobile: boolean\n    children?: React.ReactNode\n}\n\nexport default class TopBar extends React.PureComponent<TopBarProps>{\n    static propTypes = {\n        title: PropTypes.string.isRequired,\n        onMenuToggle: PropTypes.func,\n        mobile: PropTypes.bool.isRequired,\n        children: PropTypes.node\n    }\n\n    render(){\n        return (\n            <Root>\n                <StyledAppBar position=\"static\" color=\"default\" elevation={1}>\n                    <Wrapper>\n                        {this.props.mobile\n                            ? (\n                                <LeftMobile>\n                                    <TfsoIcon color=\"inherit\" fontSize=\"large\" />\n                                </LeftMobile>\n                            )\n                            : (\n                                <Left>\n                                    <TfsoIcon color=\"inherit\" fontSize=\"large\" />\n                                    <Typography variant=\"h6\" color=\"inherit\" style={{paddingLeft: 7}}>\n                                        {this.props.title}\n                                    </Typography>\n                                </Left>\n                            )\n                        }\n                        <Right>\n                            <Toolbar variant=\"dense\">\n                                {this.props.onMenuToggle &&\n                                <MenuButton color=\"inherit\" aria-label=\"Open drawer\" onClick={e => this.props.onMenuToggle && this.props.onMenuToggle()}>\n                                    <MenuIcon/>\n                                </MenuButton>\n                                }\n                                <ToolbarRight>\n                                    <div>{this.props.children}</div>\n                                </ToolbarRight>\n                            </Toolbar>\n                        </Right>\n                    </Wrapper>\n                </StyledAppBar>\n            </Root>\n        )\n    }\n}\n\nexport type TopMenuContentProps = {\n    children: React.ReactNode\n}\n\nexport class TopMenuContent extends React.PureComponent<TopMenuContentProps>{\n    static propTypes = {\n        children: PropTypes.node.isRequired\n    }\n\n    render(){\n        return (\n            <React.Fragment>\n                {this.props.children}\n            </React.Fragment>\n        )\n    }\n}","import React from 'react'\r\n\r\nfunction setTitle(text){\r\n    document.title = text\r\n}\r\n\r\ntype Props = {\r\n    text: string\r\n}\r\n\r\nexport default class DocumentTitle extends React.PureComponent<Props>{\r\n    constructor(props){\r\n        super(props)\r\n        setTitle(props.text)\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.text !== this.props.text){\r\n            setTitle(nextProps.text)\r\n        }\r\n    }\r\n    render(){\r\n        return ''\r\n    }\r\n}","import React from 'react'\nimport withWidth, {WithWidth} from '@material-ui/core/withWidth'\nimport useTheme from '@material-ui/styles/useTheme'\nimport {unstable_useMediaQuery as useMediaQuery} from '@material-ui/core/useMediaQuery'\n\ntype Omit<T, K extends string> = Pick<T, Exclude<keyof T, K>>\n\nexport type ScreenSizeData = {\n    mobile: boolean\n    tablet: boolean\n    desktop: boolean\n}\n\nexport type InjectedScreenSizeProps = {\n    screenSize: ScreenSizeData\n}\n\nexport type ScreenSizeProps = {\n    children: (screenSize: ScreenSizeData) => React.ReactElement\n} & WithWidth\n\nconst mobile = ['xs', 'sm']\nconst tablet = ['sm', 'md']\nconst desktop = ['md', 'lg', 'xl']\n\nconst getScreenSize = width => ({\n    mobile: mobile.includes(width),\n    tablet: tablet.includes(width),\n    desktop: desktop.includes(width)\n})\n\nconst ScreenSize = withWidth()((props: ScreenSizeProps) => props.children(getScreenSize(props.width)))\n\nexport function withScreenSize<P extends InjectedScreenSizeProps>(Component: React.ComponentType<P>): React.ComponentType<Omit<P, keyof InjectedScreenSizeProps>>{\n    return (props: any) => {\n        return (\n            <ScreenSize>\n                {(screenSize) => <Component {...props} screenSize={screenSize} />}\n            </ScreenSize>\n        )\n    }\n}\n\nexport const useScreenSize = () => {\n    const theme = useTheme()\n\n    const width = [...theme.breakpoints.keys]\n        .reverse()\n        .reduce((output, key) => {\n            const matches = useMediaQuery(theme.breakpoints.only(key))\n            return !output && matches ? key : output\n        }, null) || 'xs'\n\n    return getScreenSize(width)\n}\n\nexport default ScreenSize","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\nimport TopBar from './Topbar'\nimport DocumentTitle from './DocumentTitle'\nimport Menu from './Menu'\nimport {withScreenSize, ScreenSizeData} from '../utils/ScreenSize'\n\n// Wrap everything\nexport const LayoutWrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column; // Flex header and body from top to bottom\n`\n\n// Put topbar in here\nexport const LayoutHeader = styled.div`\n  \n`\n\n// Put everything below topbar here\nexport const LayoutBody = styled.div`\n  flex: 1; // Fill the rest of the page after header has taken its space\n  min-height: 0;\n  display: flex;\n`\n\n// Put menu here\nexport const LayoutBodyLeft = styled.div`\n\n`\n\n// Put your app here\nexport const LayoutBodyRight = styled.div`\n  flex: 1;\n  min-height: 0;\n  padding: 15px;\n  overflow-y: auto;\n`\n\ntype LayoutProps = {\n    title: string\n    docTitle: string\n    menuContent?: React.ReactNode\n    topMenuContent?: React.ReactNode\n} & {\n    screenSize: ScreenSizeData\n}\n\ntype LayoutState = {\n    menuOpen: boolean | null\n}\n\nexport default withScreenSize(class Layout extends React.PureComponent<LayoutProps, LayoutState>{\n    static propTypes = {\n        title: PropTypes.string.isRequired,\n        docTitle: PropTypes.string.isRequired,\n        menuContent: PropTypes.node,\n        topMenuContent: PropTypes.node\n    }\n\n    state: LayoutState = {\n        menuOpen: null\n    }\n\n    onCloseMenu = () => this.setState({menuOpen: false})\n    onMenuToggle = () => this.setState(state => ({menuOpen: !this.menuIsOpen()}))\n    menuIsOpen(){\n        if(this.state.menuOpen === null){\n            return !this.props.screenSize.mobile\n        }\n        return this.state.menuOpen\n    }\n    onClickContent = () => {\n        if(this.props.screenSize.mobile && this.menuIsOpen()){\n            this.onCloseMenu()\n        }\n    }\n\n    render(){\n        return (\n            <LayoutWrapper>\n                <DocumentTitle text={this.props.docTitle} />\n                <LayoutHeader>\n                    <TopBar\n                        title={this.props.title}\n                        onMenuToggle={this.onMenuToggle}\n                        mobile={this.props.screenSize.mobile}\n                    >\n                        {this.props.topMenuContent}\n                    </TopBar>\n                </LayoutHeader>\n                <LayoutBody>\n                    <LayoutBodyLeft onClick={this.onClickContent}>\n                        <Menu mobile={this.props.screenSize.mobile} open={this.menuIsOpen()} onClose={this.onCloseMenu}>\n                            {this.props.menuContent}\n                        </Menu>\n                    </LayoutBodyLeft>\n                    <LayoutBodyRight>\n                        {this.props.children}\n                    </LayoutBodyRight>\n                </LayoutBody>\n            </LayoutWrapper>\n        )\n    }\n})","import React from 'react'\nimport styled, {DefaultTheme} from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport MuiSnackbarContent from '@material-ui/core/SnackbarContent'\nimport WarningIcon from '@material-ui/icons/Warning'\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n}\n\nconst bgColor = (variant: AlertVariant, palette: DefaultTheme['tfso']['palette']) => {\n    switch(variant){\n    case 'success': return palette.success\n    case 'error': return palette.alert\n    case 'info': return palette.primaryLight\n    case 'warning': return palette.warning\n    }\n}\n\nconst SnackbarContent = ({variant, ...other}) => <MuiSnackbarContent {...other} />\nconst StyledSnack = styled(SnackbarContent)`&&{\n    background-color: ${({variant, theme}) => bgColor(variant, theme.tfso.palette)}\n}`\n\ntype AlertVariant = 'success' | 'warning' | 'error' | 'info'\n\nexport type AlertProps = {\n    message: React.ReactNode\n    onClose(): void\n    variant: AlertVariant\n}\n\nconst Alert = (props: AlertProps) => {\n    const {message, onClose, variant} = props\n    const Icon = variantIcon[variant]\n\n    return (\n        <StyledSnack\n            variant={variant}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" style={{display: 'flex', alignItems: 'center'}}>\n                    <Icon style={{fontSize: 20, opacity: 0.9, marginRight: 10}} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    onClick={onClose}\n                >\n                    <CloseIcon style={{fontSize: 20}} />\n                </IconButton>,\n            ]}\n        />\n    )\n}\n\nAlert.propTypes = {\n    message: PropTypes.node.isRequired,\n    onClose: PropTypes.func.isRequired,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\n}\n\nexport default Alert","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\n\nexport type BigNumberProps = {\n    /**\n     * Choose `light` when you have a dark background, otherwise `dark`\n     * @default light\n     */\n    color?: 'light' | 'dark'\n\n    /**\n     * @default large\n     */\n    size?: 'medium' | 'large'\n    children: string | number\n}\n\nconst fontSizeMap: {[P in Required<BigNumberProps>['size']]: number} = {\n    medium: 32,\n    large: 48\n}\n\nconst defaultProps: Required<Pick<BigNumberProps, 'color' | 'size'>> = {\n    color: 'light',\n    size: 'large',\n}\n\nconst wrapper = ({size, color, ...props}: Required<BigNumberProps>) => <div {...props} />\n// TODO: These should be on the BigNumber component instead..\nwrapper.defaultProps = defaultProps\nwrapper.propTypes = {\n    color: PropTypes.oneOf(['light', 'dark']),\n    size: PropTypes.oneOf(['medium', 'large']),\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]).isRequired\n}\n\nconst BigNumber = styled(wrapper)`&&{\n    font-size: ${({theme, size = defaultProps.size}) => theme.mui.typography.pxToRem(fontSizeMap[size])};\n    line-height: normal;\n    letter-spacing: 0.08em;\n    color: ${({color = defaultProps.color}) => color === 'light' ? '#FFFFFF' : '#404040'};\n    white-space: nowrap\n}`\n\nexport default BigNumber as React.ComponentType<BigNumberProps>","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\nimport Slide from '@material-ui/core/Slide'\n\nexport type ConfirmationDialogProps = {\n    open: boolean\n    title?: string\n    message: string\n    okButtonText: string\n    cancelButtonText: string\n    onOk: () => void\n    onCancel: () => void\n}\n\nconst TransitionComponent = props => <Slide direction='up' {...props} />\n\nconst ConfirmationDialog = (props: ConfirmationDialogProps) => {\n    const {open, onCancel, onOk, title, message, okButtonText, cancelButtonText} = props\n    return (\n        <Dialog\n            TransitionComponent={TransitionComponent}\n            keepMounted={false}\n            open={open}\n            onClose={onCancel}\n            maxWidth={'xs'}\n        >\n            {title && <DialogTitle>{title}</DialogTitle>}\n            <DialogContent>{message}</DialogContent>\n            <DialogActions>\n                <Button onClick={onCancel} color=\"primary\">{cancelButtonText}</Button>\n                <Button onClick={onOk} color=\"secondary\">{okButtonText}</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nConfirmationDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    title: PropTypes.string,\n    message: PropTypes.string.isRequired,\n    okButtonText: PropTypes.string.isRequired,\n    cancelButtonText: PropTypes.string.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n}\n\nexport default ConfirmationDialog","import React from 'react'\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport SearchIcon from '@material-ui/icons/Search'\n\nexport type SearchFieldProps = TextFieldProps\n\ntype State = {\n    editing: boolean\n}\n\nexport default class SearchField extends React.PureComponent<SearchFieldProps, State>{\n    static defaultProps = {\n        placeholder: 'Search',\n        margin: 'dense',\n        InputProps: {\n            startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>\n        }\n    }\n\n    state: State = {\n        editing: false\n    }\n\n    onBlur = (e: React.EventHandler<any>) => {\n        this.setState({editing: false})\n        const {onBlur} = this.props\n        onBlur && onBlur(e)\n    }\n\n    onFocus = (e: React.EventHandler<any>) => {\n        this.setState({editing: true})\n        const {onFocus} = this.props\n        onFocus && onFocus(e)\n    }\n\n    render(){\n        return (\n            <TextField\n                fullWidth={this.state.editing}\n                {...this.props}\n                onBlur={this.onBlur}\n                onFocus={this.onFocus}\n            />\n        )\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\n\ntype Props = {\n    value: string\n    onChange: (value: string) => void\n    dirty?: boolean\n    enableDirtyCheck?: boolean\n}\n\ntype State = {\n    editing: boolean\n    value: string\n    prevProps: Props\n}\n\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>\n\nfunction handleEvent(event: React.KeyboardEvent<HTMLDivElement>){\n    event.preventDefault()\n    event.stopPropagation()\n    // the above only prevents other synthetic events, if we want to prevent global listeners too, we need to stop the propagation on the native event as well\n    event.nativeEvent.stopImmediatePropagation()\n}\n\nexport type TextFieldEditorProps = Props & Partial<Omit<TextFieldProps, 'value' | 'onChange'>>\n\nexport default class TextFieldEditor extends React.PureComponent<TextFieldEditorProps, State>{\n    static propTypes = {\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        dirty: PropTypes.bool\n    }\n\n    _inputRef: React.RefObject<HTMLInputElement> = React.createRef()\n\n    state: State = {\n        editing: false,\n        value: this.props.value,\n        prevProps: this.props\n    }\n\n    static getDerivedStateFromProps(props: Readonly<TextFieldEditorProps>, state: Readonly<State>){\n        const prevProps = state.prevProps\n\n        if(prevProps.value !== props.value){ return {value: props.value, prevProps: props} }\n\n        return {prevProps: props}\n    }\n\n    blur = () => { this._inputRef.current && this._inputRef.current.blur() }\n\n    onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n        this.props.onKeyDown && this.props.onKeyDown(event)\n        if(event.defaultPrevented){ return }\n\n        if(event.ctrlKey){\n            switch(event.key){\n            case 's':\n            // this event should not be 'handled' here (eg. invoke handleEvent(event)), control may want to perform other actions on ctrl+s\n            // It should behave as a save changes in the control as well however\n                this.blur()\n                break\n            case 'z':\n                handleEvent(event)\n                this.setState({editing: false, value: this.props.value}, this.blur)\n                break\n            default: break\n            }\n        }else{\n            switch(event.key){\n            case 'Enter':\n                if(this.props.multiline){ break }\n                handleEvent(event)\n                this.blur()\n                break\n            case 'Escape':\n                handleEvent(event)\n                this.setState({editing: false, value: this.props.value}, this.blur)\n                break\n            default: break\n            }\n        }\n    }\n\n    onFocus = (e: React.EventHandler<any>) => {\n        this.setState({editing: true})\n        this.props.onFocus && this.props.onFocus(e)\n    }\n\n    onBlur = (e: React.EventHandler<any>) => {\n        if(!this.state.editing){ return } // The method should be safe to call multiple times, but we don't want to raise the event multiple times if we dont need to\n\n        this.props.onChange(this.state.value)\n        this.setState({editing: false})\n        this.props.onBlur && this.props.onBlur(e)\n    }\n\n    onChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement | HTMLSelectElement>) => {\n        const value = event.target.value\n        this.setState({value, editing: true})\n    }\n\n    render(){\n        const {dirty: dirtyProp, onChange: onChangeProp, value: valueProp, enableDirtyCheck, ...otherProps} = this.props\n        const {value} = this.state\n\n        const isDirty = enableDirtyCheck ? this.props.value !== value || !!dirtyProp : !!dirtyProp\n\n        return (\n            <TextField\n                {...otherProps as any}\n                inputRef={this._inputRef}\n                value={value}\n                onFocus={this.onFocus}\n                onChange={this.onChange}\n                onBlur={this.onBlur}\n                onKeyDown={this.onKeyDown}\n                InputProps={{style: {fontStyle: isDirty ? 'italic' : 'normal'}}}\n            />\n        )\n    }\n}","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport {withTheme, DefaultTheme, WithTheme} from 'styled-components'\n\nimport TrendingUp from '@material-ui/icons/TrendingUp'\nimport TrendingFlat from '@material-ui/icons/TrendingFlat'\nimport TrendingDown from '@material-ui/icons/TrendingDown'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\n\nexport type TrendingProps = {\n    variant: 'up' | 'down' | 'flat'\n} & SvgIconProps\n\nconst iconMap: {[P in TrendingProps['variant']]: React.ComponentType<SvgIconProps>} = {\n    up: TrendingUp,\n    flat: TrendingFlat,\n    down: TrendingDown,\n}\n\nconst getColor = (variant: TrendingProps['variant'], theme: DefaultTheme) => {\n    switch(variant){\n    case 'up': return theme.tfso.palette.success\n    case 'down': return theme.tfso.palette.warning\n    case 'flat': return theme.tfso.palette.alert\n    default: return undefined\n    }\n}\n\nconst trending = ({variant, theme, ...iconProps}: TrendingProps & WithTheme) => {\n    const Icon = iconMap[variant]\n    const nativeColor = getColor(variant, theme)\n    return (\n        <Icon\n            nativeColor={nativeColor}\n            {...iconProps}\n        />\n    )\n}\n\ntrending.propTypes = {\n    variant: PropTypes.oneOf(['up', 'down', 'flat']).isRequired\n}\n\nexport default React.memo(withTheme(trending))","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\n// https://www.w3schools.com/charsets/ref_emoji.asp\nconst emojis = {\n    middleFinger: <>&#128405;</>,\n    indexFinger: <>&#128070;</>,\n    flex: <>&#128170;</>,\n    brokenHeart: <>&#128148;</>,\n    perfect: <>&#128076;</>,\n    thumbsUp: <>&#128077;</>,\n    thumbsDown: <>&#128078;</>,\n    clap: <>&#128079;</>,\n    heart: <>&#128152;</>,\n    fire: <>&#128293;</>,\n    bulb: <>&#128161;</>,\n    crap: <>&#128169;</>,\n    thinking: <>&#129300;</>,\n    rocket: <>&#128640;</>,\n}\n\nexport type EmojiProps = {\n    variant: keyof typeof emojis\n}\n\nconst Emoji = (props: EmojiProps) => emojis[props.variant]\n\nEmoji.propTypes = {\n    variant: PropTypes.oneOf(Object.keys(emojis))\n}\n\nexport default Emoji","import React from 'react'\nimport PropTypes from 'prop-types'\n\ntype Props = {\n    beforeShow?: any\n    delayMs?: number\n    show?: boolean\n    children: React.ReactNode\n}\n\ntype State = {\n    show: boolean\n}\n\nexport default class Delay extends React.PureComponent<Props, State>{\n    static propTypes = {\n        beforeShow: PropTypes.node,\n        delayMs: PropTypes.number,\n        show: PropTypes.bool,\n        children: PropTypes.node.isRequired\n    }\n\n    _timer: any = null\n\n    constructor(props){\n        super(props)\n        this.state = {\n            show: false\n        }\n    }\n    componentDidMount(){\n        this.setState({show: false})\n        this._timer = setTimeout(() => {\n            this.setState({show: true})\n        }, this.props.delayMs || 1000)\n    }\n    componentWillUnmount(){\n        clearTimeout(this._timer)\n    }\n    render(){\n        if(this.props.show || this.state.show){\n            return this.props.children\n        }\n\n        return this.props.beforeShow || null\n    }\n}","import React, {HTMLProps} from 'react'\nimport PropTypes from 'prop-types'\n\ntype Props = {\n    children: (hover: boolean, ref: React.RefObject<any>) => React.ReactNode\n} & HTMLProps<HTMLDivElement>\n\ntype State = {\n    hover: boolean\n}\n\nexport default class Hoverable extends React.PureComponent<Props, State>{\n    private ref: React.RefObject<any>\n\n    static propTypes = {\n        children: PropTypes.func.isRequired\n    }\n\n    constructor(props){\n        super(props)\n\n        this.ref = React.createRef()\n\n        this.state = {\n            hover: false\n        }\n    }\n\n    toggleHover = () => {\n        this.setState(state => ({hover: !state.hover}))\n    }\n\n    hoverOn = () => this.setState({hover: true})\n    hoverOff = () => this.setState({hover: false})\n\n    render(){\n        const {children, ...restProps} = this.props\n\n        return (\n            <div\n                ref={this.ref}\n                onMouseEnter={this.hoverOn}\n                onMouseLeave={this.hoverOff}\n                {...restProps}\n            >\n                {children(this.state.hover, this.ref)}\n            </div>\n        )\n    }\n}","import React, {HTMLProps} from 'react'\nimport PropTypes from 'prop-types'\n\ntype Props = {\n    children: (tabIndex: number, next: () => void, prev: () => void) => React.ReactNode\n    index?: number\n    length?: number\n} & HTMLProps<HTMLDivElement>\n\ntype State = {\n    index: number\n}\n\nexport default class Wizard extends React.PureComponent<Props, State>{\n    static propTypes = {\n        children: PropTypes.func.isRequired,\n        index: PropTypes.number,\n        length: PropTypes.number\n    }\n\n    constructor(props){\n        super(props)\n        this.state = {index: props.index || 0}\n    }\n\n    static getDerivedStateFromProps(nextProps){\n        if(nextProps.hasOwnProperty('index')){\n            return {index: nextProps.index}\n        }\n        return null\n    }\n\n    next = () => this.setState(state => {\n        if(this.props.length && state.index + 1 >= this.props.length) return state\n        return {index: state.index + 1}\n    })\n    prev = () => this.setState(state => {\n        if(state.index - 1 < 0) return state\n        return {index: state.index - 1}\n    })\n\n    render(){\n        const {children, ...restProps} = this.props\n\n        return (\n            <div {...restProps}>\n                {children(this.state.index, this.next, this.prev)}\n            </div>\n        )\n    }\n}","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Styled, {css} from 'styled-components/macro'\n\nexport type TfsoLoadingIconProps = {\n    /**\n     * @default infinite\n     */\n    once?: boolean\n} & SvgIconProps\n\nconst TfsoLoadingIconWrapper = ({once, ...other}: TfsoLoadingIconProps) => <SvgIcon {...other}/>\n\nconst path = css`\n    opacity: 1;\n    animation-delay: 1.5s;\n`\nconst StyledSvgIcon: React.ComponentType<SvgIconProps> = Styled(TfsoLoadingIconWrapper)`&&{\n    #path1{\n        ${path}\n        animation: fade-in1 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path2{\n        ${path}\n        animation: fade-in2 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path3{\n        ${path}\n        animation: fade-in3 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path4{\n        ${path}\n        animation: fade-in4 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path5{\n        ${path}\n        animation: fade-in5 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    @keyframes fade-in1 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 1; }\n        40% { opacity: 1; }\n        60% { opacity: 1; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in2 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 1; }\n        60% { opacity: 1; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in3 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 0.2; }\n        60% { opacity: 1; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in4 {\n        0%   { opacity:0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 0.2; }\n        60% { opacity: 0.2; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in5 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 0.2; }\n        60% { opacity: 0.2; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n}` as any // seems like returntype of styled-components adds string as a type of _ref.. dunnp why\n\nexport default React.memo((props: TfsoLoadingIconProps) => (\n    <StyledSvgIcon\n        {...props}\n        viewBox=\"0 0 37 23\"\n        fillRule='evenodd'\n        strokeWidth=\"1\"\n    >\n        <path d=\"M21.79 9.81C21.17789 8.5323532 19.886707 7.7195303 18.47 7.72 16.444136 7.7143752 14.803816 6.0724096 14.800223 4.0465408 14.79663 2.020672 16.431115 0.37289845 18.456947 0.36008776 20.482778 0.34727707 22.137972 1.9742478 22.16 4c-0.01782 1.4288443 0.793121 2.7388262 2.08 3.36-1.120033 0.4431782-2.006822 1.3299671-2.45 2.45l0 0z\" id=\"path5\"/>\n        <path d=\"m33.24 15.09c-1.427527 0.01209-2.733245-0.802525-3.35-2.09-0.443178 1.120033-1.329967 2.006822-2.45 2.45 1.275973 0.613987 2.088053 1.903991 2.09 3.32 0 2.032408 1.647592 3.68 3.68 3.68 2.032408 0 3.68-1.647592 3.68-3.68 0-2.032408-1.647592-3.68-3.68-3.68l0.03 0 0 0z\" id=\"path4\"/>\n        <path d=\"m14.79 11.41c0-2.0351693-1.649831-3.685-3.685-3.685-2.0351693 0-3.685 1.6498307-3.685 3.685 0 2.032408-1.6475921 3.68-3.68 3.68-2.0324079 0-3.68 1.647592-3.68 3.68 0 2.032408 1.6475921 3.68 3.68 3.68 2.0324079 0 3.68-1.647592 3.68-3.68-0.00119-1.719312 1.1882715-3.210312 2.864877-3.591141 1.676605-0.380829 3.39346 0.450022 4.135123 2.001141 0.443178-1.120033 1.329967-2.006822 2.45-2.45-1.27208-0.616837-2.079908-1.906255-2.08-3.32l0 0 0 0z\" id=\"path2\"/>\n        <path d=\"m25.84 7.73c-2.016889-0.0001192-3.658077 1.6232303-3.68 3.64l0 0.09c-0.02094 1.397916-0.830116 2.663946-2.09 3.27 1.120033 0.443178 2.006822 1.329967 2.45 2.45 0.613987-1.275973 1.903991-2.088053 3.32-2.09 2.035169 0 3.685-1.649831 3.685-3.685 0-2.0351693-1.649831-3.685-3.685-3.685l0 0.01 0 0z\" id=\"path3\"/>\n        <path d=\"m18.47 15.1c-2.031097 0.0055-3.673671 1.655547-3.669994 3.686649 0.0037 2.031101 1.652215 3.675171 3.683318 3.673336C20.514428 22.45815 22.159993 20.811104 22.16 18.78 22.162665 17.800536 21.774754 16.860421 21.082167 16.167833 20.389579 15.475246 19.449463 15.087335 18.47 15.09l0 0.01 0 0z\" id=\"path1\"/>\n    </StyledSvgIcon>\n))\n","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Link from '@material-ui/core/Link'\n\nexport const MaterialUiIcon = React.memo((props: SvgIconProps) => (\n    <SvgIcon {...props} viewBox=\"0 0 600 476.6\">\n        <path d=\"m0 259.8v-259.8l225 129.9v86.6l-150-86.6v173.2z\" fill=\"#00b0ff\"/>\n        <path d=\"m225 129.9 225-129.9v259.8l-150 86.6-75-43.3 150-86.6v-86.6l-150 86.6z\" fill=\"#0081cb\"/>\n        <path d=\"m225 303.1v86.6l150 86.6v-86.6z\" fill=\"#00b0ff\"/>\n        <path d=\"m375 476.3 225-129.9v-173.2l-75 43.3v86.6l-150 86.6zm150-346.4v-86.6l75-43.3v86.6z\" fill=\"#0081cb\"/>\n    </SvgIcon>\n))\n\nexport type MaterialUiLinkProps = {\n    iconProps?: SvgIconProps\n}\n\nconst MaterialUiLink = (props: MaterialUiLinkProps) => (\n    <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\n        <MaterialUiIcon fontSize='large' {...props.iconProps as any} />\n    </Link>\n)\n\nexport default MaterialUiLink\n","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Link from '@material-ui/core/Link'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nexport const GitHubIcon = React.memo((props: SvgIconProps) => (\n    <SvgIcon {...props}>\n        <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\n    </SvgIcon>\n))\n\nexport type GitHubLinkProps = {\n    path?: string\n    tooltip?: string\n    iconProps?: SvgIconProps\n}\n\nconst GitHubLink = (props: GitHubLinkProps) => {\n    return (\n        <Link href={`https://github.com/tfso/react-tfso-components${props.path ? `/${props.path}` : ''}`} target='_blank' rel='noreferrer' >\n            <Tooltip title={props.tooltip ? props.tooltip : 'View on GitHub'}>\n                <GitHubIcon fontSize={props.iconProps && props.iconProps.fontSize || 'large'} {...props.iconProps as any} />\n            </Tooltip>\n        </Link>\n    )\n}\n\nexport default GitHubLink\n","import React from 'react'\n\nimport styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Zoom from '@material-ui/core/Zoom'\nimport Link from '@material-ui/core/Link'\n\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\nimport {MaterialUiIcon} from '../components/MaterialUiLink'\nimport {GitHubIcon} from '../components/GitHubLink'\n\n// TODO: this could be a Util HOC component\nconst CenterTop = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    flex-direction: column;\n    height: 100%;\n`\n\nconst Home = () => {\n    return (\n        <CenterTop>\n            <TfsoLoading once color='primary' fontSize='inherit' style={{fontSize: 400}} />\n            <Typography variant='h3' color='primary' paragraph>\n                REACT-TFSO-COMPONENTS\n            </Typography>\n            <Typography variant='h6' align='center' color='textSecondary' paragraph>\n                Something something useful description something dark side (TODO) <br />\n                Supplementary React components based on Material-UI with Tfso styling<br />\n            </Typography>\n            <Grid container justify='center'>\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\n                    <Zoom in appear style={{transitionDelay: '250ms'}} >\n                        <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\n                            <MaterialUiIcon style={{fontSize: 150}} />\n                        </Link>\n                    </Zoom>\n                    <Zoom in appear style={{transitionDelay: '750ms'}} >\n                        <Typography variant='h6'>\n                            Find standard components <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>here</Link>\n                        </Typography>\n                    </Zoom>\n                </Grid>\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\n                    <Zoom in appear style={{transitionDelay: '500ms'}}>\n                        <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >\n                            <GitHubIcon style={{fontSize: 150}} color='primary' />\n                        </Link>\n                    </Zoom>\n                    <Zoom in appear style={{transitionDelay: '1000ms'}} >\n                        <Typography variant='h6'>\n                            View source on <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >GitHub</Link>\n                        </Typography>\n                    </Zoom>\n                </Grid>\n            </Grid>\n        </CenterTop>\n    )\n}\n\nexport default Home","import React from 'react'\nimport Prism from 'prismjs'\n\n// Load languages\nimport 'prismjs/components/prism-clike'\nimport 'prismjs/components/prism-css'\nimport 'prismjs/components/prism-markup'\nimport 'prismjs/components/prism-javascript'\nimport 'prismjs/components/prism-typescript'\nimport 'prismjs/components/prism-jsx'\nimport 'prismjs/components/prism-tsx'\n\n// Load style\nimport 'prismjs/themes/prism.css'\n\ntype CodeProps = {\n    language: 'js' | 'ts' | 'tsx' | 'jsx'\n    children: React.ReactNode\n}\n\nexport class Code extends React.PureComponent<CodeProps>{\n    _ref: React.RefObject<HTMLPreElement> = React.createRef()\n\n    componentDidMount(){\n        this.highlight()\n    }\n\n    componentDidUpdate(){\n        this.highlight()\n    }\n\n    highlight = () => {\n        if(!this._ref.current){ return }\n        Prism.highlightElement(this._ref.current!)\n    }\n\n    render(){\n        return (\n            <pre ref={this._ref} className={`language-${this.props.language}`}>\n                <code className={`language-${this.props.language}`}>\n                    {this.props.children}\n                </code>\n            </pre>\n        )\n    }\n}","import React, {ReactChild} from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport Divider from '@material-ui/core/Divider'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport CodeIcon from '@material-ui/icons/Code'\n\nimport GitHubLink from './GitHubLink'\nimport {Code} from './code'\n\nexport const Demo = (props) => <Paper style={{padding: 15, marginBottom: 30}}>{props.children}</Paper>\n\nexport type DemoTitleProps = {\n    children: string\n    /**\n     * The path to the Demo component. `src/demo/demos/` will be appended in front of the path\n     */\n    demoPath?: string\n\n    /**\n     * The path to the Implementation of the component. `src/lib/` will be appended in front of the path\n     */\n    srcPath?: string\n}\nexport const DemoTitle = (props: DemoTitleProps) => {\n    return (\n        <Grid container justify='space-between' alignItems='baseline' >\n            <Grid item>\n                <Typography variant=\"h5\">\n                    {props.children}\n                </Typography>\n            </Grid>\n            {props.srcPath || props.demoPath\n                ? <Grid item xs={2} container spacing={16} justify='flex-end'>\n                    {props.demoPath && <Grid item><GitHubLink iconProps={{fontSize: 'default', color: 'secondary'}} path={`blob/master/src/demo/demos/${props.demoPath}`} tooltip={`View demo source for ${props.children}`} /></Grid>}\n                    {props.srcPath && <Grid item><GitHubLink iconProps={{fontSize: 'default', color: 'primary'}} path={`blob/master/src/lib/${props.srcPath}`} tooltip={`View source for ${props.children}`}/></Grid> }\n                </Grid>\n                : null\n            }\n        </Grid>\n    )\n}\nexport const DemoHelp = (props) => <Typography variant='subtitle1' paragraph>{props.children}</Typography>\nexport const DemoContent = (props: { children: Array<ReactChild> | ReactChild}) => (\n    <div style={{marginTop: 30}}>\n        <Typography variant=\"subtitle1\" >Example</Typography>\n        <Divider />\n        <br />\n        <Grid container spacing={16} alignItems='center'>\n            {props.children && Array.isArray(props.children)\n                ? props.children.map((child, i) => (\n                    <Grid item key={i} xs={i === 0 ? 12 : false}>\n                        {child}\n                    </Grid>\n                ))\n                : <Grid item xs={12} >{props.children}</Grid>\n            }\n        </Grid>\n    </div>\n)\n\nexport type DemoPropsProps = {\n    title?: string\n    children: React.ReactNode\n}\n\nexport const DemoProps = (props: DemoPropsProps) => (\n    <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography variant='h6'>{props.title || 'Props'}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Type</TableCell>\n                        <TableCell>Default</TableCell>\n                        <TableCell>Description</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.children}\n                </TableBody>\n            </Table>\n        </ExpansionPanelDetails>\n    </ExpansionPanel>\n)\n\nexport type DemoPropProps = {\n    name: string\n    type: string\n    default?: string\n    description?: string\n    required?: boolean\n}\n\nexport const DemoProp = (props: DemoPropProps) => (\n    <TableRow>\n        <TableCell><code>{`${props.required ? '* ' : ''}${props.name}`}</code></TableCell>\n        <TableCell><code>{props.type}</code></TableCell>\n        <TableCell><code>{props.default}</code></TableCell>\n        <TableCell><Typography>{props.description}</Typography></TableCell>\n    </TableRow>\n)\n\ntype DemoCodeProps = Code['props']\nexport const DemoCode = (props: DemoCodeProps) => (\n    <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<CodeIcon />}>\n            <Typography variant='h6'>{`View Demo (${props.language})`}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n            <Code {...props} />\n        </ExpansionPanelDetails>\n    </ExpansionPanel>\n)","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\nimport Tfso, {TfsoIconProps} from '../../lib/icons/Tfso'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\n\nexport default class Icons extends React.PureComponent{\n    render(){\n        return (\n            <>\n                <TfsoDemo />\n                <TfsoLoadingDemo />\n            </>\n        )\n    }\n}\n\ntype TfsoLogoDemoState = {\n    color: TfsoIconProps['color']\n    fontSize: TfsoIconProps['fontSize']\n    nativeColor: TfsoIconProps['nativeColor']\n}\n\nclass TfsoDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\n    state:TfsoLogoDemoState = {\n        color: 'primary',\n        fontSize: 'large',\n        nativeColor: ''\n    }\n\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/Tfso.tsx'>Tfso</DemoTitle>\n                <DemoHelp>Tfso logo icon</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\n                </DemoProps>\n                <DemoContent>\n                    <Tfso\n                        color={this.state.color}\n                        fontSize={this.state.fontSize}\n                        nativeColor={this.state.nativeColor}\n                    />\n                    <TextField\n                        select\n                        label='color'\n                        value={this.state.color}\n                        onChange={this.handleChange('color')}\n                    >\n                        <MenuItem value='inherit' >inherit</MenuItem>\n                        <MenuItem value='primary' >primary</MenuItem>\n                        <MenuItem value='secondary' >secondary</MenuItem>\n                        <MenuItem value='default' >default</MenuItem>\n                        <MenuItem value='action' >action</MenuItem>\n                        <MenuItem value='disabled' >disabled</MenuItem>\n                        <MenuItem value='error' >error</MenuItem>\n                    </TextField>\n                    <TextField\n                        select\n                        label='fontSize'\n                        value={this.state.fontSize}\n                        onChange={this.handleChange('fontSize')}\n                    >\n                        <MenuItem value='small'>small</MenuItem>\n                        <MenuItem value='default'>default</MenuItem>\n                        <MenuItem value='large'>large</MenuItem>\n\n                    </TextField>\n                    <TextField\n                        label='nativeColor'\n                        placeholder='#00B8F3'\n                        value={this.state.nativeColor}\n                        onChange={this.handleChange('nativeColor')}\n                    />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}\n\nclass TfsoLoadingDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\n    state:TfsoLogoDemoState = {\n        color: 'primary',\n        fontSize: 'large',\n        nativeColor: ''\n    }\n\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/TfsoLoading.tsx'>Tfso Loading</DemoTitle>\n                <DemoHelp>Tfso logo loading icon</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='once' type='boolean' default='false' description='If true, the icon will animate once'/>\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\n                </DemoProps>\n                <DemoContent>\n                    <TfsoLoading\n                        color={this.state.color}\n                        fontSize={this.state.fontSize}\n                        nativeColor={this.state.nativeColor}\n                    />\n                    <TextField\n                        select\n                        label='color'\n                        value={this.state.color}\n                        onChange={this.handleChange('color')}\n                    >\n                        <MenuItem value='inherit' >inherit</MenuItem>\n                        <MenuItem value='primary' >primary</MenuItem>\n                        <MenuItem value='secondary' >secondary</MenuItem>\n                        <MenuItem value='default' >default</MenuItem>\n                        <MenuItem value='action' >action</MenuItem>\n                        <MenuItem value='disabled' >disabled</MenuItem>\n                        <MenuItem value='error' >error</MenuItem>\n                    </TextField>\n                    <TextField\n                        select\n                        label='fontSize'\n                        value={this.state.fontSize}\n                        onChange={this.handleChange('fontSize')}\n                    >\n                        <MenuItem value='small'>small</MenuItem>\n                        <MenuItem value='default'>default</MenuItem>\n                        <MenuItem value='large'>large</MenuItem>\n                    </TextField>\n                    <TextField\n                        label='nativeColor'\n                        placeholder='#00B8F3'\n                        value={this.state.nativeColor}\n                        onChange={this.handleChange('nativeColor')}\n                    />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import {createHashHistory} from 'history'\n\nconst history = createHashHistory({\n    basename: '',\n    hashType: 'slash',\n})\nexport default history","import React from 'react'\n\nimport history from '../history'\n\nimport MuiLink, {LinkProps as MuiLinkProps} from '@material-ui/core/Link'\nimport styled from 'styled-components/macro'\n\nexport type LinkProps = {\n    to?: string\n    children: React.ReactNode\n} & MuiLinkProps\n\nexport default class Link extends React.PureComponent<LinkProps>{\n    onClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n        this.props.onClick && this.props.onClick(event)\n\n        if(event.defaultPrevented || !this.props.to){\n            return\n        }\n        event.preventDefault()\n        history.push(this.props.to.toLowerCase())\n    }\n\n    render(){\n        const {to, href, underline, ...other} = this.props\n        return <MuiLink\n            {...other}\n            href={to && to.toLowerCase() || href}\n            underline={underline || 'none'}\n            rel={this.props.target === '_blank' ? 'noreferrer' : undefined}\n            onClick={this.onClick}\n        />\n    }\n}\n\nconst AnchorLink = styled(Link)`&&{\n    opacity: 0.2;\n    :hover{\n        opacity: 1;\n    }\n}`\n\nconst getPage = () => window.location.hash.split('/')[1]\nexport const Anchor = (props: {id: string}) => {\n    const id = `/${getPage()}/${props.id.toLowerCase()}`\n    return (\n        <AnchorLink id={id} to={id}>#</AnchorLink>\n    )\n}","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport Typography, {TypographyProps} from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport {Code} from '../components/code'\nimport Link, {Anchor} from '../components/Link'\n\n// https://www.w3schools.com/charsets/ref_emoji.asp\nconst emojis = {\n    middleFinger: <>&#128405;</>,\n    indexFinger: <>&#128070;</>,\n    flex: <>&#128170;</>,\n    brokenHeart: <>&#128148;</>,\n    perfect: <>&#128076;</>,\n    thumbsUp: <>&#128077;</>,\n    thumbsDown: <>&#128078;</>,\n    clap: <>&#128079;</>,\n    heart: <>&#128152;</>,\n    fire: <>&#128293;</>,\n    bulb: <>&#128161;</>,\n    crap: <>&#128169;</>,\n    thinking: <>&#129300;</>,\n    rocket: <>&#128640;</>\n}\n\nconst Section = styled.div`&&{\n    margin-top: ${({theme}) => theme.mui.spacing.unit * 4}px;\n    margin-bottom: ${({theme}) => theme.mui.spacing.unit * 2}px;\n}`\n\nconst SubHeading = (props: TypographyProps) => <Typography variant='h4' paragraph {...props} />\nconst Paragraph = (props: TypographyProps) => <Typography variant='body1' paragraph {...props} component='div'/>\nconst Tip = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\n    <Card elevation={0}>\n        <CardContent>\n            <Typography variant='h6'>Why?</Typography>\n            <Typography variant='body1' component='div'>{props.children}</Typography>\n        </CardContent>\n    </Card>\n    <br />\n</>)\n\nconst Guideline = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\n    <Card elevation={0}>\n        <CardContent>\n            <Typography variant='body1' component='div'>{props.children}</Typography>\n        </CardContent>\n    </Card>\n</>)\n\nexport default class Guidelines extends React.PureComponent{\n    render = () => (<>\n        {this.renderHeading()}\n        {this.renderGuidelines()}\n        {this.renderTips()}\n        {this.renderContributing()}\n    </>)\n\n    renderHeading = () => (\n        <>\n            <Typography variant='h2' paragraph>\n                Guidelines\n            </Typography>\n            <Typography variant='subtitle1' paragraph>\n                <b>{'{WIP} '}</b>Some general guidelines for developing React applications in TFSO\n            </Typography>\n        </>\n    )\n\n    renderGuidelines = () => (\n        <Section>\n            <SubHeading>General <Anchor id={'general'}/></SubHeading>\n            <Guideline title='Material Design'>\n                We strive to follow <Link underline='hover' href='https://material.io/design/' target='_blank'>Google's Material Design</Link> principles. <br />\n                Use components and icons from the <Link underline='hover' href='https://material-ui.com/' target='_blank'>MaterialUi package</Link><br />\n                This package also provides a theme to be used with <code>material-ui</code>, <Link underline='hover' to='/theme'>get started using it here</Link>\n            </Guideline>\n        </Section>\n    )\n\n    renderTips = () => (\n        <Section>\n            <SubHeading>\n                {emojis.indexFinger} Do's &amp; Don'ts {emojis.middleFinger} <Anchor id={'dodont'} />\n            </SubHeading>\n            <Tip title={<>Specific imports</>}>\n                Reducing bundle size!<br />\n                <b>Bad:</b>\n                <Code language='js'>\n                    {\n                        `import { Button } from '@material-ui/core' // All of material-ui/core will be included in the bundle!\nimport { Alert } from 'react-tfso-components' // All of react-tfso-components will be included in the bundle!`\n                    }\n                </Code>\n                <b>Good:</b>\n                <Code language='js'>\n                    {\n                        `import Button from '@material-ui/core/Button'\nimport Alert from 'react-tfso-components/dist/Alert'`\n                    }\n                </Code>\n            </Tip>\n\n            <Tip title={<>{/* emojis.thumbsUp */}Extend from <code>React.PureComponent</code> instead of <code>React.Component</code></>}>\n                Your components should never mutate the state directly or have mutable properties.<br/>\n                Hence they are pure, and should extend React.PureComponent, which is more performant.\n            </Tip>\n            <Tip title={<>{/* emojis.thumbsDown */}Don't use <code>componentWillReceiveProps</code></>}>\n                It's deprecated and going away in React 17 {emojis.brokenHeart}<br />\n                More information <Link underline='hover' href='https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops' target='_blank'>here</Link>\n            </Tip>\n            <Tip title={<>{/* emojis.thumbsDown */}Avoid copying props to state</>}>\n                ...unless you absolutely need to, there are legit reasons, however there is most likely a better solution. <br />\n                Perhaps you should invoke a callback provided by props and let the parent component handle something?\n            </Tip>\n        </Section>\n    )\n\n    renderContributing = () => (<>\n        <SubHeading>\n            Contributing to <code>react-tfso-components</code> {emojis.rocket} <Anchor id='contributing' />\n        </SubHeading>\n        <Paragraph>\n            Components in this package should:\n            <ul>\n                <li>Be written in typescript or provide type declarations (d.ts)</li>\n                <li>Be composible</li>\n                <li>Not be specific to a domain/usage (they should be as generic as possible)</li>\n                <li>Validate props using `<code>prop-types`</code></li>\n                <li>Be Pure (function component or extending <code>React.PureComponent</code>)</li>\n                <li>Have descriptive and easy to understand Props:\n                    <ul>\n                        <li>Use commonly known verbs/names</li>\n                        <li>Function props should begin with 'on', (onFocus, onChange etc.)</li>\n                        <li>Boolean props should <i>not</i> begin with 'is', (open instead of isOpen)</li>\n                        <li>Boolean props should be optional, (eg. <code>open?: boolean</code>), <code>undefined</code> should be evaluated as <code>false</code></li>\n                        <li><code>children</code> should always be explicitly typed (eg: <code>children: string</code>)</li>\n                        <li><code>children</code> should be defined as\n                            <ul>\n                                <li><code>React.ReactCild</code> for single child<br /></li>\n                                <li><code>React.ReactNode</code> for multiple children</li>\n                                <li>primitive type (<code>undefined</code>, <code>string</code>, <code>number</code> etc.)</li>\n                            </ul>\n                        </li>\n                    </ul>\n                </li>\n                <li>Have a demo with documentation so that developers can easily find and use your component</li>\n            </ul>\n        </Paragraph>\n    </>)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport {styledTheme} from '../../lib/theme/index'\n\nconst bgColor = (color: '') => {\n    const colors = styledTheme['tfso']['colors']\n    return colors[color]\n}\n\nexport type ThemeColorProps = {\n    color: React.ReactNode\n}\n\nconst Box = styled.div`\n    background-color: ${({color, theme}) => theme.tfso.colors[color]};\n    width: 230px;\n    height: 230px;\n    text-align: center;\n`\n\nconst Txt = styled.div`\n  font-size: 2em;\n  line-height: 2em;\n  color: ${({dark, theme}) => dark ? '#000' : theme.mui.palette.secondary.contrastText}\n`\n\nconst ThemeColor = (props: ThemeColorProps) => {\n    const {color} = props\n    return (\n        <Box color={color}>\n            theme.tfso.colors.{color}<br/><br/>\n            <Txt>{bgColor(color)}</Txt>\n            <Txt dark>{bgColor(color)}</Txt>\n        </Box>\n    )\n}\n\nThemeColor.propTypes = {\n    color: PropTypes.node.isRequired\n}\n\nexport default ThemeColor","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport ThemeColor from '../components/ThemeColor'\nimport {styledTheme} from '../../lib/theme/index'\n\nconst ThemeColors = styled.div`\n  clear: both;\n  > div{\n    float: left;\n      :hover{\n        width: 460px;\n        height: 230px;\n      }\n  }\n`\n\nexport default class Theme extends React.PureComponent{\n    render(){\n        return (\n            <>\n                <Typography variant='h2'>\n                    Theme &amp; Styling\n                </Typography>\n                <Typography variant='subtitle1'>\n                    There is more TODO\n                </Typography>\n                <ThemeColors>\n                    {Object.keys(styledTheme['tfso']['colors']).map(color => (\n                        <ThemeColor color={color}/>\n                    ))}\n                </ThemeColors>\n            </>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport Trending, {TrendingProps} from '../../lib/Trending'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\ntype TrendingDemoState = {\n    variant: TrendingProps['variant']\n}\n\nexport default class TrendingDemo extends React.PureComponent<{}, TrendingDemoState>{\n    state: TrendingDemoState = {\n        variant: 'up'\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='TrendingDemo.tsx' srcPath='Trending.tsx' >Trending</DemoTitle>\n                <DemoHelp>\n                    A colored icon indicating a trending direction. <br/>\n                    Tip: You can use the <code>color</code> or <code>nativeColor</code> property to override the color of the icon.\n                </DemoHelp>\n                <DemoProps>\n                    <DemoProp name='variant' type='up | down | flat' default='' description=''></DemoProp>\n                    <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp>\n                </DemoProps>\n                <DemoContent>\n                    <Trending variant={this.state.variant} fontSize='large' />\n                    <TextField\n                        select\n                        value={this.state.variant}\n                        onChange={e => this.setState({variant: e.target.value as any})}\n                        label='variant'\n                    >\n                        <MenuItem value='up'>up</MenuItem>\n                        <MenuItem value='flat'>flat</MenuItem>\n                        <MenuItem value='down'>down</MenuItem>\n                    </TextField>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport BigNumber, {BigNumberProps} from '../../lib/BigNumber'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\ntype BigNumberState = {\n    color: BigNumberProps['color']\n    size: BigNumberProps['size']\n}\n\nexport default class BigNumberDemo extends React.PureComponent<{}, BigNumberState>{\n    state: BigNumberState = {\n        color: 'dark',\n        size: 'large',\n    }\n\n    handleChange = (key: keyof BigNumberState) => (event: React.ChangeEvent<HTMLSelectElement>) => this.setState({[key]: event.target.value} as any)\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='BigNumberDemo.tsx' srcPath='BigNumber.tsx' >BigNumber</DemoTitle>\n                <DemoHelp>\n                    A Big Number is a number stands out\n                </DemoHelp>\n                <DemoProps>\n                    <DemoProp name='color' type='light | dark' default='light' description=''></DemoProp>\n                    <DemoProp name='size' type='medium | large' default='larger' description=''></DemoProp>\n                    <DemoProp name='children' type='string | number' default='' description=''></DemoProp>\n                    {/* <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp> */}\n                </DemoProps>\n                <DemoContent>\n                    <Grid container alignItems='center' spacing={32}>\n                        <Grid item>\n                            <div style={{backgroundColor: this.state.color === 'light' ? '#11beff' : 'inherit', padding: 10}}>\n                                <BigNumber\n                                    size={this.state.size}\n                                    color={this.state.color}\n                                >$123</BigNumber>\n                            </div>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant='caption'>NB: The BigNumber component does not set the background color!<br /> The background color used here is just for illustrative purposes.</Typography>\n                        </Grid>\n                    </Grid>\n                    <TextField\n                        select\n                        label='size'\n                        value={this.state.size}\n                        onChange={this.handleChange('size')}\n                    >\n                        <MenuItem value='medium'>medium</MenuItem>\n                        <MenuItem value='large'>large</MenuItem>\n                    </TextField>\n                    <TextField\n                        select\n                        label='color'\n                        value={this.state.color}\n                        onChange={this.handleChange('color')}\n                    >\n                        <MenuItem value='light'>light</MenuItem>\n                        <MenuItem value='dark'>dark</MenuItem>\n                    </TextField>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle, DemoCode} from '../components/demo'\n\nimport Alert, {AlertProps} from '../../lib/Alert'\n\nconst variantMessage: {[P in AlertProps['variant']]: string } = {\n    success: 'GRATE SUCCÉSS!',\n    info: 'Informational information',\n    warning: 'You better not do that, Brian',\n    error: 'That failed horribly...',\n}\n\nexport default class AlertDemo extends React.PureComponent<{}, {variant: AlertProps['variant'], message: string, open: boolean}>{\n    state = {\n        variant: 'success' as AlertProps['variant'],\n        open: false,\n        message: 'GRATE SUCCÉSS!'\n    }\n\n    onClose = () => this.setState({open: false})\n\n    onPress = (variant: AlertProps['variant']) => {\n        const message = variantMessage[variant]\n        return () => this.setState({open: true, message, variant})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='AlertDemo.tsx' srcPath='Alert.tsx' >Alert</DemoTitle>\n                <DemoHelp>A dismissable alert-box that can be used in a SnackBar or as a standard component in a page</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='message' type='string | ReactNode' description='The message string or Element to be displayed' />\n                    <DemoProp name='variant' type='success | error | info | warning' description='The variant of the alert. Icon and background-color is selected based on the variant' />\n                    <DemoProp name='onClose' type='() => void' description='Callback function invoked when the alert is dismissed' />\n                </DemoProps>\n                <DemoCode language='tsx'>\n                    {`import React from 'react'\nimport Alert from 'react-tfso-components/dist/Alert'\nimport Snacbar from '@material-ui/core/Snackbar'\nimport Button from '@material-ui/core/Button'\n\nclass Alerter extends React.PureComponent<{}, {open: boolean}> {\n    state = {\n        open: false\n    }\n\n    onClose = () => this.setState({open: false})\n\n    render(){\n        return(\n            <React.Fragment>\n                <Snackbar\n                    open={this.state.open}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    autoHideDuration={2000}\n                    onClose={this.onClose}\n                >\n                    <Alert\n                        onClose={this.onClose}\n                        message='An unexpected error occured'\n                        variant='error'\n                    />\n                </Snackbar>\n                <Button variant='outlined' onClick={() => this.setState({open: true})}>Show Alert</Button>\n            </React.Fragment>\n        )\n    }\n}`\n                    }\n                </DemoCode>\n                <DemoContent>\n                    <Snackbar\n                        open={this.state.open}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        autoHideDuration={2000}\n                        onClose={this.onClose}\n                    >\n                        <Alert\n                            onClose={this.onClose}\n                            message={this.state.message}\n                            variant={this.state.variant}\n                        />\n                    </Snackbar>\n                    <Button variant='outlined' onClick={this.onPress('success')}>Open Success</Button>\n                    <Button variant='outlined' onClick={this.onPress('info')}>Open Info</Button>\n                    <Button variant='outlined' onClick={this.onPress('warning')}>Open Warning</Button>\n                    <Button variant='outlined' onClick={this.onPress('error')}>Open Error</Button>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport SearchField from '../../lib/SearchField'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\n\nexport default class SearchFieldDemo extends React.PureComponent{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='SearchFieldDemo.tsx' srcPath='SearchField.tsx' >SearchField</DemoTitle>\n                <DemoHelp>A TextField that gets full width on typing. It also has a search icon adornnment.</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='placeholder' type='string (optional)' default='Search' description=''></DemoProp>\n                    <DemoProp name='margin' type='none | dense | normal (optional)' default='dense' description=''></DemoProp>\n                    <DemoProp name='InputProps' type=\"TextFieldProps['InputProps'] (optional)\" default='{ startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>}' description=''></DemoProp>\n                    <DemoProp name='...' type='TextFieldProps' default='' description='Any other prop is spread to the TextField'></DemoProp>\n                </DemoProps>\n                <DemoContent>\n                    <SearchField />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextFieldEditor from '../../lib/TextFieldEditor'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Typography from '@material-ui/core/Typography'\n\nexport default class TextFieldEditorDemo extends React.PureComponent{\n    state = {\n        value: 'demo',\n        dirty: false,\n        enableDirtyCheck: false\n    }\n\n    onReset = () => {\n        this.setState({value: ''})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='TextFieldEditorDemo.tsx' srcPath='TextFieldEditor.tsx' >TextFieldEditor</DemoTitle>\n                <DemoHelp>A wrapper around material-ui's TextField with some added features</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='value' type='string' default='' description='' />\n                    <DemoProp name='onChange' type='(value: string) => void' default='' description='Invoked when the user has finished editing the value (editor looses focus by clicking or tabbing away, pressing the Enter or ctrl+s' />\n                    <DemoProp name='dirty' type='boolean (optional)' default='false' description='If true, it is rendered in italic after onChange' />\n                    <DemoProp name='enableDirtyCheck' type='boolean (optional)' default='false' description='If true, the component will do internal dirty checking when editing' />\n                    <DemoProp name='...' type='TextFieldProps' description='Any other prop is spread to the TextField' />\n                </DemoProps>\n                <ExpansionPanel>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} >\n                        <Typography>Keybindings</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <code>\n                                ctrl + s:&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is NOT handled!)<br/>\n                                ctrl + z:&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\n                                Enter:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is handled)<br/>\n                                Escape:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\n                        </code>\n                        <br/>\n                        <i>When the event is handled `preventDefault()` and `stopPropagation()` is invoked on the `React.KeyboardEvent`</i><br/>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <DemoContent>\n                    <TextFieldEditor\n                        value={this.state.value}\n                        enableDirtyCheck={this.state.enableDirtyCheck}\n                        dirty={this.state.dirty}\n                        onChange={(value: string) => this.setState({value})}\n                    />\n                    <Button variant='outlined' onClick={() => this.setState({value: 'demo'})}>Reset</Button>\n                    <Button variant='outlined' onClick={() => this.setState({dirty: !this.state.dirty})}>Dirty: {this.state.dirty.toString()}</Button>\n                    <Button variant='outlined' onClick={() => this.setState({enableDirtyCheck: !this.state.enableDirtyCheck})}>Enable dirty check: {this.state.enableDirtyCheck.toString()}</Button>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport ConfirmationDialog from '../../lib/ConfirmationDialog'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\n\nexport default class ConfirmationDialogDemo extends React.PureComponent{\n    state = {\n        openConfirmationDialog: false\n    }\n\n    onClickOpenConfirmationDialog = () => {\n        this.setState({openConfirmationDialog: true})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='ConfirmationDialogDemo.tsx' srcPath='ConfirmationDialog.tsx' >ConfirmationDialog</DemoTitle>\n                <DemoHelp>A Dialog containing Ok and Cancel buttons</DemoHelp>\n                <DemoProps>\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show dialog\" />\n                    <DemoProp name=\"title\" type=\"string (optional)\" default=\"\" description=\"Dialog title\" />\n                    <DemoProp name=\"message\" type=\"string\" default=\"\" description=\"Dialog content\" />\n                    <DemoProp name=\"okButtonText\" type=\"string\" default=\"\" description=\"\" />\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"\" />\n                    <DemoProp name=\"onOk\" type=\"function\" default=\"\" description=\"\" />\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"\" />\n                </DemoProps>\n                <DemoContent>\n                    <Button variant='outlined' onClick={this.onClickOpenConfirmationDialog}>Open ConfirmationDialog</Button>\n                    <ConfirmationDialog\n                        open={this.state.openConfirmationDialog}\n                        okButtonText='Ok'\n                        cancelButtonText='Cancel'\n                        onOk={() => this.setState({openConfirmationDialog: false})}\n                        onCancel={() => this.setState({openConfirmationDialog: false})}\n                        message='Confirmation dialog message'\n                        title='Confirmation dialog title'\n                    />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Slide from '@material-ui/core/Slide'\nimport Typography from '@material-ui/core/Typography'\nimport MenuList from '@material-ui/core/MenuList'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Avatar from '@material-ui/core/Avatar'\nimport SearchField from './SearchField'\nimport withWidth, {WithWidth} from '@material-ui/core/withWidth'\nimport Popover from '@material-ui/core/Popover'\nimport styled from 'styled-components'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport ScreenSize from './utils/ScreenSize'\n\nexport type ClientSwitcherDialogProps = {\n    open: boolean\n    onCancel: () => void\n    onSwitch: (value: string) => void\n    children?: undefined\n    options: Array<{ value: string, label: string }>\n    cancelButtonText: string\n    searchLabel?: string\n    anchorEl?: null | HTMLElement\n    disabled?: string\n    selected?: string\n    avatarColor?: string\n}\n\ntype State = {\n    filterValue: string,\n    focusValue: string\n}\n\nconst AvatarColor = styled(Avatar)`\n  &&{\n    background-color: ${({theme, color}) => color || theme.mui.palette.primary.dark}\n    color: ${({theme}) => theme.mui.palette.primary.contrastText}\n  }\n`\n\nconst CustomDialogTitle = styled.div`\n  display: flex;\n  flex-flow: row-reverse;\n  padding: 5px;\n`\n\nconst TransitionComponent = props => <Slide direction='down' {...props} />\n\nexport default class ListPicker extends React.PureComponent<ClientSwitcherDialogProps, State>{\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onCancel: PropTypes.func.isRequired,\n        onSwitch: PropTypes.func.isRequired,\n        options: PropTypes.arrayOf(PropTypes.shape({value: PropTypes.string.isRequired, label: PropTypes.string.isRequired})).isRequired,\n        cancelButtonText: PropTypes.string.isRequired,\n        searchLabel: PropTypes.string,\n        disabled: PropTypes.string,\n        selected: PropTypes.string,\n        avatarColor: PropTypes.string\n    }\n    _inputRef: React.RefObject<HTMLLIElement> = React.createRef()\n    _listRef: React.RefObject<HTMLInputElement> = React.createRef()\n    state: State = {\n        filterValue: '',\n        focusValue: ''\n    }\n\n    componentDidUpdate(prevProps){\n        if(!prevProps.open && this.props.open){\n            setTimeout(() => {\n                this._inputRef.current && this._inputRef.current.focus()\n            }, 1)\n        }\n    }\n\n    onFilter = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({filterValue: event.target.value})\n    }\n    onKeyDown = (event: React.KeyboardEvent) => {\n        if(!(event && event.keyCode === 40)){\n            return\n        }\n        this._listRef.current && this._listRef.current.focus()\n    }\n\n    onSwitch = (value) => {\n        this.props.onSwitch(value)\n    }\n\n    onClose = () => {\n        this.props.onCancel()\n    }\n\n    render(){\n        const renderItems = (\n            <>\n                <SearchField\n                    placeholder={this.props.searchLabel}\n                    inputRef={this._inputRef}\n                    onChange={this.onFilter}\n                    value={this.state.filterValue}\n                    onKeyDown={this.onKeyDown}\n                />\n                <MenuList\n                    ref={this._listRef}\n                >\n                    { this.props.options\n                        .filter(option => option.label.toLowerCase().indexOf(this.state.filterValue) > -1 || option.value.indexOf(this.state.filterValue) > -1)\n                        .map((option, i) => (\n                            <MenuItem\n                                disabled={option.value == this.props.disabled}\n                                selected={option.value == this.props.selected}\n                                key={i}\n                                onClick={() => { this.onSwitch(option.value) }}\n                            >\n                                <AvatarColor color={this.props.avatarColor}>\n                                    <Typography variant='caption' color='inherit'>\n                                        {option.label.split(' ')\n                                            .slice(0, 3)\n                                            .map((words) => (\n                                                words[0]\n                                            ))\n                                        }\n                                    </Typography>\n                                </AvatarColor>\n                                <ListItemText primary={option.label} />\n                            </MenuItem>\n                        ))\n                    }\n                </MenuList>\n            </>\n        )\n\n        const desktopDialog = (\n            <Popover\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                open={this.props.open}\n                onClose={this.onClose}\n            >\n                <DialogContent>\n                    {renderItems}\n                </DialogContent>\n            </Popover>\n        )\n\n        const mobileDialog = (\n            <Dialog\n                TransitionComponent={TransitionComponent}\n                keepMounted={false}\n                fullScreen={true}\n                open={this.props.open}\n                onClose={this.onClose}\n                fullWidth\n                maxWidth='sm'\n            >\n                <CustomDialogTitle>\n                    <IconButton onClick={this.props.onCancel} aria-label=\"Close\">\n                        <CloseIcon />\n                    </IconButton>\n                </CustomDialogTitle>\n                <DialogContent>\n                    {renderItems}\n                </DialogContent>\n            </Dialog>\n        )\n\n        return (\n            <ScreenSize>\n                {({mobile}) => mobile ? mobileDialog : desktopDialog}\n            </ScreenSize>\n        )\n    }\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport ListPicker from '../../lib/ListPicker'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport styled from 'styled-components'\nimport {MenuItem} from '@material-ui/core'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nconst DemoDisplay = styled.div`\n  flex: 1;\n`\n\nexport default class ListPickerDemo extends React.PureComponent{\n    _anchorEl: React.RefObject<HTMLButtonElement> = React.createRef()\n    state = {\n        selectedOption: undefined,\n        selected: 'none',\n        buttonType: 'default',\n        open: false,\n        color: 'default',\n        options: [{\n            value: '23324',\n            label: 'Vrådal & Rypefjord AS'\n        }, {\n            value: '353453',\n            label: '24SevenOffice Norge'\n        }, {\n            value: '234234324',\n            label: '24sevenOffice Labs'\n        }, {\n            value: '534536553',\n            label: '24SevenOffice Denmark'\n        }, {\n            value: '23424534324',\n            label: '24sevenOffice Finland'\n        }, {\n            value: '53453233',\n            label: '24SevenOffice Sweden'\n        }]\n    }\n\n    onClickOpenConfirmationDialog = () => {\n        this.setState({\n            open: true\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            selected: event.target.value\n        })\n    }\n\n    handleColor = (event) => {\n        this.setState({\n            color: event.target.value\n        })\n    }\n\n    onSwitch =(value) => {\n        this.setState({selectedOption: value})\n        this.onCancel()\n    }\n\n    onCancel =() => {\n        this.setState({open: false})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='ListPickerDemo.tsx' srcPath='ListPicker.tsx' >ListPicker</DemoTitle>\n                <DemoHelp>Dialog(mobile) or Popover(desktop) showing list of options. Made with switching client's in mind</DemoHelp>\n                <DemoProps>\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show list of options\" />\n                    <DemoProp name=\"options\" type=\"arrayOf<{ value: string, label: string }>\" description=\"Array of items to display\"/>\n                    <DemoProp name=\"disabled\" type=\"string\" default=\"\" description=\"Disables current item in list\" />\n                    <DemoProp name=\"selected\" type=\"string\" default=\"\" description=\"Selects current item in list\" />\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"Text for cancel button\" />\n                    <DemoProp name=\"onSwitch\" type=\"function\" default=\"\" description=\"Returns value for selected option\" />\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"Fires when list closes\" />\n                    <DemoProp name=\"avatarColor\" type=\"string\" default=\"\" description=\"Valid values are types of #f7f7f7 or green\" />\n                </DemoProps>\n                <DemoContent>\n                    <ListPicker\n                        anchorEl={this._anchorEl.current}\n                        open={this.state.open}\n                        cancelButtonText='Cancel'\n                        searchLabel='Search list'\n                        onCancel={this.onCancel}\n                        onSwitch={this.onSwitch}\n                        options={this.state.options}\n                        disabled='234234324'\n                        selected={this.state.selected}\n                        avatarColor={this.state.color == 'default' ? '' : this.state.color}\n                    />\n                    <Button variant='outlined' buttonRef={this._anchorEl} onClick={this.onClickOpenConfirmationDialog}>Open list</Button>\n                    <InputLabel shrink htmlFor=\"age-label-placeholder\">\n                        AvatarColor\n                    </InputLabel>\n                    <Select\n                        onChange={this.handleColor}\n                        value={this.state.color}\n                    >\n                        <MenuItem key='default' value='default'>Default</MenuItem>\n                        <MenuItem key='green' value='green' >Green</MenuItem>\n                        <MenuItem key='purple' value='purple' >Purple</MenuItem>\n                        <MenuItem key='orange' value='orange' >Orange</MenuItem>\n                    </Select>\n                    <InputLabel shrink htmlFor=\"age-label-placeholder\">\n                        Set selected\n                    </InputLabel>\n                    <Select\n                        onChange={this.handleChange}\n                        value={this.state.selected}\n                    >\n                        <MenuItem value='none'>None</MenuItem>\n                        { this.state.options\n                            .map((option, i) => (\n                                <MenuItem\n                                    key={i}\n                                    value={option.value}\n                                >\n                                    {option.label}\n                                </MenuItem>\n                            ))\n                        }\n                    </Select>\n                    {this.state && this.state.selectedOption\n                        ? <DemoDisplay>You have selected: {this.state.selectedOption} {\n                            this.state.options\n                                .map((option) => {\n                                    if(option.value == this.state.selectedOption){\n                                        return '(' + option.label + ')'\n                                    }\n                                })}</DemoDisplay>\n                        : ''\n                    }\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\nimport Emoji from '../../lib/Emoji'\n\nimport Typography from '@material-ui/core/Typography'\n\ntype State = {\n    // variant\n}\n\nexport default class EmojiDemo extends React.PureComponent<{}, State>{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle srcPath='Emoji.tsx' demoPath='EmojiDemo.tsx'>Emoji</DemoTitle>\n                <DemoHelp>A simple html Emoji component</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='variant' type='string' default='' description=''/>\n                </DemoProps>\n                <DemoContent>\n                    <Typography variant=\"h2\">\n                        <Emoji variant='heart' />\n                        <Emoji variant='thumbsUp' />\n                        <Emoji variant='fire' />\n                    </Typography>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\n\nimport Paper, {PaperProps} from '@material-ui/core/Paper'\n\nimport ReactGridLayout, {Layout, ReactGridLayoutProps} from 'react-grid-layout/'\nimport 'react-grid-layout/css/styles.css'\nimport 'react-resizable/css/styles.css'\nimport {styledTheme} from './theme'\nimport isEqual from 'lodash/isEqual'\n\nconst BackgroundPaper = ({backgroundColor, ...props}: { backgroundColor: string } & PaperProps) => (<Paper {...props} />)\nconst GridItemContainer = styled(BackgroundPaper)`&&{\n    background-color: ${({backgroundColor}) => backgroundColor};\n    width: 100%;\n    height: 100%;\n}`\n\ntype GridItemWidth = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'\ntype GridItemHeight = 1 | 2 | 3 | 4 | 5 | 6\nconst gridItemWidths = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 'onequarter', 'onethird', 'half', 'twothirds', 'threequarters', 'full']\nconst gridItemHeights = [1, 2, 3, 4, 5, 6]\nconst gridItemWidthNumberMap: {[P in GridItemWidth]: number} = {\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 8,\n    9: 9,\n    10: 10,\n    11: 11,\n    12: 12,\n    'onequarter': 3,\n    'onethird': 4,\n    'half': 6,\n    'twothirds': 8,\n    'threequarters': 9,\n    'full': 12,\n}\n\nconst numberGridItemWithMap: {[n: number]: GridItemWidth} = {\n    1: 1,\n    2: 2,\n    3: 'onequarter',\n    4: 'onethird',\n    5: 5,\n    6: 'half',\n    7: 7,\n    8: 'twothirds',\n    9: 'threequarters',\n    10: 10,\n    11: 11,\n    12: 'full',\n}\n\nconst toGridItemWidth = (w?: number): GridItemWidth | undefined => {\n    return w === undefined\n        ? undefined\n        : numberGridItemWithMap[Math.min(6, Math.trunc(w))]\n}\n\nconst toGridItemHeight = (w?: number): GridItemHeight | undefined => {\n    return w === undefined\n        ? undefined\n        : Math.min(12, Math.trunc(w)) as GridItemHeight\n}\n\nconst gridItemPositionToLayout = (position: GridItemPosition): Layout => {\n    return {\n        i: position.id,\n        x: position.col,\n        y: position.row,\n        h: position.height,\n        w: gridItemWidthNumberMap[position.width],\n        minH: position.minHeight,\n        minW: position.minWidth && gridItemWidthNumberMap[position.minWidth] || undefined,\n        maxH: position.maxHeight,\n        maxW: position.maxWidth && gridItemWidthNumberMap[position.maxWidth] || undefined,\n        isDraggable: position.draggable !== undefined ? position.draggable : false,\n        isResizable: position.resizable !== undefined ? position.resizable : false,\n        static: position.static,\n    }\n}\n\nconst layoutToGridItemPosition = (layout: Layout): GridItemPosition => {\n    return {\n        id: layout.i!,\n        col: layout.x,\n        row: layout.y,\n        width: toGridItemWidth(layout.w)!,\n        height: toGridItemHeight(layout.h)!,\n        minHeight: toGridItemHeight(layout.minH),\n        minWidth: toGridItemWidth(layout.minW),\n        maxHeight: toGridItemHeight(layout.maxH),\n        maxWidth: toGridItemWidth(layout.maxW),\n        draggable: layout.isDraggable,\n        resizable: layout.isResizable,\n        static: layout.static,\n    }\n}\n\nexport type GridItem = {\n    id: string\n    backgroundColor?: string\n    children: React.ReactNode\n}\n\ntype GridItemPosition = {\n    id: string\n    col: number\n    row: number\n    width: GridItemWidth\n    height: GridItemHeight\n    minWidth?: GridItemWidth\n    minHeight?: GridItemHeight\n    maxWidth?: GridItemWidth\n    maxHeight?: GridItemHeight\n    /**\n     * @default false\n     */\n    draggable?: boolean\n    /**\n     * @default false\n     */\n    resizable?: boolean\n    /**\n     * @default false\n     */\n    static?: boolean\n}\n\nexport type GridLayoutProps = {\n    items: Array<GridItem>\n    layout: Array<GridItemPosition>\n    /**\n     * @default 16\n     */\n    margin?: number\n    onLayoutChange?: (layout: Array<GridItemPosition>) => void\n    /**\n     * @default vertical\n     */\n    compactType?: ReactGridLayoutProps['compactType']\n    children?: undefined\n}\n\nexport default class GridLayout extends React.PureComponent<GridLayoutProps>{\n    static defaultProps: Partial<GridLayoutProps> = {\n        margin: 16,\n        compactType: 'vertical'\n    }\n\n    static propTypes = {\n        margin: PropTypes.number,\n        onLayoutChange: PropTypes.func,\n        compactType: PropTypes.oneOf(['vertical', 'horizontal', null]),\n        items: PropTypes.arrayOf(PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            backgroundColor: PropTypes.string,\n            children: PropTypes.node.isRequired\n        })).isRequired,\n        layout: PropTypes.arrayOf(PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            col: PropTypes.number.isRequired,\n            row: PropTypes.number.isRequired,\n            width: PropTypes.oneOf(gridItemWidths).isRequired,\n            height: PropTypes.oneOf(gridItemHeights).isRequired,\n            minWidth: PropTypes.oneOf(gridItemWidths),\n            minHeight: PropTypes.oneOf(gridItemHeights),\n            maxWidth: PropTypes.oneOf(gridItemWidths),\n            maxHeight: PropTypes.oneOf(gridItemHeights),\n            draggable: PropTypes.bool,\n            resizable: PropTypes.bool,\n            static: PropTypes.bool,\n        })).isRequired\n    }\n\n    _layoutWasChangedWorkaround = false\n\n    componentDidMount(){\n        this.validateItemLayout()\n    }\n\n    onLayoutChange = (layouts: Array<Layout>) => {\n        const {onLayoutChange} = this.props\n        onLayoutChange &&\n            this._layoutWasChangedWorkaround &&\n            onLayoutChange(layouts.map(layoutToGridItemPosition))\n        this._layoutWasChangedWorkaround = false\n    }\n\n    validateItemLayout = () => {\n        if(process.env.NODE_ENV === 'production') return\n\n        const items = new Set(this.props.items.map(item => item.id))\n        const layouts = new Set(this.props.layout.map(layout => layout.id))\n\n        items.forEach(item => {\n            if(!layouts.has(item)){\n                console.error(`Error: Item with id: ${item} is missing layout`)\n            }\n        })\n\n        layouts.forEach(layout => {\n            if(!items.has(layout)){\n                console.warn(`Warning: Layout with id: ${layout} does not correspond to any item`)\n            }\n        })\n    }\n\n    onResize = (layout: Layout[], oldItem: Layout, newItem: Layout, placeHolder: Layout) => {\n        newItem.h = placeHolder.h = Math.min(6, newItem.h)\n    }\n\n    onDragStop = (layout: Layout[], oldItem: Layout, newItem: Layout, placeHolder: Layout) => {\n        this._layoutWasChangedWorkaround = !isEqual(oldItem, newItem)\n    }\n\n    onResizeStop = (layout: Layout[], oldItem: Layout, newItem: Layout, placeHolder: Layout) => {\n        this._layoutWasChangedWorkaround = !isEqual(oldItem, newItem)\n    }\n\n    render(){\n        const {items, layout, margin = 16, onLayoutChange, ...other} = this.props\n        const rglLayout = Object.values(layout).map(gridItemPositionToLayout)\n\n        return (\n            <ReactGridLayout\n                {...other}\n                className='layout'\n                cols={12}\n                layout={rglLayout}\n                margin={[margin, margin]}\n                rowHeight={90}\n                width={styledTheme.mui.breakpoints.values.lg}\n                onLayoutChange={this.onLayoutChange}\n                onResize={this.onResize}\n                onResizeStop={this.onResizeStop}\n                onDragStop={this.onDragStop}\n            >\n                {items.map(({id, backgroundColor, children}) => (\n                    <GridItemContainer\n                        key={id}\n                        backgroundColor={backgroundColor || 'inherit'}\n                    >\n                        {children}\n                    </GridItemContainer>))}\n            </ReactGridLayout>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoTitle, DemoHelp, DemoProps, DemoProp} from '../components/demo'\nimport GridLayout from '../../lib/GridLayout'\nimport Link from '@material-ui/core/Link'\n\nexport default class GridLayoutDemo extends React.PureComponent{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle srcPath='GridLayout.tsx' demoPath='GridLayoutDemo.tsx'>GridLayout</DemoTitle>\n                <DemoHelp>A draggable and movable grid layout based on <Link href='https://github.com/STRML/react-grid-layout' target='_blank' rel='noreferrer'>react-grid-layout</Link></DemoHelp>\n                <DemoProps title='GridLayoutProps' >\n                    <DemoProp name='margin' type='number' default='16' description='The margin between each item' />\n                    <DemoProp name='compactType' type='vertical | horizontal' default='vertical' description='' />\n                    <DemoProp required name='onLayoutChange' type='(layout: GridItemPosition[]) => void' default='' description='' />\n                    <DemoProp required name='items' type='GridItem[]' default='' description='' />\n                    <DemoProp required name='layout' type='GridItemPosition[]' default='' description='' />\n                </DemoProps>\n                <DemoProps title='GridItem' >\n                    <DemoProp required name='id' type='string' default='' description='Id of the item. A corresponding GridItemPosition must be supplied to the layout' />\n                    <DemoProp name='backgroundColor' type='string' default='inherit' description='The backgroundcolor of the item' />\n                    <DemoProp required name='children' type='React.ReactNode' default='' description='' />\n                </DemoProps>\n                <DemoProps title='GridItemPosition' >\n                    <DemoProp required name='id' type='string' default='' description='Used to positition the GridItem with the same id' />\n                    <DemoProp required name='col' type='number' default='' description='Column in which the item is positioned' />\n                    <DemoProp required name='row' type='number' default='' description='Row in which the item is positioned' />\n                    <DemoProp required name='width' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\n                    <DemoProp required name='height' type='1 | 2 | 3 | 4 | 5 | 6' default='' description='Height in number of rows' />\n                    <DemoProp name='draggable' type='boolean' default='false' description='If true, the item can be repositioned by dragging' />\n                    <DemoProp name='resizable' type='boolean' default='false' description='If true, the item can be resized' />\n                    <DemoProp name='static' type='boolean' default='false' description='If true, the item is locked in place (draggable and resizable is overriden to false)' />\n                    <DemoProp name='minWidth' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\n                    <DemoProp name='minHeight' type='1 | 2 | 3 | 4 | 5 | 6' default='' description='Height in number of rows' />\n                    <DemoProp name='maxWidth' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\n                    <DemoProp name='maxHeight' type='1 | 2 | 3 | 4 | 5 | 6' default='' description='Height in number of rows' />\n                </DemoProps>\n                <DemoContent>\n                    <GridLayout\n                        items={[\n                            {\n                                id: 'a',\n                                backgroundColor: '#f0f',\n                                children: <div>a (I'm resizable)</div>\n                            },\n                            {\n                                id: 'b',\n                                backgroundColor: '#0ff',\n                                children: <div>b (I'm locked in place)</div>\n                            },\n                            {\n                                id: 'c',\n                                backgroundColor: '#ff0',\n                                children: <div>c</div>\n                            },\n                            {\n                                id: 'd',\n                                backgroundColor: '#f8f',\n                                children: <div>d</div>\n                            },\n                        ]}\n                        layout={[\n                            {\n                                id: 'a',\n                                width: 'onequarter',\n                                height: 1,\n                                col: 0,\n                                row: 0,\n                                draggable: true,\n                                resizable: true\n                            },\n                            {\n                                id: 'b',\n                                width: 'onequarter',\n                                height: 1,\n                                col: 3,\n                                row: 0,\n                                static: true\n                            },\n                            {\n                                id: 'c',\n                                width: 'onequarter',\n                                height: 1,\n                                col: 6,\n                                row: 0,\n                                draggable: true,\n                            },\n                            {\n                                id: 'd',\n                                width: 'full',\n                                height: 2,\n                                col: 0,\n                                row: 1,\n                                draggable: true,\n                            },\n                        ]}\n                    />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport {Hoverable} from '../../lib'\r\n\r\nexport default class HoverableDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Hoverable.tsx'>Hoverable</DemoTitle>\r\n                <DemoHelp>A HOC that passes hover true/false as a render prop</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(hover: boolean, ref: RefObject) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Hoverable>\r\n                        {(hover) => (\r\n                            <React.Fragment>\r\n                                {hover\r\n                                    ? <div key=\"1\" style={{backgroundColor: '#6699bb', padding: 15, color: '#FFF', cursor: 'pointer'}}>You're hovering me!</div>\r\n                                    : <div key=\"2\" style={{padding: 15, height: '100%'}}>Hover your mouse over me</div>\r\n                                }\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Hoverable>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport {Delay} from '../../lib'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nexport default class DelayDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Delay.tsx'>Delay</DemoTitle>\r\n                <DemoHelp>Shows the component inside after a set delay. Can be used to only show loaders if exceptionally slow</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"beforeShow\" type=\"React element or string (optional)\" default=\"\" description=\"What you want to show before the delay is finished\" />\r\n                    <DemoProp name=\"delayMs\" type=\"Number (optional)\" default=\"1000\" description=\"Delay time in ms\" />\r\n                    <DemoProp name=\"show\" type=\"Boolean (optional)\" default=\"false\" description=\"Force show content\" />\r\n                    <DemoProp name=\"children\" type=\"React element\" default=\"\" description=\"Content to show after delay\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Delay beforeShow=\"Waiting for delay...\">\r\n                        <CircularProgress />\r\n                    </Delay>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport {Wizard} from '../../lib'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport Step from '@material-ui/core/Step'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport default class WizardDemo extends React.PureComponent{\r\n    render(){\r\n        const length = 3\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Wizard.tsx'>Wizard</DemoTitle>\r\n                <DemoHelp>A HOC that passes an index and next/prev functions in a render prop. Can be used along with material ui stepper or any other wizard</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(index: number, next: function, prev: function) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                    <DemoProp name=\"index\" type=\"number (optional)\" default=\"\" description=\"Force the current index to a certain value\" />\r\n                    <DemoProp name=\"length\" type=\"number (optional)\" default=\"\" description=\"The max length. The index will always be lower than this\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Wizard length={length + 1}>\r\n                        {(index, next, prev) => (\r\n                            <React.Fragment>\r\n                                <Stepper activeStep={index}>\r\n                                    <Step key=\"Step 1\">\r\n                                        <StepLabel>Step 1</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 2\">\r\n                                        <StepLabel>Step 2</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 3\">\r\n                                        <StepLabel>Step 3</StepLabel>\r\n                                    </Step>\r\n                                </Stepper>\r\n                                <div>\r\n                                    <Button onClick={prev} disabled={index <= 0}>Prev</Button>\r\n                                    <Button onClick={next} disabled={index >= length}>Next</Button>\r\n                                    {index >= length && 'All steps completed!'}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Wizard>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport {layout} from '../lib'\nimport Home from './pages/Home'\nimport Icons from './pages/Icons'\nimport GitHubLink from './components/GitHubLink'\nimport MaterialUiLink from './components/MaterialUiLink'\nimport Guidelines from './pages/Guidelines'\nimport Theme from './pages/Theme'\nimport HomeIcon from '@material-ui/icons/Home'\nimport CodeIcon from '@material-ui/icons/Code'\nimport StyleIcon from '@material-ui/icons/Style'\nimport BuildIcon from '@material-ui/icons/Build'\nimport StraightenIcon from '@material-ui/icons/Straighten'\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact'\nimport FontDownloadIcon from '@material-ui/icons/FontDownload'\nimport history from './history'\nimport {Location, UnregisterCallback} from 'history'\nimport Link from './components/Link'\nimport TrendingDemo from './demos/TrendingDemo'\nimport BigNumberDemo from './demos/BigNumberDemo'\nimport AlertDemo from './demos/AlertDemo'\nimport SearchFieldDemo from './demos/SearchFieldDemo'\nimport TextFieldEditorDemo from './demos/TextFieldEditorDemo'\nimport ConfirmationDialogDemo from './demos/ConfirmationDialogDemo'\nimport ListPickerDemo from './demos/ListPickerDemo'\nimport EmojiDemo from './demos/EmojiDemo'\nimport GridLayoutDemo from './demos/GridLayoutDemo'\nimport HoverableDemo from './demos/HoverableDemo'\nimport DelayDemo from './demos/DelayDemo'\nimport WizardDemo from './demos/WizardDemo'\n\nconst menuGroups = {\n    home: {\n        label: 'Home',\n        subtitle: 'Where magic happens',\n        icon: HomeIcon,\n        component: Home\n    },\n    guidelines: {\n        label: 'Guidelines',\n        subtitle: 'How to frontend',\n        icon: StraightenIcon,\n        component: Guidelines\n    },\n    components: {\n        label: 'Components',\n        subtitle: 'Presentational',\n        icon: ViewCompactIcon,\n        items: {\n            emoji: {\n                label: 'Emoji',\n                component: EmojiDemo\n            },\n            alert: {\n                label: 'Alert',\n                component: AlertDemo\n            },\n            bignumber: {\n                label: 'BigNumber',\n                component: BigNumberDemo\n            },\n            confirmationdialog: {\n                label: 'ConfirmationDialog',\n                component: ConfirmationDialogDemo\n            },\n            listpicker: {\n                label: 'ListPicker',\n                component: ListPickerDemo\n            },\n            searchfield: {\n                label: 'SearchField',\n                component: SearchFieldDemo\n            },\n            textfieldeditor: {\n                label: 'TextFieldEditor',\n                component: TextFieldEditorDemo\n            },\n            trending: {\n                label: 'Trending',\n                component: TrendingDemo\n            }\n        }\n    },\n    theme: {\n        label: 'Theme',\n        subtitle: 'Much Dashing',\n        icon: StyleIcon,\n        component: Theme\n    },\n    utils: {\n        label: 'Utils',\n        subtitle: 'Utility',\n        icon: BuildIcon,\n        items: {\n            delay: {\n                label: 'Delay',\n                component: DelayDemo\n            },\n            hoverable: {\n                label: 'Hoverable',\n                component: HoverableDemo\n            },\n            wizard: {\n                label: 'Wizard',\n                component: WizardDemo\n            }\n        }\n    },\n    icons: {\n        label: 'Icons',\n        subtitle: 'Well duh',\n        component: Icons,\n        icon: FontDownloadIcon\n    },\n    labs: {\n        label: 'Labs',\n        subtitle: 'Works in progress',\n        icon: CodeIcon,\n        items: {\n            gridlayout: {\n                label: 'GridLayout',\n                component: GridLayoutDemo\n            }\n        }\n    },\n}\n\ntype LayoutState = {\n    location: Location<any>\n    menuGroupsExpanded: any\n}\n\nexport default class Layout extends React.PureComponent<{}, LayoutState>{\n    _unsubHistory: UnregisterCallback | null = null\n    componentDidMount(){\n        this.expandSelected()\n        this._unsubHistory = history.listen(this.onNavigation)\n    }\n    componentWillUnmount(){\n        this._unsubHistory && this._unsubHistory()\n    }\n\n    state: LayoutState = {\n        location: history.location,\n        menuGroupsExpanded: {}\n    }\n\n    onNavigation = (location: Location<any>) => {\n        this.setState({location})\n    }\n\n    getSelected = () => {\n        const {location: {pathname}} = this.state\n        const path = pathname.slice(pathname.indexOf('#') + 2)\n        const [group, item] = path.split('/')\n\n        return {group: group || 'home', item}\n    }\n\n    expandSelected(){\n        const {group} = this.getSelected()\n        this.onToggleGroupExpanded(group)\n    }\n\n    onToggleGroupExpanded = (name) => {\n        this.setState(state => ({\n            menuGroupsExpanded: {\n                ...state.menuGroupsExpanded,\n                [name]: !state.menuGroupsExpanded[name]\n            }\n        }))\n    }\n\n    render(){\n        const menuContent = (\n            <layout.MenuContent>\n                {Object.keys(menuGroups).map(groupName => {\n                    const group = menuGroups[groupName]\n                    if(group.component){\n                        return (\n                            <layout.MenuRootItem\n                                key={group.label}\n                                label={group.label}\n                                selected={this.getSelected().group === groupName}\n                                icon={group.icon}\n                                subtitle={group.subtitle}\n                                href={(content) => {\n                                    return (\n                                        <Link to={`/${groupName}`} key={groupName}>\n                                            {content}\n                                        </Link>\n                                    )\n                                }}\n                            />\n                        )\n                    }\n\n                    return (\n                        <layout.MenuGroup\n                            expanded={!!this.state.menuGroupsExpanded[groupName]}\n                            key={group.label}\n                            label={group.label}\n                            icon={group.icon}\n                            subtitle={group.subtitle}\n                            onToggleExpanded={() => this.onToggleGroupExpanded(groupName)}\n                        >\n                            {Object.keys(group.items).map(itemName => {\n                                const item = group.items[itemName]\n                                const selected = this.getSelected()\n                                return (\n                                    <layout.MenuItem\n                                        key={item.label}\n                                        label={item.label}\n                                        selected={selected.item === itemName && selected.group === groupName}\n                                        icon={item.icon}\n                                        href={(content) => {\n                                            return (\n                                                <Link to={`/${groupName}/${itemName}`} key={itemName}>\n                                                    {content}\n                                                </Link>\n                                            )\n                                        }}\n                                    />\n                                )\n                            })}\n                        </layout.MenuGroup>\n                    )\n                })}\n            </layout.MenuContent>\n        )\n        const topMenuContent = (\n            <layout.TopMenuContent>\n                <Grid container spacing={16}>\n                    <Grid item><MaterialUiLink /></Grid>\n                    <Grid item><GitHubLink /></Grid>\n                </Grid>\n            </layout.TopMenuContent>\n        )\n\n        const selected = this.getSelected()\n        const group = menuGroups[selected.group]\n\n        let content: React.ReactNode = 'Not found'\n        if(group.component){\n            const Page = group.component\n            content = <Page />\n        }else if(group.items && group.items[selected.item]){\n            const Page = group.items[selected.item].component\n            content = <Page />\n        }\n\n        return (\n            <layout.Layout\n                menuContent={menuContent}\n                topMenuContent={topMenuContent}\n                title=\"Tfso Components\"\n                docTitle=\"Tfso Components\"\n            >\n                {content}\n            </layout.Layout>\n        )\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport {theme} from '../lib'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport {ThemeProvider as StyledThemeProvider} from 'styled-components'\nimport {MuiThemeProvider} from '@material-ui/core/styles'\nimport Layout from './Layout'\n\nReactDOM.render(\n    <React.Fragment>\n        <CssBaseline />\n        <MuiThemeProvider theme={theme.materialuiTheme}>\n            <StyledThemeProvider theme={theme.styledTheme}>\n                <Layout />\n            </StyledThemeProvider>\n        </MuiThemeProvider>\n    </React.Fragment>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}