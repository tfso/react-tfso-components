{"version":3,"sources":["lib/theme/index.ts","lib/layout/Menu.tsx","lib/layout/MobileMenu.tsx","lib/layout/TopMenu.tsx","lib/layout/Topbar.tsx","lib/layout/DocumentTitle.tsx","lib/layout/Layout.tsx","lib/misc/ConfirmationDialog.tsx","lib/misc/SearchField.tsx","lib/misc/Alert.tsx","lib/misc/TextFieldEditor.tsx","lib/utils/Delay.tsx","lib/utils/Hoverable.tsx","lib/utils/Wizard.tsx","demo/demo.tsx","demo/demos/Misc.tsx","demo/demos/Utils.tsx","demo/Layout.tsx","demo/index.tsx"],"names":["colorScheme","colors","tfso","baseColor","baseLightColor","baseLight2Color","baseLight3Color","baseLight4Color","baseLight5Color","blueColor","blueDarkColor","blueDesaturatedColor","grayBlueColor","tealColor","greenColor","greenLightColor","purpleColor","redColor","redLightColor","orangeColor","yellowColor","blackColor","grayColor","grayDarkColor","grayDarkerColor","grayLightColor","grayLighterColor","grayLightestColor","whiteColor","whiteDarkColor","whiteDarkerColor","bodyBackgroundColor","listOverBackgroundColor","borderColor","tabBarColor","palette","primary","primaryLight","success","warning","alert","delete","materialuiTheme","createMuiTheme","typography","useNextVariants","dark","main","light","secondary","contrastText","styledTheme","layout","containerMargin","mui","StyledDrawer","styled","Drawer","attrs","classes","paper","withConfig","displayName","componentId","props","open","theme","spacing","unit","Menu","_React$PureComponent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","variant","List_default","children","React","PureComponent","MobileMenu","Fragment","TopMenu","Root","div","StyledAppBar","AppBar","zIndex","drawer","Grow","MenuButton","IconButton","Title","Typography","_ref","breakpoints","up","SectionDesktop","_ref2","SectionMobile","_ref3","TopBar","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","mobileMoreAnchorEl","handleMobileMenuOpen","event","setState","currentTarget","handleMobileMenuClose","_this2","isMobileMenuOpen","Boolean","position","color","Toolbar_default","onMenuToggle","aria-label","onClick","e","icons_Menu_default","noWrap","title","IconButton_default","aria-haspopup","MoreVert_default","Menu_default","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","mobileMenu","setTitle","text","document","DocumentTitle","nextProps","LayoutWrapper","LayoutHeader","LayoutBody","LayoutBodyLeft","LayoutBodyRight","Layout","DocumentTitle_DocumentTitle","docTitle","Topbar_TopBar","topMenu","menu","LayoutNoMenu","_React$PureComponent2","TransitionComponent","Slide_default","assign","direction","ConfirmationDialog","onCancel","onOk","message","okButtonText","cancelButtonText","Dialog_default","keepMounted","maxWidth","DialogTitle_default","DialogContent_default","DialogActions_default","Button_default","SearchField","editing","onBlur","onFocus","TextField_default","fullWidth","defaultProps","placeholder","margin","InputProps","startAdornment","InputAdornment_default","Search_default","fontSize","variantIcon","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","StyledSnack","other","objectWithoutProperties","SnackbarContent_default","_templateObject","bgColor","Alert","Icon","aria-describedby","id","style","display","alignItems","opacity","marginRight","action","Close_default","TextFieldEditor","_inputRef","createRef","prevProps","blur","current","onKeyDown","defaultPrevented","ctrlKey","handleEvent","multiline","onChange","target","_this$props","dirtyProp","dirty","enableDirtyCheck","otherProps","isDirty","inputRef","fontStyle","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","Delay","_timer","show","setTimeout","delayMs","clearTimeout","beforeShow","Hoverable","ref","toggleHover","hover","hoverOn","hoverOff","restProps","onMouseEnter","onMouseLeave","Wizard","next","index","prev","hasOwnProperty","Demo","Paper_default","padding","marginBottom","DemoTitle","Typography_default","DemoHelp","DemoContent","marginTop","index_es","DemoProps","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","DemoProp","name","type","default","description","Misc","Misc_AlertDemo","Misc_ConfirmationDialogDemo","Misc_SearchFieldDemo","Misc_TextFieldEditorDemo","variantMessage","AlertDemo","onPress","demo_Demo","demo_DemoTitle","demo_DemoHelp","demo_DemoProps","demo_DemoProp","demo_DemoContent","Snackbar_default","autoHideDuration","misc_namespaceObject","TextFieldEditorDemo","onReset","_this3","toString","SearchFieldDemo","ConfirmationDialogDemo","openConfirmationDialog","onClickOpenConfirmationDialog","_this4","_this5","Utils","Utils_DelayDemo","Utils_HoverableDemo","Utils_WizardDemo","DelayDemo","utils_namespaceObject","CircularProgress_default","HoverableDemo","backgroundColor","cursor","height","WizardDemo","Stepper_default","activeStep","Step_default","StepLabel_default","disabled","demoComponents","menuOpen","selectedDemo","keys","onChangeDemo","layout_namespaceObject","map","demo","ListItem_default","button","selected","ListItemIcon_default","People_default","ListItemText_default","Divider_default","Chip_default","label","SelectedDemo","Component","ReactDOM","render","CssBaseline_default","styles","styled_components_browser_esm","demo_Layout_Layout","getElementById"],"mappings":"ylCAEMA,EAkBK,UAILC,EAAS,CACXC,KAAM,UACNC,UAvBO,UAwBPC,eAAgB,UAChBC,gBAAiB,UACjBC,gBAAiB,UACjBC,gBAAiB,UACjBC,gBAAiB,UACjBC,UA3BY,UA4BZC,cA3BW,UA4BXC,qBAnBY,UAoBZC,cAdQ,UAeRC,UA7Ba,UA8BbC,WA7BO,UA8BPC,gBAAiB,yBACjBC,YA9BS,UA+BTC,SA9BU,UA+BVC,cAAe,yBACfC,YA/BW,UAgCXC,YA/BW,UAgCXC,WA/BS,UAgCTC,UA/BW,UAgCXC,cAAe,UACfC,gBAAiB,UACjBC,eAAgB,UAChBC,iBAAkB,UAClBC,kBAAmB,UACnBC,WAAY5B,EACZ6B,eAAgB,UAChBC,iBAAkB,UAClBC,oBAAqB,UACrBC,wBAAyB,UACzBC,YAAa,UACbC,YAAalC,GAGXmC,EAAU,CACZC,QAASnC,EAAOE,UAChBkC,aAAcpC,EAAOG,eACrBkC,QAASrC,EAAOa,WAChByB,QAAStC,EAAOkB,YAChBqB,MAAOvC,EAAOgB,SACdwB,OAAQxC,EAAOgB,UAONyB,EAAkBC,yBAAe,CAC1CC,WAAY,CACRC,iBAAiB,GAErBV,QAAS,CACLC,QAAS,CACLU,KAAM,UACNC,KAAM,OACNC,MAAO,WAEXC,UAAW,CACPH,KAAM,UACNC,KAAM,UACNC,MAAO,UACPE,aAAc,WAKbC,EAAc,CACvBjD,KAAM,CACFD,SACAkC,UACAiB,OA3BO,CACXC,gBAAiB,SA4BjBC,IAAKZ,oFC5FHa,EAAeC,YAAOC,KAAQC,MAAM,CACtCC,QAAS,CAACC,MAAO,mBADHC,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGP,CAAH,kRAIH,SAAAQ,GAAK,OAAIA,EAAMC,KAAO,IAAqC,EAA/BD,EAAME,MAAMZ,IAAIa,QAAQC,KAAW,GAY/D,SAAAJ,GAAK,OAAIA,EAAMC,KAAO,IAAqC,EAA/BD,EAAME,MAAMZ,IAAIa,QAAQC,KAAW,GAKpD,SAAAJ,GAAK,OAAIA,EAAME,MAAMhE,KAAKD,OAAOO,kBAS9C6D,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAMQ,OACIC,EAAAC,EAAAC,cAAC7B,EAAD,CAAc8B,QAAQ,YAAYpB,KAAMQ,KAAKT,MAAMC,MAC/CiB,EAAAC,EAAAC,cAACE,EAAAH,EAAD,KACKV,KAAKT,MAAMuB,eAThClB,EAAA,CAA0BmB,IAAMC,eClCnBC,EAAb,SAAApB,GAAA,SAAAoB,IAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAiB,GAAAnB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmB,GAAAd,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAmB,EAAApB,GAAAC,OAAAQ,EAAA,EAAAR,CAAAmB,EAAA,EAAAV,IAAA,SAAAC,MAAA,WAEQ,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACKlB,KAAKT,MAAMuB,cAJ5BG,EAAA,CAAgCF,IAAMC,eCAzBG,EAAb,SAAAtB,GAAA,SAAAsB,IAAA,OAAArB,OAAAC,EAAA,EAAAD,CAAAE,KAAAmB,GAAArB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqB,GAAAhB,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAqB,EAAAtB,GAAAC,OAAAQ,EAAA,EAAAR,CAAAqB,EAAA,EAAAZ,IAAA,SAAAC,MAAA,WAEQ,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACKlB,KAAKT,MAAMuB,cAJ5BK,EAAA,CAA6BJ,IAAMC,wICS7BI,EAAOrC,IAAOsC,IAAVjC,WAAA,CAAAC,YAAA,OAAAC,YAAA,gBAAGP,CAAH,iBAGJuC,EAAevC,YAAOwC,KAAVnC,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGP,CAAH,sDAIL,SAAAQ,GAAK,OAAIA,EAAME,MAAMZ,IAAI2C,OAAOC,OAAS,IAIhDC,EAAO3C,IAAOsC,IAAVjC,WAAA,CAAAC,YAAA,OAAAC,YAAA,gBAAGP,CAAH,kBAIJ4C,EAAa5C,YAAO6C,KAAVxC,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGP,CAAH,8CAOV8C,EAAQ9C,YAAO+C,KAAV1C,WAAA,CAAAC,YAAA,QAAAC,YAAA,gBAAGP,CAAH,yCAGP,SAAAgD,GAAA,OAAAA,EAAEtC,MAAiBZ,IAAImD,YAAYC,GAAG,QAMpCC,EAAiBnD,IAAOsC,IAAVjC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGP,CAAH,2DAGhB,SAAAoD,GAAA,OAAAA,EAAE1C,MAAiBZ,IAAImD,YAAYC,GAAG,QAOpCG,EAAgBrD,IAAOsC,IAAVjC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGP,CAAH,wCAGf,SAAAsD,GAAA,OAAAA,EAAE5C,MAAiBZ,IAAImD,YAAYC,GAAG,QAY7BK,EAAb,SAAAzC,GAAA,SAAAyC,IAAA,IAAAC,EAAAC,EAAA1C,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,GAAA,QAAAG,EAAArC,UAAAsC,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAzC,UAAAyC,GAAA,OAAAL,EAAA1C,OAAAG,EAAA,EAAAH,CAAAE,MAAAuC,EAAAzC,OAAAI,EAAA,EAAAJ,CAAAwC,IAAAQ,KAAA3C,MAAAoC,EAAA,CAAAvC,MAAA+C,OAAAJ,MAKIK,MAAQ,CACJC,mBAAoB,MAN5BT,EAQIU,qBAAuB,SAAAC,GACnBX,EAAKY,SAAS,CAACH,mBAAoBE,EAAME,iBATjDb,EAWIc,sBAAwB,WACpBd,EAAKY,SAAS,CAACH,mBAAoB,QAZ3CT,EAAA,OAAA1C,OAAAO,EAAA,EAAAP,CAAAwC,EAAAzC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAwC,EAAA,EAAA/B,IAAA,SAAAC,MAAA,WAeY,IAAA+C,EAAAvD,KACGiD,EAAsBjD,KAAKgD,MAA3BC,mBACDO,EAAmBC,QAAQR,GAEjC,OACIxC,EAAAC,EAAAC,cAACS,EAAD,KACIX,EAAAC,EAAAC,cAACW,EAAD,CAAcoC,SAAS,SAASC,MAAM,WAClClD,EAAAC,EAAAC,cAACiD,EAAAlD,EAAD,KACiC,OAA5BV,KAAKT,MAAMsE,cACRpD,EAAAC,EAAAC,cAACgB,EAAD,CAAYgC,MAAM,UAAUG,aAAW,cAAcC,QAAS,SAAAC,GAAC,OAAIT,EAAKhE,MAAMsE,cAAgBN,EAAKhE,MAAMsE,iBACrGpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,OAGRD,EAAAC,EAAAC,cAACkB,EAAD,CAAOjB,QAAQ,KAAK+C,MAAM,UAAUO,QAAM,GACrClE,KAAKT,MAAM4E,OAEhB1D,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAACuB,EAAD,KACKlC,KAAKT,MAAMuB,UAEhBL,EAAAC,EAAAC,cAACyB,EAAD,KACI3B,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CAAY2D,gBAAc,OAAON,QAAS/D,KAAKkD,qBAAsBS,MAAM,WACvElD,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,UAKhBD,EAAAC,EAAAC,cAAC4D,EAAA7D,EAAD,CACI8D,SAAUvB,EACVwB,aAAc,CAACC,SAAU,MAAOC,WAAY,SAC5CC,gBAAiB,CAACF,SAAU,MAAOC,WAAY,SAC/CnF,KAAMgE,EACNqB,QAAS7E,KAAKsD,uBAEbtD,KAAKT,MAAMuF,iBAjDhCxC,EAAA,CAA4BvB,IAAMC,eCjElC,SAAS+D,EAASC,GACdC,SAASd,MAAQa,MAOAE,eACjB,SAAAA,EAAY3F,GAAM,IAAAiD,EAAA,OAAA1C,OAAAC,EAAA,EAAAD,CAAAE,KAAAkF,GACd1C,EAAA1C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoF,GAAApC,KAAA9C,KAAMT,IACNwF,EAASxF,EAAMyF,MAFDxC,yFAIQ2C,GACnBA,EAAUH,OAAShF,KAAKT,MAAMyF,MAC7BD,EAASI,EAAUH,uCAIvB,MAAO,UAX4BjE,IAAMC,eCJpCoE,GAAgBrG,IAAOsC,IAAVjC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,YAAGP,CAAH,qDAObsG,GAAetG,IAAOsC,IAAVjC,WAAA,CAAAC,YAAA,eAAAC,YAAA,YAAGP,CAAH,MAKZuG,GAAavG,IAAOsC,IAAVjC,WAAA,CAAAC,YAAA,aAAAC,YAAA,YAAGP,CAAH,uCAOVwG,GAAiBxG,IAAOsC,IAAVjC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGP,CAAH,MAKdyG,GAAkBzG,IAAOsC,IAAVjC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGP,CAAH,uCAef0G,GAAb,SAAA5F,GAAA,SAAA4F,IAAA,OAAA3F,OAAAC,EAAA,EAAAD,CAAAE,KAAAyF,GAAA3F,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2F,GAAAtF,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAA2F,EAAA5F,GAAAC,OAAAQ,EAAA,EAAAR,CAAA2F,EAAA,EAAAlF,IAAA,SAAAC,MAAA,WAEQ,OACIC,EAAAC,EAAAC,cAACyE,GAAD,KACI3E,EAAAC,EAAAC,cAAC+E,GAAD,CAAeV,KAAMhF,KAAKT,MAAMoG,WAChClF,EAAAC,EAAAC,cAAC0E,GAAD,KACI5E,EAAAC,EAAAC,cAACiF,EAAD,CACIzB,MAAOnE,KAAKT,MAAM4E,MAClBN,aAAc7D,KAAKT,MAAMsE,aACzBiB,WAAY9E,KAAKT,MAAMuF,YAEtB9E,KAAKT,MAAMsG,UAGpBpF,EAAAC,EAAAC,cAAC2E,GAAD,KACI7E,EAAAC,EAAAC,cAAC4E,GAAD,KACKvF,KAAKT,MAAMuG,MAEhBrF,EAAAC,EAAAC,cAAC6E,GAAD,KACKxF,KAAKT,MAAMuB,gBAnBpC2E,EAAA,CAA4B1E,IAAMC,eAkCrB+E,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAjG,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,GAAAjG,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiG,GAAA5F,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAiG,EAAAC,GAAAlG,OAAAQ,EAAA,EAAAR,CAAAiG,EAAA,EAAAxF,IAAA,SAAAC,MAAA,WAEQ,OACIC,EAAAC,EAAAC,cAACyE,GAAD,KACI3E,EAAAC,EAAAC,cAAC+E,GAAD,CAAeV,KAAMhF,KAAKT,MAAMoG,WAChClF,EAAAC,EAAAC,cAAC0E,GAAD,KACI5E,EAAAC,EAAAC,cAACiF,EAAD,CACIzB,MAAOnE,KAAKT,MAAM4E,MAClBN,aAAc,KACdiB,WAAY9E,KAAKT,MAAMuF,YAEtB9E,KAAKT,MAAMsG,UAGpBpF,EAAAC,EAAAC,cAAC2E,GAAD,KACI7E,EAAAC,EAAAC,cAAC6E,GAAD,KACKxF,KAAKT,MAAMuB,gBAhBpCiF,EAAA,CAAkChF,IAAMC,uIC5DlCiF,GAAsB,SAAA1G,GAAK,OAAIkB,EAAAC,EAAAC,cAACuF,GAAAxF,EAADZ,OAAAqG,OAAA,CAAOC,UAAU,MAAS7G,KAgChD8G,GA9B8D,SAAC9G,GAAmC,IACtGC,EAAwED,EAAxEC,KAAM8G,EAAkE/G,EAAlE+G,SAAUC,EAAwDhH,EAAxDgH,KAAMpC,EAAkD5E,EAAlD4E,MAAOqC,EAA2CjH,EAA3CiH,QAASC,EAAkClH,EAAlCkH,aAAcC,EAAoBnH,EAApBmH,iBAC3D,OACIjG,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,CACIuF,oBAAqBA,GACrBW,aAAa,EACbpH,KAAMA,EACNqF,QAASyB,EACTO,SAAU,MAET1C,GAAS1D,EAAAC,EAAAC,cAACmG,GAAApG,EAAD,KAAcyD,GACxB1D,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,KAAgB8F,GAChB/F,EAAAC,EAAAC,cAACqG,GAAAtG,EAAD,KACID,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAQqD,QAASuC,EAAU3C,MAAM,WAAW+C,GAC5CjG,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAQqD,QAASwC,EAAM5C,MAAM,aAAa8C,mECxBrCS,8MASjBlE,MAAe,CACXmE,SAAS,KAGbC,OAAS,SAACpD,GACNxB,EAAKY,SAAS,CAAC+D,SAAS,IADa,IAE7BC,EAAW5E,EAAKjD,MAAhB6H,OACRA,GAAUA,EAAOpD,MAGrBqD,QAAU,SAACrD,GACPxB,EAAKY,SAAS,CAAC+D,SAAS,IADc,IAE9BE,EAAY7E,EAAKjD,MAAjB8H,QACRA,GAAWA,EAAQrD,4EAInB,OACIvD,EAAAC,EAAAC,cAAC2G,GAAA5G,EAADZ,OAAAqG,OAAA,CACIoB,UAAWvH,KAAKgD,MAAMmE,SAClBnH,KAAKT,MAFb,CAGI6H,OAAQpH,KAAKoH,OACbC,QAASrH,KAAKqH,kBA/BWtG,IAAMC,eAA1BkG,GACVM,aAAe,CAClBC,YAAa,SACbC,OAAQ,QACRC,WAAY,CACRC,eAAgBnH,EAAAC,EAAAC,cAACkH,GAAAnH,EAAD,CAAgBgD,SAAS,SAAQjD,EAAAC,EAAAC,cAACmH,GAAApH,EAAD,CAAYqH,SAAS,0QCHlF,IAAMC,GAAc,CAChBnK,QAASoK,KACTnK,QAASoK,KACTC,MAAOC,KACPC,KAAMC,MAaJC,GAAcxJ,YADI,SAAAgD,KAAEnB,QAAF,IAAc4H,EAAd1I,OAAA2I,GAAA,EAAA3I,CAAAiC,EAAA,oBAAyBtB,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAuB8H,IACrDzJ,CAAH4J,KACO,SAAAxG,GAAA,OAXR,SAACvB,EAAuBlD,GACpC,OAAOkD,GACH,IAAK,UAAW,OAAOlD,EAAQG,QAC/B,IAAK,QAAS,OAAOH,EAAQK,MAC7B,IAAK,OAAQ,OAAOL,EAAQE,aAC5B,IAAK,UAAW,OAAOF,EAAQI,SAMO8K,CAAtBzG,EAAEvB,QAAFuB,EAAW1C,MAAkChE,KAAKiC,WA8C3DmL,GAlCD,SAACtJ,GAAsB,IACzBiH,EAA8BjH,EAA9BiH,QAAS3B,EAAqBtF,EAArBsF,QAASjE,EAAYrB,EAAZqB,QACpBkI,EAAOd,GAAYpH,GAEzB,OACIH,EAAAC,EAAAC,cAAC4H,GAAD,CACI3H,QAASA,EACTmI,mBAAiB,kBACjBvC,QACI/F,EAAAC,EAAAC,cAAA,QAAMqI,GAAG,kBAAkBC,MAAO,CAACC,QAAS,OAAQC,WAAY,WAC5D1I,EAAAC,EAAAC,cAACmI,EAAD,CAAMG,MAAO,CAAClB,SAAU,GAAIqB,QAAS,GAAKC,YAAa,MACtD7C,GAGT8C,OAAQ,CACJ7I,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CACIH,IAAI,QACJuD,aAAW,QACXH,MAAM,UACNI,QAASc,GAETpE,EAAAC,EAAAC,cAAC4I,GAAA7I,EAAD,CAAWuI,MAAO,CAAClB,SAAU,WC3C5ByB,8MAOjBC,UAA+C1I,IAAM2I,cAErD1G,MAAe,CACXmE,SAAS,EACT3G,MAAOgC,EAAKjD,MAAMiB,MAClBmJ,UAAWnH,EAAKjD,SAYpBqK,KAAO,WAAQpH,EAAKiH,UAAUI,SAAWrH,EAAKiH,UAAUI,QAAQD,UAEhEE,UAAY,SAAC3G,GAET,GADAX,EAAKjD,MAAMuK,WAAatH,EAAKjD,MAAMuK,UAAU3G,IAC1CA,EAAM4G,iBAGT,GAAG5G,EAAM6G,QAAS,OAAO7G,EAAM5C,KAC3B,IAAK,IAGDiC,EAAKoH,OACL,MACJ,IAAK,IACDK,GAAY9G,GACZX,EAAKY,SAAS,CAAC+D,SAAS,EAAO3G,MAAOgC,EAAKjD,MAAMiB,OAAQgC,EAAKoH,WAIjE,OAAOzG,EAAM5C,KACd,IAAK,QACD,GAAGiC,EAAKjD,MAAM2K,UACV,MACJD,GAAY9G,GACZX,EAAKoH,OACL,MACJ,IAAK,SACDK,GAAY9G,GACZX,EAAKY,SAAS,CAAC+D,SAAS,EAAO3G,MAAOgC,EAAKjD,MAAMiB,OAAQgC,EAAKoH,UAM1EvC,QAAU,SAACrD,GACPxB,EAAKY,SAAS,CAAC+D,SAAS,IACxB3E,EAAKjD,MAAM8H,SAAW7E,EAAKjD,MAAM8H,QAAQrD,MAG7CoD,OAAS,SAACpD,GACFxB,EAAKQ,MAAMmE,UAGf3E,EAAKjD,MAAM4K,SAAS3H,EAAKQ,MAAMxC,OAC/BgC,EAAKY,SAAS,CAAC+D,SAAS,IACxB3E,EAAKjD,MAAM6H,QAAU5E,EAAKjD,MAAM6H,OAAOpD,OAG3CmG,SAAW,SAAChH,GACR,IAAM3C,EAAQ2C,EAAMiH,OAAO5J,MAC3BgC,EAAKY,SAAS,CAAC5C,QAAO2G,SAAS,6EAG3B,IAAAkD,EACmGrK,KAAKT,MAA7F+K,EADXD,EACIE,MAA4DC,GADhEH,EACsBF,SADtBE,EAC8C7J,MAD9C6J,EACgEG,kBAAqBC,EADrF3K,OAAA2I,GAAA,EAAA3I,CAAAuK,EAAA,iDAEI7J,EAAUR,KAAKgD,MAAfxC,MAEFkK,EAAUF,GAAmBxK,KAAKT,MAAMiB,QAAUA,KAAyB8J,EAEjF,OACI7J,EAAAC,EAAAC,cAAC2G,GAAA5G,EAADZ,OAAAqG,OAAA,GACQsE,EADR,CAEIE,SAAU3K,KAAKyJ,UACfjJ,MAAOA,EACP6G,QAASrH,KAAKqH,QACd8C,SAAUnK,KAAKmK,SACf/C,OAAQpH,KAAKoH,OACb0C,UAAW9J,KAAK8J,UAChBnC,WAAY,CAAEsB,MAAO,CAAE2B,UAAWF,EAAU,SAAW,iEA7EnCnL,EAAuCyD,GAGnE,OAFkBA,EAAM2G,UAEXnJ,QAAUjB,EAAMiB,MAClB,CAAEA,MAAOjB,EAAMiB,MAAOmJ,UAAWpK,GAErC,CAAEoK,UAAWpK,UArBiBwB,IAAMC,eAkGnD,SAASiJ,GAAY9G,GACjBA,EAAM0H,iBACN1H,EAAM2H,kBAEN3H,EAAM4H,YAAYC,+BC7GDC,eAUjB,SAAAA,EAAY1L,GAAM,IAAAiD,EAAA,OAAA1C,OAAAC,EAAA,EAAAD,CAAAE,KAAAiL,IACdzI,EAAA1C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmL,GAAAnI,KAAA9C,KAAMT,KAHV2L,OAAc,KAIV1I,EAAKQ,MAAQ,CACTmI,MAAM,GAHI3I,mFAMC,IAAAe,EAAAvD,KACfA,KAAKoD,SAAS,CAAC+H,MAAM,IACrBnL,KAAKkL,OAASE,WAAW,WACrB7H,EAAKH,SAAS,CAAC+H,MAAM,KACtBnL,KAAKT,MAAM8L,SAAW,oDAGzBC,aAAatL,KAAKkL,yCAGlB,OAAGlL,KAAKT,MAAM4L,MAAQnL,KAAKgD,MAAMmI,KACtBnL,KAAKT,MAAMuB,SAGfd,KAAKT,MAAMgM,YAAc,YA9BLxK,IAAMC,eCHpBwK,eAOjB,SAAAA,EAAYjM,GAAM,IAAAiD,EAAA,OAAA1C,OAAAC,EAAA,EAAAD,CAAAE,KAAAwL,IACdhJ,EAAA1C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0L,GAAA1I,KAAA9C,KAAMT,KAPFkM,SAMU,EAAAjJ,EAUlBkJ,YAAc,WACVlJ,EAAKY,SAAS,SAAAJ,GAAK,MAAK,CAAC2I,OAAQ3I,EAAM2I,UAXzBnJ,EAclBoJ,QAAU,kBAAMpJ,EAAKY,SAAS,CAACuI,OAAO,KAdpBnJ,EAelBqJ,SAAW,kBAAMrJ,EAAKY,SAAS,CAACuI,OAAO,KAZnCnJ,EAAKiJ,IAAM1K,IAAM2I,YAEjBlH,EAAKQ,MAAQ,CACT2I,OAAO,GANGnJ,wEAiBV,IAAA6H,EAC6BrK,KAAKT,MAA/BuB,EADHuJ,EACGvJ,SAAagL,EADhBhM,OAAA2I,GAAA,EAAA3I,CAAAuK,EAAA,cAGJ,OACI5J,EAAAC,EAAAC,cAAA,MAAAb,OAAAqG,OAAA,CACIsF,IAAKzL,KAAKyL,IACVM,aAAc/L,KAAK4L,QACnBI,aAAchM,KAAK6L,UACfC,GAEHhL,EAASd,KAAKgD,MAAM2I,MAAO3L,KAAKyL,aAlCV1K,IAAMC,eCExBiL,eAOjB,SAAAA,EAAY1M,GAAM,IAAAiD,EAAA,OAAA1C,OAAAC,EAAA,EAAAD,CAAAE,KAAAiM,IACdzJ,EAAA1C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmM,GAAAnJ,KAAA9C,KAAMT,KAWV2M,KAAO,kBAAM1J,EAAKY,SAAS,SAAAJ,GACvB,OAAGR,EAAKjD,MAAMmD,QAAUM,EAAMmJ,MAAQ,GAAK3J,EAAKjD,MAAMmD,OAAeM,EAC9D,CAACmJ,MAAOnJ,EAAMmJ,MAAQ,MAdf3J,EAgBlB4J,KAAO,kBAAM5J,EAAKY,SAAS,SAAAJ,GACvB,OAAGA,EAAMmJ,MAAQ,EAAI,EAAUnJ,EACxB,CAACmJ,MAAOnJ,EAAMmJ,MAAQ,MAhB7B3J,EAAKQ,MAAQ,CAACmJ,MAAO5M,EAAM4M,OAAS,GAFtB3J,wEAqBV,IAAA6H,EAC6BrK,KAAKT,MAA/BuB,EADHuJ,EACGvJ,SAAagL,EADhBhM,OAAA2I,GAAA,EAAA3I,CAAAuK,EAAA,cAGJ,OACI5J,EAAAC,EAAAC,cAAA,MAASmL,EACJhL,EAASd,KAAKgD,MAAMmJ,MAAOnM,KAAKkM,KAAMlM,KAAKoM,0DArBxBjH,GAC5B,OAAGA,EAAUkH,eAAe,SACjB,CAACF,MAAOhH,EAAUgH,OAEtB,YAhBqBpL,IAAMC,0VCC7BsL,GAAO,SAAC/M,GAAD,OAAWkB,EAAAC,EAAAC,cAAC4L,GAAA7L,EAAD,CAAOuI,MAAO,CAACuD,QAAS,GAAIC,aAAc,KAAMlN,EAAMuB,WACxE4L,GAAY,SAACnN,GAAD,OAAWkB,EAAAC,EAAAC,cAACgM,EAAAjM,EAAD,CAAYE,QAAQ,MAAOrB,EAAMuB,WACxD8L,GAAW,SAACrN,GAAD,OAAWkB,EAAAC,EAAAC,cAACgM,EAAAjM,EAAD,CAAYE,QAAQ,WAAWrB,EAAMuB,WAC3D+L,GAAc,SAACtN,GAAD,OACvBkB,EAAAC,EAAAC,cAAA,OAAKsI,MAAO,CAAC6D,UAAW,KACpBrM,EAAAC,EAAAC,cAACgM,EAAAjM,EAAD,CAAYE,QAAQ,aAApB,WACAH,EAAAC,EAAAC,cAACoM,GAAA,EAAD,MACAtM,EAAAC,EAAAC,cAAA,WACCpB,EAAMuB,WAGFkM,GAAY,SAACzN,GAAD,OACrBkB,EAAAC,EAAAC,cAACsM,GAAAvM,EAAD,CAAgBuI,MAAO,CAAC6D,UAAW,KAC/BrM,EAAAC,EAAAC,cAACuM,GAAAxM,EAAD,CAAuByM,WAAY1M,EAAAC,EAAAC,cAACyM,GAAA1M,EAAD,OAC/BD,EAAAC,EAAAC,cAACgM,EAAAjM,EAAD,eAEJD,EAAAC,EAAAC,cAAC0M,GAAA3M,EAAD,KACID,EAAAC,EAAAC,cAAC2M,GAAA5M,EAAD,KACID,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,KACID,EAAAC,EAAAC,cAAC6M,GAAA9M,EAAD,KACID,EAAAC,EAAAC,cAAC8M,GAAA/M,EAAD,aACAD,EAAAC,EAAAC,cAAC8M,GAAA/M,EAAD,aACAD,EAAAC,EAAAC,cAAC8M,GAAA/M,EAAD,gBACAD,EAAAC,EAAAC,cAAC8M,GAAA/M,EAAD,sBAGRD,EAAAC,EAAAC,cAAC+M,GAAAhN,EAAD,KACKnB,EAAMuB,cAcd6M,GAAW,SAACpO,GAAD,OACpBkB,EAAAC,EAAAC,cAAC6M,GAAA9M,EAAD,KACID,EAAAC,EAAAC,cAAC8M,GAAA/M,EAAD,KAAWD,EAAAC,EAAAC,cAAA,YAAOpB,EAAMqO,OACxBnN,EAAAC,EAAAC,cAAC8M,GAAA/M,EAAD,KAAWD,EAAAC,EAAAC,cAAA,YAAOpB,EAAMsO,OACxBpN,EAAAC,EAAAC,cAAC8M,GAAA/M,EAAD,KAAWD,EAAAC,EAAAC,cAAA,YAAOpB,EAAMuO,UACxBrN,EAAAC,EAAAC,cAAC8M,GAAA/M,EAAD,KAAWD,EAAAC,EAAAC,cAACgM,EAAAjM,EAAD,KAAanB,EAAMwO,oCChDjBC,oLAEb,OACIvN,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACIT,EAAAC,EAAAC,cAACsN,GAAD,MACAxN,EAAAC,EAAAC,cAACuN,GAAD,MACAzN,EAAAC,EAAAC,cAACwN,GAAD,MACA1N,EAAAC,EAAAC,cAACyN,GAAD,cAPkBrN,IAAMC,eAalCqN,GAA0D,CAC5DxQ,QAAS,oBACTwK,KAAM,4BACNvK,QAAS,gCACTqK,MAAO,2BAGLmG,8MACFtL,MAAQ,CACJpC,QAAS,UACTpB,MAAM,EACNgH,QAAS,uBAGb3B,QAAU,kBAAMrC,EAAKY,SAAS,CAAC5D,MAAM,OAErC+O,QAAU,SAAC3N,GACP,IAAM4F,EAAU6H,GAAezN,GAC/B,OAAO,kBAAM4B,EAAKY,SAAS,CAAE5D,MAAM,EAAMgH,UAAS5F,sFAIlD,OACIH,EAAAC,EAAAC,cAAC6N,GAAD,KACI/N,EAAAC,EAAAC,cAAC8N,GAAD,cACAhO,EAAAC,EAAAC,cAAC+N,GAAD,qGACAjO,EAAAC,EAAAC,cAACgO,GAAD,KACIlO,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,UAAUC,KAAK,qBAAqBE,YAAY,kDAC/DtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,UAAUC,KAAK,mCAAmCE,YAAY,yFAC7EtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,UAAUC,KAAK,aAAaE,YAAY,2DAE3DtN,EAAAC,EAAAC,cAACkO,GAAD,KACIpO,EAAAC,EAAAC,cAACmO,GAAApO,EAAD,CACIlB,KAAMQ,KAAKgD,MAAMxD,KACjBiF,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBoK,iBAAkB,IAClBlK,QAAS7E,KAAK6E,SAEdpE,EAAAC,EAAAC,cAACqO,EAAKnG,MAAN,CACIhE,QAAS7E,KAAK6E,QACd2B,QAASxG,KAAKgD,MAAMwD,QACpB5F,QAASZ,KAAKgD,MAAMpC,WAG5BH,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAQE,QAAQ,WAAWmD,QAAS/D,KAAKuO,QAAQ,YAAjD,gBACA9N,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAQE,QAAQ,WAAWmD,QAAS/D,KAAKuO,QAAQ,SAAjD,aACA9N,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAQE,QAAQ,WAAWmD,QAAS/D,KAAKuO,QAAQ,YAAjD,gBACA9N,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAQE,QAAQ,WAAWmD,QAAS/D,KAAKuO,QAAQ,UAAjD,uBA3CIxN,IAAMC,eAkDxBiO,8MACFjM,MAAQ,CACJxC,MAAO,OACP+J,OAAO,EACPC,kBAAkB,KAGtB0E,QAAU,WACN3L,EAAKH,SAAS,CAAC5C,MAAO,8EAGlB,IAAA2O,EAAAnP,KACJ,OACIS,EAAAC,EAAAC,cAAC6N,GAAD,KACI/N,EAAAC,EAAAC,cAAC8N,GAAD,wBACAhO,EAAAC,EAAAC,cAAC+N,GAAD,0EACAjO,EAAAC,EAAAC,cAACgO,GAAD,KACIlO,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,QAAQC,KAAK,SAASC,QAAQ,GAAGC,YAAY,KAC5DtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,WAAWC,KAAK,0BAA0BC,QAAQ,GAAGC,YAAY,wIAChFtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,QAAQC,KAAK,qBAAqBC,QAAQ,QAAQC,YAAY,qDAC7EtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,mBAAmBC,KAAK,qBAAqBC,QAAQ,QAAQC,YAAY,wEACxFtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,MAAMC,KAAK,iBAAiBE,YAAY,+CAEvDtN,EAAAC,EAAAC,cAACsM,GAAAvM,EAAD,KACID,EAAAC,EAAAC,cAACuM,GAAAxM,EAAD,CAAuByM,WAAY1M,EAAAC,EAAAC,cAACyM,GAAA1M,EAAD,OAC/BD,EAAAC,EAAAC,cAACgM,EAAAjM,EAAD,qBAEJD,EAAAC,EAAAC,cAAC0M,GAAA3M,EAAD,KACID,EAAAC,EAAAC,cAAA,8EAC2EF,EAAAC,EAAAC,cAAA,WAD3E,4DAEqEF,EAAAC,EAAAC,cAAA,WAFrE,sEAGqFF,EAAAC,EAAAC,cAAA,WAHrF,kEAI+EF,EAAAC,EAAAC,cAAA,YAE/EF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yHAAmHF,EAAAC,EAAAC,cAAA,aAG/HF,EAAAC,EAAAC,cAACkO,GAAD,KACIpO,EAAAC,EAAAC,cAACqO,EAAKxF,gBAAN,CACIhJ,MAAOR,KAAKgD,MAAMxC,MAClBgK,iBAAkBxK,KAAKgD,MAAMwH,iBAC7BD,MAAOvK,KAAKgD,MAAMuH,MAClBJ,SAAU,SAAC3J,GAAD,OAAmB2O,EAAK/L,SAAS,CAAC5C,aAEhDC,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAQE,QAAQ,WAAWmD,QAAS,kBAAMoL,EAAK/L,SAAS,CAAC5C,MAAO,WAAhE,SACAC,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAQE,QAAQ,WAAWmD,QAAS,kBAAMoL,EAAK/L,SAAS,CAACmH,OAAQ4E,EAAKnM,MAAMuH,UAA5E,UAA6FvK,KAAKgD,MAAMuH,MAAM6E,YAC9G3O,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAQE,QAAQ,WAAWmD,QAAS,kBAAMoL,EAAK/L,SAAS,CAACoH,kBAAmB2E,EAAKnM,MAAMwH,qBAAvF,uBAAgIxK,KAAKgD,MAAMwH,iBAAiB4E,qBA/C9IrO,IAAMC,eAsDlCqO,oLAEE,OACI5O,EAAAC,EAAAC,cAAC6N,GAAD,KACI/N,EAAAC,EAAAC,cAAC8N,GAAD,oBACAhO,EAAAC,EAAAC,cAAC+N,GAAD,0FACAjO,EAAAC,EAAAC,cAACgO,GAAD,KACIlO,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,cAAcC,KAAK,oBAAoBC,QAAQ,SAASC,YAAY,KACnFtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,SAASC,KAAK,mCAAmCC,QAAQ,QAAQC,YAAY,KAC5FtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,aAAaC,KAAK,0CAA0CC,QAAQ,sGAAsGC,YAAY,KACrMtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,MAAMC,KAAK,iBAAiBC,QAAQ,GAAGC,YAAY,+CAEtEtN,EAAAC,EAAAC,cAACkO,GAAD,KACIpO,EAAAC,EAAAC,cAACqO,EAAK9H,YAAN,eAbUnG,IAAMC,eAoB9BsO,8MACFtM,MAAQ,CACJuM,wBAAwB,KAG5BC,8BAAgC,WAC5BC,EAAKrM,SAAS,CAACmM,wBAAwB,6EAGnC,IAAAG,EAAA1P,KACJ,OACIS,EAAAC,EAAAC,cAAC6N,GAAD,KACI/N,EAAAC,EAAAC,cAAC8N,GAAD,2BACAhO,EAAAC,EAAAC,cAAC+N,GAAD,kDACAjO,EAAAC,EAAAC,cAACgO,GAAD,KACIlO,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,OAAOC,KAAK,UAAUC,QAAQ,GAAGC,YAAY,gBAC5DtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,QAAQC,KAAK,oBAAoBC,QAAQ,GAAGC,YAAY,iBACvEtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,UAAUC,KAAK,SAASC,QAAQ,GAAGC,YAAY,mBAC9DtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,eAAeC,KAAK,SAASC,QAAQ,GAAGC,YAAY,KACnEtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,mBAAmBC,KAAK,SAASC,QAAQ,GAAGC,YAAY,KACvEtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,OAAOC,KAAK,WAAWC,QAAQ,GAAGC,YAAY,KAC7DtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,WAAWC,KAAK,WAAWC,QAAQ,GAAGC,YAAY,MAErEtN,EAAAC,EAAAC,cAACkO,GAAD,KACIpO,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAQE,QAAQ,WAAWmD,QAAS/D,KAAKwP,+BAAzC,2BACA/O,EAAAC,EAAAC,cAACqO,EAAK3I,mBAAN,CACI7G,KAAMQ,KAAKgD,MAAMuM,uBACjB9I,aAAa,KACbC,iBAAiB,SACjBH,KAAM,kBAAMmJ,EAAKtM,SAAS,CAACmM,wBAAwB,KACnDjJ,SAAU,kBAAMoJ,EAAKtM,SAAS,CAACmM,wBAAwB,KACvD/I,QAAQ,8BACRrC,MAAM,uCAhCOpD,IAAMC,+FCnJtB2O,oLAEb,OACIlP,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACIT,EAAAC,EAAAC,cAACiP,GAAD,MACAnP,EAAAC,EAAAC,cAACkP,GAAD,MACApP,EAAAC,EAAAC,cAACmP,GAAD,cANmB/O,IAAMC,eAYnC+O,oLAEE,OACItP,EAAAC,EAAAC,cAAC6N,GAAD,KACI/N,EAAAC,EAAAC,cAAC8N,GAAD,cACAhO,EAAAC,EAAAC,cAAC+N,GAAD,6GACAjO,EAAAC,EAAAC,cAACgO,GAAD,KACIlO,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,aAAaC,KAAK,qCAAqCC,QAAQ,GAAGC,YAAY,uDAC7FtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,UAAUC,KAAK,oBAAoBC,QAAQ,OAAOC,YAAY,qBAC7EtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,OAAOC,KAAK,qBAAqBC,QAAQ,QAAQC,YAAY,uBAC5EtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,WAAWC,KAAK,gBAAgBC,QAAQ,GAAGC,YAAY,iCAE1EtN,EAAAC,EAAAC,cAACkO,GAAD,KACIpO,EAAAC,EAAAC,cAACqP,EAAM/E,MAAP,CAAaM,WAAW,wBACpB9K,EAAAC,EAAAC,cAACsP,GAAAvP,EAAD,gBAdAK,IAAMC,eAsBxBkP,oLAEE,OACIzP,EAAAC,EAAAC,cAAC6N,GAAD,KACI/N,EAAAC,EAAAC,cAAC8N,GAAD,kBACAhO,EAAAC,EAAAC,cAAC+N,GAAD,4DACAjO,EAAAC,EAAAC,cAACgO,GAAD,KACIlO,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,WAAWC,KAAK,mDAAmDC,QAAQ,GAAGC,YAAY,+CAE7GtN,EAAAC,EAAAC,cAACkO,GAAD,KACIpO,EAAAC,EAAAC,cAACqP,EAAMxE,UAAP,KACK,SAACG,GAAD,OACGlL,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACKyK,EACKlL,EAAAC,EAAAC,cAAA,OAAKJ,IAAI,IAAI0I,MAAO,CAACkH,gBAAiB,UAAW3D,QAAS,GAAI7I,MAAO,OAAQyM,OAAQ,YAArF,uBACA3P,EAAAC,EAAAC,cAAA,OAAKJ,IAAI,IAAI0I,MAAO,CAACuD,QAAS,GAAI6D,OAAQ,SAA1C,wCAfVtP,IAAMC,eA0B5BsP,oLAGE,OACI7P,EAAAC,EAAAC,cAAC6N,GAAD,KACI/N,EAAAC,EAAAC,cAAC8N,GAAD,eACAhO,EAAAC,EAAAC,cAAC+N,GAAD,4IACAjO,EAAAC,EAAAC,cAACgO,GAAD,KACIlO,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,WAAWC,KAAK,kEAAkEC,QAAQ,GAAGC,YAAY,8CACxHtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,QAAQC,KAAK,oBAAoBC,QAAQ,GAAGC,YAAY,+CACvEtN,EAAAC,EAAAC,cAACiO,GAAD,CAAUhB,KAAK,SAASC,KAAK,oBAAoBC,QAAQ,GAAGC,YAAY,8DAE5EtN,EAAAC,EAAAC,cAACkO,GAAD,KACIpO,EAAAC,EAAAC,cAACqP,EAAM/D,OAAP,CAAcvJ,OAAQA,GACjB,SAACyJ,EAAOD,EAAME,GAAd,OACG3L,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACIT,EAAAC,EAAAC,cAAC4P,GAAA7P,EAAD,CAAS8P,WAAYrE,GACjB1L,EAAAC,EAAAC,cAAC8P,GAAA/P,EAAD,CAAMH,IAAI,UACNE,EAAAC,EAAAC,cAAC+P,GAAAhQ,EAAD,gBAEJD,EAAAC,EAAAC,cAAC8P,GAAA/P,EAAD,CAAMH,IAAI,UACNE,EAAAC,EAAAC,cAAC+P,GAAAhQ,EAAD,gBAEJD,EAAAC,EAAAC,cAAC8P,GAAA/P,EAAD,CAAMH,IAAI,UACNE,EAAAC,EAAAC,cAAC+P,GAAAhQ,EAAD,iBAGRD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAQqD,QAASqI,EAAMuE,SAAUxE,GAAS,GAA1C,QACA1L,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAQqD,QAASmI,EAAMyE,SAAUxE,GA3B9C,GA2Ba,QACCA,GA5Bd,GA4BiC,oCA9B/BpL,IAAMC,mCCzDzB4P,GAAiB,CACnB5C,KAAMA,GACN2B,MAAOA,IAGUlK,8MACjBzC,MAAQ,CACJ6N,UAAU,EACVC,aAAchR,OAAOiR,KAAKH,IAAgB,MAE9C/M,aAAe,WACXrB,EAAKY,SAAS,SAAAJ,GAAK,MAAK,CAAC6N,UAAW7N,EAAM6N,eAE9CG,aAAe,SAACF,GAAD,OAAkBtO,EAAKY,SAAS,CAAC0N,0FAExC,IAAAvN,EAAAvD,KACE8F,EACFrF,EAAAC,EAAAC,cAACsQ,EAAOrR,KAAR,CAAaJ,KAAMQ,KAAKgD,MAAM6N,UACzB/Q,OAAOiR,KAAKH,IAAgBM,IAAI,SAAAC,GAC7B,OACI1Q,EAAAC,EAAAC,cAACyQ,GAAA1Q,EAAD,CAAU2Q,QAAM,EAACC,SAAU/N,EAAKP,MAAM8N,eAAiBK,EAAMpN,QAAS,kBAAMR,EAAKyN,aAAaG,KAC1F1Q,EAAAC,EAAAC,cAAC4Q,GAAA7Q,EAAD,KAAcD,EAAAC,EAAAC,cAAC6Q,GAAA9Q,EAAD,OACdD,EAAAC,EAAAC,cAAC8Q,GAAA/Q,EAAD,KAAeyQ,MAK3B1Q,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+Q,GAAAhR,EAAD,MAEAD,EAAAC,EAAAC,cAACyQ,GAAA1Q,EAAD,CAAU2Q,QAAM,GACZ5Q,EAAAC,EAAAC,cAAC4Q,GAAA7Q,EAAD,KAAcD,EAAAC,EAAAC,cAAC6Q,GAAA9Q,EAAD,OACdD,EAAAC,EAAAC,cAAC8Q,GAAA/Q,EAAD,aACAD,EAAAC,EAAAC,cAACgR,GAAAjR,EAAD,CACIkR,MAAM,QACNjO,MAAM,gBAKhBmB,EACFrE,EAAAC,EAAAC,cAACsQ,EAAOhQ,WAAR,oBAIE4E,EACFpF,EAAAC,EAAAC,cAACsQ,EAAO9P,QAAR,iBAKE0Q,EAAejB,GAAe5Q,KAAKgD,MAAM8N,cAE/C,OACIrQ,EAAAC,EAAAC,cAACsQ,EAAOxL,OAAR,CACIK,KAAMA,EACNhB,WAAYA,EACZe,QAASA,EACT1B,MAAM,kBACNwB,SAAS,kBACT9B,aAAc7D,KAAK6D,cAEnBpD,EAAAC,EAAAC,cAACkR,EAAD,cAzDoBC,aCRpCC,IAASC,OACLvR,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACIT,EAAAC,EAAAC,cAACsR,GAAAvR,EAAD,MACAD,EAAAC,EAAAC,cAACuR,EAAA,iBAAD,CAAkBzS,MAAOA,EAAMxB,iBAC3BwC,EAAAC,EAAAC,cAACwR,EAAA,EAAD,CAAqB1S,MAAOA,EAAMf,aAC9B+B,EAAAC,EAAAC,cAACyR,GAAD,SAIZnN,SAASoN,eAAe","file":"static/js/main.0fdcbeb2.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst colorScheme = {\r\n    fiord: '#445566',\r\n    lynch: '#637b94',\r\n    dodgerBlue: '#11beff',\r\n    bayOfMany: '#224477',\r\n    easternBlue: '#22aabb',\r\n    apple: '#49bd39',\r\n    melrose: '#A3A4FB',\r\n    flamingo: '#f04b4b',\r\n    texasRose: '#ffb155',\r\n    dandelion: '#FFD966',\r\n    tundora: '#404040',\r\n    dustyGray: '#999999',\r\n    hippieBlue: '#6699bb',\r\n    emperor: '#555555',\r\n    silver: '#CCCCCC',\r\n    porcelain: '#E8E9EA',\r\n    wildSand: '#F6F6F6',\r\n    white: '#FFFFFF',\r\n    casper: '#AFC5D0'\r\n}\r\n\r\nconst colors = {\r\n    tfso: '#00c7f5',\r\n    baseColor: colorScheme.fiord,\r\n    baseLightColor: '#637b94',\r\n    baseLight2Color: '#8fa1b4',\r\n    baseLight3Color: '#bdc8d3',\r\n    baseLight4Color: '#ebeef1',\r\n    baseLight5Color: '#f4f6f8',\r\n    blueColor: colorScheme.dodgerBlue,\r\n    blueDarkColor: colorScheme.bayOfMany,\r\n    blueDesaturatedColor: colorScheme.hippieBlue,\r\n    grayBlueColor: colorScheme.casper,\r\n    tealColor: colorScheme.easternBlue,\r\n    greenColor: colorScheme.apple,\r\n    greenLightColor: 'rgba(73, 189, 57, 0.4)',\r\n    purpleColor: colorScheme.melrose,\r\n    redColor: colorScheme.flamingo,\r\n    redLightColor: 'rgba(240, 75, 75, 0.4)',\r\n    orangeColor: colorScheme.texasRose,\r\n    yellowColor: colorScheme.dandelion,\r\n    blackColor: colorScheme.tundora,\r\n    grayColor: colorScheme.dustyGray,\r\n    grayDarkColor: '#6E6E6E',\r\n    grayDarkerColor: '#454545',\r\n    grayLightColor: '#C4C4C4',\r\n    grayLighterColor: '#E6E6E6',\r\n    grayLightestColor: '#F7F7F7',\r\n    whiteColor: colorScheme.white,\r\n    whiteDarkColor: '#F7F7F7',\r\n    whiteDarkerColor: '#E6E6E6',\r\n    bodyBackgroundColor: '#F7F7F7',\r\n    listOverBackgroundColor: '#E6E6E6',\r\n    borderColor: '#C4C4C4',\r\n    tabBarColor: colorScheme.white\r\n}\r\n\r\nconst palette = {\r\n    primary: colors.baseColor,\r\n    primaryLight: colors.baseLightColor,\r\n    success: colors.greenColor,\r\n    warning: colors.orangeColor,\r\n    alert: colors.redColor,\r\n    delete: colors.redColor,\r\n}\r\n\r\nconst layout = {\r\n    containerMargin: '15px'\r\n}\r\n\r\nexport const materialuiTheme = createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    palette: {\r\n        primary: {\r\n            dark: '#1b2c3c',\r\n            main: '#456',\r\n            light: '#708194'\r\n        },\r\n        secondary: {\r\n            dark: '#0090cc',\r\n            main: '#11c0ff',\r\n            light: '#6df3ff',\r\n            contrastText: '#FFF'\r\n        }\r\n    }\r\n})\r\n\r\nexport const styledTheme = {\r\n    tfso: {\r\n        colors,\r\n        palette,\r\n        layout\r\n    },\r\n    mui: materialuiTheme, // Make the entire material-ui theme available to styled components as well\r\n}\r\n\r\nexport type TfsoTheme = typeof styledTheme","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport List from '@material-ui/core/List'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport styled from 'styled-components/macro'\r\n\r\nconst StyledDrawer = styled(Drawer).attrs({\r\n    classes: {paper: 'MuiPaperStyle'}\r\n})`\r\n    &&{\r\n      width: ${props => props.open ? 260 : props.theme.mui.spacing.unit * 9 + 1}px;\r\n      height: 100%;\r\n      transition: none;\r\n      transform: none;\r\n      white-space: nowrap;\r\n      display: flex;\r\n      overflow-x: hidden;\r\n      background-color: #CCC;\r\n      border: none;\r\n    }\r\n    \r\n    .MuiPaperStyle{\r\n      width: ${props => props.open ? 260 : props.theme.mui.spacing.unit * 9 + 1}px;\r\n      transition: none;\r\n      transform: none;\r\n      position: static;\r\n      overflow-x: hidden;\r\n      background-color: ${props => props.theme.tfso.colors.baseLight5Color};\r\n      border: none;\r\n    }\r\n`\r\n\r\nexport type MenuProps = {\r\n    open: boolean\r\n}\r\n\r\nexport class Menu extends React.PureComponent<MenuProps>{\r\n    static propTypes = {\r\n        open: PropTypes.bool.isRequired\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <StyledDrawer variant=\"permanent\" open={this.props.open}>\r\n                <List>\r\n                    {this.props.children}\r\n                </List>\r\n            </StyledDrawer>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport class MobileMenu extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport class TopMenu extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport MoreIcon from '@material-ui/icons/MoreVert'\r\nimport styled from 'styled-components/macro'\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n`\r\nconst StyledAppBar = styled(AppBar)`\r\n&&{\r\n  background: white;\r\n  box-shadow: none;\r\n  z-index: ${props => props.theme.mui.zIndex.drawer + 1};\r\n}\r\n`\r\n\r\nconst Grow = styled.div`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst MenuButton = styled(IconButton)`\r\n&&{\r\n  margin-left: -12px;\r\n  margin-right: 20px;\r\n}\r\n`\r\n\r\nconst Title = styled(Typography)`\r\n&&{\r\n  display: none;\r\n  ${({theme}) => theme.mui.breakpoints.up('sm')}{\r\n    display: block;\r\n  }\r\n}\r\n`\r\n\r\nconst SectionDesktop = styled.div`\r\n&&{\r\n  display: none;\r\n  ${({theme}) => theme.mui.breakpoints.up('md')}{\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n}\r\n`\r\n\r\nconst SectionMobile = styled.div`\r\n&&{\r\n  display: flex;\r\n  ${({theme}) => theme.mui.breakpoints.up('md')}{\r\n    display: none;\r\n  }\r\n}\r\n`\r\n\r\nexport type TopBarProps = {\r\n    title: string\r\n    onMenuToggle: Function | null\r\n    mobileMenu?: React.ReactNode\r\n}\r\n\r\nexport class TopBar extends React.PureComponent<TopBarProps, any>{\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        mobileMenu: PropTypes.node.isRequired\r\n    }\r\n    state = {\r\n        mobileMoreAnchorEl: null\r\n    }\r\n    handleMobileMenuOpen = event => {\r\n        this.setState({mobileMoreAnchorEl: event.currentTarget})\r\n    }\r\n    handleMobileMenuClose = () => {\r\n        this.setState({mobileMoreAnchorEl: null})\r\n    }\r\n\r\n    render(){\r\n        const {mobileMoreAnchorEl} = this.state\r\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\r\n\r\n        return (\r\n            <Root>\r\n                <StyledAppBar position=\"static\" color=\"default\">\r\n                    <Toolbar>\r\n                        {this.props.onMenuToggle !== null &&\r\n                            <MenuButton color=\"inherit\" aria-label=\"Open drawer\" onClick={e => this.props.onMenuToggle && this.props.onMenuToggle()}>\r\n                                <MenuIcon/>\r\n                            </MenuButton>\r\n                        }\r\n                        <Title variant=\"h6\" color=\"inherit\" noWrap>\r\n                            {this.props.title}\r\n                        </Title>\r\n                        <Grow/>\r\n                        <SectionDesktop>\r\n                            {this.props.children}\r\n                        </SectionDesktop>\r\n                        <SectionMobile>\r\n                            <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\r\n                                <MoreIcon/>\r\n                            </IconButton>\r\n                        </SectionMobile>\r\n                    </Toolbar>\r\n                </StyledAppBar>\r\n                <Menu\r\n                    anchorEl={mobileMoreAnchorEl}\r\n                    anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                    transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                    open={isMobileMenuOpen}\r\n                    onClose={this.handleMobileMenuClose}\r\n                >\r\n                    {this.props.mobileMenu}\r\n                </Menu>\r\n            </Root>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nfunction setTitle(text){\r\n    document.title = text\r\n}\r\n\r\ntype Props = {\r\n    text: string\r\n}\r\n\r\nexport default class DocumentTitle extends React.PureComponent<Props>{\r\n    constructor(props){\r\n        super(props)\r\n        setTitle(props.text)\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.text !== this.props.text){\r\n            setTitle(nextProps.text)\r\n        }\r\n    }\r\n    render(){\r\n        return ''\r\n    }\r\n}","import React from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport {TopBar} from './Topbar'\r\nimport DocumentTitle from './DocumentTitle'\r\n\r\n// Wrap everything\r\nexport const LayoutWrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column; // Flex header and body from top to bottom\r\n`\r\n\r\n// Put topbar in here\r\nexport const LayoutHeader = styled.div`\r\n  \r\n`\r\n\r\n// Put everything below topbar here\r\nexport const LayoutBody = styled.div`\r\n  flex: 1; // Fill the rest of the page after header has taken its space\r\n  min-height: 0;\r\n  display: flex;\r\n`\r\n\r\n// Put menu here\r\nexport const LayoutBodyLeft = styled.div`\r\n\r\n`\r\n\r\n// Put your app here\r\nexport const LayoutBodyRight = styled.div`\r\n  flex: 1;\r\n  min-height: 0;\r\n  padding: 15px;\r\n`\r\n\r\ntype LayoutProps = {\r\n    title: string\r\n    docTitle: string\r\n    menu: React.ReactNode\r\n    mobileMenu: React.ReactNode\r\n    topMenu: React.ReactNode\r\n    onMenuToggle: Function\r\n}\r\n\r\nexport class Layout extends React.PureComponent<LayoutProps>{\r\n    render(){\r\n        return (\r\n            <LayoutWrapper>\r\n                <DocumentTitle text={this.props.docTitle} />\r\n                <LayoutHeader>\r\n                    <TopBar\r\n                        title={this.props.title}\r\n                        onMenuToggle={this.props.onMenuToggle}\r\n                        mobileMenu={this.props.mobileMenu}\r\n                    >\r\n                        {this.props.topMenu}\r\n                    </TopBar>\r\n                </LayoutHeader>\r\n                <LayoutBody>\r\n                    <LayoutBodyLeft>\r\n                        {this.props.menu}\r\n                    </LayoutBodyLeft>\r\n                    <LayoutBodyRight>\r\n                        {this.props.children}\r\n                    </LayoutBodyRight>\r\n                </LayoutBody>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\ntype LayoutNoMenuProps = {\r\n    title: string\r\n    docTitle: string\r\n    mobileMenu: React.ReactNode\r\n    topMenu: React.ReactNode\r\n}\r\n\r\nexport class LayoutNoMenu extends React.PureComponent<LayoutNoMenuProps>{\r\n    render(){\r\n        return (\r\n            <LayoutWrapper>\r\n                <DocumentTitle text={this.props.docTitle} />\r\n                <LayoutHeader>\r\n                    <TopBar\r\n                        title={this.props.title}\r\n                        onMenuToggle={null}\r\n                        mobileMenu={this.props.mobileMenu}\r\n                    >\r\n                        {this.props.topMenu}\r\n                    </TopBar>\r\n                </LayoutHeader>\r\n                <LayoutBody>\r\n                    <LayoutBodyRight>\r\n                        {this.props.children}\r\n                    </LayoutBodyRight>\r\n                </LayoutBody>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport Slide from '@material-ui/core/Slide'\r\n\r\nexport type ConfirmationDialogProps = {\r\n    open: boolean\r\n    title?: string\r\n    message: string\r\n    okButtonText: string\r\n    cancelButtonText: string\r\n    onOk(): void\r\n    onCancel(): void\r\n}\r\n\r\nconst TransitionComponent = props => <Slide direction='up' {...props} />\r\n\r\nconst ConfirmationDialog: React.FunctionComponent<ConfirmationDialogProps> = (props: ConfirmationDialogProps) => {\r\n    const {open, onCancel, onOk, title, message, okButtonText, cancelButtonText} = props\r\n    return (\r\n        <Dialog\r\n            TransitionComponent={TransitionComponent}\r\n            keepMounted={false}\r\n            open={open}\r\n            onClose={onCancel}\r\n            maxWidth={'xs'}\r\n        >\r\n            {title && <DialogTitle>{title}</DialogTitle>}\r\n            <DialogContent>{message}</DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onCancel} color=\"primary\">{cancelButtonText}</Button>\r\n                <Button onClick={onOk} color=\"secondary\">{okButtonText}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    title: PropTypes.string,\r\n    message: PropTypes.string.isRequired,\r\n    okButtonText: PropTypes.string.isRequired,\r\n    cancelButtonText: PropTypes.string.isRequired,\r\n    onOk: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ConfirmationDialog","import React from 'react'\r\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nexport type SearchFieldProps = TextFieldProps\r\n\r\ntype State = {\r\n    editing: boolean\r\n}\r\n\r\nexport default class SearchField extends React.PureComponent<SearchFieldProps, State>{\r\n    static defaultProps = {\r\n        placeholder: 'Search',\r\n        margin: 'dense',\r\n        InputProps: {\r\n            startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>\r\n        }\r\n    }\r\n\r\n    state: State = {\r\n        editing: false\r\n    }\r\n\r\n    onBlur = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: false})\r\n        const { onBlur } = this.props\r\n        onBlur && onBlur(e)\r\n    }\r\n\r\n    onFocus = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: true})\r\n        const { onFocus } = this.props\r\n        onFocus && onFocus(e)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <TextField\r\n                fullWidth={this.state.editing}\r\n                {...this.props}\r\n                onBlur={this.onBlur}\r\n                onFocus={this.onFocus}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MuiSnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport { TfsoTheme } from '../theme'\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n}\r\n\r\nconst bgColor = (variant: AlertVariant, palette: TfsoTheme['tfso']['palette']) => {\r\n    switch(variant){\r\n        case 'success': return palette.success\r\n        case 'error': return palette.alert \r\n        case 'info': return palette.primaryLight\r\n        case 'warning': return palette.warning \r\n    }\r\n}\r\n\r\nconst SnackbarContent = ({variant, ...other}) => <MuiSnackbarContent {...other} />\r\nconst StyledSnack = styled(SnackbarContent)`&&{\r\n    background-color: ${({variant, theme}) => bgColor(variant, theme.tfso.palette)}\r\n}` \r\n\r\ntype AlertVariant = 'success' | 'warning' | 'error' | 'info'\r\n\r\n\r\nexport type AlertProps = {\r\n    message: React.ReactNode\r\n    onClose(): void\r\n    variant: AlertVariant\r\n}\r\n\r\nconst Alert = (props: AlertProps) => {\r\n    const { message, onClose, variant } = props\r\n    const Icon = variantIcon[variant]\r\n\r\n    return (\r\n        <StyledSnack\r\n            variant={variant}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" style={{display: 'flex', alignItems: 'center'}}>\r\n                    <Icon style={{fontSize: 20, opacity: 0.9, marginRight: 10}} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon style={{fontSize: 20}} />\r\n                </IconButton>,\r\n            ]}\r\n        />\r\n    )\r\n}\r\n\r\nAlert.propTypes = {\r\n    message: PropTypes.node.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TextField, { TextFieldProps } from '@material-ui/core/TextField'\r\n\r\ntype Props = {\r\n    value: string\r\n    onChange(value: string): void\r\n    dirty?: boolean\r\n    enableDirtyCheck?: boolean\r\n} \r\n\r\ntype State = {\r\n    editing: boolean\r\n    value: string\r\n    prevProps: Props\r\n}\r\n\r\ntype Omit<T,K> = Pick<T, Exclude<keyof T, K>>\r\n\r\nexport type TextFieldEditorProps = Props & Partial<Omit<TextFieldProps, 'value' | 'onChange'>>\r\n\r\nexport default class TextFieldEditor extends React.PureComponent<TextFieldEditorProps, State>{\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n        onChange: PropTypes.func.isRequired,\r\n        dirty: PropTypes.bool\r\n    }\r\n\r\n    _inputRef: React.RefObject<HTMLInputElement> = React.createRef()\r\n\r\n    state: State = {\r\n        editing: false,\r\n        value: this.props.value,\r\n        prevProps: this.props\r\n    }\r\n\r\n    static getDerivedStateFromProps(props: Readonly<TextFieldEditorProps>, state: Readonly<State>){\r\n        const prevProps = state.prevProps\r\n\r\n        if(prevProps.value !== props.value)\r\n            return { value: props.value, prevProps: props }\r\n\r\n        return { prevProps: props }\r\n    }\r\n\r\n    blur = () => { this._inputRef.current && this._inputRef.current.blur() }\r\n\r\n    onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n        this.props.onKeyDown && this.props.onKeyDown(event)\r\n        if(event.defaultPrevented)\r\n            return \r\n\r\n        if(event.ctrlKey) switch(event.key){\r\n            case 's':\r\n                // this event should not be 'handled' here (eg. invoke handleEvent(event)), control may want to perform other actions on ctrl+s\r\n                // It should behave as a save changes in the control as well however\r\n                this.blur()\r\n                break\r\n            case 'z':\r\n                handleEvent(event)\r\n                this.setState({editing: false, value: this.props.value}, this.blur)\r\n                break\r\n            default: break\r\n        }\r\n        else switch(event.key){\r\n            case 'Enter':\r\n                if(this.props.multiline)\r\n                    break\r\n                handleEvent(event)\r\n                this.blur()\r\n                break\r\n            case 'Escape':\r\n                handleEvent(event)\r\n                this.setState({editing: false, value: this.props.value}, this.blur)\r\n                break\r\n            default: break\r\n        }\r\n    }\r\n\r\n    onFocus = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: true})\r\n        this.props.onFocus && this.props.onFocus(e)\r\n    }\r\n\r\n    onBlur = (e: React.EventHandler<any>) => {\r\n        if(!this.state.editing)\r\n            return // The method should be safe to call multiple times, but we don't want to raise the event multiple times if we dont need to\r\n        \r\n        this.props.onChange(this.state.value)\r\n        this.setState({editing: false })\r\n        this.props.onBlur && this.props.onBlur(e)\r\n    }\r\n\r\n    onChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement | HTMLSelectElement>) => {\r\n        const value = event.target.value\r\n        this.setState({value, editing: true})\r\n    }\r\n\r\n    render(){\r\n        const { dirty: dirtyProp, onChange: onChangeProp, value: valueProp, enableDirtyCheck, ...otherProps} = this.props\r\n        const { value } = this.state\r\n\r\n        const isDirty = enableDirtyCheck ? this.props.value !== value || !!dirtyProp : !!dirtyProp\r\n\r\n        return (\r\n            <TextField \r\n                {...otherProps as any}\r\n                inputRef={this._inputRef}\r\n                value={value}\r\n                onFocus={this.onFocus}\r\n                onChange={this.onChange}\r\n                onBlur={this.onBlur}\r\n                onKeyDown={this.onKeyDown}\r\n                InputProps={{ style: { fontStyle: isDirty ? 'italic' : 'normal' } }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction handleEvent(event: React.KeyboardEvent<HTMLDivElement>){\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n    // the above only prevents other synthetic events, if we want to prevent global listeners too, we need to stop the propagation on the native event as well\r\n    event.nativeEvent.stopImmediatePropagation()\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    beforeShow?: any\r\n    delayMs?: number\r\n    show?: boolean\r\n    children: React.ReactNode\r\n}\r\n\r\ntype State = {\r\n    show: boolean\r\n}\r\n\r\nexport default class Delay extends React.PureComponent<Props, State>{\r\n    static propTypes = {\r\n        beforeShow: PropTypes.node,\r\n        delayMs: PropTypes.number,\r\n        show: PropTypes.bool,\r\n        children: PropTypes.node.isRequired\r\n    }\r\n\r\n    _timer: any = null\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.setState({show: false})\r\n        this._timer = setTimeout(() => {\r\n            this.setState({show: true})\r\n        }, this.props.delayMs || 1000)\r\n    }\r\n    componentWillUnmount(){\r\n        clearTimeout(this._timer)\r\n    }\r\n    render(){\r\n        if(this.props.show || this.state.show){\r\n            return this.props.children\r\n        }\r\n\r\n        return this.props.beforeShow || null\r\n    }\r\n}","import React, {HTMLProps} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    children: (hover: boolean, ref: React.RefObject<any>) => React.ReactNode\r\n} & HTMLProps<HTMLDivElement>\r\n\r\ntype State = {\r\n    hover: boolean\r\n}\r\n\r\nexport default class Hoverable extends React.PureComponent<Props, State>{\r\n    private ref: React.RefObject<any>\r\n\r\n    static propTypes = {\r\n        children: PropTypes.func.isRequired\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.ref = React.createRef()\r\n\r\n        this.state = {\r\n            hover: false\r\n        }\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState(state => ({hover: !state.hover}))\r\n    }\r\n\r\n    hoverOn = () => this.setState({hover: true})\r\n    hoverOff = () => this.setState({hover: false})\r\n\r\n    render(){\r\n        const {children, ...restProps} = this.props\r\n\r\n        return (\r\n            <div\r\n                ref={this.ref}\r\n                onMouseEnter={this.hoverOn}\r\n                onMouseLeave={this.hoverOff}\r\n                {...restProps}\r\n            >\r\n                {children(this.state.hover, this.ref)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {HTMLProps} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    children: (tabIndex: number, next: () => void, prev: () => void) => React.ReactNode\r\n    index?: number\r\n    length?: number\r\n} & HTMLProps<HTMLDivElement>\r\n\r\ntype State = {\r\n    index: number\r\n}\r\n\r\nexport default class Wizard extends React.PureComponent<Props, State>{\r\n    static propTypes = {\r\n        children: PropTypes.func.isRequired,\r\n        index: PropTypes.number,\r\n        length: PropTypes.number\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {index: props.index || 0}\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps){\r\n        if(nextProps.hasOwnProperty('index')){\r\n            return {index: nextProps.index}\r\n        }\r\n        return null\r\n    }\r\n\r\n    next = () => this.setState(state => {\r\n        if(this.props.length && state.index + 1 >= this.props.length) return state\r\n        return {index: state.index + 1}\r\n    })\r\n    prev = () => this.setState(state => {\r\n        if(state.index - 1 < 0) return state\r\n        return {index: state.index - 1}\r\n    })\r\n\r\n    render(){\r\n        const {children, ...restProps} = this.props\r\n\r\n        return (\r\n            <div {...restProps}>\r\n                {children(this.state.index, this.next, this.prev)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {Divider} from '@material-ui/core'\r\n\r\nexport const Demo = (props) => <Paper style={{padding: 15, marginBottom: 30}}>{props.children}</Paper>\r\nexport const DemoTitle = (props) => <Typography variant=\"h5\" >{props.children}</Typography>\r\nexport const DemoHelp = (props) => <Typography variant=\"caption\">{props.children}</Typography>\r\nexport const DemoContent = (props) => (\r\n    <div style={{marginTop: 30}}>\r\n        <Typography variant=\"subtitle1\" >Example</Typography>\r\n        <Divider />\r\n        <br />\r\n        {props.children}\r\n    </div>\r\n)\r\nexport const DemoProps = (props) => (\r\n    <ExpansionPanel style={{marginTop: 15}}>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>Props</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Default</TableCell>\r\n                        <TableCell>Description</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.children}\r\n                </TableBody>\r\n            </Table>\r\n        </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n)\r\n\r\nexport type DemoPropProps = {\r\n    name: string\r\n    type: string\r\n    default?: string\r\n    description?: string\r\n}\r\n\r\nexport const DemoProp = (props: DemoPropProps) => (\r\n    <TableRow>\r\n        <TableCell><code>{props.name}</code></TableCell>\r\n        <TableCell><code>{props.type}</code></TableCell>\r\n        <TableCell><code>{props.default}</code></TableCell>\r\n        <TableCell><Typography>{props.description}</Typography></TableCell>\r\n    </TableRow>\r\n)","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { misc } from '../../lib'\r\nimport { Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle } from '../demo'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport { AlertProps } from '../../lib/misc/Alert';\r\n\r\nexport default class Misc extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <AlertDemo />\r\n                <ConfirmationDialogDemo />\r\n                <SearchFieldDemo />\r\n                <TextFieldEditorDemo />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst variantMessage: {[P in AlertProps['variant']]: string } = {\r\n    success: 'GRATE SUCCÉSS!',\r\n    info: 'Informational information',\r\n    warning: 'You better not do that, Brian',\r\n    error: 'That failed horribly...',\r\n}\r\n\r\nclass AlertDemo extends React.PureComponent<{}, {variant: AlertProps['variant'], message: string, open: boolean}> {\r\n    state = {\r\n        variant: 'success' as AlertProps['variant'],\r\n        open: false,\r\n        message: 'GRATE SUCCÉSS!'\r\n    }\r\n\r\n    onClose = () => this.setState({open: false})\r\n\r\n    onPress = (variant: AlertProps['variant']) => { \r\n        const message = variantMessage[variant]\r\n        return () => this.setState({ open: true, message, variant})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Demo>\r\n                <DemoTitle>Alert</DemoTitle>\r\n                <DemoHelp>An dismissable alert-box that can be used in a SnackBar or as a standard component in a page</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='message' type='string | ReactNode' description='The message string or Element to be displayed' />\r\n                    <DemoProp name='variant' type='success | error | info | warning' description='The variant of the alert. Icon and background-color is selected based on the variant' />\r\n                    <DemoProp name='onClose' type='() => void' description='Callback function invoked when the alert is dismissed' />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Snackbar\r\n                        open={this.state.open}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        autoHideDuration={2000}\r\n                        onClose={this.onClose}\r\n                    >\r\n                        <misc.Alert\r\n                            onClose={this.onClose}\r\n                            message={this.state.message}\r\n                            variant={this.state.variant}\r\n                        />\r\n                    </Snackbar>\r\n                    <Button variant='outlined' onClick={this.onPress('success')}>Open Success</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('info')}>Open Info</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('warning')}>Open Warning</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('error')}>Open Error</Button>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass TextFieldEditorDemo extends React.PureComponent {\r\n    state = {\r\n        value: 'demo',\r\n        dirty: false,\r\n        enableDirtyCheck: false\r\n    }\r\n\r\n    onReset = () => {\r\n        this.setState({value: ''})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Demo>\r\n                <DemoTitle>TextFieldEditor</DemoTitle>\r\n                <DemoHelp>A wrapper around material-ui's TextField with some added features</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='value' type='string' default='' description='' />\r\n                    <DemoProp name='onChange' type='(value: string) => void' default='' description='Invoked when the user has finished editing the value (editor looses focus by clicking or tabbing away, pressing the Enter or ctrl+s' />\r\n                    <DemoProp name='dirty' type='boolean (optional)' default='false' description='If true, it is rendered in italic after onChange' />\r\n                    <DemoProp name='enableDirtyCheck' type='boolean (optional)' default='false' description='If true, the component will do internal dirty checking when editing' />\r\n                    <DemoProp name='...' type='TextFieldProps' description='Any other prop is spread to the TextField' />\r\n                </DemoProps>\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} >\r\n                            <Typography>Keybindings</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            <code>\r\n                                ctrl + s:&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is NOT handled!)<br/>\r\n                                ctrl + z:&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\r\n                                Enter:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is handled)<br/>\r\n                                Escape:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\r\n                            </code>\r\n                            <br/>\r\n                            <i>When the event is handled `preventDefault()` and `stopPropagation()` is invoked on the `React.KeyboardEvent`</i><br/>\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                <DemoContent>\r\n                    <misc.TextFieldEditor \r\n                        value={this.state.value}\r\n                        enableDirtyCheck={this.state.enableDirtyCheck}\r\n                        dirty={this.state.dirty}\r\n                        onChange={(value: string) => this.setState({value})}\r\n                    />\r\n                    <Button variant='outlined' onClick={() => this.setState({value: 'demo'})}>Reset</Button>\r\n                    <Button variant='outlined' onClick={() => this.setState({dirty: !this.state.dirty})}>Dirty: {this.state.dirty.toString()}</Button>\r\n                    <Button variant='outlined' onClick={() => this.setState({enableDirtyCheck: !this.state.enableDirtyCheck})}>Enable dirty check: {this.state.enableDirtyCheck.toString()}</Button>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass SearchFieldDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle>SearchField</DemoTitle>\r\n                <DemoHelp>A TextField that gets full width on typing. It also has a search icon adornnment.</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='placeholder' type='string (optional)' default='Search' description=''></DemoProp>\r\n                    <DemoProp name='margin' type='none | dense | normal (optional)' default='dense' description=''></DemoProp>\r\n                    <DemoProp name='InputProps' type=\"TextFieldProps['InputProps'] (optional)\" default='{ startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>}' description=''></DemoProp>\r\n                    <DemoProp name='...' type='TextFieldProps' default='' description='Any other prop is spread to the TextField'></DemoProp>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <misc.SearchField />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass ConfirmationDialogDemo extends React.PureComponent{\r\n    state = {\r\n        openConfirmationDialog: false\r\n    }\r\n\r\n    onClickOpenConfirmationDialog = () => {\r\n        this.setState({openConfirmationDialog: true})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle>ConfirmationDialog</DemoTitle>\r\n                <DemoHelp>A Dialog containing Ok and Cancel buttons</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show dialog\" />\r\n                    <DemoProp name=\"title\" type=\"string (optional)\" default=\"\" description=\"Dialog title\" />\r\n                    <DemoProp name=\"message\" type=\"string\" default=\"\" description=\"Dialog content\" />\r\n                    <DemoProp name=\"okButtonText\" type=\"string\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"onOk\" type=\"function\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Button variant='outlined' onClick={this.onClickOpenConfirmationDialog}>Open ConfirmationDialog</Button>\r\n                    <misc.ConfirmationDialog\r\n                        open={this.state.openConfirmationDialog}\r\n                        okButtonText='Ok'\r\n                        cancelButtonText='Cancel'\r\n                        onOk={() => this.setState({openConfirmationDialog: false})}\r\n                        onCancel={() => this.setState({openConfirmationDialog: false})}\r\n                        message='Confirmation dialog message'\r\n                        title='Confirmation dialog title'\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {utils} from '../../lib'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport Step from '@material-ui/core/Step'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Button from '@material-ui/core/Button'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../demo'\r\n\r\nexport default class Utils extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <DelayDemo />\r\n                <HoverableDemo />\r\n                <WizardDemo />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nclass DelayDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle>Delay</DemoTitle>\r\n                <DemoHelp>Shows the component inside after a set delay. Can be used to only show loaders if exceptionally slow</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"beforeShow\" type=\"React element or string (optional)\" default=\"\" description=\"What you want to show before the delay is finished\" />\r\n                    <DemoProp name=\"delayMs\" type=\"Number (optional)\" default=\"1000\" description=\"Delay time in ms\" />\r\n                    <DemoProp name=\"show\" type=\"Boolean (optional)\" default=\"false\" description=\"Force show content\" />\r\n                    <DemoProp name=\"children\" type=\"React element\" default=\"\" description=\"Content to show after delay\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <utils.Delay beforeShow=\"Waiting for delay...\">\r\n                        <CircularProgress />\r\n                    </utils.Delay>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass HoverableDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle>Hoverable</DemoTitle>\r\n                <DemoHelp>A HOC that passes hover true/false as a render prop</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(hover: boolean, ref: RefObject) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <utils.Hoverable>\r\n                        {(hover) => (\r\n                            <React.Fragment>\r\n                                {hover\r\n                                    ? <div key=\"1\" style={{backgroundColor: '#6699bb', padding: 15, color: '#FFF', cursor: 'pointer'}}>You're hovering me!</div>\r\n                                    : <div key=\"2\" style={{padding: 15, height: '100%'}}>Hover your mouse over me</div>\r\n                                }\r\n                            </React.Fragment>\r\n                        )}\r\n                    </utils.Hoverable>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass WizardDemo extends React.PureComponent{\r\n    render(){\r\n        const length = 3\r\n        return (\r\n            <Demo>\r\n                <DemoTitle>Wizard</DemoTitle>\r\n                <DemoHelp>A HOC that passes an index and next/prev functions in a render prop. Can be used along with material ui stepper or any other wizard</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(index: number, next: function, prev: function) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                    <DemoProp name=\"index\" type=\"number (optional)\" default=\"\" description=\"Force the current index to a certain value\" />\r\n                    <DemoProp name=\"length\" type=\"number (optional)\" default=\"\" description=\"The max length. The index will always be lower than this\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <utils.Wizard length={length + 1}>\r\n                        {(index, next, prev) => (\r\n                            <React.Fragment>\r\n                                <Stepper activeStep={index}>\r\n                                    <Step key=\"Step 1\">\r\n                                        <StepLabel>Step 1</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 2\">\r\n                                        <StepLabel>Step 2</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 3\">\r\n                                        <StepLabel>Step 3</StepLabel>\r\n                                    </Step>\r\n                                </Stepper>\r\n                                <div>\r\n                                    <Button onClick={prev} disabled={index <= 0}>Prev</Button>\r\n                                    <Button onClick={next} disabled={index >= length}>Next</Button>\r\n                                    {index >= length && 'All steps completed!'}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </utils.Wizard>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport PeopleIcon from '@material-ui/icons/People'\r\nimport {layout} from '../lib'\r\n\r\nimport Misc from './demos/Misc'\r\nimport Utils from './demos/Utils'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst demoComponents = {\r\n    Misc: Misc,\r\n    Utils: Utils\r\n}\r\n\r\nexport default class Layout extends Component<any, any>{\r\n    state = {\r\n        menuOpen: true,\r\n        selectedDemo: Object.keys(demoComponents)[0]\r\n    }\r\n    onMenuToggle = () => {\r\n        this.setState(state => ({menuOpen: !state.menuOpen}))\r\n    }\r\n    onChangeDemo = (selectedDemo) => this.setState({selectedDemo})\r\n\r\n    render(){\r\n        const menu = (\r\n            <layout.Menu open={this.state.menuOpen}>\r\n                {Object.keys(demoComponents).map(demo => {\r\n                    return (\r\n                        <ListItem button selected={this.state.selectedDemo === demo} onClick={() => this.onChangeDemo(demo)}>\r\n                            <ListItemIcon><PeopleIcon/></ListItemIcon>\r\n                            <ListItemText>{demo}</ListItemText>\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n\r\n                <br />\r\n                <Divider />\r\n\r\n                <ListItem button>\r\n                    <ListItemIcon><PeopleIcon/></ListItemIcon>\r\n                    <ListItemText>Chip</ListItemText>\r\n                    <Chip\r\n                        label=\"Badge\"\r\n                        color=\"secondary\"\r\n                    />\r\n                </ListItem>\r\n            </layout.Menu>\r\n        )\r\n        const mobileMenu = (\r\n            <layout.MobileMenu>\r\n                Mobile menu\r\n            </layout.MobileMenu>\r\n        )\r\n        const topMenu = (\r\n            <layout.TopMenu>\r\n                Top menu\r\n            </layout.TopMenu>\r\n        )\r\n\r\n        const SelectedDemo = demoComponents[this.state.selectedDemo]\r\n\r\n        return (\r\n            <layout.Layout\r\n                menu={menu}\r\n                mobileMenu={mobileMenu}\r\n                topMenu={topMenu}\r\n                title=\"Tfso Components\"\r\n                docTitle=\"Tfso Components\"\r\n                onMenuToggle={this.onMenuToggle}\r\n            >\r\n                <SelectedDemo />\r\n            </layout.Layout>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport {theme} from '../lib'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport {ThemeProvider as StyledThemeProvider} from 'styled-components'\r\nimport {MuiThemeProvider} from '@material-ui/core/styles'\r\nimport Layout from './Layout'\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <MuiThemeProvider theme={theme.materialuiTheme}>\r\n            <StyledThemeProvider theme={theme.styledTheme}>\r\n                <Layout />\r\n            </StyledThemeProvider>\r\n        </MuiThemeProvider>\r\n    </React.Fragment>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}