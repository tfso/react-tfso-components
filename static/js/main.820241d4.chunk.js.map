{"version":3,"sources":["lib/theme/index.ts","lib/layout/Menu.tsx","lib/layout/MobileMenu.tsx","lib/layout/TopMenu.tsx","lib/layout/Topbar.tsx","lib/layout/DocumentTitle.tsx","lib/layout/Layout.tsx","lib/Alert.tsx","lib/BigNumber.tsx","lib/ConfirmationDialog.tsx","lib/SearchField.tsx","lib/TextFieldEditor.tsx","lib/Trending.tsx","lib/Delay.tsx","lib/Hoverable.tsx","lib/Wizard.tsx","lib/icons/TfsoLoading.tsx","demo/Home.tsx","demo/components/GitHubLink.tsx","demo/components/demo.tsx","demo/demos/ComponentDemos/TrendingDemo.tsx","demo/demos/ComponentDemos/BigNumberDemo.tsx","demo/demos/ComponentDemos/AlertDemo.tsx","demo/demos/ComponentDemos/SearchFieldDemo.tsx","demo/demos/ComponentDemos/TextFieldEditorDemo.tsx","demo/demos/ComponentDemos/ConfirmationDialogDemo.tsx","demo/demos/Components.tsx","demo/demos/Utils.tsx","lib/icons/Tfso.tsx","demo/demos/Icons.tsx","demo/components/MaterialUiLink.tsx","demo/Layout.tsx","demo/index.tsx"],"names":["colorScheme","colors","tfso","baseColor","baseLightColor","baseLight2Color","baseLight3Color","baseLight4Color","baseLight5Color","blueColor","blueDarkColor","blueDesaturatedColor","grayBlueColor","tealColor","greenColor","greenLightColor","purpleColor","redColor","redLightColor","orangeColor","yellowColor","blackColor","grayColor","grayDarkColor","grayDarkerColor","grayLightColor","grayLighterColor","grayLightestColor","whiteColor","whiteDarkColor","whiteDarkerColor","bodyBackgroundColor","listOverBackgroundColor","borderColor","tabBarColor","palette","primary","primaryLight","success","warning","alert","delete","materialuiTheme","createMuiTheme","typography","useNextVariants","secondary","dark","main","light","contrastText","styledTheme","layout","containerMargin","mui","StyledDrawer","styled","Drawer","attrs","classes","paper","withConfig","displayName","componentId","props","open","theme","spacing","unit","Menu","react_default","a","createElement","variant","this","List_default","children","React","PureComponent","MobileMenu","Fragment","TopMenu","Root","div","StyledAppBar","AppBar","zIndex","drawer","Grow","MenuButton","IconButton","Title","Typography","_ref","breakpoints","up","SectionDesktop","_ref2","SectionMobile","_ref3","TopBar","state","mobileMoreAnchorEl","handleMobileMenuOpen","event","_this","setState","currentTarget","handleMobileMenuClose","_this2","isMobileMenuOpen","Boolean","position","color","Toolbar_default","onMenuToggle","aria-label","onClick","e","icons_Menu_default","noWrap","title","IconButton_default","aria-haspopup","MoreVert_default","Menu_default","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","mobileMenu","setTitle","text","document","DocumentTitle","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextProps","LayoutWrapper","LayoutHeader","LayoutBody","LayoutBodyLeft","LayoutBodyRight","Layout","DocumentTitle_DocumentTitle","docTitle","Topbar_TopBar","topMenu","menu","LayoutNoMenu","_React$PureComponent2","apply","arguments","inherits","createClass","key","value","variantIcon","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","StyledSnack","other","objectWithoutProperties","SnackbarContent_default","_templateObject","bgColor","Alert","message","Icon","aria-describedby","id","style","display","alignItems","fontSize","opacity","marginRight","action","Close_default","fontSizeMap","medium","large","defaultProps","size","wrapper","BigNumber","_ref2$size","pxToRem","_ref3$color","TransitionComponent","Slide_default","assign","direction","ConfirmationDialog","onCancel","onOk","okButtonText","cancelButtonText","Dialog_default","keepMounted","maxWidth","DialogTitle_default","DialogContent_default","DialogActions_default","Button_default","SearchField","editing","onBlur","onFocus","TextField_default","fullWidth","handleEvent","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","placeholder","margin","InputProps","startAdornment","InputAdornment_default","Search_default","TextFieldEditor","_inputRef","createRef","prevProps","blur","current","onKeyDown","defaultPrevented","ctrlKey","multiline","onChange","target","_this$props","dirtyProp","dirty","enableDirtyCheck","otherProps","isDirty","inputRef","fontStyle","iconMap","TrendingUp","flat","TrendingFlat","down","TrendingDown","memo","withTheme","iconProps","nativeColor","getColor","Delay","_timer","show","setTimeout","delayMs","clearTimeout","beforeShow","Hoverable","ref","toggleHover","hover","hoverOn","hoverOff","restProps","onMouseEnter","onMouseLeave","Wizard","next","length","index","prev","hasOwnProperty","path","css","TfsoLoading_templateObject","StyledSvgIcon","Styled","once","SvgIcon_default","_ref4","_ref5","_ref6","viewBox","fillRule","strokeWidth","d","CenterTop","Home_templateObject","Home","TfsoLoading","Typography_default","align","GitHubIcon","GitHubLink","Link_default","href","concat","Tooltip_default","tooltip","Demo","Paper_default","padding","marginBottom","DemoTitle","Grid_default","container","justify","item","srcPath","demoPath","xs","components_GitHubLink","DemoHelp","DemoContent","marginTop","Divider_default","Array","isArray","map","child","i","DemoProps","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","DemoProp","name","type","default","description","TrendingDemo","demo_Demo","demo_DemoTitle","demo_DemoHelp","demo_DemoProps","demo_DemoProp","demo_DemoContent","Trending","select","label","MenuItem_default","BigNumberDemo","handleChange","defineProperty","index_es","backgroundColor","lib_BigNumber","variantMessage","AlertDemo","onPress","Snackbar_default","autoHideDuration","lib_Alert","SearchFieldDemo","SearchField_SearchField","TextFieldEditorDemo","onReset","TextFieldEditor_TextFieldEditor","toString","ConfirmationDialogDemo","openConfirmationDialog","onClickOpenConfirmationDialog","lib_ConfirmationDialog","Misc","AlertDemo_AlertDemo","BigNumberDemo_BigNumberDemo","ConfirmationDialogDemo_ConfirmationDialogDemo","SearchFieldDemo_SearchFieldDemo","TextFieldEditorDemo_TextFieldEditorDemo","TrendingDemo_TrendingDemo","Utils","Utils_DelayDemo","Utils_HoverableDemo","Utils_WizardDemo","DelayDemo","Delay_Delay","CircularProgress_default","HoverableDemo","Hoverable_Hoverable","cursor","height","WizardDemo","Wizard_Wizard","Stepper_default","activeStep","Step_default","StepLabel_default","disabled","Icons","Icons_TfsoDemo","Icons_TfsoLoadingDemo","TfsoDemo","Tfso","TfsoLoadingDemo","MaterialUiIcon","fill","MaterialUiLink","demoComponents","menuOpen","selectedDemo","keys","onChangeDemo","layout_namespaceObject","demo","ListItem_default","button","selected","ListItemText_default","ListItemIcon_default","People_default","Chip_default","components_MaterialUiLink","SelectedDemo","ReactDOM","render","CssBaseline_default","styles","styled_components_browser_esm","demo_Layout_Layout","getElementById"],"mappings":"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","file":"static/js/main.820241d4.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst colorScheme = {\r\n    fiord: '#445566',\r\n    lynch: '#637b94',\r\n    dodgerBlue: '#11beff',\r\n    bayOfMany: '#224477',\r\n    easternBlue: '#22aabb',\r\n    apple: '#49bd39',\r\n    melrose: '#A3A4FB',\r\n    flamingo: '#f04b4b',\r\n    texasRose: '#ffb155',\r\n    dandelion: '#FFD966',\r\n    tundora: '#404040',\r\n    dustyGray: '#999999',\r\n    hippieBlue: '#6699bb',\r\n    emperor: '#555555',\r\n    silver: '#CCCCCC',\r\n    porcelain: '#E8E9EA',\r\n    wildSand: '#F6F6F6',\r\n    white: '#FFFFFF',\r\n    casper: '#AFC5D0'\r\n}\r\n\r\nconst colors = {\r\n    tfso: '#00c7f5',\r\n    baseColor: colorScheme.fiord,\r\n    baseLightColor: '#637b94',\r\n    baseLight2Color: '#8fa1b4',\r\n    baseLight3Color: '#bdc8d3',\r\n    baseLight4Color: '#ebeef1',\r\n    baseLight5Color: '#f4f6f8',\r\n    blueColor: colorScheme.dodgerBlue,\r\n    blueDarkColor: colorScheme.bayOfMany,\r\n    blueDesaturatedColor: colorScheme.hippieBlue,\r\n    grayBlueColor: colorScheme.casper,\r\n    tealColor: colorScheme.easternBlue,\r\n    greenColor: colorScheme.apple,\r\n    greenLightColor: 'rgba(73, 189, 57, 0.4)',\r\n    purpleColor: colorScheme.melrose,\r\n    redColor: colorScheme.flamingo,\r\n    redLightColor: 'rgba(240, 75, 75, 0.4)',\r\n    orangeColor: colorScheme.texasRose,\r\n    yellowColor: colorScheme.dandelion,\r\n    blackColor: colorScheme.tundora,\r\n    grayColor: colorScheme.dustyGray,\r\n    grayDarkColor: '#6E6E6E',\r\n    grayDarkerColor: '#454545',\r\n    grayLightColor: '#C4C4C4',\r\n    grayLighterColor: '#E6E6E6',\r\n    grayLightestColor: '#F7F7F7',\r\n    whiteColor: colorScheme.white,\r\n    whiteDarkColor: '#F7F7F7',\r\n    whiteDarkerColor: '#E6E6E6',\r\n    bodyBackgroundColor: '#F7F7F7',\r\n    listOverBackgroundColor: '#E6E6E6',\r\n    borderColor: '#C4C4C4',\r\n    tabBarColor: colorScheme.white\r\n}\r\n\r\nconst palette = {\r\n    primary: colors.baseColor,\r\n    primaryLight: colors.baseLightColor,\r\n    success: colors.greenColor,\r\n    warning: colors.orangeColor,\r\n    alert: colors.redColor,\r\n    delete: colors.redColor,\r\n}\r\n\r\nconst layout = {\r\n    containerMargin: '15px'\r\n}\r\n\r\nexport const materialuiTheme = createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    palette: {\r\n        secondary: {\r\n            dark: '#1b2c3c',\r\n            main: '#456',\r\n            light: '#708194'\r\n        },\r\n        primary: {\r\n            dark: '#0090cc',\r\n            main: '#11c0ff',\r\n            light: '#6df3ff',\r\n            contrastText: '#FFF'\r\n        }\r\n    }\r\n})\r\n\r\nexport const styledTheme = {\r\n    tfso: {\r\n        colors,\r\n        palette,\r\n        layout\r\n    },\r\n    mui: materialuiTheme, // Make the entire material-ui theme available to styled components as well\r\n}\r\n\r\nexport type TfsoTheme = typeof styledTheme","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport List from '@material-ui/core/List'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport styled from 'styled-components/macro'\r\n\r\nconst StyledDrawer = styled(Drawer).attrs({\r\n    classes: {paper: 'MuiPaperStyle'}\r\n})`\r\n    &&{\r\n      width: ${props => props.open ? 260 : props.theme.mui.spacing.unit * 9 + 1}px;\r\n      height: 100%;\r\n      transition: none;\r\n      transform: none;\r\n      white-space: nowrap;\r\n      display: flex;\r\n      overflow-x: hidden;\r\n      background-color: #CCC;\r\n      border: none;\r\n    }\r\n    \r\n    .MuiPaperStyle{\r\n      width: ${props => props.open ? 260 : props.theme.mui.spacing.unit * 9 + 1}px;\r\n      transition: none;\r\n      transform: none;\r\n      position: static;\r\n      overflow-x: hidden;\r\n      background-color: ${props => props.theme.tfso.colors.baseLight5Color};\r\n      border: none;\r\n    }\r\n`\r\n\r\nexport type MenuProps = {\r\n    open: boolean\r\n}\r\n\r\nexport default class Menu extends React.PureComponent<MenuProps>{\r\n    static propTypes = {\r\n        open: PropTypes.bool.isRequired\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <StyledDrawer variant=\"permanent\" open={this.props.open}>\r\n                <List>\r\n                    {this.props.children}\r\n                </List>\r\n            </StyledDrawer>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class MobileMenu extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class TopMenu extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport MoreIcon from '@material-ui/icons/MoreVert'\r\nimport styled from 'styled-components/macro'\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n`\r\nconst StyledAppBar = styled(AppBar)`\r\n&&{\r\n  background: white;\r\n  box-shadow: none;\r\n  z-index: ${props => props.theme.mui.zIndex.drawer + 1};\r\n}\r\n`\r\n\r\nconst Grow = styled.div`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst MenuButton = styled(IconButton)`\r\n&&{\r\n  margin-left: -12px;\r\n  margin-right: 20px;\r\n}\r\n`\r\n\r\nconst Title = styled(Typography)`\r\n&&{\r\n  display: none;\r\n  ${({theme}) => theme.mui.breakpoints.up('sm')}{\r\n    display: block;\r\n  }\r\n}\r\n`\r\n\r\nconst SectionDesktop = styled.div`\r\n&&{\r\n  display: none;\r\n  ${({theme}) => theme.mui.breakpoints.up('md')}{\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n}\r\n`\r\n\r\nconst SectionMobile = styled.div`\r\n&&{\r\n  display: flex;\r\n  ${({theme}) => theme.mui.breakpoints.up('md')}{\r\n    display: none;\r\n  }\r\n}\r\n`\r\n\r\nexport type TopBarProps = {\r\n    title: string\r\n    onMenuToggle: Function | null\r\n    mobileMenu?: React.ReactNode\r\n}\r\n\r\nexport default class TopBar extends React.PureComponent<TopBarProps, any>{\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        mobileMenu: PropTypes.node.isRequired\r\n    }\r\n    state = {\r\n        mobileMoreAnchorEl: null\r\n    }\r\n    handleMobileMenuOpen = event => {\r\n        this.setState({mobileMoreAnchorEl: event.currentTarget})\r\n    }\r\n    handleMobileMenuClose = () => {\r\n        this.setState({mobileMoreAnchorEl: null})\r\n    }\r\n\r\n    render(){\r\n        const {mobileMoreAnchorEl} = this.state\r\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\r\n\r\n        return (\r\n            <Root>\r\n                <StyledAppBar position=\"static\" color=\"default\">\r\n                    <Toolbar>\r\n                        {this.props.onMenuToggle !== null &&\r\n                            <MenuButton color=\"inherit\" aria-label=\"Open drawer\" onClick={e => this.props.onMenuToggle && this.props.onMenuToggle()}>\r\n                                <MenuIcon/>\r\n                            </MenuButton>\r\n                        }\r\n                        <Title variant=\"h6\" color=\"inherit\" noWrap>\r\n                            {this.props.title}\r\n                        </Title>\r\n                        <Grow/>\r\n                        <SectionDesktop>\r\n                            {this.props.children}\r\n                        </SectionDesktop>\r\n                        <SectionMobile>\r\n                            <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\r\n                                <MoreIcon/>\r\n                            </IconButton>\r\n                        </SectionMobile>\r\n                    </Toolbar>\r\n                </StyledAppBar>\r\n                <Menu\r\n                    anchorEl={mobileMoreAnchorEl}\r\n                    anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                    transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                    open={isMobileMenuOpen}\r\n                    onClose={this.handleMobileMenuClose}\r\n                >\r\n                    {this.props.mobileMenu}\r\n                </Menu>\r\n            </Root>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nfunction setTitle(text){\r\n    document.title = text\r\n}\r\n\r\ntype Props = {\r\n    text: string\r\n}\r\n\r\nexport default class DocumentTitle extends React.PureComponent<Props>{\r\n    constructor(props){\r\n        super(props)\r\n        setTitle(props.text)\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.text !== this.props.text){\r\n            setTitle(nextProps.text)\r\n        }\r\n    }\r\n    render(){\r\n        return ''\r\n    }\r\n}","import React from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport TopBar from './Topbar'\r\nimport DocumentTitle from './DocumentTitle'\r\n\r\n// Wrap everything\r\nexport const LayoutWrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column; // Flex header and body from top to bottom\r\n`\r\n\r\n// Put topbar in here\r\nexport const LayoutHeader = styled.div`\r\n  \r\n`\r\n\r\n// Put everything below topbar here\r\nexport const LayoutBody = styled.div`\r\n  flex: 1; // Fill the rest of the page after header has taken its space\r\n  min-height: 0;\r\n  display: flex;\r\n`\r\n\r\n// Put menu here\r\nexport const LayoutBodyLeft = styled.div`\r\n\r\n`\r\n\r\n// Put your app here\r\nexport const LayoutBodyRight = styled.div`\r\n  flex: 1;\r\n  min-height: 0;\r\n  padding: 15px;\r\n  overflow-y: auto;\r\n`\r\n\r\ntype LayoutProps = {\r\n    title: string\r\n    docTitle: string\r\n    menu: React.ReactNode\r\n    mobileMenu: React.ReactNode\r\n    topMenu: React.ReactNode\r\n    onMenuToggle: Function\r\n}\r\n\r\nexport default class Layout extends React.PureComponent<LayoutProps>{\r\n    render(){\r\n        return (\r\n            <LayoutWrapper>\r\n                <DocumentTitle text={this.props.docTitle} />\r\n                <LayoutHeader>\r\n                    <TopBar\r\n                        title={this.props.title}\r\n                        onMenuToggle={this.props.onMenuToggle}\r\n                        mobileMenu={this.props.mobileMenu}\r\n                    >\r\n                        {this.props.topMenu}\r\n                    </TopBar>\r\n                </LayoutHeader>\r\n                <LayoutBody>\r\n                    <LayoutBodyLeft>\r\n                        {this.props.menu}\r\n                    </LayoutBodyLeft>\r\n                    <LayoutBodyRight>\r\n                        {this.props.children}\r\n                    </LayoutBodyRight>\r\n                </LayoutBody>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\ntype LayoutNoMenuProps = {\r\n    title: string\r\n    docTitle: string\r\n    mobileMenu: React.ReactNode\r\n    topMenu: React.ReactNode\r\n}\r\n\r\nexport class LayoutNoMenu extends React.PureComponent<LayoutNoMenuProps>{\r\n    render(){\r\n        return (\r\n            <LayoutWrapper>\r\n                <DocumentTitle text={this.props.docTitle} />\r\n                <LayoutHeader>\r\n                    <TopBar\r\n                        title={this.props.title}\r\n                        onMenuToggle={null}\r\n                        mobileMenu={this.props.mobileMenu}\r\n                    >\r\n                        {this.props.topMenu}\r\n                    </TopBar>\r\n                </LayoutHeader>\r\n                <LayoutBody>\r\n                    <LayoutBodyRight>\r\n                        {this.props.children}\r\n                    </LayoutBodyRight>\r\n                </LayoutBody>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MuiSnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport { TfsoTheme } from './theme'\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n}\r\n\r\nconst bgColor = (variant: AlertVariant, palette: TfsoTheme['tfso']['palette']) => {\r\n    switch(variant){\r\n        case 'success': return palette.success\r\n        case 'error': return palette.alert \r\n        case 'info': return palette.primaryLight\r\n        case 'warning': return palette.warning \r\n    }\r\n}\r\n\r\nconst SnackbarContent = ({variant, ...other}) => <MuiSnackbarContent {...other} />\r\nconst StyledSnack = styled(SnackbarContent)`&&{\r\n    background-color: ${({variant, theme}) => bgColor(variant, theme.tfso.palette)}\r\n}` \r\n\r\ntype AlertVariant = 'success' | 'warning' | 'error' | 'info'\r\n\r\n\r\nexport type AlertProps = {\r\n    message: React.ReactNode\r\n    onClose(): void\r\n    variant: AlertVariant\r\n}\r\n\r\nconst Alert = (props: AlertProps) => {\r\n    const { message, onClose, variant } = props\r\n    const Icon = variantIcon[variant]\r\n\r\n    return (\r\n        <StyledSnack\r\n            variant={variant}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" style={{display: 'flex', alignItems: 'center'}}>\r\n                    <Icon style={{fontSize: 20, opacity: 0.9, marginRight: 10}} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon style={{fontSize: 20}} />\r\n                </IconButton>,\r\n            ]}\r\n        />\r\n    )\r\n}\r\n\r\nAlert.propTypes = {\r\n    message: PropTypes.node.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\n\r\nexport type BigNumberProps = {\r\n    /**\r\n     * Choose `light` when you have a dark background, otherwise `dark`\r\n     * @default light\r\n     */\r\n    color?: 'light' | 'dark'\r\n\r\n    /**\r\n     * @default large\r\n     */\r\n    size?: 'medium' | 'large'\r\n    children: string | number\r\n} \r\n\r\nconst fontSizeMap: {[P in Required<BigNumberProps>['size']]: number} = {\r\n    medium: 32,\r\n    large: 48\r\n}\r\n\r\nconst defaultProps: Required<Pick<BigNumberProps,'color' | 'size'>> = {\r\n    color: 'light',\r\n    size: 'large',\r\n}\r\n\r\nconst wrapper = ({size, color, ...props}: Required<BigNumberProps>) => <div {...props} />\r\n// TODO: These should be on the BigNumber component instead.. \r\nwrapper.defaultProps = defaultProps\r\nwrapper.propTypes = {\r\n    color: PropTypes.oneOf(['light', 'dark']),\r\n    size: PropTypes.oneOf(['medium', 'large']),\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]).isRequired\r\n}\r\n\r\nconst BigNumber = styled(wrapper)`&&{\r\n    font-size: ${({theme, size = defaultProps.size}) => theme.mui.typography.pxToRem(fontSizeMap[size])};\r\n    line-height: normal;\r\n    letter-spacing: 0.08em;\r\n    color: ${({color = defaultProps.color}) => color === 'light' ? '#FFFFFF' : '#404040' };\r\n    white-space: nowrap\r\n}`\r\n\r\nexport default BigNumber as React.ComponentType<BigNumberProps>","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport Slide from '@material-ui/core/Slide'\r\n\r\nexport type ConfirmationDialogProps = {\r\n    open: boolean\r\n    title?: string\r\n    message: string\r\n    okButtonText: string\r\n    cancelButtonText: string\r\n    onOk: () => void\r\n    onCancel: () => void\r\n}\r\n\r\nconst TransitionComponent = props => <Slide direction='up' {...props} />\r\n\r\nconst ConfirmationDialog = (props: ConfirmationDialogProps) => {\r\n    const {open, onCancel, onOk, title, message, okButtonText, cancelButtonText} = props\r\n    return (\r\n        <Dialog\r\n            TransitionComponent={TransitionComponent}\r\n            keepMounted={false}\r\n            open={open}\r\n            onClose={onCancel}\r\n            maxWidth={'xs'}\r\n        >\r\n            {title && <DialogTitle>{title}</DialogTitle>}\r\n            <DialogContent>{message}</DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onCancel} color=\"primary\">{cancelButtonText}</Button>\r\n                <Button onClick={onOk} color=\"secondary\">{okButtonText}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    title: PropTypes.string,\r\n    message: PropTypes.string.isRequired,\r\n    okButtonText: PropTypes.string.isRequired,\r\n    cancelButtonText: PropTypes.string.isRequired,\r\n    onOk: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ConfirmationDialog","import React from 'react'\r\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nexport type SearchFieldProps = TextFieldProps\r\n\r\ntype State = {\r\n    editing: boolean\r\n}\r\n\r\nexport default class SearchField extends React.PureComponent<SearchFieldProps, State>{\r\n    static defaultProps = {\r\n        placeholder: 'Search',\r\n        margin: 'dense',\r\n        InputProps: {\r\n            startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>\r\n        }\r\n    }\r\n\r\n    state: State = {\r\n        editing: false\r\n    }\r\n\r\n    onBlur = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: false})\r\n        const { onBlur } = this.props\r\n        onBlur && onBlur(e)\r\n    }\r\n\r\n    onFocus = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: true})\r\n        const { onFocus } = this.props\r\n        onFocus && onFocus(e)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <TextField\r\n                fullWidth={this.state.editing}\r\n                {...this.props}\r\n                onBlur={this.onBlur}\r\n                onFocus={this.onFocus}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TextField, { TextFieldProps } from '@material-ui/core/TextField'\r\n\r\ntype Props = {\r\n    value: string\r\n    onChange: (value: string) => void\r\n    dirty?: boolean\r\n    enableDirtyCheck?: boolean\r\n} \r\n\r\ntype State = {\r\n    editing: boolean\r\n    value: string\r\n    prevProps: Props\r\n}\r\n\r\ntype Omit<T,K> = Pick<T, Exclude<keyof T, K>>\r\n\r\nfunction handleEvent(event: React.KeyboardEvent<HTMLDivElement>){\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n    // the above only prevents other synthetic events, if we want to prevent global listeners too, we need to stop the propagation on the native event as well\r\n    event.nativeEvent.stopImmediatePropagation()\r\n}\r\n\r\nexport type TextFieldEditorProps = Props & Partial<Omit<TextFieldProps, 'value' | 'onChange'>>\r\n\r\nexport default class TextFieldEditor extends React.PureComponent<TextFieldEditorProps, State>{\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n        onChange: PropTypes.func.isRequired,\r\n        dirty: PropTypes.bool\r\n    }\r\n\r\n    _inputRef: React.RefObject<HTMLInputElement> = React.createRef()\r\n\r\n    state: State = {\r\n        editing: false,\r\n        value: this.props.value,\r\n        prevProps: this.props\r\n    }\r\n\r\n    static getDerivedStateFromProps(props: Readonly<TextFieldEditorProps>, state: Readonly<State>){\r\n        const prevProps = state.prevProps\r\n\r\n        if(prevProps.value !== props.value)\r\n            return { value: props.value, prevProps: props }\r\n\r\n        return { prevProps: props }\r\n    }\r\n\r\n    blur = () => { this._inputRef.current && this._inputRef.current.blur() }\r\n\r\n    onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n        this.props.onKeyDown && this.props.onKeyDown(event)\r\n        if(event.defaultPrevented)\r\n            return \r\n\r\n        if(event.ctrlKey) switch(event.key){\r\n            case 's':\r\n                // this event should not be 'handled' here (eg. invoke handleEvent(event)), control may want to perform other actions on ctrl+s\r\n                // It should behave as a save changes in the control as well however\r\n                this.blur()\r\n                break\r\n            case 'z':\r\n                handleEvent(event)\r\n                this.setState({editing: false, value: this.props.value}, this.blur)\r\n                break\r\n            default: break\r\n        }\r\n        else switch(event.key){\r\n            case 'Enter':\r\n                if(this.props.multiline)\r\n                    break\r\n                handleEvent(event)\r\n                this.blur()\r\n                break\r\n            case 'Escape':\r\n                handleEvent(event)\r\n                this.setState({editing: false, value: this.props.value}, this.blur)\r\n                break\r\n            default: break\r\n        }\r\n    }\r\n\r\n    onFocus = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: true})\r\n        this.props.onFocus && this.props.onFocus(e)\r\n    }\r\n\r\n    onBlur = (e: React.EventHandler<any>) => {\r\n        if(!this.state.editing)\r\n            return // The method should be safe to call multiple times, but we don't want to raise the event multiple times if we dont need to\r\n        \r\n        this.props.onChange(this.state.value)\r\n        this.setState({editing: false })\r\n        this.props.onBlur && this.props.onBlur(e)\r\n    }\r\n\r\n    onChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement | HTMLSelectElement>) => {\r\n        const value = event.target.value\r\n        this.setState({value, editing: true})\r\n    }\r\n\r\n    render(){\r\n        const { dirty: dirtyProp, onChange: onChangeProp, value: valueProp, enableDirtyCheck, ...otherProps} = this.props\r\n        const { value } = this.state\r\n\r\n        const isDirty = enableDirtyCheck ? this.props.value !== value || !!dirtyProp : !!dirtyProp\r\n\r\n        return (\r\n            <TextField \r\n                {...otherProps as any}\r\n                inputRef={this._inputRef}\r\n                value={value}\r\n                onFocus={this.onFocus}\r\n                onChange={this.onChange}\r\n                onBlur={this.onBlur}\r\n                onKeyDown={this.onKeyDown}\r\n                InputProps={{ style: { fontStyle: isDirty ? 'italic' : 'normal' } }}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport {withTheme, DefaultTheme} from 'styled-components'\r\n\r\nimport TrendingUp from '@material-ui/icons/TrendingUp'\r\nimport TrendingFlat from '@material-ui/icons/TrendingFlat'\r\nimport TrendingDown from '@material-ui/icons/TrendingDown'\r\nimport { SvgIconProps } from '@material-ui/core/SvgIcon'\r\nimport { TfsoTheme } from './theme'\r\n\r\nexport type TrendingProps = {\r\n    variant: 'up' | 'down' | 'flat'\r\n} & SvgIconProps\r\n\r\ntype InjectedProps = {\r\n    theme: TfsoTheme\r\n}\r\n\r\nconst iconMap: {[P in TrendingProps['variant']]: React.ComponentType<SvgIconProps>} = {\r\n    up: TrendingUp,\r\n    flat: TrendingFlat,\r\n    down: TrendingDown,\r\n}\r\n\r\nconst getColor = (variant: TrendingProps['variant'], theme: TfsoTheme) => {\r\n    switch(variant){\r\n        case 'up': return theme.tfso.palette.success\r\n        case 'down': return theme.tfso.palette.warning\r\n        case 'flat': return theme.tfso.palette.alert\r\n        default:\r\n            return undefined\r\n    }\r\n}\r\n\r\nconst trending = ({variant, theme, ...iconProps}: TrendingProps & InjectedProps) =>{ \r\n    const Icon = iconMap[variant]\r\n    const nativeColor = getColor(variant, theme)\r\n    return (\r\n        <Icon \r\n            nativeColor={nativeColor}\r\n            {...iconProps} \r\n        />\r\n)}\r\n\r\ntrending.propTypes = {\r\n    variant: PropTypes.oneOf(['up', 'down', 'flat']).isRequired\r\n}\r\n\r\nexport default React.memo(withTheme(trending))","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    beforeShow?: any\r\n    delayMs?: number\r\n    show?: boolean\r\n    children: React.ReactNode\r\n}\r\n\r\ntype State = {\r\n    show: boolean\r\n}\r\n\r\nexport default class Delay extends React.PureComponent<Props, State>{\r\n    static propTypes = {\r\n        beforeShow: PropTypes.node,\r\n        delayMs: PropTypes.number,\r\n        show: PropTypes.bool,\r\n        children: PropTypes.node.isRequired\r\n    }\r\n\r\n    _timer: any = null\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.setState({show: false})\r\n        this._timer = setTimeout(() => {\r\n            this.setState({show: true})\r\n        }, this.props.delayMs || 1000)\r\n    }\r\n    componentWillUnmount(){\r\n        clearTimeout(this._timer)\r\n    }\r\n    render(){\r\n        if(this.props.show || this.state.show){\r\n            return this.props.children\r\n        }\r\n\r\n        return this.props.beforeShow || null\r\n    }\r\n}","import React, {HTMLProps} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    children: (hover: boolean, ref: React.RefObject<any>) => React.ReactNode\r\n} & HTMLProps<HTMLDivElement>\r\n\r\ntype State = {\r\n    hover: boolean\r\n}\r\n\r\nexport default class Hoverable extends React.PureComponent<Props, State>{\r\n    private ref: React.RefObject<any>\r\n\r\n    static propTypes = {\r\n        children: PropTypes.func.isRequired\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.ref = React.createRef()\r\n\r\n        this.state = {\r\n            hover: false\r\n        }\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState(state => ({hover: !state.hover}))\r\n    }\r\n\r\n    hoverOn = () => this.setState({hover: true})\r\n    hoverOff = () => this.setState({hover: false})\r\n\r\n    render(){\r\n        const {children, ...restProps} = this.props\r\n\r\n        return (\r\n            <div\r\n                ref={this.ref}\r\n                onMouseEnter={this.hoverOn}\r\n                onMouseLeave={this.hoverOff}\r\n                {...restProps}\r\n            >\r\n                {children(this.state.hover, this.ref)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {HTMLProps} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    children: (tabIndex: number, next: () => void, prev: () => void) => React.ReactNode\r\n    index?: number\r\n    length?: number\r\n} & HTMLProps<HTMLDivElement>\r\n\r\ntype State = {\r\n    index: number\r\n}\r\n\r\nexport default class Wizard extends React.PureComponent<Props, State>{\r\n    static propTypes = {\r\n        children: PropTypes.func.isRequired,\r\n        index: PropTypes.number,\r\n        length: PropTypes.number\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {index: props.index || 0}\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps){\r\n        if(nextProps.hasOwnProperty('index')){\r\n            return {index: nextProps.index}\r\n        }\r\n        return null\r\n    }\r\n\r\n    next = () => this.setState(state => {\r\n        if(this.props.length && state.index + 1 >= this.props.length) return state\r\n        return {index: state.index + 1}\r\n    })\r\n    prev = () => this.setState(state => {\r\n        if(state.index - 1 < 0) return state\r\n        return {index: state.index - 1}\r\n    })\r\n\r\n    render(){\r\n        const {children, ...restProps} = this.props\r\n\r\n        return (\r\n            <div {...restProps}>\r\n                {children(this.state.index, this.next, this.prev)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon'\r\nimport Styled, {css} from 'styled-components/macro';\r\n\r\nexport type TfsoLoadingIconProps = {\r\n    /**\r\n     * @default infinite\r\n     */\r\n    once?: boolean\r\n} & SvgIconProps\r\n\r\nconst TfsoLoadingIconWrapper = ({once, ...other}: TfsoLoadingIconProps) => <SvgIcon {...other}/>\r\n\r\nconst path = css`\r\n    opacity: 1;\r\n    animation-delay: 1.5s;\r\n`\r\nconst StyledSvgIcon: React.ComponentType<SvgIconProps> = Styled(TfsoLoadingIconWrapper)`&&{\r\n    #path1{\r\n        ${path}\r\n        animation: fade-in1 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path2{\r\n        ${path}\r\n        animation: fade-in2 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path3{\r\n        ${path}\r\n        animation: fade-in3 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path4{\r\n        ${path}\r\n        animation: fade-in4 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path5{\r\n        ${path}\r\n        animation: fade-in5 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    @keyframes fade-in1 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 1; }\r\n        40% { opacity: 1; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in2 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 1; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in3 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in4 {\r\n        0%   { opacity:0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 0.2; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in5 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 0.2; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n}` as any // seems like returntype of styled-components adds string as a type of _ref.. dunnp why\r\n\r\nexport default React.memo((props: TfsoLoadingIconProps) => (\r\n    <StyledSvgIcon\r\n        {...props}\r\n        viewBox=\"0 0 37 23\"\r\n        fillRule='evenodd'\r\n        strokeWidth=\"1\"\r\n    >    \r\n        <path d=\"M21.79 9.81C21.17789 8.5323532 19.886707 7.7195303 18.47 7.72 16.444136 7.7143752 14.803816 6.0724096 14.800223 4.0465408 14.79663 2.020672 16.431115 0.37289845 18.456947 0.36008776 20.482778 0.34727707 22.137972 1.9742478 22.16 4c-0.01782 1.4288443 0.793121 2.7388262 2.08 3.36-1.120033 0.4431782-2.006822 1.3299671-2.45 2.45l0 0z\" id=\"path5\"/>\r\n        <path d=\"m33.24 15.09c-1.427527 0.01209-2.733245-0.802525-3.35-2.09-0.443178 1.120033-1.329967 2.006822-2.45 2.45 1.275973 0.613987 2.088053 1.903991 2.09 3.32 0 2.032408 1.647592 3.68 3.68 3.68 2.032408 0 3.68-1.647592 3.68-3.68 0-2.032408-1.647592-3.68-3.68-3.68l0.03 0 0 0z\" id=\"path4\"/>\r\n        <path d=\"m14.79 11.41c0-2.0351693-1.649831-3.685-3.685-3.685-2.0351693 0-3.685 1.6498307-3.685 3.685 0 2.032408-1.6475921 3.68-3.68 3.68-2.0324079 0-3.68 1.647592-3.68 3.68 0 2.032408 1.6475921 3.68 3.68 3.68 2.0324079 0 3.68-1.647592 3.68-3.68-0.00119-1.719312 1.1882715-3.210312 2.864877-3.591141 1.676605-0.380829 3.39346 0.450022 4.135123 2.001141 0.443178-1.120033 1.329967-2.006822 2.45-2.45-1.27208-0.616837-2.079908-1.906255-2.08-3.32l0 0 0 0z\" id=\"path2\"/>\r\n        <path d=\"m25.84 7.73c-2.016889-0.0001192-3.658077 1.6232303-3.68 3.64l0 0.09c-0.02094 1.397916-0.830116 2.663946-2.09 3.27 1.120033 0.443178 2.006822 1.329967 2.45 2.45 0.613987-1.275973 1.903991-2.088053 3.32-2.09 2.035169 0 3.685-1.649831 3.685-3.685 0-2.0351693-1.649831-3.685-3.685-3.685l0 0.01 0 0z\" id=\"path3\"/>\r\n        <path d=\"m18.47 15.1c-2.031097 0.0055-3.673671 1.655547-3.669994 3.686649 0.0037 2.031101 1.652215 3.675171 3.683318 3.673336C20.514428 22.45815 22.159993 20.811104 22.16 18.78 22.162665 17.800536 21.774754 16.860421 21.082167 16.167833 20.389579 15.475246 19.449463 15.087335 18.47 15.09l0 0.01 0 0z\" id=\"path1\"/>\r\n    </StyledSvgIcon>\r\n))\r\n","import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TfsoLoading from '../lib/icons/TfsoLoading'\r\n\r\n// TODO: this could be a Util HOC component\r\nconst CenterTop = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    height: 100%;\r\n`\r\n\r\nconst Home = () => {\r\n    return(\r\n        <CenterTop>\r\n            <TfsoLoading once color='primary' fontSize='inherit' style={{fontSize: 400}} />\r\n            <Typography variant='h4' color='primary'>\r\n                REACT-TFSO-COMPONENTS\r\n            </Typography>\r\n            <Typography variant='body1' align='center' color='textSecondary'>\r\n                Something something useful description something that does something (TODO) <br />\r\n                Supplementary React components based on Material-UI with Tfso styling<br />\r\n            </Typography>\r\n        </CenterTop>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon'\r\nimport Link from '@material-ui/core/Link'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nexport const GitHubIcon = React.memo((props: SvgIconProps) => (\r\n    <SvgIcon {...props}>\r\n        <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\r\n    </SvgIcon>\r\n))\r\n\r\nexport type GitHubLinkProps = {\r\n    path?: string\r\n    tooltip?: string\r\n    color?: SvgIconProps['color']\r\n    fontSize?: SvgIconProps['fontSize']\r\n}\r\n\r\nconst GitHubLink = (props: GitHubLinkProps) => {\r\n    return (\r\n        <Link href={`https://github.com/tfso/react-tfso-components${props.path ? `/${props.path}` : ''}`} target='_blank' >\r\n            <Tooltip title={props.tooltip ? props.tooltip : 'View on GitHub'}>\r\n                <GitHubIcon fontSize={props.fontSize || 'large'} color={props.color} />\r\n            </Tooltip>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default GitHubLink\r\n","import React, { ReactChild } from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport GitHubLink from './GitHubLink'\r\n\r\nexport const Demo = (props) => <Paper style={{padding: 15, marginBottom: 30}}>{props.children}</Paper>\r\n\r\nexport type DemoTitleProps = {\r\n    children: string\r\n    /**\r\n     * The path to the Demo component. `src/demo/demos/` will be appended in front of the path\r\n     */\r\n    demoPath?: string\r\n\r\n    /**\r\n     * The path to the Implementation of the component. `src/lib/` will be appended in front of the path\r\n     */\r\n    srcPath?: string\r\n}\r\nexport const DemoTitle = (props: DemoTitleProps) => {\r\n    return (\r\n        <Grid container justify='space-between' alignItems='baseline' >\r\n            <Grid item>\r\n                <Typography variant=\"h5\" >\r\n                    {props.children}\r\n                </Typography>\r\n            </Grid>\r\n            {props.srcPath || props.demoPath ? \r\n            <Grid item xs={2} container spacing={16} justify='flex-end'>\r\n                {props.demoPath && <Grid item><GitHubLink fontSize='default' color='secondary' path={`blob/master/src/demo/demos/${props.demoPath}`} tooltip={`View demo source for ${props.children}`} /></Grid>}\r\n                {props.srcPath && <Grid item><GitHubLink fontSize='default' color='primary' path={`blob/master/src/lib/${props.srcPath}`} tooltip={`View source for ${props.children}`}/></Grid> }\r\n            </Grid>\r\n            : null}\r\n        </Grid>\r\n    )\r\n}\r\nexport const DemoHelp = (props) => <Typography variant='subtitle1'>{props.children}</Typography>\r\nexport const DemoContent = (props: { children: Array<ReactChild> | ReactChild}) => (\r\n    <div style={{marginTop: 30}}>\r\n        <Typography variant=\"subtitle1\" >Example</Typography>\r\n        <Divider />\r\n        <br />\r\n        <Grid container spacing={16} alignItems='center'>\r\n            {props.children && Array.isArray(props.children) \r\n                ? props.children.map((child, i) => (\r\n                    <Grid item key={i} xs={i === 0 ? 12 : false}>\r\n                        {child}\r\n                    </Grid>\r\n                ))\r\n                : <Grid item xs={12} >{props.children}</Grid>\r\n            }\r\n        </Grid>\r\n    </div>\r\n)\r\n\r\nexport const DemoProps = (props) => (\r\n    <ExpansionPanel style={{marginTop: 15}}>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>Props</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Default</TableCell>\r\n                        <TableCell>Description</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.children}\r\n                </TableBody>\r\n            </Table>\r\n        </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n)\r\n\r\nexport type DemoPropProps = {\r\n    name: string\r\n    type: string\r\n    default?: string\r\n    description?: string\r\n}\r\n\r\nexport const DemoProp = (props: DemoPropProps) => (\r\n    <TableRow>\r\n        <TableCell><code>{props.name}</code></TableCell>\r\n        <TableCell><code>{props.type}</code></TableCell>\r\n        <TableCell><code>{props.default}</code></TableCell>\r\n        <TableCell><Typography>{props.description}</Typography></TableCell>\r\n    </TableRow>\r\n)","import React from 'react'\r\nimport { Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle } from '../../components/demo'\r\nimport Trending, { TrendingProps } from '../../../lib/Trending'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\ntype TrendingDemoState = {\r\n    variant: TrendingProps['variant']\r\n}\r\n\r\nexport default class TrendingDemo extends React.PureComponent<{}, TrendingDemoState> {\r\n    state: TrendingDemoState = {\r\n        variant: 'up'\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='ComponentDemos/TrendingDemo.tsx' srcPath='Trending.tsx' >Trending</DemoTitle>\r\n                <DemoHelp>\r\n                    A colored icon indicating a trending direction. <br/> \r\n                    Tip: You can use the <code>color</code> or <code>nativeColor</code> property to override the color of the icon.\r\n                </DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='variant' type='up | down | flat' default='' description=''></DemoProp>\r\n                    <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Trending variant={this.state.variant} fontSize='large' />\r\n                    <TextField\r\n                        select\r\n                        value={this.state.variant}\r\n                        onChange={e => this.setState({variant: e.target.value as any})}\r\n                        label='variant'\r\n                    >\r\n                        <MenuItem value='up'>up</MenuItem>\r\n                        <MenuItem value='flat'>flat</MenuItem>\r\n                        <MenuItem value='down'>down</MenuItem>\r\n                    </TextField>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle } from '../../components/demo'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport BigNumber, { BigNumberProps } from '../../../lib/BigNumber';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\ntype BigNumberState = {\r\n    color: BigNumberProps['color']\r\n    size: BigNumberProps['size']\r\n}\r\n\r\nexport default class BigNumberDemo extends React.PureComponent<{}, BigNumberState> {\r\n    state: BigNumberState = {\r\n        color: 'dark',\r\n        size: 'large',\r\n    }\r\n\r\n    handleChange = (key: keyof BigNumberState) => (event: React.ChangeEvent<HTMLSelectElement>) => this.setState({[key]: event.target.value} as any)\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='ComponentDemos/BigNumberDemo.tsx' srcPath='BigNumber.tsx' >BigNumber</DemoTitle>\r\n                <DemoHelp>\r\n                    A Big Number is a number stands out\r\n                </DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='color' type='light | dark' default='light' description=''></DemoProp>\r\n                    <DemoProp name='size' type='medium | large' default='larger' description=''></DemoProp>\r\n                    <DemoProp name='children' type='string | number' default='' description=''></DemoProp>\r\n                    {/* <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp> */}\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Grid container alignItems='center' spacing={32}>\r\n                        <Grid item>\r\n                            <div style={{backgroundColor: this.state.color === 'light' ? '#11beff' : 'inherit', padding: 10}}>\r\n                                <BigNumber\r\n                                    size={this.state.size}\r\n                                    color={this.state.color}\r\n                                >$123</BigNumber>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant='caption'>NB: The BigNumber component does not set the background color!<br /> The background color used here is just for illustrative purposes.</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <TextField\r\n                        select\r\n                        label='size'\r\n                        value={this.state.size}\r\n                        onChange={this.handleChange('size')}\r\n                    >\r\n                        <MenuItem value='medium'>medium</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                    >\r\n                        <MenuItem value='light'>light</MenuItem>\r\n                        <MenuItem value='dark'>dark</MenuItem>\r\n                    </TextField>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle } from '../../components/demo'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert, { AlertProps } from '../../../lib/Alert'\r\n\r\nconst variantMessage: {[P in AlertProps['variant']]: string } = {\r\n    success: 'GRATE SUCCÉSS!',\r\n    info: 'Informational information',\r\n    warning: 'You better not do that, Brian',\r\n    error: 'That failed horribly...',\r\n}\r\n\r\nexport default class AlertDemo extends React.PureComponent<{}, {variant: AlertProps['variant'], message: string, open: boolean}> {\r\n    state = {\r\n        variant: 'success' as AlertProps['variant'],\r\n        open: false,\r\n        message: 'GRATE SUCCÉSS!'\r\n    }\r\n\r\n    onClose = () => this.setState({open: false})\r\n\r\n    onPress = (variant: AlertProps['variant']) => { \r\n        const message = variantMessage[variant]\r\n        return () => this.setState({ open: true, message, variant})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Demo>\r\n                <DemoTitle demoPath='ComponentDemos/AlertDemo.tsx' srcPath='Alert.tsx' >Alert</DemoTitle>\r\n                <DemoHelp>A dismissable alert-box that can be used in a SnackBar or as a standard component in a page</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='message' type='string | ReactNode' description='The message string or Element to be displayed' />\r\n                    <DemoProp name='variant' type='success | error | info | warning' description='The variant of the alert. Icon and background-color is selected based on the variant' />\r\n                    <DemoProp name='onClose' type='() => void' description='Callback function invoked when the alert is dismissed' />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Snackbar\r\n                        open={this.state.open}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        autoHideDuration={2000}\r\n                        onClose={this.onClose}\r\n                    >\r\n                        <Alert\r\n                            onClose={this.onClose}\r\n                            message={this.state.message}\r\n                            variant={this.state.variant}\r\n                        />\r\n                    </Snackbar>\r\n                    <Button variant='outlined' onClick={this.onPress('success')}>Open Success</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('info')}>Open Info</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('warning')}>Open Warning</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('error')}>Open Error</Button>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport SearchField from '../../../lib/SearchField'\r\nimport { Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle } from '../../components/demo'\r\n\r\nexport default class SearchFieldDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='ComponentDemos/SearchFieldDemo.tsx' srcPath='SearchField.tsx' >SearchField</DemoTitle>\r\n                <DemoHelp>A TextField that gets full width on typing. It also has a search icon adornnment.</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='placeholder' type='string (optional)' default='Search' description=''></DemoProp>\r\n                    <DemoProp name='margin' type='none | dense | normal (optional)' default='dense' description=''></DemoProp>\r\n                    <DemoProp name='InputProps' type=\"TextFieldProps['InputProps'] (optional)\" default='{ startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>}' description=''></DemoProp>\r\n                    <DemoProp name='...' type='TextFieldProps' default='' description='Any other prop is spread to the TextField'></DemoProp>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <SearchField />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextFieldEditor from '../../../lib/TextFieldEditor'\r\nimport { Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle } from '../../components/demo'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport default class TextFieldEditorDemo extends React.PureComponent {\r\n    state = {\r\n        value: 'demo',\r\n        dirty: false,\r\n        enableDirtyCheck: false\r\n    }\r\n\r\n    onReset = () => {\r\n        this.setState({value: ''})\r\n    }\r\n      \r\n    render(){\r\n        return(\r\n            <Demo>\r\n                <DemoTitle demoPath='ComponentDemos/TextFieldEditorDemo.tsx' srcPath='TextFieldEditor.tsx' >TextFieldEditor</DemoTitle>\r\n                <DemoHelp>A wrapper around material-ui's TextField with some added features</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='value' type='string' default='' description='' />\r\n                    <DemoProp name='onChange' type='(value: string) => void' default='' description='Invoked when the user has finished editing the value (editor looses focus by clicking or tabbing away, pressing the Enter or ctrl+s' />\r\n                    <DemoProp name='dirty' type='boolean (optional)' default='false' description='If true, it is rendered in italic after onChange' />\r\n                    <DemoProp name='enableDirtyCheck' type='boolean (optional)' default='false' description='If true, the component will do internal dirty checking when editing' />\r\n                    <DemoProp name='...' type='TextFieldProps' description='Any other prop is spread to the TextField' />\r\n                </DemoProps>\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} >\r\n                            <Typography>Keybindings</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            <code>\r\n                                ctrl + s:&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is NOT handled!)<br/>\r\n                                ctrl + z:&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\r\n                                Enter:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is handled)<br/>\r\n                                Escape:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\r\n                            </code>\r\n                            <br/>\r\n                            <i>When the event is handled `preventDefault()` and `stopPropagation()` is invoked on the `React.KeyboardEvent`</i><br/>\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                <DemoContent>\r\n                    <TextFieldEditor \r\n                        value={this.state.value}\r\n                        enableDirtyCheck={this.state.enableDirtyCheck}\r\n                        dirty={this.state.dirty}\r\n                        onChange={(value: string) => this.setState({value})}\r\n                    />\r\n                    <Button variant='outlined' onClick={() => this.setState({value: 'demo'})}>Reset</Button>\r\n                    <Button variant='outlined' onClick={() => this.setState({dirty: !this.state.dirty})}>Dirty: {this.state.dirty.toString()}</Button>\r\n                    <Button variant='outlined' onClick={() => this.setState({enableDirtyCheck: !this.state.enableDirtyCheck})}>Enable dirty check: {this.state.enableDirtyCheck.toString()}</Button>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport ConfirmationDialog from '../../../lib/ConfirmationDialog'\r\nimport { Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle } from '../../components/demo'\r\n\r\nexport default class ConfirmationDialogDemo extends React.PureComponent{\r\n    state = {\r\n        openConfirmationDialog: false\r\n    }\r\n\r\n    onClickOpenConfirmationDialog = () => {\r\n        this.setState({openConfirmationDialog: true})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='ComponentDemos/ConfirmationDialogDemo.tsx' srcPath='ConfirmationDialog.tsx' >ConfirmationDialog</DemoTitle>\r\n                <DemoHelp>A Dialog containing Ok and Cancel buttons</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show dialog\" />\r\n                    <DemoProp name=\"title\" type=\"string (optional)\" default=\"\" description=\"Dialog title\" />\r\n                    <DemoProp name=\"message\" type=\"string\" default=\"\" description=\"Dialog content\" />\r\n                    <DemoProp name=\"okButtonText\" type=\"string\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"onOk\" type=\"function\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Button variant='outlined' onClick={this.onClickOpenConfirmationDialog}>Open ConfirmationDialog</Button>\r\n                    <ConfirmationDialog\r\n                        open={this.state.openConfirmationDialog}\r\n                        okButtonText='Ok'\r\n                        cancelButtonText='Cancel'\r\n                        onOk={() => this.setState({openConfirmationDialog: false})}\r\n                        onCancel={() => this.setState({openConfirmationDialog: false})}\r\n                        message='Confirmation dialog message'\r\n                        title='Confirmation dialog title'\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport TrendingDemo from './ComponentDemos/TrendingDemo'\r\nimport BigNumberDemo from './ComponentDemos/BigNumberDemo'\r\nimport AlertDemo from './ComponentDemos/AlertDemo'\r\nimport SearchFieldDemo from './ComponentDemos/SearchFieldDemo'\r\nimport TextFieldEditorDemo from './ComponentDemos/TextFieldEditorDemo'\r\nimport ConfirmationDialogDemo from './ComponentDemos/ConfirmationDialogDemo'\r\n\r\nexport default class Misc extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <AlertDemo />\r\n                <BigNumberDemo />\r\n                <ConfirmationDialogDemo />\r\n                <SearchFieldDemo />\r\n                <TextFieldEditorDemo />\r\n                <TrendingDemo />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Delay, Hoverable, Wizard } from '../../lib'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport Step from '@material-ui/core/Step'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Button from '@material-ui/core/Button'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\n\r\nexport default class Utils extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <DelayDemo />\r\n                <HoverableDemo />\r\n                <WizardDemo />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nclass DelayDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Delay.tsx'>Delay</DemoTitle>\r\n                <DemoHelp>Shows the component inside after a set delay. Can be used to only show loaders if exceptionally slow</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"beforeShow\" type=\"React element or string (optional)\" default=\"\" description=\"What you want to show before the delay is finished\" />\r\n                    <DemoProp name=\"delayMs\" type=\"Number (optional)\" default=\"1000\" description=\"Delay time in ms\" />\r\n                    <DemoProp name=\"show\" type=\"Boolean (optional)\" default=\"false\" description=\"Force show content\" />\r\n                    <DemoProp name=\"children\" type=\"React element\" default=\"\" description=\"Content to show after delay\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Delay beforeShow=\"Waiting for delay...\">\r\n                        <CircularProgress />\r\n                    </Delay>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass HoverableDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Hoverable.tsx'>Hoverable</DemoTitle>\r\n                <DemoHelp>A HOC that passes hover true/false as a render prop</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(hover: boolean, ref: RefObject) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Hoverable>\r\n                        {(hover) => (\r\n                            <React.Fragment>\r\n                                {hover\r\n                                    ? <div key=\"1\" style={{backgroundColor: '#6699bb', padding: 15, color: '#FFF', cursor: 'pointer'}}>You're hovering me!</div>\r\n                                    : <div key=\"2\" style={{padding: 15, height: '100%'}}>Hover your mouse over me</div>\r\n                                }\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Hoverable>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass WizardDemo extends React.PureComponent{\r\n    render(){\r\n        const length = 3\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Wizard.tsx'>Wizard</DemoTitle>\r\n                <DemoHelp>A HOC that passes an index and next/prev functions in a render prop. Can be used along with material ui stepper or any other wizard</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(index: number, next: function, prev: function) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                    <DemoProp name=\"index\" type=\"number (optional)\" default=\"\" description=\"Force the current index to a certain value\" />\r\n                    <DemoProp name=\"length\" type=\"number (optional)\" default=\"\" description=\"The max length. The index will always be lower than this\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Wizard length={length + 1}>\r\n                        {(index, next, prev) => (\r\n                            <React.Fragment>\r\n                                <Stepper activeStep={index}>\r\n                                    <Step key=\"Step 1\">\r\n                                        <StepLabel>Step 1</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 2\">\r\n                                        <StepLabel>Step 2</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 3\">\r\n                                        <StepLabel>Step 3</StepLabel>\r\n                                    </Step>\r\n                                </Stepper>\r\n                                <div>\r\n                                    <Button onClick={prev} disabled={index <= 0}>Prev</Button>\r\n                                    <Button onClick={next} disabled={index >= length}>Next</Button>\r\n                                    {index >= length && 'All steps completed!'}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Wizard>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon'\r\n\r\n// Original icon colors: TODO: Use these?\r\n// blue: #00B8F3\r\n// white: #fff\r\n\r\n\r\nexport type TfsoIconProps = {} & SvgIconProps\r\n\r\nexport default React.memo((props: TfsoIconProps) => (    \r\n    <SvgIcon \r\n        {...props}\r\n        viewBox='0 0 50.59 30.35'\r\n    >\r\n        <path\r\n            d={'M33.22,9.62A6,6,0,0,0,29.85,13a5.06,5.06,0,0,0-4.56-2.87,5.06,5.06,0,1,1,5.06-5.06A5.06,5.06,0,0,0,33.22,9.62ZM45.53,20.23A5.06,5.06,0,0,1,41,17.36a6,6,0,0,1-3.36,3.37,5.06,5.06,0,0,1,2.87,4.56,5.06,5.06,0,1,0,5.06-5.06Zm-25.3-5.06a5.06,5.06,0,1,0-10.12,0,5.06,5.06,0,0,1-5.06,5.06,5.06,5.06,0,1,0,5.06,5.06,5.06,5.06,0,0,1,9.62-2.19,6,6,0,0,1,3.37-3.37A5.06,5.06,0,0,1,20.23,15.18Zm15.18-5.06a5.06,5.06,0,0,0-5.06,5v.13a5.06,5.06,0,0,1-2.87,4.5,6,6,0,0,1,3.37,3.36,5.06,5.06,0,0,1,4.56-2.87,5.06,5.06,0,0,0,0-10.12ZM25.29,20.23a5.06,5.06,0,1,0,5.06,5.06A5.06,5.06,0,0,0,25.29,20.23Z'}\r\n        />\r\n    </SvgIcon>\r\n))","import React from 'react'\r\nimport { Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle } from '../components/demo'\r\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\r\nimport Tfso, { TfsoIconProps } from '../../lib/icons/Tfso'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nexport default class Icons extends React.PureComponent {\r\n    render(){\r\n        return (\r\n            <>\r\n                <TfsoDemo />\r\n                <TfsoLoadingDemo />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\ntype TfsoLogoDemoState =  {\r\n    color: TfsoIconProps['color']\r\n    fontSize: TfsoIconProps['fontSize']\r\n    nativeColor: TfsoIconProps['nativeColor']\r\n}\r\n\r\nclass TfsoDemo extends React.PureComponent<{}, TfsoLogoDemoState> {\r\n    state:TfsoLogoDemoState = {\r\n        color: 'primary',\r\n        fontSize: 'large',\r\n        nativeColor: ''\r\n    }\r\n\r\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Demo>\r\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/Tfso.tsx'>Tfso</DemoTitle>\r\n                <DemoHelp>Tfso logo icon</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Tfso \r\n                        color={this.state.color} \r\n                        fontSize={this.state.fontSize} \r\n                        nativeColor={this.state.nativeColor}\r\n                    />\r\n                    <TextField \r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                        >\r\n                        <MenuItem value='inherit' >inherit</MenuItem>\r\n                        <MenuItem value='primary' >primary</MenuItem>\r\n                        <MenuItem value='secondary' >secondary</MenuItem>\r\n                        <MenuItem value='default' >default</MenuItem>\r\n                        <MenuItem value='action' >action</MenuItem>\r\n                        <MenuItem value='disabled' >disabled</MenuItem>\r\n                        <MenuItem value='error' >error</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='fontSize'\r\n                        value={this.state.fontSize}\r\n                        onChange={this.handleChange('fontSize')}\r\n                        >\r\n                        <MenuItem value='small'>small</MenuItem>\r\n                        <MenuItem value='default'>default</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n\r\n                    </TextField>\r\n                    <TextField\r\n                        label='nativeColor'\r\n                        placeholder='#00B8F3'\r\n                        value={this.state.nativeColor}\r\n                        onChange={this.handleChange('nativeColor')}\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass TfsoLoadingDemo extends React.PureComponent<{},TfsoLogoDemoState> {\r\n    state:TfsoLogoDemoState = {\r\n        color: 'primary',\r\n        fontSize: 'large',\r\n        nativeColor: ''\r\n    }\r\n\r\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Demo>\r\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/TfsoLoading.tsx'>Tfso Loading</DemoTitle>\r\n                <DemoHelp>Tfso logo loading icon</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='once' type='boolean' default='false' description='If true, the icon will animate once'/>\r\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <TfsoLoading \r\n                        color={this.state.color} \r\n                        fontSize={this.state.fontSize} \r\n                        nativeColor={this.state.nativeColor}\r\n                    />\r\n                    <TextField \r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                        >\r\n                        <MenuItem value='inherit' >inherit</MenuItem>\r\n                        <MenuItem value='primary' >primary</MenuItem>\r\n                        <MenuItem value='secondary' >secondary</MenuItem>\r\n                        <MenuItem value='default' >default</MenuItem>\r\n                        <MenuItem value='action' >action</MenuItem>\r\n                        <MenuItem value='disabled' >disabled</MenuItem>\r\n                        <MenuItem value='error' >error</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='fontSize'\r\n                        value={this.state.fontSize}\r\n                        onChange={this.handleChange('fontSize')}\r\n                        >\r\n                        <MenuItem value='small'>small</MenuItem>\r\n                        <MenuItem value='default'>default</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        label='nativeColor'\r\n                        placeholder='#00B8F3'\r\n                        value={this.state.nativeColor}\r\n                        onChange={this.handleChange('nativeColor')}\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nexport const MaterialUiIcon = React.memo((props: SvgIconProps) => (\r\n    <SvgIcon {...props} viewBox=\"0 0 600 476.6\">\r\n        <path d=\"m0 259.8v-259.8l225 129.9v86.6l-150-86.6v173.2z\" fill=\"#00b0ff\"/>\r\n        <path d=\"m225 129.9 225-129.9v259.8l-150 86.6-75-43.3 150-86.6v-86.6l-150 86.6z\" fill=\"#0081cb\"/>\r\n        <path d=\"m225 303.1v86.6l150 86.6v-86.6z\" fill=\"#00b0ff\"/>\r\n        <path d=\"m375 476.3 225-129.9v-173.2l-75 43.3v86.6l-150 86.6zm150-346.4v-86.6l75-43.3v86.6z\" fill=\"#0081cb\"/>\r\n    </SvgIcon>\r\n))\r\n\r\nconst MaterialUiLink = () => (\r\n    <Link href='https://material-ui.com/' target='_blank' >\r\n        <MaterialUiIcon fontSize='large' />\r\n    </Link>\r\n)\r\n\r\nexport default MaterialUiLink\r\n","import React from 'react'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport PeopleIcon from '@material-ui/icons/People'\r\n\r\nimport {layout} from '../lib'\r\n\r\nimport Home from './Home'\r\nimport Misc from './demos/Components'\r\nimport Utils from './demos/Utils'\r\nimport Icons from './demos/Icons'\r\nimport GitHubLink from './components/GitHubLink'\r\nimport MaterialUiLink from './components/MaterialUiLink'\r\n\r\nconst demoComponents = {\r\n    Home: Home,\r\n    Misc: Misc,\r\n    Utils: Utils,\r\n    Icons: Icons,\r\n}\r\n\r\nexport default class Layout extends React.PureComponent<any, any> {\r\n    state = {\r\n        menuOpen: true,\r\n        selectedDemo: Object.keys(demoComponents)[0]\r\n    }\r\n\r\n    onMenuToggle = () => {\r\n        this.setState(state => ({menuOpen: !state.menuOpen}))\r\n    }\r\n\r\n    onChangeDemo = (selectedDemo) => this.setState({selectedDemo})\r\n\r\n    render(){\r\n        const menu = (\r\n            <layout.Menu open={this.state.menuOpen}>\r\n                {Object.keys(demoComponents).map(demo => {\r\n                    return (\r\n                        <ListItem key={demo} button selected={this.state.selectedDemo === demo} onClick={() => this.onChangeDemo(demo)}>\r\n                            {/* <ListItemIcon><PeopleIcon/></ListItemIcon> */}\r\n                            <ListItemText >{demo}</ListItemText>\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n\r\n                <br />\r\n                <Divider />\r\n\r\n                <ListItem button>\r\n                    <ListItemIcon><PeopleIcon/></ListItemIcon>\r\n                    <ListItemText>Chip</ListItemText>\r\n                    <Chip\r\n                        label=\"Badge\"\r\n                        color=\"secondary\"\r\n                    />\r\n                </ListItem>\r\n            </layout.Menu>\r\n        )\r\n        const mobileMenu = (\r\n            <layout.MobileMenu>\r\n                Mobile menu\r\n            </layout.MobileMenu>\r\n        )\r\n        const topMenu = (\r\n            <layout.TopMenu>\r\n                <Grid container spacing={16}>\r\n                    <Grid item><MaterialUiLink /></Grid>\r\n                    <Grid item><GitHubLink /></Grid>\r\n                </Grid>\r\n            </layout.TopMenu>\r\n        )\r\n\r\n        const SelectedDemo = demoComponents[this.state.selectedDemo]\r\n\r\n        return (\r\n            <layout.Layout\r\n                menu={menu}\r\n                mobileMenu={mobileMenu}\r\n                topMenu={topMenu}\r\n                title=\"Tfso Components\"\r\n                docTitle=\"Tfso Components\"\r\n                onMenuToggle={this.onMenuToggle}\r\n            >\r\n                <SelectedDemo />\r\n            </layout.Layout>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport {theme} from '../lib'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport {ThemeProvider as StyledThemeProvider} from 'styled-components'\r\nimport {MuiThemeProvider} from '@material-ui/core/styles'\r\nimport Layout from './Layout'\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <MuiThemeProvider theme={theme.materialuiTheme}>\r\n            <StyledThemeProvider theme={theme.styledTheme}>\r\n                <Layout />\r\n            </StyledThemeProvider>\r\n        </MuiThemeProvider>\r\n    </React.Fragment>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}