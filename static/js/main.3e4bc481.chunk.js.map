{"version":3,"sources":["lib/theme/index.ts","lib/layout/Menu.tsx","lib/layout/MobileMenu.tsx","lib/layout/TopMenu.tsx","lib/icons/Tfso.tsx","lib/layout/Topbar.tsx","lib/layout/DocumentTitle.tsx","lib/layout/Layout.tsx","lib/Alert.tsx","lib/BigNumber.tsx","lib/ConfirmationDialog.tsx","lib/DashBoard.tsx","lib/SearchField.tsx","lib/TextFieldEditor.tsx","lib/Trending.tsx","lib/Emoji.tsx","lib/Delay.tsx","lib/Hoverable.tsx","lib/Wizard.tsx","lib/icons/TfsoLoading.tsx","demo/components/MaterialUiLink.tsx","demo/components/GitHubLink.tsx","demo/pages/Home.tsx","demo/components/code.tsx","demo/components/demo.tsx","demo/pages/Icons.tsx","demo/history.ts","demo/components/Link.tsx","demo/pages/Guidelines.tsx","demo/components/ThemeColor.tsx","demo/pages/Theme.tsx","demo/demos/TrendingDemo.tsx","demo/demos/BigNumberDemo.tsx","demo/demos/AlertDemo.tsx","demo/demos/SearchFieldDemo.tsx","demo/demos/TextFieldEditorDemo.tsx","demo/demos/ConfirmationDialogDemo.tsx","demo/demos/EmojiDemo.tsx","demo/demos/DashBoardDemo.tsx","demo/demos/HoverableDemo.tsx","demo/demos/DelayDemo.tsx","demo/demos/WizardDemo.tsx","demo/Layout.tsx","demo/index.tsx"],"names":["colorScheme","colors","tfso","baseColor","baseLightColor","baseLight2Color","baseLight3Color","baseLight4Color","baseLight5Color","blueColor","blueDarkColor","blueDesaturatedColor","grayBlueColor","tealColor","greenColor","greenLightColor","purpleColor","redColor","redLightColor","orangeColor","yellowColor","blackColor","grayColor","grayDarkColor","grayDarkerColor","grayLightColor","grayLighterColor","grayLightestColor","whiteColor","whiteDarkColor","whiteDarkerColor","bodyBackgroundColor","listOverBackgroundColor","borderColor","tabBarColor","palette","primary","primaryLight","success","warning","alert","delete","materialuiTheme","createMuiTheme","typography","useNextVariants","secondary","dark","main","light","contrastText","styledTheme","layout","containerMargin","mui","StyledDrawer","styled","Drawer","attrs","classes","paper","withConfig","displayName","componentId","_ref","open","withWidth","_React$PureComponent","Menu","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","isMobile","includes","props","width","react_default","a","createElement","variant","elevation","onClose","List_default","disablePadding","children","React","PureComponent","MenuGroup","_React$PureComponent2","Icon","icon","backgroundColor","expanded","LinkContent","ListItem_default","divider","style","button","onClick","onToggleExpanded","ListItemIcon_default","marginRight","fontSize","color","ListItemText_default","subtitle","primaryTypographyProps","secondaryTypographyProps","label","ListItemSecondaryAction_default","IconButton_default","ExpandLess_default","ExpandMore_default","Fragment","Collapse_default","in","timeout","dense","Divider_default","MenuRootItem","_React$PureComponent3","selected","href","Link_default","NestedListItem","ListItem","MenuItem","_React$PureComponent4","MobileMenu","TopMenu","memo","SvgIcon_default","assign","viewBox","d","Root","div","StyledAppBar","AppBar","theme","zIndex","drawer","Wrapper","Left","Right","MenuButton","IconButton","ToolbarRight","TopBar","_this","position","Tfso","Typography_default","paddingLeft","title","Toolbar_default","onMenuToggle","aria-label","e","Menu_default","setTitle","text","document","DocumentTitle","call","nextProps","LayoutWrapper","LayoutHeader","LayoutBody","LayoutBodyLeft","LayoutBodyRight","Layout","DocumentTitle_DocumentTitle","docTitle","Topbar_TopBar","topMenu","menu","LayoutNoMenu","variantIcon","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","StyledSnack","other","objectWithoutProperties","SnackbarContent_default","_templateObject","_ref2","bgColor","Alert","message","aria-describedby","id","display","alignItems","opacity","action","Close_default","fontSizeMap","medium","large","defaultProps","size","wrapper","BigNumber","_ref2$size","pxToRem","_ref3","_ref3$color","TransitionComponent","Slide_default","direction","ConfirmationDialog","onCancel","onOk","okButtonText","cancelButtonText","Dialog_default","keepMounted","maxWidth","DialogTitle_default","DialogContent_default","DialogActions_default","Button_default","WidgetContainer","background","Paper_default","Widget","state","dragging","dragOver","onDrop","stopPropagation","preventDefault","data","JSON","parse","dataTransfer","getData","index","onOrder","err","setState","onDragStart","dragData","setData","stringify","onDragEnd","onDragEnter","onDragOver","onDragLeave","_this$props","border","draggable","sizeMap","small","cols","rows","DashBoard","onOrderArray","target","source","widgets","toConsumableArray","_this2","splice","onChangeOrder","_this3","GridList_default","spacing","cellHeight","map","i","widget","GridListTile_default","DashBoard_Widget","SearchField","editing","onBlur","onFocus","TextField_default","fullWidth","handleEvent","event","nativeEvent","stopImmediatePropagation","placeholder","margin","InputProps","startAdornment","InputAdornment_default","Search_default","TextFieldEditor","_inputRef","createRef","prevProps","blur","current","onKeyDown","defaultPrevented","ctrlKey","multiline","onChange","dirtyProp","dirty","enableDirtyCheck","otherProps","isDirty","inputRef","fontStyle","iconMap","up","TrendingUp","flat","TrendingFlat","down","TrendingDown","withTheme","iconProps","nativeColor","getColor","emojis","middleFinger","indexFinger","flex","brokenHeart","perfect","thumbsUp","thumbsDown","clap","heart","fire","bulb","crap","thinking","rocket","Emoji","propTypes","PropTypes","oneOf","keys","Delay","_timer","show","setTimeout","delayMs","clearTimeout","beforeShow","Hoverable","ref","toggleHover","hover","hoverOn","hoverOff","restProps","onMouseEnter","onMouseLeave","Wizard","next","length","prev","hasOwnProperty","path","css","TfsoLoading_templateObject","StyledSvgIcon","Styled","once","_ref4","_ref5","_ref6","fillRule","strokeWidth","MaterialUiIcon","fill","MaterialUiLink","rel","GitHubIcon","GitHubLink","concat","Tooltip_default","tooltip","CenterTop","Home_templateObject","Home","TfsoLoading","paragraph","align","Grid_default","container","justify","item","xs","flexDirection","Zoom_default","appear","transitionDelay","Code","_getPrototypeOf2","_len","args","Array","_key","highlight","Prism","highlightElement","className","language","Demo","padding","marginBottom","DemoTitle","srcPath","demoPath","components_GitHubLink","DemoHelp","DemoContent","marginTop","isArray","child","DemoProps","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpansionPanelDetails_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","DemoProp","name","type","default","description","DemoCode","Code_default","code_Code","Icons","Icons_TfsoDemo","Icons_TfsoLoadingDemo","TfsoDemo","handleChange","defineProperty","demo_Demo","demo_DemoTitle","demo_DemoHelp","demo_DemoProps","demo_DemoProp","demo_DemoContent","select","MenuItem_default","TfsoLoadingDemo","history","createHashHistory","basename","hashType","Link","to","push","toLowerCase","underline","undefined","AnchorLink","Anchor","window","location","hash","split","Section","unit","SubHeading","Paragraph","component","Tip","Card_default","CardContent_default","Guideline","Guidelines","render","renderHeading","renderGuidelines","renderTips","renderContributing","Guidelines_SubHeading","Link_Anchor","Guidelines_Guideline","Link_Link","Guidelines_Tip","Guidelines_Paragraph","Box","ThemeColor_templateObject","Txt","_templateObject2","ThemeColor","ThemeColors","Theme_templateObject","Theme","components_ThemeColor","TrendingDemo","Trending","BigNumberDemo","lib_BigNumber","variantMessage","AlertDemo","onPress","demo_DemoCode","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","lib_Alert","SearchFieldDemo","SearchField_SearchField","TextFieldEditorDemo","onReset","TextFieldEditor_TextFieldEditor","toString","ConfirmationDialogDemo","openConfirmationDialog","onClickOpenConfirmationDialog","lib_ConfirmationDialog","EmojiDemo","lib_Emoji","W1","wrap","DashBoardDemo","DashBoardDemo_W1","flexWrap","justifyContent","overflowX","height","DashBoard_DashBoard","onRemove","HoverableDemo","Hoverable_Hoverable","cursor","DelayDemo","Delay_Delay","CircularProgress_default","WizardDemo","Wizard_Wizard","Stepper_default","activeStep","Step_default","StepLabel_default","disabled","menuGroups","home","HomeIcon","guidelines","StraightenIcon","components","ViewCompactIcon","items","emoji","bignumber","confirmationdialog","searchfield","textfieldeditor","trending","StyleIcon","utils","BuildIcon","delay","hoverable","wizard","icons","FontDownloadIcon","labs","CodeIcon","dashboard","_unsubHistory","menuOpen","menuGroupsExpanded","onNavigation","getSelected","pathname","_path$split","slice","indexOf","_path$split2","slicedToArray","group","onCloseMenu","onToggleGroupExpanded","objectSpread","expandSelected","listen","layout_namespaceObject","groupName","content","itemName","components_MaterialUiLink","Page","_Page","ReactDOM","CssBaseline_default","styles","styled_components_browser_esm","demo_Layout_Layout","getElementById"],"mappings":"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","file":"static/js/main.3e4bc481.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles'\nimport 'styled-components'\n\nconst colorScheme = {\n    fiord: '#445566',\n    lynch: '#637b94',\n    dodgerBlue: '#11beff',\n    bayOfMany: '#224477',\n    easternBlue: '#22aabb',\n    apple: '#49bd39',\n    melrose: '#A3A4FB',\n    flamingo: '#f04b4b',\n    texasRose: '#ffb155',\n    dandelion: '#FFD966',\n    tundora: '#404040',\n    dustyGray: '#999999',\n    hippieBlue: '#6699bb',\n    emperor: '#555555',\n    silver: '#CCCCCC',\n    porcelain: '#E8E9EA',\n    wildSand: '#F6F6F6',\n    white: '#FFFFFF',\n    casper: '#AFC5D0'\n}\n\nconst colors = {\n    tfso: '#00c7f5',\n    baseColor: colorScheme.fiord,\n    baseLightColor: '#637b94',\n    baseLight2Color: '#8fa1b4',\n    baseLight3Color: '#bdc8d3',\n    baseLight4Color: '#ebeef1',\n    baseLight5Color: '#f4f6f8',\n    blueColor: colorScheme.dodgerBlue,\n    blueDarkColor: colorScheme.bayOfMany,\n    blueDesaturatedColor: colorScheme.hippieBlue,\n    grayBlueColor: colorScheme.casper,\n    tealColor: colorScheme.easternBlue,\n    greenColor: colorScheme.apple,\n    greenLightColor: 'rgba(73, 189, 57, 0.4)',\n    purpleColor: colorScheme.melrose,\n    redColor: colorScheme.flamingo,\n    redLightColor: 'rgba(240, 75, 75, 0.4)',\n    orangeColor: colorScheme.texasRose,\n    yellowColor: colorScheme.dandelion,\n    blackColor: colorScheme.tundora,\n    grayColor: colorScheme.dustyGray,\n    grayDarkColor: '#6E6E6E',\n    grayDarkerColor: '#454545',\n    grayLightColor: '#C4C4C4',\n    grayLighterColor: '#E6E6E6',\n    grayLightestColor: '#F7F7F7',\n    whiteColor: colorScheme.white,\n    whiteDarkColor: '#F7F7F7',\n    whiteDarkerColor: '#E6E6E6',\n    bodyBackgroundColor: '#F7F7F7',\n    listOverBackgroundColor: '#E6E6E6',\n    borderColor: '#C4C4C4',\n    tabBarColor: colorScheme.white\n}\n\nconst palette = {\n    primary: colors.baseColor,\n    primaryLight: colors.baseLightColor,\n    success: colors.greenColor,\n    warning: colors.orangeColor,\n    alert: colors.redColor,\n    delete: colors.redColor,\n}\n\nconst layout = {\n    containerMargin: '15px'\n}\n\nexport const materialuiTheme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        secondary: {\n            dark: '#1b2c3c',\n            main: '#456',\n            light: '#708194'\n        },\n        primary: {\n            dark: '#0090cc',\n            main: '#11c0ff',\n            light: '#6df3ff',\n            contrastText: '#FFF'\n        }\n    }\n})\n\nexport const styledTheme = {\n    tfso: {\n        colors,\n        palette,\n        layout\n    },\n    mui: materialuiTheme, // Make the entire material-ui theme available to styled components as well\n}\n\nexport type TfsoTheme = typeof styledTheme\n\ndeclare module 'styled-components' {\n    export interface DefaultTheme extends TfsoTheme {}\n    export type WithTheme = { theme: DefaultTheme }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport List from '@material-ui/core/List'\nimport Drawer from '@material-ui/core/Drawer'\nimport Link from '@material-ui/core/Link'\nimport Collapse from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport styled from 'styled-components/macro'\nimport {withWidth} from '@material-ui/core'\nimport {WithWidth} from '@material-ui/core/withWidth'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Divider from '@material-ui/core/Divider'\n\n/*\n\nMeny skjult som default på mobil\nMeny lukkes ved klikk på mobil\n\n */\n\nconst StyledDrawer = styled(Drawer).attrs({\n    classes: {paper: 'MuiPaperStyle'}\n})`\n    &&{\n      width: ${({open}) => open ? 240 : 0}px;\n      height: 100%;\n     \n    }\n    \n    .MuiPaperStyle{\n      position: static;\n    }\n`\n\nexport type MenuProps = {\n    open: boolean\n    onClose: () => void\n} & WithWidth\n\nexport default withWidth()(class Menu extends React.PureComponent<MenuProps>{\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onClose: PropTypes.func.isRequired\n    }\n\n    render(){\n        const isMobile = ['xs', 'sm'].includes(this.props.width)\n\n        return (\n            <StyledDrawer variant={isMobile ? 'temporary' : 'persistent'} elevation={0} open={this.props.open} onClose={this.props.onClose}>\n                <List disablePadding>\n                    {this.props.children}\n                </List>\n            </StyledDrawer>\n        )\n    }\n})\n\nexport type MenuGroupProps = {\n    icon?: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    onToggleExpanded: () => void\n    expanded: boolean\n    children: React.ReactNode\n}\n\nexport class MenuGroup extends React.PureComponent<MenuGroupProps>{\n    render(){\n        const Icon = this.props.icon\n        const backgroundColor = this.props.expanded ? '#fafaf9' : 'inherit'\n\n        const LinkContent = (\n            <ListItem divider={!this.props.expanded} style={{backgroundColor}} button onClick={this.props.onToggleExpanded}>\n                {Icon &&\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color='secondary'/></ListItemIcon>\n                }\n                <ListItemText\n                    secondary={this.props.subtitle}\n                    primaryTypographyProps={{color: 'secondary'}}\n                    secondaryTypographyProps={{variant: 'caption'}}\n                >\n                    {this.props.label}\n                </ListItemText>\n                <ListItemSecondaryAction>\n                    <IconButton onClick={this.props.onToggleExpanded}>\n                        {this.props.expanded ? <ExpandLess /> : <ExpandMore />}\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n        )\n\n        return (\n            <>\n                {LinkContent}\n                <Collapse in={this.props.expanded} timeout=\"auto\" style={{backgroundColor}}>\n                    <List dense disablePadding>\n                        {this.props.children}\n                    </List>\n                    <Divider />\n                </Collapse>\n            </>\n        )\n    }\n}\n\nexport type MenuRootItemProps = {\n    icon?: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    selected: boolean\n    href?: string | ((content: React.ReactChild) => React.ReactChild)\n}\n\nexport class MenuRootItem extends React.PureComponent<MenuRootItemProps>{\n    render(){\n        const Icon = this.props.icon\n\n        const LinkContent = (\n            <ListItem divider>\n                {Icon &&\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'secondary'}/></ListItemIcon>\n                }\n                <ListItemText\n                    secondary={this.props.subtitle}\n                    primaryTypographyProps={{color: this.props.selected ? 'primary' : 'secondary'}}\n                    secondaryTypographyProps={{variant: 'caption'}}\n                >\n                    {this.props.label}\n                </ListItemText>\n            </ListItem>\n        )\n\n        return (\n            <>\n                {typeof this.props.href === 'string'\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\n                    : this.props.href\n                        ? this.props.href(LinkContent)\n                        : LinkContent\n                }\n            </>\n        )\n    }\n}\n\nexport type MenuItemProps = {\n    icon?: React.ComponentType<SvgIconProps>\n    label: string\n    selected: boolean\n    href: string | ((content: React.ReactChild) => React.ReactChild)\n}\n\nconst NestedListItem = styled(ListItem)`&&{\n    padding-left: 52px;\n}`\n\nexport class MenuItem extends React.PureComponent<MenuItemProps>{\n    render(){\n        const Icon = this.props.icon\n        const LinkContent = (\n            <NestedListItem>\n                {Icon &&\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'secondary'}/></ListItemIcon>\n                }\n                <ListItemText primaryTypographyProps={{color: this.props.selected ? 'primary' : 'secondary'}}>{this.props.label}</ListItemText>\n            </NestedListItem>\n        )\n\n        return (\n            <>\n                {typeof this.props.href === 'string'\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\n                    : this.props.href(LinkContent)\n                }\n            </>\n        )\n    }\n}","import React from 'react'\n\nexport default class MobileMenu extends React.PureComponent{\n    render(){\n        return (\n            <React.Fragment>\n                {this.props.children}\n            </React.Fragment>\n        )\n    }\n}","import React from 'react'\n\nexport default class TopMenu extends React.PureComponent{\n    render(){\n        return (\n            <React.Fragment>\n                {this.props.children}\n            </React.Fragment>\n        )\n    }\n}","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\n\n// Original icon colors: TODO: Use these?\n// blue: #00B8F3\n// white: #fff\n\nexport type TfsoIconProps = {} & SvgIconProps\n\nexport default React.memo((props: TfsoIconProps) => (\n    <SvgIcon\n        {...props}\n        viewBox='0 0 50.59 30.35'\n    >\n        <path\n            d={'M33.22,9.62A6,6,0,0,0,29.85,13a5.06,5.06,0,0,0-4.56-2.87,5.06,5.06,0,1,1,5.06-5.06A5.06,5.06,0,0,0,33.22,9.62ZM45.53,20.23A5.06,5.06,0,0,1,41,17.36a6,6,0,0,1-3.36,3.37,5.06,5.06,0,0,1,2.87,4.56,5.06,5.06,0,1,0,5.06-5.06Zm-25.3-5.06a5.06,5.06,0,1,0-10.12,0,5.06,5.06,0,0,1-5.06,5.06,5.06,5.06,0,1,0,5.06,5.06,5.06,5.06,0,0,1,9.62-2.19,6,6,0,0,1,3.37-3.37A5.06,5.06,0,0,1,20.23,15.18Zm15.18-5.06a5.06,5.06,0,0,0-5.06,5v.13a5.06,5.06,0,0,1-2.87,4.5,6,6,0,0,1,3.37,3.36,5.06,5.06,0,0,1,4.56-2.87,5.06,5.06,0,0,0,0-10.12ZM25.29,20.23a5.06,5.06,0,1,0,5.06,5.06A5.06,5.06,0,0,0,25.29,20.23Z'}\n        />\n    </SvgIcon>\n))","import React from 'react'\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport styled from 'styled-components/macro'\nimport TfsoIcon from '../icons/Tfso'\n\nconst Root = styled.div`\n  width: 100%;\n`\nconst StyledAppBar = styled(AppBar)`&&{\n  background: white;\n  z-index: ${props => props.theme.mui.zIndex.drawer + 1};  \n}`\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n`\nconst Left = styled.div`&&{\n  flex: 0 0 240px;\n  background-color: ${({theme}) => theme.tfso.colors.tfso};\n  color: #fff;\n  padding-left: 10px;\n  display: flex;\n  align-items: center;\n}`\nconst Right = styled.div`&&{\n  flex: 1;\n}`\n\nconst MenuButton = styled(IconButton)`&&{\n  margin-left: -12px;\n  margin-right: 20px;\n}`\n\nconst ToolbarRight = styled.div`&&{\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}`\n\nexport type TopBarProps = {\n    title: string\n    onMenuToggle?: () => void\n}\n\nexport default class TopBar extends React.PureComponent<TopBarProps, any>{\n    static propTypes = {\n        title: PropTypes.string.isRequired\n    }\n\n    render(){\n        return (\n            <Root>\n                <StyledAppBar position=\"static\" color=\"default\" elevation={1}>\n                    <Wrapper>\n                        <Left>\n                            <TfsoIcon color=\"inherit\" fontSize=\"large\" />\n                            <Typography variant=\"h6\" color=\"inherit\" style={{paddingLeft: 7}}>\n                                {this.props.title}\n                            </Typography>\n                        </Left>\n                        <Right>\n                            <Toolbar variant=\"dense\">\n                                {this.props.onMenuToggle &&\n                                <MenuButton color=\"inherit\" aria-label=\"Open drawer\" onClick={e => this.props.onMenuToggle && this.props.onMenuToggle()}>\n                                    <MenuIcon/>\n                                </MenuButton>\n                                }\n                                <ToolbarRight>\n                                    <div>{this.props.children}</div>\n                                </ToolbarRight>\n                            </Toolbar>\n                        </Right>\n                    </Wrapper>\n                </StyledAppBar>\n            </Root>\n        )\n    }\n}","import React from 'react'\r\n\r\nfunction setTitle(text){\r\n    document.title = text\r\n}\r\n\r\ntype Props = {\r\n    text: string\r\n}\r\n\r\nexport default class DocumentTitle extends React.PureComponent<Props>{\r\n    constructor(props){\r\n        super(props)\r\n        setTitle(props.text)\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.text !== this.props.text){\r\n            setTitle(nextProps.text)\r\n        }\r\n    }\r\n    render(){\r\n        return ''\r\n    }\r\n}","import React from 'react'\nimport styled from 'styled-components/macro'\nimport TopBar from './Topbar'\nimport DocumentTitle from './DocumentTitle'\n\n// Wrap everything\nexport const LayoutWrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column; // Flex header and body from top to bottom\n`\n\n// Put topbar in here\nexport const LayoutHeader = styled.div`\n  \n`\n\n// Put everything below topbar here\nexport const LayoutBody = styled.div`\n  flex: 1; // Fill the rest of the page after header has taken its space\n  min-height: 0;\n  display: flex;\n`\n\n// Put menu here\nexport const LayoutBodyLeft = styled.div`\n\n`\n\n// Put your app here\nexport const LayoutBodyRight = styled.div`\n  flex: 1;\n  min-height: 0;\n  padding: 15px;\n  overflow-y: auto;\n`\n\ntype LayoutProps = {\n    title: string\n    docTitle: string\n    menu: React.ReactNode\n    topMenu: React.ReactNode\n    onMenuToggle: () => void\n}\n\nexport default class Layout extends React.PureComponent<LayoutProps>{\n    render(){\n        return (\n            <LayoutWrapper>\n                <DocumentTitle text={this.props.docTitle} />\n                <LayoutHeader>\n                    <TopBar\n                        title={this.props.title}\n                        onMenuToggle={this.props.onMenuToggle}\n                    >\n                        {this.props.topMenu}\n                    </TopBar>\n                </LayoutHeader>\n                <LayoutBody>\n                    <LayoutBodyLeft>\n                        {this.props.menu}\n                    </LayoutBodyLeft>\n                    <LayoutBodyRight>\n                        {this.props.children}\n                    </LayoutBodyRight>\n                </LayoutBody>\n            </LayoutWrapper>\n        )\n    }\n}\n\ntype LayoutNoMenuProps = {\n    title: string\n    docTitle: string\n    topMenu: React.ReactNode\n}\n\nexport class LayoutNoMenu extends React.PureComponent<LayoutNoMenuProps>{\n    render(){\n        return (\n            <LayoutWrapper>\n                <DocumentTitle text={this.props.docTitle} />\n                <LayoutHeader>\n                    <TopBar\n                        title={this.props.title}\n                    >\n                        {this.props.topMenu}\n                    </TopBar>\n                </LayoutHeader>\n                <LayoutBody>\n                    <LayoutBodyRight>\n                        {this.props.children}\n                    </LayoutBodyRight>\n                </LayoutBody>\n            </LayoutWrapper>\n        )\n    }\n}","import React from 'react'\nimport styled, {DefaultTheme} from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport MuiSnackbarContent from '@material-ui/core/SnackbarContent'\nimport WarningIcon from '@material-ui/icons/Warning'\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n}\n\nconst bgColor = (variant: AlertVariant, palette: DefaultTheme['tfso']['palette']) => {\n    switch(variant){\n    case 'success': return palette.success\n    case 'error': return palette.alert\n    case 'info': return palette.primaryLight\n    case 'warning': return palette.warning\n    }\n}\n\nconst SnackbarContent = ({variant, ...other}) => <MuiSnackbarContent {...other} />\nconst StyledSnack = styled(SnackbarContent)`&&{\n    background-color: ${({variant, theme}) => bgColor(variant, theme.tfso.palette)}\n}`\n\ntype AlertVariant = 'success' | 'warning' | 'error' | 'info'\n\nexport type AlertProps = {\n    message: React.ReactNode\n    onClose(): void\n    variant: AlertVariant\n}\n\nconst Alert = (props: AlertProps) => {\n    const {message, onClose, variant} = props\n    const Icon = variantIcon[variant]\n\n    return (\n        <StyledSnack\n            variant={variant}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" style={{display: 'flex', alignItems: 'center'}}>\n                    <Icon style={{fontSize: 20, opacity: 0.9, marginRight: 10}} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    onClick={onClose}\n                >\n                    <CloseIcon style={{fontSize: 20}} />\n                </IconButton>,\n            ]}\n        />\n    )\n}\n\nAlert.propTypes = {\n    message: PropTypes.node.isRequired,\n    onClose: PropTypes.func.isRequired,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\n}\n\nexport default Alert","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\n\nexport type BigNumberProps = {\n    /**\n     * Choose `light` when you have a dark background, otherwise `dark`\n     * @default light\n     */\n    color?: 'light' | 'dark'\n\n    /**\n     * @default large\n     */\n    size?: 'medium' | 'large'\n    children: string | number\n}\n\nconst fontSizeMap: {[P in Required<BigNumberProps>['size']]: number} = {\n    medium: 32,\n    large: 48\n}\n\nconst defaultProps: Required<Pick<BigNumberProps, 'color' | 'size'>> = {\n    color: 'light',\n    size: 'large',\n}\n\nconst wrapper = ({size, color, ...props}: Required<BigNumberProps>) => <div {...props} />\n// TODO: These should be on the BigNumber component instead..\nwrapper.defaultProps = defaultProps\nwrapper.propTypes = {\n    color: PropTypes.oneOf(['light', 'dark']),\n    size: PropTypes.oneOf(['medium', 'large']),\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]).isRequired\n}\n\nconst BigNumber = styled(wrapper)`&&{\n    font-size: ${({theme, size = defaultProps.size}) => theme.mui.typography.pxToRem(fontSizeMap[size])};\n    line-height: normal;\n    letter-spacing: 0.08em;\n    color: ${({color = defaultProps.color}) => color === 'light' ? '#FFFFFF' : '#404040'};\n    white-space: nowrap\n}`\n\nexport default BigNumber as React.ComponentType<BigNumberProps>","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\nimport Slide from '@material-ui/core/Slide'\n\nexport type ConfirmationDialogProps = {\n    open: boolean\n    title?: string\n    message: string\n    okButtonText: string\n    cancelButtonText: string\n    onOk: () => void\n    onCancel: () => void\n}\n\nconst TransitionComponent = props => <Slide direction='up' {...props} />\n\nconst ConfirmationDialog = (props: ConfirmationDialogProps) => {\n    const {open, onCancel, onOk, title, message, okButtonText, cancelButtonText} = props\n    return (\n        <Dialog\n            TransitionComponent={TransitionComponent}\n            keepMounted={false}\n            open={open}\n            onClose={onCancel}\n            maxWidth={'xs'}\n        >\n            {title && <DialogTitle>{title}</DialogTitle>}\n            <DialogContent>{message}</DialogContent>\n            <DialogActions>\n                <Button onClick={onCancel} color=\"primary\">{cancelButtonText}</Button>\n                <Button onClick={onOk} color=\"secondary\">{okButtonText}</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nConfirmationDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    title: PropTypes.string,\n    message: PropTypes.string.isRequired,\n    okButtonText: PropTypes.string.isRequired,\n    cancelButtonText: PropTypes.string.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n}\n\nexport default ConfirmationDialog","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\n\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport Paper, {PaperProps} from '@material-ui/core/Paper'\n\nconst BackgroundPaper = ({background, ...props}: { background: string } & PaperProps) => (<Paper {...props} />)\nconst WidgetContainer = styled(BackgroundPaper)`&&{\n    background: ${({background}) => background};\n    width: 100%;\n    height: 100%;\n}`\n\ntype WidgetSize = 'small' | 'medium' | 'large'\n\ntype WidgetBaseProps = {\n    index: number\n    background?: string\n    onOrder: (index: number, sourceIndex: number) => void\n    children: React.ReactChild // allow only one child\n}\n\ntype DragDropData = {\n    index: number\n}\n\ntype WidgetState = {\n    dragging: boolean\n    dragOver: boolean\n}\n\nclass Widget extends React.PureComponent<WidgetBaseProps, WidgetState>{\n    static defaultProps = {\n        background: 'inherit'\n    }\n    static propTypes = {\n        index: PropTypes.number.isRequired,\n        background: PropTypes.string,\n        onOrder: PropTypes.func.isRequired,\n        children: PropTypes.node.isRequired\n    }\n\n    state: WidgetState = {\n        dragging: false,\n        dragOver: false,\n    }\n\n    onDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        e.stopPropagation()\n        e.preventDefault()\n\n        try{\n            const data = JSON.parse(e.dataTransfer.getData('text')) as DragDropData\n            if(data.index !== this.props.index){ this.props.onOrder(this.props.index, data.index) }\n        }catch(err){ }\n        this.setState({dragOver: false})\n    }\n\n    onDragStart = (e: React.DragEvent<HTMLDivElement | SVGSVGElement>) => {\n        const dragData: DragDropData = {\n            index: this.props.index\n        }\n        e.dataTransfer.setData('text', JSON.stringify(dragData))\n        this.setState({dragging: true})\n    }\n\n    onDragEnd = (e: React.DragEvent<HTMLDivElement | SVGSVGElement>) => {\n        this.setState({dragging: false})\n    }\n\n    onDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n        this.setState({dragOver: true})\n    }\n\n    onDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault()\n    }\n\n    onDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n        this.setState({dragOver: false})\n    }\n\n    render(){\n        const {children, background} = this.props\n\n        return (\n            <WidgetContainer\n                background={background || 'inherit'}\n                elevation={0}\n                style={{\n                    // TODO: other design??\n                    border: this.state.dragOver ? '2px dashed #333' : 'unset',\n                }}\n                draggable\n                onDragStart={this.onDragStart}\n                onDragEnd={this.onDragEnd}\n                onDragEnter={this.onDragEnter}\n                onDragOver={this.onDragOver}\n                onDragLeave={this.onDragLeave}\n                onDrop={this.onDrop}\n            >\n                {children}\n            </WidgetContainer>\n        )\n    }\n}\n\nconst sizeMap: {[P in WidgetSize]: {cols: number, rows: number}} = {\n    small: {cols: 1, rows: 0.5},\n    medium: {cols: 2, rows: 1},\n    large: {cols: 4, rows: 2}\n}\n\nexport type WidgetProps = {\n    size: WidgetSize\n    minSize?: WidgetSize\n} & Pick<WidgetBaseProps, 'background' | 'children'>\n\nexport type DashBoardProps = {\n    widgets: Array<WidgetProps>\n    onChangeOrder: (widgets: Array<WidgetProps>) => void\n    onRemove: (something) => void\n    spacing?: number // GridListProps['spacing']\n    children?: undefined // don't allow any children\n}\n\nexport default class DashBoard extends React.PureComponent<DashBoardProps>{\n    static defaultProps = {\n        spacing: 16\n    }\n\n    static propTypes = {\n        onChangeOrder: PropTypes.func.isRequired,\n        onRemove: PropTypes.func.isRequired,\n        spacing: PropTypes.number,\n        widgets: PropTypes.arrayOf(PropTypes.shape({\n            background: PropTypes.string,\n            children: PropTypes.node.isRequired,\n            minSize: PropTypes.oneOf(['small', 'medium', 'large']),\n            size: PropTypes.oneOf(['small', 'medium', 'large']).isRequired\n        })),\n        // children: PropTypes. //TODO: Check that children is undefined\n    }\n\n    onOrderArray = (target: number, source: number) => {\n        const widgets = [...this.props.widgets]\n        widgets.splice(target, 0, widgets.splice(source, 1)[0])\n        this.props.onChangeOrder(widgets)\n    }\n\n    render(){\n        return (\n            <GridList\n                spacing={this.props.spacing}\n                cols={4}\n                cellHeight={250}\n                style={{width: '100%'}}\n            >\n                {this.props.widgets.map(({size, ...widget}, i) => (\n                    <GridListTile key={i} {...sizeMap[size]} >\n                        <Widget {...widget}\n                            index={i}\n                            onOrder={this.onOrderArray}\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        )\n    }\n}","import React from 'react'\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport SearchIcon from '@material-ui/icons/Search'\n\nexport type SearchFieldProps = TextFieldProps\n\ntype State = {\n    editing: boolean\n}\n\nexport default class SearchField extends React.PureComponent<SearchFieldProps, State>{\n    static defaultProps = {\n        placeholder: 'Search',\n        margin: 'dense',\n        InputProps: {\n            startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>\n        }\n    }\n\n    state: State = {\n        editing: false\n    }\n\n    onBlur = (e: React.EventHandler<any>) => {\n        this.setState({editing: false})\n        const {onBlur} = this.props\n        onBlur && onBlur(e)\n    }\n\n    onFocus = (e: React.EventHandler<any>) => {\n        this.setState({editing: true})\n        const {onFocus} = this.props\n        onFocus && onFocus(e)\n    }\n\n    render(){\n        return (\n            <TextField\n                fullWidth={this.state.editing}\n                {...this.props}\n                onBlur={this.onBlur}\n                onFocus={this.onFocus}\n            />\n        )\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\n\ntype Props = {\n    value: string\n    onChange: (value: string) => void\n    dirty?: boolean\n    enableDirtyCheck?: boolean\n}\n\ntype State = {\n    editing: boolean\n    value: string\n    prevProps: Props\n}\n\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>\n\nfunction handleEvent(event: React.KeyboardEvent<HTMLDivElement>){\n    event.preventDefault()\n    event.stopPropagation()\n    // the above only prevents other synthetic events, if we want to prevent global listeners too, we need to stop the propagation on the native event as well\n    event.nativeEvent.stopImmediatePropagation()\n}\n\nexport type TextFieldEditorProps = Props & Partial<Omit<TextFieldProps, 'value' | 'onChange'>>\n\nexport default class TextFieldEditor extends React.PureComponent<TextFieldEditorProps, State>{\n    static propTypes = {\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        dirty: PropTypes.bool\n    }\n\n    _inputRef: React.RefObject<HTMLInputElement> = React.createRef()\n\n    state: State = {\n        editing: false,\n        value: this.props.value,\n        prevProps: this.props\n    }\n\n    static getDerivedStateFromProps(props: Readonly<TextFieldEditorProps>, state: Readonly<State>){\n        const prevProps = state.prevProps\n\n        if(prevProps.value !== props.value){ return {value: props.value, prevProps: props} }\n\n        return {prevProps: props}\n    }\n\n    blur = () => { this._inputRef.current && this._inputRef.current.blur() }\n\n    onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n        this.props.onKeyDown && this.props.onKeyDown(event)\n        if(event.defaultPrevented){ return }\n\n        if(event.ctrlKey){\n            switch(event.key){\n            case 's':\n            // this event should not be 'handled' here (eg. invoke handleEvent(event)), control may want to perform other actions on ctrl+s\n            // It should behave as a save changes in the control as well however\n                this.blur()\n                break\n            case 'z':\n                handleEvent(event)\n                this.setState({editing: false, value: this.props.value}, this.blur)\n                break\n            default: break\n            }\n        }else{\n            switch(event.key){\n            case 'Enter':\n                if(this.props.multiline){ break }\n                handleEvent(event)\n                this.blur()\n                break\n            case 'Escape':\n                handleEvent(event)\n                this.setState({editing: false, value: this.props.value}, this.blur)\n                break\n            default: break\n            }\n        }\n    }\n\n    onFocus = (e: React.EventHandler<any>) => {\n        this.setState({editing: true})\n        this.props.onFocus && this.props.onFocus(e)\n    }\n\n    onBlur = (e: React.EventHandler<any>) => {\n        if(!this.state.editing){ return } // The method should be safe to call multiple times, but we don't want to raise the event multiple times if we dont need to\n\n        this.props.onChange(this.state.value)\n        this.setState({editing: false})\n        this.props.onBlur && this.props.onBlur(e)\n    }\n\n    onChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement | HTMLSelectElement>) => {\n        const value = event.target.value\n        this.setState({value, editing: true})\n    }\n\n    render(){\n        const {dirty: dirtyProp, onChange: onChangeProp, value: valueProp, enableDirtyCheck, ...otherProps} = this.props\n        const {value} = this.state\n\n        const isDirty = enableDirtyCheck ? this.props.value !== value || !!dirtyProp : !!dirtyProp\n\n        return (\n            <TextField\n                {...otherProps as any}\n                inputRef={this._inputRef}\n                value={value}\n                onFocus={this.onFocus}\n                onChange={this.onChange}\n                onBlur={this.onBlur}\n                onKeyDown={this.onKeyDown}\n                InputProps={{style: {fontStyle: isDirty ? 'italic' : 'normal'}}}\n            />\n        )\n    }\n}","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport {withTheme, DefaultTheme, WithTheme} from 'styled-components'\n\nimport TrendingUp from '@material-ui/icons/TrendingUp'\nimport TrendingFlat from '@material-ui/icons/TrendingFlat'\nimport TrendingDown from '@material-ui/icons/TrendingDown'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\n\nexport type TrendingProps = {\n    variant: 'up' | 'down' | 'flat'\n} & SvgIconProps\n\nconst iconMap: {[P in TrendingProps['variant']]: React.ComponentType<SvgIconProps>} = {\n    up: TrendingUp,\n    flat: TrendingFlat,\n    down: TrendingDown,\n}\n\nconst getColor = (variant: TrendingProps['variant'], theme: DefaultTheme) => {\n    switch(variant){\n    case 'up': return theme.tfso.palette.success\n    case 'down': return theme.tfso.palette.warning\n    case 'flat': return theme.tfso.palette.alert\n    default: return undefined\n    }\n}\n\nconst trending = ({variant, theme, ...iconProps}: TrendingProps & WithTheme) => {\n    const Icon = iconMap[variant]\n    const nativeColor = getColor(variant, theme)\n    return (\n        <Icon\n            nativeColor={nativeColor}\n            {...iconProps}\n        />\n    )\n}\n\ntrending.propTypes = {\n    variant: PropTypes.oneOf(['up', 'down', 'flat']).isRequired\n}\n\nexport default React.memo(withTheme(trending))","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\n// https://www.w3schools.com/charsets/ref_emoji.asp\nconst emojis = {\n    middleFinger: <>&#128405;</>,\n    indexFinger: <>&#128070;</>,\n    flex: <>&#128170;</>,\n    brokenHeart: <>&#128148;</>,\n    perfect: <>&#128076;</>,\n    thumbsUp: <>&#128077;</>,\n    thumbsDown: <>&#128078;</>,\n    clap: <>&#128079;</>,\n    heart: <>&#128152;</>,\n    fire: <>&#128293;</>,\n    bulb: <>&#128161;</>,\n    crap: <>&#128169;</>,\n    thinking: <>&#129300;</>,\n    rocket: <>&#128640;</>,\n}\n\nexport type EmojiProps = {\n    variant: keyof typeof emojis\n}\n\nconst Emoji = (props: EmojiProps) => emojis[props.variant]\n\nEmoji.propTypes = {\n    variant: PropTypes.oneOf(Object.keys(emojis))\n}\n\nexport default Emoji","import React from 'react'\nimport PropTypes from 'prop-types'\n\ntype Props = {\n    beforeShow?: any\n    delayMs?: number\n    show?: boolean\n    children: React.ReactNode\n}\n\ntype State = {\n    show: boolean\n}\n\nexport default class Delay extends React.PureComponent<Props, State>{\n    static propTypes = {\n        beforeShow: PropTypes.node,\n        delayMs: PropTypes.number,\n        show: PropTypes.bool,\n        children: PropTypes.node.isRequired\n    }\n\n    _timer: any = null\n\n    constructor(props){\n        super(props)\n        this.state = {\n            show: false\n        }\n    }\n    componentDidMount(){\n        this.setState({show: false})\n        this._timer = setTimeout(() => {\n            this.setState({show: true})\n        }, this.props.delayMs || 1000)\n    }\n    componentWillUnmount(){\n        clearTimeout(this._timer)\n    }\n    render(){\n        if(this.props.show || this.state.show){\n            return this.props.children\n        }\n\n        return this.props.beforeShow || null\n    }\n}","import React, {HTMLProps} from 'react'\nimport PropTypes from 'prop-types'\n\ntype Props = {\n    children: (hover: boolean, ref: React.RefObject<any>) => React.ReactNode\n} & HTMLProps<HTMLDivElement>\n\ntype State = {\n    hover: boolean\n}\n\nexport default class Hoverable extends React.PureComponent<Props, State>{\n    private ref: React.RefObject<any>\n\n    static propTypes = {\n        children: PropTypes.func.isRequired\n    }\n\n    constructor(props){\n        super(props)\n\n        this.ref = React.createRef()\n\n        this.state = {\n            hover: false\n        }\n    }\n\n    toggleHover = () => {\n        this.setState(state => ({hover: !state.hover}))\n    }\n\n    hoverOn = () => this.setState({hover: true})\n    hoverOff = () => this.setState({hover: false})\n\n    render(){\n        const {children, ...restProps} = this.props\n\n        return (\n            <div\n                ref={this.ref}\n                onMouseEnter={this.hoverOn}\n                onMouseLeave={this.hoverOff}\n                {...restProps}\n            >\n                {children(this.state.hover, this.ref)}\n            </div>\n        )\n    }\n}","import React, {HTMLProps} from 'react'\nimport PropTypes from 'prop-types'\n\ntype Props = {\n    children: (tabIndex: number, next: () => void, prev: () => void) => React.ReactNode\n    index?: number\n    length?: number\n} & HTMLProps<HTMLDivElement>\n\ntype State = {\n    index: number\n}\n\nexport default class Wizard extends React.PureComponent<Props, State>{\n    static propTypes = {\n        children: PropTypes.func.isRequired,\n        index: PropTypes.number,\n        length: PropTypes.number\n    }\n\n    constructor(props){\n        super(props)\n        this.state = {index: props.index || 0}\n    }\n\n    static getDerivedStateFromProps(nextProps){\n        if(nextProps.hasOwnProperty('index')){\n            return {index: nextProps.index}\n        }\n        return null\n    }\n\n    next = () => this.setState(state => {\n        if(this.props.length && state.index + 1 >= this.props.length) return state\n        return {index: state.index + 1}\n    })\n    prev = () => this.setState(state => {\n        if(state.index - 1 < 0) return state\n        return {index: state.index - 1}\n    })\n\n    render(){\n        const {children, ...restProps} = this.props\n\n        return (\n            <div {...restProps}>\n                {children(this.state.index, this.next, this.prev)}\n            </div>\n        )\n    }\n}","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Styled, {css} from 'styled-components/macro'\n\nexport type TfsoLoadingIconProps = {\n    /**\n     * @default infinite\n     */\n    once?: boolean\n} & SvgIconProps\n\nconst TfsoLoadingIconWrapper = ({once, ...other}: TfsoLoadingIconProps) => <SvgIcon {...other}/>\n\nconst path = css`\n    opacity: 1;\n    animation-delay: 1.5s;\n`\nconst StyledSvgIcon: React.ComponentType<SvgIconProps> = Styled(TfsoLoadingIconWrapper)`&&{\n    #path1{\n        ${path}\n        animation: fade-in1 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path2{\n        ${path}\n        animation: fade-in2 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path3{\n        ${path}\n        animation: fade-in3 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path4{\n        ${path}\n        animation: fade-in4 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    #path5{\n        ${path}\n        animation: fade-in5 1.5s ${({once}) => once ? 1 : 'infinite'}\n    }\n    @keyframes fade-in1 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 1; }\n        40% { opacity: 1; }\n        60% { opacity: 1; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in2 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 1; }\n        60% { opacity: 1; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in3 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 0.2; }\n        60% { opacity: 1; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in4 {\n        0%   { opacity:0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 0.2; }\n        60% { opacity: 0.2; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n    @keyframes fade-in5 {\n        0%   { opacity: 0.2; }\n        20% { opacity: 0.2; }\n        40% { opacity: 0.2; }\n        60% { opacity: 0.2; }\n        80% { opacity: 1; }\n        100% {opactiy: 1}\n    }\n}` as any // seems like returntype of styled-components adds string as a type of _ref.. dunnp why\n\nexport default React.memo((props: TfsoLoadingIconProps) => (\n    <StyledSvgIcon\n        {...props}\n        viewBox=\"0 0 37 23\"\n        fillRule='evenodd'\n        strokeWidth=\"1\"\n    >\n        <path d=\"M21.79 9.81C21.17789 8.5323532 19.886707 7.7195303 18.47 7.72 16.444136 7.7143752 14.803816 6.0724096 14.800223 4.0465408 14.79663 2.020672 16.431115 0.37289845 18.456947 0.36008776 20.482778 0.34727707 22.137972 1.9742478 22.16 4c-0.01782 1.4288443 0.793121 2.7388262 2.08 3.36-1.120033 0.4431782-2.006822 1.3299671-2.45 2.45l0 0z\" id=\"path5\"/>\n        <path d=\"m33.24 15.09c-1.427527 0.01209-2.733245-0.802525-3.35-2.09-0.443178 1.120033-1.329967 2.006822-2.45 2.45 1.275973 0.613987 2.088053 1.903991 2.09 3.32 0 2.032408 1.647592 3.68 3.68 3.68 2.032408 0 3.68-1.647592 3.68-3.68 0-2.032408-1.647592-3.68-3.68-3.68l0.03 0 0 0z\" id=\"path4\"/>\n        <path d=\"m14.79 11.41c0-2.0351693-1.649831-3.685-3.685-3.685-2.0351693 0-3.685 1.6498307-3.685 3.685 0 2.032408-1.6475921 3.68-3.68 3.68-2.0324079 0-3.68 1.647592-3.68 3.68 0 2.032408 1.6475921 3.68 3.68 3.68 2.0324079 0 3.68-1.647592 3.68-3.68-0.00119-1.719312 1.1882715-3.210312 2.864877-3.591141 1.676605-0.380829 3.39346 0.450022 4.135123 2.001141 0.443178-1.120033 1.329967-2.006822 2.45-2.45-1.27208-0.616837-2.079908-1.906255-2.08-3.32l0 0 0 0z\" id=\"path2\"/>\n        <path d=\"m25.84 7.73c-2.016889-0.0001192-3.658077 1.6232303-3.68 3.64l0 0.09c-0.02094 1.397916-0.830116 2.663946-2.09 3.27 1.120033 0.443178 2.006822 1.329967 2.45 2.45 0.613987-1.275973 1.903991-2.088053 3.32-2.09 2.035169 0 3.685-1.649831 3.685-3.685 0-2.0351693-1.649831-3.685-3.685-3.685l0 0.01 0 0z\" id=\"path3\"/>\n        <path d=\"m18.47 15.1c-2.031097 0.0055-3.673671 1.655547-3.669994 3.686649 0.0037 2.031101 1.652215 3.675171 3.683318 3.673336C20.514428 22.45815 22.159993 20.811104 22.16 18.78 22.162665 17.800536 21.774754 16.860421 21.082167 16.167833 20.389579 15.475246 19.449463 15.087335 18.47 15.09l0 0.01 0 0z\" id=\"path1\"/>\n    </StyledSvgIcon>\n))\n","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Link from '@material-ui/core/Link'\n\nexport const MaterialUiIcon = React.memo((props: SvgIconProps) => (\n    <SvgIcon {...props} viewBox=\"0 0 600 476.6\">\n        <path d=\"m0 259.8v-259.8l225 129.9v86.6l-150-86.6v173.2z\" fill=\"#00b0ff\"/>\n        <path d=\"m225 129.9 225-129.9v259.8l-150 86.6-75-43.3 150-86.6v-86.6l-150 86.6z\" fill=\"#0081cb\"/>\n        <path d=\"m225 303.1v86.6l150 86.6v-86.6z\" fill=\"#00b0ff\"/>\n        <path d=\"m375 476.3 225-129.9v-173.2l-75 43.3v86.6l-150 86.6zm150-346.4v-86.6l75-43.3v86.6z\" fill=\"#0081cb\"/>\n    </SvgIcon>\n))\n\nexport type MaterialUiLinkProps = {\n    iconProps?: SvgIconProps\n}\n\nconst MaterialUiLink = (props: MaterialUiLinkProps) => (\n    <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\n        <MaterialUiIcon fontSize='large' {...props.iconProps as any} />\n    </Link>\n)\n\nexport default MaterialUiLink\n","import React from 'react'\n\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Link from '@material-ui/core/Link'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nexport const GitHubIcon = React.memo((props: SvgIconProps) => (\n    <SvgIcon {...props}>\n        <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\n    </SvgIcon>\n))\n\nexport type GitHubLinkProps = {\n    path?: string\n    tooltip?: string\n    iconProps?: SvgIconProps\n}\n\nconst GitHubLink = (props: GitHubLinkProps) => {\n    return (\n        <Link href={`https://github.com/tfso/react-tfso-components${props.path ? `/${props.path}` : ''}`} target='_blank' rel='noreferrer' >\n            <Tooltip title={props.tooltip ? props.tooltip : 'View on GitHub'}>\n                <GitHubIcon fontSize={props.iconProps && props.iconProps.fontSize || 'large'} {...props.iconProps as any} />\n            </Tooltip>\n        </Link>\n    )\n}\n\nexport default GitHubLink\n","import React from 'react'\n\nimport styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Zoom from '@material-ui/core/Zoom'\nimport Link from '@material-ui/core/Link'\n\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\nimport { MaterialUiIcon } from '../components/MaterialUiLink'\nimport { GitHubIcon } from '../components/GitHubLink'\n\n// TODO: this could be a Util HOC component\nconst CenterTop = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    flex-direction: column;\n    height: 100%;\n`\n\nconst Home = () => {\n    return (\n        <CenterTop>\n            <TfsoLoading once color='primary' fontSize='inherit' style={{fontSize: 400}} />\n            <Typography variant='h3' color='primary' paragraph>\n                REACT-TFSO-COMPONENTS\n            </Typography>\n            <Typography variant='h6' align='center' color='textSecondary' paragraph>\n                Something something useful description something dark side (TODO) <br />\n                Supplementary React components based on Material-UI with Tfso styling<br />\n            </Typography>\n            <Grid container justify='center'>\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\n                    <Zoom in appear style={{transitionDelay: '250ms'}} >\n                        <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\n                            <MaterialUiIcon style={{fontSize: 150}} />\n                        </Link>\n                    </Zoom>\n                    <Zoom in appear style={{transitionDelay: '750ms'}} >\n                        <Typography variant='h6'>\n                            Find standard components <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>here</Link>\n                        </Typography>\n                    </Zoom>\n                </Grid>\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\n                    <Zoom in appear style={{transitionDelay: '500ms'}}>\n                        <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >\n                            <GitHubIcon style={{fontSize: 150}} color='primary' />\n                        </Link>\n                    </Zoom>\n                    <Zoom in appear style={{transitionDelay: '1000ms'}} >\n                        <Typography variant='h6'>\n                            View source on <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >GitHub</Link>\n                        </Typography>\n                    </Zoom>\n                </Grid>\n            </Grid>\n        </CenterTop>\n    )\n}\n\nexport default Home","import React from 'react'\nimport Prism from 'prismjs'\n\n// Load languages\nimport 'prismjs/components/prism-clike'\nimport 'prismjs/components/prism-css'\nimport 'prismjs/components/prism-markup'\nimport 'prismjs/components/prism-javascript'\nimport 'prismjs/components/prism-typescript'\nimport 'prismjs/components/prism-jsx'\nimport 'prismjs/components/prism-tsx'\n\n// Load style\nimport 'prismjs/themes/prism.css'\n\ntype CodeProps = {\n    language: 'js' | 'ts' | 'tsx' | 'jsx'\n    children: React.ReactNode\n}\n\nexport class Code extends React.PureComponent<CodeProps>{\n    _ref: React.RefObject<HTMLPreElement> = React.createRef()\n\n    componentDidMount(){\n        this.highlight()\n    }\n\n    componentDidUpdate(){\n        this.highlight()\n    }\n\n    highlight = () => {\n        if(!this._ref.current){ return }\n        Prism.highlightElement(this._ref.current!)\n    }\n\n    render(){\n        return (\n            <pre ref={this._ref} className={`language-${this.props.language}`}>\n                <code className={`language-${this.props.language}`}>\n                    {this.props.children}\n                </code>\n            </pre>\n        )\n    }\n}","import React, {ReactChild} from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport Divider from '@material-ui/core/Divider'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport CodeIcon from '@material-ui/icons/Code'\n\nimport GitHubLink from './GitHubLink'\nimport {Code} from './code'\nimport {Anchor} from './Link'\n\nexport const Demo = (props) => <Paper style={{padding: 15, marginBottom: 30}}>{props.children}</Paper>\n\nexport type DemoTitleProps = {\n    children: string\n    /**\n     * The path to the Demo component. `src/demo/demos/` will be appended in front of the path\n     */\n    demoPath?: string\n\n    /**\n     * The path to the Implementation of the component. `src/lib/` will be appended in front of the path\n     */\n    srcPath?: string\n}\nexport const DemoTitle = (props: DemoTitleProps) => {\n    return (\n        <Grid container justify='space-between' alignItems='baseline' >\n            <Grid item>\n                <Typography variant=\"h5\">\n                    {props.children}\n                </Typography>\n            </Grid>\n            {props.srcPath || props.demoPath\n                ? <Grid item xs={2} container spacing={16} justify='flex-end'>\n                    {props.demoPath && <Grid item><GitHubLink iconProps={{fontSize: 'default', color: 'secondary'}} path={`blob/master/src/demo/demos/${props.demoPath}`} tooltip={`View demo source for ${props.children}`} /></Grid>}\n                    {props.srcPath && <Grid item><GitHubLink iconProps={{fontSize: 'default', color: 'primary'}} path={`blob/master/src/lib/${props.srcPath}`} tooltip={`View source for ${props.children}`}/></Grid> }\n                </Grid>\n                : null\n            }\n        </Grid>\n    )\n}\nexport const DemoHelp = (props) => <Typography variant='subtitle1' paragraph>{props.children}</Typography>\nexport const DemoContent = (props: { children: Array<ReactChild> | ReactChild}) => (\n    <div style={{marginTop: 30}}>\n        <Typography variant=\"subtitle1\" >Example</Typography>\n        <Divider />\n        <br />\n        <Grid container spacing={16} alignItems='center'>\n            {props.children && Array.isArray(props.children)\n                ? props.children.map((child, i) => (\n                    <Grid item key={i} xs={i === 0 ? 12 : false}>\n                        {child}\n                    </Grid>\n                ))\n                : <Grid item xs={12} >{props.children}</Grid>\n            }\n        </Grid>\n    </div>\n)\n\nexport const DemoProps = (props) => (\n    <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography variant='h6'>Props</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Type</TableCell>\n                        <TableCell>Default</TableCell>\n                        <TableCell>Description</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.children}\n                </TableBody>\n            </Table>\n        </ExpansionPanelDetails>\n    </ExpansionPanel>\n)\n\nexport type DemoPropProps = {\n    name: string\n    type: string\n    default?: string\n    description?: string\n}\n\nexport const DemoProp = (props: DemoPropProps) => (\n    <TableRow>\n        <TableCell><code>{props.name}</code></TableCell>\n        <TableCell><code>{props.type}</code></TableCell>\n        <TableCell><code>{props.default}</code></TableCell>\n        <TableCell><Typography>{props.description}</Typography></TableCell>\n    </TableRow>\n)\n\ntype DemoCodeProps = Code['props']\nexport const DemoCode = (props: DemoCodeProps) => (\n    <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<CodeIcon />}>\n            <Typography variant='h6'>{`View Demo (${props.language})`}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n            <Code {...props} />\n        </ExpansionPanelDetails>\n    </ExpansionPanel>\n)","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\nimport Tfso, {TfsoIconProps} from '../../lib/icons/Tfso'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\n\nexport default class Icons extends React.PureComponent{\n    render(){\n        return (\n            <>\n                <TfsoDemo />\n                <TfsoLoadingDemo />\n            </>\n        )\n    }\n}\n\ntype TfsoLogoDemoState = {\n    color: TfsoIconProps['color']\n    fontSize: TfsoIconProps['fontSize']\n    nativeColor: TfsoIconProps['nativeColor']\n}\n\nclass TfsoDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\n    state:TfsoLogoDemoState = {\n        color: 'primary',\n        fontSize: 'large',\n        nativeColor: ''\n    }\n\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/Tfso.tsx'>Tfso</DemoTitle>\n                <DemoHelp>Tfso logo icon</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\n                </DemoProps>\n                <DemoContent>\n                    <Tfso\n                        color={this.state.color}\n                        fontSize={this.state.fontSize}\n                        nativeColor={this.state.nativeColor}\n                    />\n                    <TextField\n                        select\n                        label='color'\n                        value={this.state.color}\n                        onChange={this.handleChange('color')}\n                    >\n                        <MenuItem value='inherit' >inherit</MenuItem>\n                        <MenuItem value='primary' >primary</MenuItem>\n                        <MenuItem value='secondary' >secondary</MenuItem>\n                        <MenuItem value='default' >default</MenuItem>\n                        <MenuItem value='action' >action</MenuItem>\n                        <MenuItem value='disabled' >disabled</MenuItem>\n                        <MenuItem value='error' >error</MenuItem>\n                    </TextField>\n                    <TextField\n                        select\n                        label='fontSize'\n                        value={this.state.fontSize}\n                        onChange={this.handleChange('fontSize')}\n                    >\n                        <MenuItem value='small'>small</MenuItem>\n                        <MenuItem value='default'>default</MenuItem>\n                        <MenuItem value='large'>large</MenuItem>\n\n                    </TextField>\n                    <TextField\n                        label='nativeColor'\n                        placeholder='#00B8F3'\n                        value={this.state.nativeColor}\n                        onChange={this.handleChange('nativeColor')}\n                    />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}\n\nclass TfsoLoadingDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\n    state:TfsoLogoDemoState = {\n        color: 'primary',\n        fontSize: 'large',\n        nativeColor: ''\n    }\n\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/TfsoLoading.tsx'>Tfso Loading</DemoTitle>\n                <DemoHelp>Tfso logo loading icon</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='once' type='boolean' default='false' description='If true, the icon will animate once'/>\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\n                </DemoProps>\n                <DemoContent>\n                    <TfsoLoading\n                        color={this.state.color}\n                        fontSize={this.state.fontSize}\n                        nativeColor={this.state.nativeColor}\n                    />\n                    <TextField\n                        select\n                        label='color'\n                        value={this.state.color}\n                        onChange={this.handleChange('color')}\n                    >\n                        <MenuItem value='inherit' >inherit</MenuItem>\n                        <MenuItem value='primary' >primary</MenuItem>\n                        <MenuItem value='secondary' >secondary</MenuItem>\n                        <MenuItem value='default' >default</MenuItem>\n                        <MenuItem value='action' >action</MenuItem>\n                        <MenuItem value='disabled' >disabled</MenuItem>\n                        <MenuItem value='error' >error</MenuItem>\n                    </TextField>\n                    <TextField\n                        select\n                        label='fontSize'\n                        value={this.state.fontSize}\n                        onChange={this.handleChange('fontSize')}\n                    >\n                        <MenuItem value='small'>small</MenuItem>\n                        <MenuItem value='default'>default</MenuItem>\n                        <MenuItem value='large'>large</MenuItem>\n                    </TextField>\n                    <TextField\n                        label='nativeColor'\n                        placeholder='#00B8F3'\n                        value={this.state.nativeColor}\n                        onChange={this.handleChange('nativeColor')}\n                    />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import {createHashHistory} from 'history'\n\nconst history = createHashHistory({\n    basename: '',\n    hashType: 'slash',\n})\nexport default history","import React from 'react'\n\nimport history from '../history'\n\nimport MuiLink, {LinkProps as MuiLinkProps} from '@material-ui/core/Link'\nimport styled from 'styled-components/macro'\n\nexport type LinkProps = {\n    to?: string\n    children: React.ReactNode\n} & MuiLinkProps\n\nexport default class Link extends React.PureComponent<LinkProps>{\n    onClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n        this.props.onClick && this.props.onClick(event)\n\n        if(event.defaultPrevented || !this.props.to){\n            return\n        }\n        event.preventDefault()\n        history.push(this.props.to.toLowerCase())\n    }\n\n    render(){\n        const {to, href, underline, ...other} = this.props\n        return <MuiLink\n            {...other}\n            href={to && to.toLowerCase() || href}\n            underline={underline || 'none'}\n            rel={this.props.target === '_blank' ? 'noreferrer' : undefined}\n            onClick={this.onClick}\n        />\n    }\n}\n\nconst AnchorLink = styled(Link)`&&{\n    opacity: 0.2;\n    :hover{\n        opacity: 1;\n    }\n}`\n\nconst getPage = () => window.location.hash.split('/')[1]\nexport const Anchor = (props: {id: string}) => {\n    const id = `/${getPage()}/${props.id.toLowerCase()}`\n    return (\n        <AnchorLink id={id} to={id}>#</AnchorLink>\n    )\n}","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport Typography, {TypographyProps} from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Divider from '@material-ui/core/Divider'\n\nimport {Code} from '../components/code'\nimport Link, {Anchor} from '../components/Link'\n\n// https://www.w3schools.com/charsets/ref_emoji.asp\nconst emojis = {\n    middleFinger: <>&#128405;</>,\n    indexFinger: <>&#128070;</>,\n    flex: <>&#128170;</>,\n    brokenHeart: <>&#128148;</>,\n    perfect: <>&#128076;</>,\n    thumbsUp: <>&#128077;</>,\n    thumbsDown: <>&#128078;</>,\n    clap: <>&#128079;</>,\n    heart: <>&#128152;</>,\n    fire: <>&#128293;</>,\n    bulb: <>&#128161;</>,\n    crap: <>&#128169;</>,\n    thinking: <>&#129300;</>,\n    rocket: <>&#128640;</>\n}\n\nconst Section = styled.div`&&{\n    margin-top: ${({theme}) => theme.mui.spacing.unit * 4}px;\n    margin-bottom: ${({theme}) => theme.mui.spacing.unit * 2}px;\n}`\n\nconst SubHeading = (props: TypographyProps) => <Typography variant='h4' paragraph {...props} />\nconst Paragraph = (props: TypographyProps) => <Typography variant='body1' paragraph {...props} component='div'/>\nconst Tip = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\n    <Card elevation={0}>\n        <CardContent>\n            <Typography variant='h6'>Why?</Typography>\n            <Typography variant='body1' component='div'>{props.children}</Typography>\n        </CardContent>\n    </Card>\n    <br />\n</>)\n\nconst Guideline = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\n    <Card elevation={0}>\n        <CardContent>\n            <Typography variant='body1' component='div'>{props.children}</Typography>\n        </CardContent>\n    </Card>\n</>)\n\nexport default class Guidelines extends React.PureComponent{\n    render = () => (<>\n        {this.renderHeading()}\n        {this.renderGuidelines()}\n        {this.renderTips()}\n        {this.renderContributing()}\n    </>)\n\n    renderHeading = () => (\n        <>\n            <Typography variant='h2' paragraph>\n                Guidelines\n            </Typography>\n            <Typography variant='subtitle1' paragraph>\n                <b>{'{WIP} '}</b>Some general guidelines for developing React applications in TFSO\n            </Typography>\n        </>\n    )\n\n    renderGuidelines = () => (\n        <Section>\n            <SubHeading>General <Anchor id={'general'}/></SubHeading>\n            <Guideline title='Material Design'>\n                We strive to follow <Link underline='hover' href='https://material.io/design/' target='_blank'>Google's Material Design</Link> principles. <br />\n                Use components and icons from the <Link underline='hover' href='https://material-ui.com/' target='_blank'>MaterialUi package</Link><br />\n                This package also provides a theme to be used with <code>material-ui</code>, <Link underline='hover' to='/theme'>get started using it here</Link>\n            </Guideline>\n        </Section>\n    )\n\n    renderTips = () => (\n        <Section>\n            <SubHeading>\n                {emojis.indexFinger} Do's &amp; Don'ts {emojis.middleFinger} <Anchor id={'dodont'} />\n            </SubHeading>\n            <Tip title={<>Specific imports</>}>\n                Reducing bundle size!<br />\n                <b>Bad:</b>\n                <Code language='js'>\n                    {\n                        `import { Button } from '@material-ui/core' // All of material-ui/core will be included in the bundle!\nimport { Alert } from 'react-tfso-components' // All of react-tfso-components will be included in the bundle!`\n                    }\n                </Code>\n                <b>Good:</b>\n                <Code language='js'>\n                    {\n                        `import Button from '@material-ui/core/Button'\nimport Alert from 'react-tfso-components/dist/Alert'`\n                    }\n                </Code>\n            </Tip>\n\n            <Tip title={<>{/* emojis.thumbsUp */}Extend from <code>React.PureComponet</code> instead of <code>React.Component</code></>}>\n                Your components should never mutate the state directly or have mutable properties.<br/>\n                Hence they are pure, and should extend React.PureComponent, which is more performant.\n            </Tip>\n            <Tip title={<>{/* emojis.thumbsDown */}Don't use <code>componentWillReceiveProps</code></>}>\n                It's deprecated and going away in React 17 {emojis.brokenHeart}<br />\n                More information <Link underline='hover' href='https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops' target='_blank'>here</Link>\n            </Tip>\n            <Tip title={<>{/* emojis.thumbsDown */}Avoid copying props to state</>}>\n                ...unless you absolutely need to, there are legit reasons, however there is most likely a better solution. <br />\n                Perhaps you should invoke a callback provided by props and let the parent component handle something?\n            </Tip>\n        </Section>\n    )\n\n    renderContributing = () => (<>\n        <SubHeading>\n            Contributing to <code>react-tfso-components</code> {emojis.rocket} <Anchor id='contributing' />\n        </SubHeading>\n        <Paragraph>\n            Components in this package should:\n            <ul>\n                <li>Be written in typescript or provide type declarations (d.ts)</li>\n                <li>Be composible</li>\n                <li>Not be specific to a domain/usage (they should be as generic as possible)</li>\n                <li>Validate props using `<code>prop-types`</code></li>\n                <li>Be Pure (function component or extending <code>React.PureComponent</code>)</li>\n                <li>Have descriptive and easy to understand Props:\n                    <ul>\n                        <li>Use commonly known verbs/names</li>\n                        <li>Function props should begin with 'on', (onFocus, onChange etc.)</li>\n                        <li>Boolean props should <i>not</i> begin with 'is', (open instead of isOpen)</li>\n                        <li>Boolean props should be optional, (eg. <code>open?: boolean</code>), <code>undefined</code> should be evaluated as <code>false</code></li>\n                        <li><code>children</code> should always be explicitly typed (eg: <code>children: string</code>)</li>\n                        <li><code>children</code> should be defined as\n                            <ul>\n                                <li><code>React.ReactCild</code> for single child<br /></li>\n                                <li><code>React.ReactNode</code> for multiple children</li>\n                                <li>primitive type (<code>undefined</code>, <code>string</code>, <code>number</code> etc.)</li>\n                            </ul>\n                        </li>\n                    </ul>\n                </li>\n                <li>Have a demo with documentation so that developers can easily find and use your component</li>\n            </ul>\n        </Paragraph>\n    </>)\n}","import React from 'react'\nimport styled, { DefaultTheme } from 'styled-components'\nimport PropTypes from 'prop-types'\nimport {styledTheme} from '../../lib/theme/index'\n\nconst bgColor = (color: '') => {\n    const colors = styledTheme['tfso']['colors']\n    return colors[color]\n}\n\nexport type ThemeColorProps = {\n    color: React.ReactNode\n}\n\nconst Box = styled.div`\n    background-color: ${({color, theme}) => theme.tfso.colors[color] };\n    width: 230px;\n    height: 230px;\n    text-align: center;\n`\n\nconst Txt = styled.div`\n  font-size: 2em;\n  line-height: 2em;\n  color: ${({dark, theme}) => dark ? \"#000\" : theme.mui.palette.secondary.contrastText}\n`\n\nconst ThemeColor = (props: ThemeColorProps) => {\n    const { color } = props\n    return (\n        <Box color={color}>\n            theme.tfso.colors.{color}<br/><br/>\n            <Txt>{bgColor(color)}</Txt>\n            <Txt dark>{bgColor(color)}</Txt>\n        </Box>\n    )\n}\n\nThemeColor.propTypes = {\n    color: PropTypes.node.isRequired\n}\n\nexport default ThemeColor","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport ThemeColor from '../components/ThemeColor'\nimport {styledTheme} from '../../lib/theme/index'\n\nconst ThemeColors = styled.div`\n  clear: both;\n  > div{\n    float: left;\n      :hover{\n        width: 460px;\n        height: 230px;\n      }\n  }\n`\n\nexport default class Theme extends React.PureComponent{\n    render(){\n        return (\n            <>\n                <Typography variant='h2'>\n                    Theme &amp; Styling\n                </Typography>\n                <Typography variant='subtitle1'>\n                    There is more TODO\n                </Typography>\n                <ThemeColors>\n                    {Object.keys(styledTheme['tfso']['colors']).map(color => (\n                        <ThemeColor color={color}/>\n                    ))}\n                </ThemeColors>\n            </>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport Trending, {TrendingProps} from '../../lib/Trending'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\ntype TrendingDemoState = {\n    variant: TrendingProps['variant']\n}\n\nexport default class TrendingDemo extends React.PureComponent<{}, TrendingDemoState>{\n    state: TrendingDemoState = {\n        variant: 'up'\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='TrendingDemo.tsx' srcPath='Trending.tsx' >Trending</DemoTitle>\n                <DemoHelp>\n                    A colored icon indicating a trending direction. <br/>\n                    Tip: You can use the <code>color</code> or <code>nativeColor</code> property to override the color of the icon.\n                </DemoHelp>\n                <DemoProps>\n                    <DemoProp name='variant' type='up | down | flat' default='' description=''></DemoProp>\n                    <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp>\n                </DemoProps>\n                <DemoContent>\n                    <Trending variant={this.state.variant} fontSize='large' />\n                    <TextField\n                        select\n                        value={this.state.variant}\n                        onChange={e => this.setState({variant: e.target.value as any})}\n                        label='variant'\n                    >\n                        <MenuItem value='up'>up</MenuItem>\n                        <MenuItem value='flat'>flat</MenuItem>\n                        <MenuItem value='down'>down</MenuItem>\n                    </TextField>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport BigNumber, {BigNumberProps} from '../../lib/BigNumber'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\ntype BigNumberState = {\n    color: BigNumberProps['color']\n    size: BigNumberProps['size']\n}\n\nexport default class BigNumberDemo extends React.PureComponent<{}, BigNumberState>{\n    state: BigNumberState = {\n        color: 'dark',\n        size: 'large',\n    }\n\n    handleChange = (key: keyof BigNumberState) => (event: React.ChangeEvent<HTMLSelectElement>) => this.setState({[key]: event.target.value} as any)\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='BigNumberDemo.tsx' srcPath='BigNumber.tsx' >BigNumber</DemoTitle>\n                <DemoHelp>\n                    A Big Number is a number stands out\n                </DemoHelp>\n                <DemoProps>\n                    <DemoProp name='color' type='light | dark' default='light' description=''></DemoProp>\n                    <DemoProp name='size' type='medium | large' default='larger' description=''></DemoProp>\n                    <DemoProp name='children' type='string | number' default='' description=''></DemoProp>\n                    {/* <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp> */}\n                </DemoProps>\n                <DemoContent>\n                    <Grid container alignItems='center' spacing={32}>\n                        <Grid item>\n                            <div style={{backgroundColor: this.state.color === 'light' ? '#11beff' : 'inherit', padding: 10}}>\n                                <BigNumber\n                                    size={this.state.size}\n                                    color={this.state.color}\n                                >$123</BigNumber>\n                            </div>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant='caption'>NB: The BigNumber component does not set the background color!<br /> The background color used here is just for illustrative purposes.</Typography>\n                        </Grid>\n                    </Grid>\n                    <TextField\n                        select\n                        label='size'\n                        value={this.state.size}\n                        onChange={this.handleChange('size')}\n                    >\n                        <MenuItem value='medium'>medium</MenuItem>\n                        <MenuItem value='large'>large</MenuItem>\n                    </TextField>\n                    <TextField\n                        select\n                        label='color'\n                        value={this.state.color}\n                        onChange={this.handleChange('color')}\n                    >\n                        <MenuItem value='light'>light</MenuItem>\n                        <MenuItem value='dark'>dark</MenuItem>\n                    </TextField>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle, DemoCode} from '../components/demo'\n\nimport Alert, {AlertProps} from '../../lib/Alert'\n\nconst variantMessage: {[P in AlertProps['variant']]: string } = {\n    success: 'GRATE SUCCÉSS!',\n    info: 'Informational information',\n    warning: 'You better not do that, Brian',\n    error: 'That failed horribly...',\n}\n\nexport default class AlertDemo extends React.PureComponent<{}, {variant: AlertProps['variant'], message: string, open: boolean}>{\n    state = {\n        variant: 'success' as AlertProps['variant'],\n        open: false,\n        message: 'GRATE SUCCÉSS!'\n    }\n\n    onClose = () => this.setState({open: false})\n\n    onPress = (variant: AlertProps['variant']) => {\n        const message = variantMessage[variant]\n        return () => this.setState({open: true, message, variant})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='AlertDemo.tsx' srcPath='Alert.tsx' >Alert</DemoTitle>\n                <DemoHelp>A dismissable alert-box that can be used in a SnackBar or as a standard component in a page</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='message' type='string | ReactNode' description='The message string or Element to be displayed' />\n                    <DemoProp name='variant' type='success | error | info | warning' description='The variant of the alert. Icon and background-color is selected based on the variant' />\n                    <DemoProp name='onClose' type='() => void' description='Callback function invoked when the alert is dismissed' />\n                </DemoProps>\n                <DemoCode language='tsx'>\n                    {`import React from 'react'\nimport Alert from 'react-tfso-components/dist/Alert'\nimport Snacbar from '@material-ui/core/Snackbar'\nimport Button from '@material-ui/core/Button'\n\nclass Alerter extends React.PureComponent<{}, {open: boolean}> {\n    state = {\n        open: false\n    }\n\n    onClose = () => this.setState({open: false})\n\n    render(){\n        return(\n            <React.Fragment>\n                <Snackbar\n                    open={this.state.open}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    autoHideDuration={2000}\n                    onClose={this.onClose}\n                >\n                    <Alert\n                        onClose={this.onClose}\n                        message='An unexpected error occured'\n                        variant='error'\n                    />\n                </Snackbar>\n                <Button variant='outlined' onClick={() => this.setState({open: true})}>Show Alert</Button>\n            </React.Fragment>\n        )\n    }\n}`\n                    }\n                </DemoCode>\n                <DemoContent>\n                    <Snackbar\n                        open={this.state.open}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        autoHideDuration={2000}\n                        onClose={this.onClose}\n                    >\n                        <Alert\n                            onClose={this.onClose}\n                            message={this.state.message}\n                            variant={this.state.variant}\n                        />\n                    </Snackbar>\n                    <Button variant='outlined' onClick={this.onPress('success')}>Open Success</Button>\n                    <Button variant='outlined' onClick={this.onPress('info')}>Open Info</Button>\n                    <Button variant='outlined' onClick={this.onPress('warning')}>Open Warning</Button>\n                    <Button variant='outlined' onClick={this.onPress('error')}>Open Error</Button>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport SearchField from '../../lib/SearchField'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\n\nexport default class SearchFieldDemo extends React.PureComponent{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='SearchFieldDemo.tsx' srcPath='SearchField.tsx' >SearchField</DemoTitle>\n                <DemoHelp>A TextField that gets full width on typing. It also has a search icon adornnment.</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='placeholder' type='string (optional)' default='Search' description=''></DemoProp>\n                    <DemoProp name='margin' type='none | dense | normal (optional)' default='dense' description=''></DemoProp>\n                    <DemoProp name='InputProps' type=\"TextFieldProps['InputProps'] (optional)\" default='{ startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>}' description=''></DemoProp>\n                    <DemoProp name='...' type='TextFieldProps' default='' description='Any other prop is spread to the TextField'></DemoProp>\n                </DemoProps>\n                <DemoContent>\n                    <SearchField />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextFieldEditor from '../../lib/TextFieldEditor'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Typography from '@material-ui/core/Typography'\n\nexport default class TextFieldEditorDemo extends React.PureComponent{\n    state = {\n        value: 'demo',\n        dirty: false,\n        enableDirtyCheck: false\n    }\n\n    onReset = () => {\n        this.setState({value: ''})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='TextFieldEditorDemo.tsx' srcPath='TextFieldEditor.tsx' >TextFieldEditor</DemoTitle>\n                <DemoHelp>A wrapper around material-ui's TextField with some added features</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='value' type='string' default='' description='' />\n                    <DemoProp name='onChange' type='(value: string) => void' default='' description='Invoked when the user has finished editing the value (editor looses focus by clicking or tabbing away, pressing the Enter or ctrl+s' />\n                    <DemoProp name='dirty' type='boolean (optional)' default='false' description='If true, it is rendered in italic after onChange' />\n                    <DemoProp name='enableDirtyCheck' type='boolean (optional)' default='false' description='If true, the component will do internal dirty checking when editing' />\n                    <DemoProp name='...' type='TextFieldProps' description='Any other prop is spread to the TextField' />\n                </DemoProps>\n                <ExpansionPanel>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} >\n                        <Typography>Keybindings</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <code>\n                                ctrl + s:&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is NOT handled!)<br/>\n                                ctrl + z:&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\n                                Enter:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is handled)<br/>\n                                Escape:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\n                        </code>\n                        <br/>\n                        <i>When the event is handled `preventDefault()` and `stopPropagation()` is invoked on the `React.KeyboardEvent`</i><br/>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <DemoContent>\n                    <TextFieldEditor\n                        value={this.state.value}\n                        enableDirtyCheck={this.state.enableDirtyCheck}\n                        dirty={this.state.dirty}\n                        onChange={(value: string) => this.setState({value})}\n                    />\n                    <Button variant='outlined' onClick={() => this.setState({value: 'demo'})}>Reset</Button>\n                    <Button variant='outlined' onClick={() => this.setState({dirty: !this.state.dirty})}>Dirty: {this.state.dirty.toString()}</Button>\n                    <Button variant='outlined' onClick={() => this.setState({enableDirtyCheck: !this.state.enableDirtyCheck})}>Enable dirty check: {this.state.enableDirtyCheck.toString()}</Button>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport ConfirmationDialog from '../../lib/ConfirmationDialog'\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\n\nexport default class ConfirmationDialogDemo extends React.PureComponent{\n    state = {\n        openConfirmationDialog: false\n    }\n\n    onClickOpenConfirmationDialog = () => {\n        this.setState({openConfirmationDialog: true})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='ConfirmationDialogDemo.tsx' srcPath='ConfirmationDialog.tsx' >ConfirmationDialog</DemoTitle>\n                <DemoHelp>A Dialog containing Ok and Cancel buttons</DemoHelp>\n                <DemoProps>\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show dialog\" />\n                    <DemoProp name=\"title\" type=\"string (optional)\" default=\"\" description=\"Dialog title\" />\n                    <DemoProp name=\"message\" type=\"string\" default=\"\" description=\"Dialog content\" />\n                    <DemoProp name=\"okButtonText\" type=\"string\" default=\"\" description=\"\" />\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"\" />\n                    <DemoProp name=\"onOk\" type=\"function\" default=\"\" description=\"\" />\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"\" />\n                </DemoProps>\n                <DemoContent>\n                    <Button variant='outlined' onClick={this.onClickOpenConfirmationDialog}>Open ConfirmationDialog</Button>\n                    <ConfirmationDialog\n                        open={this.state.openConfirmationDialog}\n                        okButtonText='Ok'\n                        cancelButtonText='Cancel'\n                        onOk={() => this.setState({openConfirmationDialog: false})}\n                        onCancel={() => this.setState({openConfirmationDialog: false})}\n                        message='Confirmation dialog message'\n                        title='Confirmation dialog title'\n                    />\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\n\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\nimport Emoji from '../../lib/Emoji'\n\nimport Typography from '@material-ui/core/Typography'\n\ntype State = {\n    // variant\n}\n\nexport default class EmojiDemo extends React.PureComponent<{}, State>{\n    render(){\n        return (\n            <Demo>\n                <DemoTitle srcPath='Emoji.tsx' demoPath='EmojiDemo.tsx'>Emoji</DemoTitle>\n                <DemoHelp>A simple html Emoji component</DemoHelp>\n                <DemoProps>\n                    <DemoProp name='variant' type='string' default='' description=''/>\n                </DemoProps>\n                <DemoContent>\n                    <Typography variant=\"h2\">\n                        <Emoji variant='heart' />\n                        <Emoji variant='thumbsUp' />\n                        <Emoji variant='fire' />\n                    </Typography>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\nimport DashBoard, {WidgetProps} from '../../lib/DashBoard'\nimport {styledTheme} from '../../lib/theme'\nimport {BigNumber, Trending} from '../../lib'\nimport Grid from '@material-ui/core/Grid'\n\ntype State = {\n    widgets: Array<WidgetProps>\n}\n\nlet i = 0\nconst colors = Object.keys(styledTheme.tfso.colors)\nconst getColor = () => styledTheme.tfso.colors[colors[i++]]\n\nconst W1 = () => (\n    <Grid container wrap='nowrap' style={{padding: 10}}>\n        <Grid item>\n            <BigNumber color='light' >$123</BigNumber>\n        </Grid>\n        <Grid item xs>\n            <Trending variant='up' fontSize='large'></Trending>\n        </Grid>\n    </Grid>\n)\n\nexport default class DashBoardDemo extends React.PureComponent<{}, State>{\n    state: State = {\n        widgets: [\n            {\n                size: 'small',\n                background: styledTheme.tfso.colors.orangeColor,\n                children: <W1 />\n            },\n            {\n                size: 'small',\n                background: getColor(),\n                children: <div>Small 2</div>\n            },\n            {\n                size: 'small',\n                background: getColor(),\n                children: <div>Small 3</div>\n            },\n            {\n                size: 'small',\n                background: getColor(),\n                children: <div>Small 4</div>\n            },\n            {\n                size: 'medium',\n                background: getColor(),\n                children: <div>Medium 5</div>\n            },\n            {\n                size: 'large',\n                background: getColor(),\n                children: <div>large 7</div>\n            },\n            {\n                size: 'medium',\n                background: getColor(),\n                children: <div>Medium 5</div>\n            },\n            {\n                size: 'medium',\n                background: getColor(),\n                children: <div>Medium 6</div>\n            },\n            {\n                size: 'large',\n                background: getColor(),\n                children: <div>large 7</div>\n            }\n        ]\n    }\n\n    onOrder = (widgets: Array<WidgetProps>) => {\n        this.setState({widgets})\n    }\n\n    render(){\n        return (\n            <Demo>\n                <DemoTitle demoPath='ComponentsDemo/DashBoardDemo.tsx' srcPath='DashBoard.Tsx'>DashBoard</DemoTitle>\n                <DemoHelp></DemoHelp>\n                <DemoProps>\n                    {/* <DemoProp /> */}\n                </DemoProps>\n                <DemoContent>\n                    <div style={{\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        justifyContent: 'space-around',\n                        overflowX: 'auto',\n                        padding: 10,\n                        height: '400px',\n                        // backgroundColor: '#eee'\n                    }} >\n                        <DashBoard\n                            onChangeOrder={this.onOrder}\n                            onRemove={() => {}}\n                            widgets={this.state.widgets}\n                        />\n                    </div>\n                </DemoContent>\n            </Demo>\n        )\n    }\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport {Hoverable} from '../../lib'\r\n\r\nexport default class HoverableDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Hoverable.tsx'>Hoverable</DemoTitle>\r\n                <DemoHelp>A HOC that passes hover true/false as a render prop</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(hover: boolean, ref: RefObject) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Hoverable>\r\n                        {(hover) => (\r\n                            <React.Fragment>\r\n                                {hover\r\n                                    ? <div key=\"1\" style={{backgroundColor: '#6699bb', padding: 15, color: '#FFF', cursor: 'pointer'}}>You're hovering me!</div>\r\n                                    : <div key=\"2\" style={{padding: 15, height: '100%'}}>Hover your mouse over me</div>\r\n                                }\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Hoverable>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport {Delay} from '../../lib'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nexport default class DelayDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Delay.tsx'>Delay</DemoTitle>\r\n                <DemoHelp>Shows the component inside after a set delay. Can be used to only show loaders if exceptionally slow</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"beforeShow\" type=\"React element or string (optional)\" default=\"\" description=\"What you want to show before the delay is finished\" />\r\n                    <DemoProp name=\"delayMs\" type=\"Number (optional)\" default=\"1000\" description=\"Delay time in ms\" />\r\n                    <DemoProp name=\"show\" type=\"Boolean (optional)\" default=\"false\" description=\"Force show content\" />\r\n                    <DemoProp name=\"children\" type=\"React element\" default=\"\" description=\"Content to show after delay\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Delay beforeShow=\"Waiting for delay...\">\r\n                        <CircularProgress />\r\n                    </Delay>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport {Wizard} from '../../lib'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport Step from '@material-ui/core/Step'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport default class WizardDemo extends React.PureComponent{\r\n    render(){\r\n        const length = 3\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Wizard.tsx'>Wizard</DemoTitle>\r\n                <DemoHelp>A HOC that passes an index and next/prev functions in a render prop. Can be used along with material ui stepper or any other wizard</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(index: number, next: function, prev: function) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                    <DemoProp name=\"index\" type=\"number (optional)\" default=\"\" description=\"Force the current index to a certain value\" />\r\n                    <DemoProp name=\"length\" type=\"number (optional)\" default=\"\" description=\"The max length. The index will always be lower than this\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Wizard length={length + 1}>\r\n                        {(index, next, prev) => (\r\n                            <React.Fragment>\r\n                                <Stepper activeStep={index}>\r\n                                    <Step key=\"Step 1\">\r\n                                        <StepLabel>Step 1</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 2\">\r\n                                        <StepLabel>Step 2</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 3\">\r\n                                        <StepLabel>Step 3</StepLabel>\r\n                                    </Step>\r\n                                </Stepper>\r\n                                <div>\r\n                                    <Button onClick={prev} disabled={index <= 0}>Prev</Button>\r\n                                    <Button onClick={next} disabled={index >= length}>Next</Button>\r\n                                    {index >= length && 'All steps completed!'}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Wizard>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport {layout} from '../lib'\nimport Home from './pages/Home'\nimport Icons from './pages/Icons'\nimport GitHubLink from './components/GitHubLink'\nimport MaterialUiLink from './components/MaterialUiLink'\nimport Guidelines from './pages/Guidelines'\nimport Theme from './pages/Theme'\nimport HomeIcon from '@material-ui/icons/Home'\nimport CodeIcon from '@material-ui/icons/Code'\nimport StyleIcon from '@material-ui/icons/Style'\nimport BuildIcon from '@material-ui/icons/Build'\nimport StraightenIcon from '@material-ui/icons/Straighten'\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact'\nimport FontDownloadIcon from '@material-ui/icons/FontDownload'\nimport history from './history'\nimport {Location, UnregisterCallback} from 'history'\nimport Link from './components/Link'\nimport TrendingDemo from './demos/TrendingDemo'\nimport BigNumberDemo from './demos/BigNumberDemo'\nimport AlertDemo from './demos/AlertDemo'\nimport SearchFieldDemo from './demos/SearchFieldDemo'\nimport TextFieldEditorDemo from './demos/TextFieldEditorDemo'\nimport ConfirmationDialogDemo from './demos/ConfirmationDialogDemo'\nimport EmojiDemo from './demos/EmojiDemo'\nimport DashBoardDemo from './demos/DashBoardDemo'\nimport HoverableDemo from './demos/HoverableDemo'\nimport DelayDemo from './demos/DelayDemo'\nimport WizardDemo from './demos/WizardDemo'\n\nconst menuGroups = {\n    home: {\n        label: 'Home',\n        subtitle: 'Where magic happens',\n        icon: HomeIcon,\n        component: Home\n    },\n    guidelines: {\n        label: 'Guidelines',\n        subtitle: 'How to frontend',\n        icon: StraightenIcon,\n        component: Guidelines\n    },\n    components: {\n        label: 'Components',\n        subtitle: 'Presentational',\n        icon: ViewCompactIcon,\n        items: {\n            emoji: {\n                label: 'Emoji',\n                component: EmojiDemo\n            },\n            alert: {\n                label: 'Alert',\n                component: AlertDemo\n            },\n            bignumber: {\n                label: 'BigNumber',\n                component: BigNumberDemo\n            },\n            confirmationdialog: {\n                label: 'ConfirmationDialog',\n                component: ConfirmationDialogDemo\n            },\n            searchfield: {\n                label: 'SearchField',\n                component: SearchFieldDemo\n            },\n            textfieldeditor: {\n                label: 'TextFieldEditor',\n                component: TextFieldEditorDemo\n            },\n            trending: {\n                label: 'Trending',\n                component: TrendingDemo\n            }\n        }\n    },\n    theme: {\n        label: 'Theme',\n        subtitle: 'Much Dashing',\n        icon: StyleIcon,\n        component: Theme\n    },\n    utils: {\n        label: 'Utils',\n        subtitle: 'Utility',\n        icon: BuildIcon,\n        items: {\n            delay: {\n                label: 'Delay',\n                component: DelayDemo\n            },\n            hoverable: {\n                label: 'Hoverable',\n                component: HoverableDemo\n            },\n            wizard: {\n                label: 'Wizard',\n                component: WizardDemo\n            }\n        }\n    },\n    icons: {\n        label: 'Icons',\n        subtitle: 'Well duh',\n        component: Icons,\n        icon: FontDownloadIcon\n    },\n    labs: {\n        label: 'Labs',\n        subtitle: 'Works in progress',\n        icon: CodeIcon,\n        items: {\n            dashboard: {\n                label: 'Dashboard',\n                component: DashBoardDemo\n            }\n        }\n    },\n}\n\ntype LayoutState = {\n    menuOpen: boolean,\n    location: Location<any>\n    menuGroupsExpanded: any\n}\n\nexport default class Layout extends React.PureComponent<{}, LayoutState>{\n    _unsubHistory: UnregisterCallback | null = null\n    componentDidMount(){\n        this.expandSelected()\n        this._unsubHistory = history.listen(this.onNavigation)\n    }\n    componentWillUnmount(){\n        this._unsubHistory && this._unsubHistory()\n    }\n\n    state: LayoutState = {\n        location: history.location,\n        menuOpen: true,\n        menuGroupsExpanded: {}\n    }\n\n    onNavigation = (location: Location<any>) => {\n        this.setState({location})\n    }\n\n    getSelected = () => {\n        const {location: {pathname}} = this.state\n        const path = pathname.slice(pathname.indexOf('#') + 2)\n        const [group, item] = path.split('/')\n\n        return {group: group || 'home', item}\n    }\n\n    expandSelected(){\n        const {group} = this.getSelected()\n        this.onToggleGroupExpanded(group)\n    }\n\n    onMenuToggle = () => {\n        this.setState(state => ({menuOpen: !state.menuOpen}))\n    }\n\n    onCloseMenu = () => this.setState({menuOpen: false})\n\n    onToggleGroupExpanded = (name) => {\n        this.setState(state => ({\n            menuGroupsExpanded: {\n                ...state.menuGroupsExpanded,\n                [name]: !state.menuGroupsExpanded[name]\n            }\n        }))\n    }\n\n    render(){\n        const menu = (\n            <layout.Menu open={this.state.menuOpen} onClose={this.onCloseMenu}>\n                {Object.keys(menuGroups).map(groupName => {\n                    const group = menuGroups[groupName]\n                    if(group.component){\n                        return (\n                            <layout.MenuRootItem\n                                key={group.label}\n                                label={group.label}\n                                selected={this.getSelected().group === groupName}\n                                icon={group.icon}\n                                subtitle={group.subtitle}\n                                href={(content) => {\n                                    return (\n                                        <Link to={`/${groupName}`} key={groupName}>\n                                            {content}\n                                        </Link>\n                                    )\n                                }}\n                            />\n                        )\n                    }\n\n                    return (\n                        <layout.MenuGroup\n                            expanded={this.state.menuGroupsExpanded[groupName]}\n                            label={group.label}\n                            icon={group.icon}\n                            subtitle={group.subtitle}\n                            onToggleExpanded={() => this.onToggleGroupExpanded(groupName)}\n                        >\n                            {Object.keys(group.items).map(itemName => {\n                                const item = group.items[itemName]\n                                const selected = this.getSelected()\n                                return (\n                                    <layout.MenuItem\n                                        key={item.label}\n                                        label={item.label}\n                                        selected={selected.item === itemName && selected.group === groupName}\n                                        icon={item.icon}\n                                        href={(content) => {\n                                            return (\n                                                <Link to={`/${groupName}/${itemName}`} key={itemName}>\n                                                    {content}\n                                                </Link>\n                                            )\n                                        }}\n                                    />\n                                )\n                            })}\n                        </layout.MenuGroup>\n                    )\n                })}\n            </layout.Menu>\n        )\n        const topMenu = (\n            <layout.TopMenu>\n                <Grid container spacing={16}>\n                    <Grid item><MaterialUiLink /></Grid>\n                    <Grid item><GitHubLink /></Grid>\n                </Grid>\n            </layout.TopMenu>\n        )\n\n        const selected = this.getSelected()\n        const group = menuGroups[selected.group]\n\n        let content: React.ReactNode = 'Not found'\n        if(group.component){\n            const Page = group.component\n            content = <Page />\n        }else if(group.items && group.items[selected.item]){\n            const Page = group.items[selected.item].component\n            content = <Page />\n        }\n\n        return (\n            <layout.Layout\n                menu={menu}\n                topMenu={topMenu}\n                title=\"Tfso Components\"\n                docTitle=\"Tfso Components\"\n                onMenuToggle={this.onMenuToggle}\n            >\n                {content}\n            </layout.Layout>\n        )\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport {theme} from '../lib'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport {ThemeProvider as StyledThemeProvider} from 'styled-components'\nimport {MuiThemeProvider} from '@material-ui/core/styles'\nimport Layout from './Layout'\n\nReactDOM.render(\n    <React.Fragment>\n        <CssBaseline />\n        <MuiThemeProvider theme={theme.materialuiTheme}>\n            <StyledThemeProvider theme={theme.styledTheme}>\n                <Layout />\n            </StyledThemeProvider>\n        </MuiThemeProvider>\n    </React.Fragment>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}