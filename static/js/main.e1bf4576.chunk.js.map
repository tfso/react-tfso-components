{"version":3,"sources":["lib/theme/index.ts","lib/layout/Menu.tsx","lib/layout/MobileMenu.tsx","lib/layout/TopMenu.tsx","lib/icons/Tfso.tsx","lib/layout/Topbar.tsx","lib/layout/DocumentTitle.tsx","lib/layout/Layout.tsx","lib/Alert.tsx","lib/BigNumber.tsx","lib/ConfirmationDialog.tsx","lib/SearchField.tsx","lib/TextFieldEditor.tsx","lib/Trending.tsx","lib/Emoji.tsx","lib/Delay.tsx","lib/Hoverable.tsx","lib/Wizard.tsx","lib/icons/TfsoLoading.tsx","demo/components/MaterialUiLink.tsx","demo/components/GitHubLink.tsx","demo/pages/Home.tsx","demo/components/code.tsx","demo/components/demo.tsx","demo/pages/Icons.tsx","demo/history.ts","demo/components/Link.tsx","demo/pages/Guidelines.tsx","demo/components/ThemeColor.tsx","demo/pages/Theme.tsx","demo/demos/TrendingDemo.tsx","demo/demos/BigNumberDemo.tsx","demo/demos/AlertDemo.tsx","demo/demos/SearchFieldDemo.tsx","demo/demos/TextFieldEditorDemo.tsx","demo/demos/ConfirmationDialogDemo.tsx","lib/layout/ClientSwitcher.tsx","demo/demos/ClientSwitcherDemo.tsx","demo/demos/EmojiDemo.tsx","lib/GridLayout.tsx","demo/demos/GridLayoutDemo.tsx","demo/demos/HoverableDemo.tsx","demo/demos/DelayDemo.tsx","demo/demos/WizardDemo.tsx","demo/Layout.tsx","demo/index.tsx"],"names":["colorScheme","colors","tfso","baseColor","baseLightColor","baseLight2Color","baseLight3Color","baseLight4Color","baseLight5Color","blueColor","blueDarkColor","blueDesaturatedColor","grayBlueColor","tealColor","greenColor","greenLightColor","purpleColor","redColor","redLightColor","orangeColor","yellowColor","blackColor","grayColor","grayDarkColor","grayDarkerColor","grayLightColor","grayLighterColor","grayLightestColor","whiteColor","whiteDarkColor","whiteDarkerColor","bodyBackgroundColor","listOverBackgroundColor","borderColor","tabBarColor","palette","primary","primaryLight","success","warning","alert","delete","materialuiTheme","createMuiTheme","typography","useNextVariants","secondary","dark","main","light","contrastText","styledTheme","layout","containerMargin","mui","StyledDrawer","styled","Drawer","attrs","classes","paper","withConfig","displayName","componentId","_ref","open","withWidth","_React$PureComponent","Menu","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","isMobile","includes","props","width","react_default","a","createElement","variant","elevation","onClose","List_default","disablePadding","children","React","PureComponent","MenuGroup","_React$PureComponent2","Icon","icon","backgroundColor","expanded","LinkContent","ListItem_default","divider","style","button","onClick","onToggleExpanded","ListItemIcon_default","marginRight","fontSize","color","ListItemText_default","subtitle","primaryTypographyProps","secondaryTypographyProps","label","ListItemSecondaryAction_default","IconButton_default","ExpandLess_default","ExpandMore_default","Fragment","Collapse_default","in","timeout","dense","Divider_default","MenuRootItem","_React$PureComponent3","selected","href","Link_default","NestedListItem","ListItem","MenuItem","_React$PureComponent4","MobileMenu","TopMenu","memo","SvgIcon_default","assign","viewBox","d","Root","div","StyledAppBar","AppBar","theme","zIndex","drawer","Wrapper","Left","Right","MenuButton","IconButton","ToolbarRight","TopBar","_this","position","Tfso","Typography_default","paddingLeft","title","Toolbar_default","onMenuToggle","aria-label","e","Menu_default","setTitle","text","document","DocumentTitle","call","nextProps","LayoutWrapper","LayoutHeader","LayoutBody","LayoutBodyLeft","LayoutBodyRight","Layout","DocumentTitle_DocumentTitle","docTitle","Topbar_TopBar","topMenu","menu","LayoutNoMenu","variantIcon","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","StyledSnack","other","objectWithoutProperties","SnackbarContent_default","_templateObject","_ref2","bgColor","Alert","message","aria-describedby","id","display","alignItems","opacity","action","Close_default","fontSizeMap","medium","large","defaultProps","size","wrapper","BigNumber","_ref2$size","pxToRem","_ref3","_ref3$color","TransitionComponent","Slide_default","direction","ConfirmationDialog","onCancel","onOk","okButtonText","cancelButtonText","Dialog_default","keepMounted","maxWidth","DialogTitle_default","DialogContent_default","DialogActions_default","Button_default","SearchField","state","editing","onBlur","setState","onFocus","TextField_default","fullWidth","handleEvent","event","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","placeholder","margin","InputProps","startAdornment","InputAdornment_default","Search_default","TextFieldEditor","_inputRef","createRef","prevProps","blur","current","onKeyDown","defaultPrevented","ctrlKey","multiline","onChange","target","_this$props","dirtyProp","dirty","enableDirtyCheck","otherProps","isDirty","inputRef","fontStyle","iconMap","up","TrendingUp","flat","TrendingFlat","down","TrendingDown","withTheme","iconProps","nativeColor","getColor","emojis","middleFinger","indexFinger","flex","brokenHeart","perfect","thumbsUp","thumbsDown","clap","heart","fire","bulb","crap","thinking","rocket","Emoji","propTypes","PropTypes","oneOf","keys","Delay","_timer","show","_this2","setTimeout","delayMs","clearTimeout","beforeShow","Hoverable","ref","toggleHover","hover","hoverOn","hoverOff","restProps","onMouseEnter","onMouseLeave","Wizard","next","length","index","prev","hasOwnProperty","path","css","TfsoLoading_templateObject","StyledSvgIcon","Styled","once","_ref4","_ref5","_ref6","fillRule","strokeWidth","MaterialUiIcon","fill","MaterialUiLink","rel","GitHubIcon","GitHubLink","concat","Tooltip_default","tooltip","CenterTop","Home_templateObject","Home","TfsoLoading","paragraph","align","Grid_default","container","justify","item","xs","flexDirection","Zoom_default","appear","transitionDelay","Code","_getPrototypeOf2","_len","args","Array","_key","highlight","Prism","highlightElement","className","language","Demo","Paper_default","padding","marginBottom","DemoTitle","srcPath","demoPath","spacing","components_GitHubLink","DemoHelp","DemoContent","marginTop","isArray","map","child","i","DemoProps","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpansionPanelDetails_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","DemoProp","required","name","type","default","description","DemoCode","Code_default","code_Code","Icons","Icons_TfsoDemo","Icons_TfsoLoadingDemo","TfsoDemo","handleChange","defineProperty","demo_Demo","demo_DemoTitle","demo_DemoHelp","demo_DemoProps","demo_DemoProp","demo_DemoContent","select","MenuItem_default","TfsoLoadingDemo","history","createHashHistory","basename","hashType","Link","to","push","toLowerCase","underline","undefined","AnchorLink","Anchor","window","location","hash","split","Section","unit","SubHeading","Paragraph","component","Tip","Card_default","CardContent_default","Guideline","Guidelines","render","renderHeading","renderGuidelines","renderTips","renderContributing","Guidelines_SubHeading","Link_Anchor","Guidelines_Guideline","Link_Link","Guidelines_Tip","Guidelines_Paragraph","Box","ThemeColor_templateObject","Txt","_templateObject2","ThemeColor","ThemeColors","Theme_templateObject","Theme","components_ThemeColor","TrendingDemo","Trending","BigNumberDemo","lib_BigNumber","variantMessage","AlertDemo","onPress","demo_DemoCode","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","lib_Alert","SearchFieldDemo","SearchField_SearchField","TextFieldEditorDemo","onReset","TextFieldEditor_TextFieldEditor","toString","ConfirmationDialogDemo","openConfirmationDialog","onClickOpenConfirmationDialog","lib_ConfirmationDialog","IsMobile","ClientSwitcher","_listRef","filterValue","focusValue","onFilter","keyCode","focus","onSwitch","_this3","renderItems","MenuList_default","options","filter","option","indexOf","disabled","Avatar_default","slice","words","desktopDialog","Popover_default","anchorEl","transformOrigin","mobileDialog","fullScreen","DemoDisplay","ClientSwitcherDemo_templateObject","ClientSwitcherDemo","_anchorEl","selectedOption","console","log","ClientSwitcher_ClientSwitcher","buttonRef","EmojiDemo","lib_Emoji","GridItemContainer","gridItemWidthNumberMap","1","2","3","4","5","6","7","8","9","10","11","12","onequarter","onethird","half","twothirds","threequarters","full","numberGridItemWithMap","toGridItemWidth","w","Math","min","trunc","toGridItemHeight","gridItemPositionToLayout","x","col","y","row","h","height","minH","minHeight","minW","minWidth","maxH","maxHeight","maxW","isDraggable","draggable","isResizable","resizable","static","layoutToGridItemPosition","GridLayout","_layoutWasChangedWorkaround","onLayoutChange","layouts","validateItemLayout","onResize","oldItem","newItem","placeHolder","onDragStop","isEqual","onResizeStop","items","_this$props$margin","rglLayout","values","react_grid_layout_default","cols","rowHeight","breakpoints","lg","compactType","GridLayoutDemo","GridLayout_GridLayout","HoverableDemo","Hoverable_Hoverable","cursor","DelayDemo","Delay_Delay","CircularProgress_default","WizardDemo","Wizard_Wizard","Stepper_default","activeStep","Step_default","StepLabel_default","menuGroups","home","HomeIcon","guidelines","StraightenIcon","components","ViewCompactIcon","emoji","bignumber","confirmationdialog","clientswitcher","searchfield","textfieldeditor","trending","StyleIcon","utils","BuildIcon","delay","hoverable","wizard","icons","FontDownloadIcon","labs","CodeIcon","gridlayout","_unsubHistory","menuOpen","menuGroupsExpanded","onNavigation","getSelected","pathname","_path$split","_path$split2","slicedToArray","group","onCloseMenu","onToggleGroupExpanded","objectSpread","expandSelected","listen","layout_namespaceObject","groupName","content","itemName","components_MaterialUiLink","Page","_Page","ReactDOM","CssBaseline_default","styles","styled_components_browser_esm","demo_Layout_Layout","getElementById"],"mappings":"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","file":"static/js/main.e1bf4576.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles'\r\nimport 'styled-components'\r\n\r\nconst colorScheme = {\r\n    fiord: '#445566',\r\n    lynch: '#637b94',\r\n    dodgerBlue: '#11beff',\r\n    bayOfMany: '#224477',\r\n    easternBlue: '#22aabb',\r\n    apple: '#49bd39',\r\n    melrose: '#A3A4FB',\r\n    flamingo: '#f04b4b',\r\n    texasRose: '#ffb155',\r\n    dandelion: '#FFD966',\r\n    tundora: '#404040',\r\n    dustyGray: '#999999',\r\n    hippieBlue: '#6699bb',\r\n    emperor: '#555555',\r\n    silver: '#CCCCCC',\r\n    porcelain: '#E8E9EA',\r\n    wildSand: '#F6F6F6',\r\n    white: '#FFFFFF',\r\n    casper: '#AFC5D0'\r\n}\r\n\r\nconst colors = {\r\n    tfso: '#00c7f5',\r\n    baseColor: colorScheme.fiord,\r\n    baseLightColor: '#637b94',\r\n    baseLight2Color: '#8fa1b4',\r\n    baseLight3Color: '#bdc8d3',\r\n    baseLight4Color: '#ebeef1',\r\n    baseLight5Color: '#f4f6f8',\r\n    blueColor: colorScheme.dodgerBlue,\r\n    blueDarkColor: colorScheme.bayOfMany,\r\n    blueDesaturatedColor: colorScheme.hippieBlue,\r\n    grayBlueColor: colorScheme.casper,\r\n    tealColor: colorScheme.easternBlue,\r\n    greenColor: colorScheme.apple,\r\n    greenLightColor: 'rgba(73, 189, 57, 0.4)',\r\n    purpleColor: colorScheme.melrose,\r\n    redColor: colorScheme.flamingo,\r\n    redLightColor: 'rgba(240, 75, 75, 0.4)',\r\n    orangeColor: colorScheme.texasRose,\r\n    yellowColor: colorScheme.dandelion,\r\n    blackColor: colorScheme.tundora,\r\n    grayColor: colorScheme.dustyGray,\r\n    grayDarkColor: '#6E6E6E',\r\n    grayDarkerColor: '#454545',\r\n    grayLightColor: '#C4C4C4',\r\n    grayLighterColor: '#E6E6E6',\r\n    grayLightestColor: '#F7F7F7',\r\n    whiteColor: colorScheme.white,\r\n    whiteDarkColor: '#F7F7F7',\r\n    whiteDarkerColor: '#E6E6E6',\r\n    bodyBackgroundColor: '#F7F7F7',\r\n    listOverBackgroundColor: '#E6E6E6',\r\n    borderColor: '#C4C4C4',\r\n    tabBarColor: colorScheme.white\r\n}\r\n\r\nconst palette = {\r\n    primary: colors.baseColor,\r\n    primaryLight: colors.baseLightColor,\r\n    success: colors.greenColor,\r\n    warning: colors.orangeColor,\r\n    alert: colors.redColor,\r\n    delete: colors.redColor,\r\n}\r\n\r\nconst layout = {\r\n    containerMargin: '15px'\r\n}\r\n\r\nexport const materialuiTheme = createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    palette: {\r\n        secondary: {\r\n            dark: '#1b2c3c',\r\n            main: '#456',\r\n            light: '#708194'\r\n        },\r\n        primary: {\r\n            dark: '#0090cc',\r\n            main: '#11c0ff',\r\n            light: '#6df3ff',\r\n            contrastText: '#FFF'\r\n        }\r\n    }\r\n})\r\n\r\nexport const styledTheme = {\r\n    tfso: {\r\n        colors,\r\n        palette,\r\n        layout\r\n    },\r\n    mui: materialuiTheme, // Make the entire material-ui theme available to styled components as well\r\n}\r\n\r\nexport type TfsoTheme = typeof styledTheme\r\n\r\ndeclare module 'styled-components' {\r\n    export interface DefaultTheme extends TfsoTheme {}\r\n    export type WithTheme = { theme: DefaultTheme }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport List from '@material-ui/core/List'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Link from '@material-ui/core/Link'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ExpandLess from '@material-ui/icons/ExpandLess'\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\nimport styled from 'styled-components/macro'\r\nimport {withWidth} from '@material-ui/core'\r\nimport {WithWidth} from '@material-ui/core/withWidth'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\n/*\r\n\r\nMeny skjult som default på mobil\r\nMeny lukkes ved klikk på mobil\r\n\r\n */\r\n\r\nconst StyledDrawer = styled(Drawer).attrs({\r\n    classes: {paper: 'MuiPaperStyle'}\r\n})`\r\n    &&{\r\n      width: ${({open}) => open ? 240 : 0}px;\r\n      height: 100%;\r\n     \r\n    }\r\n    \r\n    .MuiPaperStyle{\r\n      position: static;\r\n    }\r\n`\r\n\r\nexport type MenuProps = {\r\n    open: boolean\r\n    onClose: () => void\r\n} & WithWidth\r\n\r\nexport default withWidth()(class Menu extends React.PureComponent<MenuProps>{\r\n    static propTypes = {\r\n        open: PropTypes.bool.isRequired,\r\n        onClose: PropTypes.func.isRequired\r\n    }\r\n\r\n    render(){\r\n        const isMobile = ['xs', 'sm'].includes(this.props.width)\r\n\r\n        return (\r\n            <StyledDrawer variant={isMobile ? 'temporary' : 'persistent'} elevation={0} open={this.props.open} onClose={this.props.onClose}>\r\n                <List disablePadding>\r\n                    {this.props.children}\r\n                </List>\r\n            </StyledDrawer>\r\n        )\r\n    }\r\n})\r\n\r\nexport type MenuGroupProps = {\r\n    icon?: React.ComponentType<SvgIconProps>\r\n    subtitle: string\r\n    label: string\r\n    onToggleExpanded: () => void\r\n    expanded: boolean\r\n    children: React.ReactNode\r\n}\r\n\r\nexport class MenuGroup extends React.PureComponent<MenuGroupProps>{\r\n    render(){\r\n        const Icon = this.props.icon\r\n        const backgroundColor = this.props.expanded ? '#fafaf9' : 'inherit'\r\n\r\n        const LinkContent = (\r\n            <ListItem divider={!this.props.expanded} style={{backgroundColor}} button onClick={this.props.onToggleExpanded}>\r\n                {Icon &&\r\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color='secondary'/></ListItemIcon>\r\n                }\r\n                <ListItemText\r\n                    secondary={this.props.subtitle}\r\n                    primaryTypographyProps={{color: 'secondary'}}\r\n                    secondaryTypographyProps={{variant: 'caption'}}\r\n                >\r\n                    {this.props.label}\r\n                </ListItemText>\r\n                <ListItemSecondaryAction>\r\n                    <IconButton onClick={this.props.onToggleExpanded}>\r\n                        {this.props.expanded ? <ExpandLess /> : <ExpandMore />}\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        )\r\n\r\n        return (\r\n            <>\r\n                {LinkContent}\r\n                <Collapse in={this.props.expanded} timeout=\"auto\" style={{backgroundColor}}>\r\n                    <List dense disablePadding>\r\n                        {this.props.children}\r\n                    </List>\r\n                    <Divider />\r\n                </Collapse>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport type MenuRootItemProps = {\r\n    icon?: React.ComponentType<SvgIconProps>\r\n    subtitle: string\r\n    label: string\r\n    selected: boolean\r\n    href?: string | ((content: React.ReactChild) => React.ReactChild)\r\n}\r\n\r\nexport class MenuRootItem extends React.PureComponent<MenuRootItemProps>{\r\n    render(){\r\n        const Icon = this.props.icon\r\n\r\n        const LinkContent = (\r\n            <ListItem divider>\r\n                {Icon &&\r\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'secondary'}/></ListItemIcon>\r\n                }\r\n                <ListItemText\r\n                    secondary={this.props.subtitle}\r\n                    primaryTypographyProps={{color: this.props.selected ? 'primary' : 'secondary'}}\r\n                    secondaryTypographyProps={{variant: 'caption'}}\r\n                >\r\n                    {this.props.label}\r\n                </ListItemText>\r\n            </ListItem>\r\n        )\r\n\r\n        return (\r\n            <>\r\n                {typeof this.props.href === 'string'\r\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\r\n                    : this.props.href\r\n                        ? this.props.href(LinkContent)\r\n                        : LinkContent\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport type MenuItemProps = {\r\n    icon?: React.ComponentType<SvgIconProps>\r\n    label: string\r\n    selected: boolean\r\n    href: string | ((content: React.ReactChild) => React.ReactChild)\r\n}\r\n\r\nconst NestedListItem = styled(ListItem)`&&{\r\n    padding-left: 52px;\r\n}`\r\n\r\nexport class MenuItem extends React.PureComponent<MenuItemProps>{\r\n    render(){\r\n        const Icon = this.props.icon\r\n        const LinkContent = (\r\n            <NestedListItem>\r\n                {Icon &&\r\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'secondary'}/></ListItemIcon>\r\n                }\r\n                <ListItemText primaryTypographyProps={{color: this.props.selected ? 'primary' : 'secondary'}}>{this.props.label}</ListItemText>\r\n            </NestedListItem>\r\n        )\r\n\r\n        return (\r\n            <>\r\n                {typeof this.props.href === 'string'\r\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\r\n                    : this.props.href(LinkContent)\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class MobileMenu extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class TopMenu extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\n\r\n// Original icon colors: TODO: Use these?\r\n// blue: #00B8F3\r\n// white: #fff\r\n\r\nexport type TfsoIconProps = {} & SvgIconProps\r\n\r\nexport default React.memo((props: TfsoIconProps) => (\r\n    <SvgIcon\r\n        {...props}\r\n        viewBox='0 0 50.59 30.35'\r\n    >\r\n        <path\r\n            d={'M33.22,9.62A6,6,0,0,0,29.85,13a5.06,5.06,0,0,0-4.56-2.87,5.06,5.06,0,1,1,5.06-5.06A5.06,5.06,0,0,0,33.22,9.62ZM45.53,20.23A5.06,5.06,0,0,1,41,17.36a6,6,0,0,1-3.36,3.37,5.06,5.06,0,0,1,2.87,4.56,5.06,5.06,0,1,0,5.06-5.06Zm-25.3-5.06a5.06,5.06,0,1,0-10.12,0,5.06,5.06,0,0,1-5.06,5.06,5.06,5.06,0,1,0,5.06,5.06,5.06,5.06,0,0,1,9.62-2.19,6,6,0,0,1,3.37-3.37A5.06,5.06,0,0,1,20.23,15.18Zm15.18-5.06a5.06,5.06,0,0,0-5.06,5v.13a5.06,5.06,0,0,1-2.87,4.5,6,6,0,0,1,3.37,3.36,5.06,5.06,0,0,1,4.56-2.87,5.06,5.06,0,0,0,0-10.12ZM25.29,20.23a5.06,5.06,0,1,0,5.06,5.06A5.06,5.06,0,0,0,25.29,20.23Z'}\r\n        />\r\n    </SvgIcon>\r\n))","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport styled from 'styled-components/macro'\r\nimport TfsoIcon from '../icons/Tfso'\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n`\r\nconst StyledAppBar = styled(AppBar)`&&{\r\n  background: white;\r\n  z-index: ${props => props.theme.mui.zIndex.drawer + 1};  \r\n}`\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: stretch;\r\n`\r\nconst Left = styled.div`&&{\r\n  flex: 0 0 240px;\r\n  background-color: ${({theme}) => theme.tfso.colors.tfso};\r\n  color: #fff;\r\n  padding-left: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n}`\r\nconst Right = styled.div`&&{\r\n  flex: 1;\r\n}`\r\n\r\nconst MenuButton = styled(IconButton)`&&{\r\n  margin-left: -12px;\r\n  margin-right: 20px;\r\n}`\r\n\r\nconst ToolbarRight = styled.div`&&{\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n}`\r\n\r\nexport type TopBarProps = {\r\n    title: string\r\n    onMenuToggle?: () => void\r\n}\r\n\r\nexport default class TopBar extends React.PureComponent<TopBarProps, any>{\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Root>\r\n                <StyledAppBar position=\"static\" color=\"default\" elevation={1}>\r\n                    <Wrapper>\r\n                        <Left>\r\n                            <TfsoIcon color=\"inherit\" fontSize=\"large\" />\r\n                            <Typography variant=\"h6\" color=\"inherit\" style={{paddingLeft: 7}}>\r\n                                {this.props.title}\r\n                            </Typography>\r\n                        </Left>\r\n                        <Right>\r\n                            <Toolbar variant=\"dense\">\r\n                                {this.props.onMenuToggle &&\r\n                                <MenuButton color=\"inherit\" aria-label=\"Open drawer\" onClick={e => this.props.onMenuToggle && this.props.onMenuToggle()}>\r\n                                    <MenuIcon/>\r\n                                </MenuButton>\r\n                                }\r\n                                <ToolbarRight>\r\n                                    <div>{this.props.children}</div>\r\n                                </ToolbarRight>\r\n                            </Toolbar>\r\n                        </Right>\r\n                    </Wrapper>\r\n                </StyledAppBar>\r\n            </Root>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nfunction setTitle(text){\r\n    document.title = text\r\n}\r\n\r\ntype Props = {\r\n    text: string\r\n}\r\n\r\nexport default class DocumentTitle extends React.PureComponent<Props>{\r\n    constructor(props){\r\n        super(props)\r\n        setTitle(props.text)\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.text !== this.props.text){\r\n            setTitle(nextProps.text)\r\n        }\r\n    }\r\n    render(){\r\n        return ''\r\n    }\r\n}","import React from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport TopBar from './Topbar'\r\nimport DocumentTitle from './DocumentTitle'\r\n\r\n// Wrap everything\r\nexport const LayoutWrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column; // Flex header and body from top to bottom\r\n`\r\n\r\n// Put topbar in here\r\nexport const LayoutHeader = styled.div`\r\n  \r\n`\r\n\r\n// Put everything below topbar here\r\nexport const LayoutBody = styled.div`\r\n  flex: 1; // Fill the rest of the page after header has taken its space\r\n  min-height: 0;\r\n  display: flex;\r\n`\r\n\r\n// Put menu here\r\nexport const LayoutBodyLeft = styled.div`\r\n\r\n`\r\n\r\n// Put your app here\r\nexport const LayoutBodyRight = styled.div`\r\n  flex: 1;\r\n  min-height: 0;\r\n  padding: 15px;\r\n  overflow-y: auto;\r\n`\r\n\r\ntype LayoutProps = {\r\n    title: string\r\n    docTitle: string\r\n    menu: React.ReactNode\r\n    topMenu: React.ReactNode\r\n    onMenuToggle: () => void\r\n}\r\n\r\nexport default class Layout extends React.PureComponent<LayoutProps>{\r\n    render(){\r\n        return (\r\n            <LayoutWrapper>\r\n                <DocumentTitle text={this.props.docTitle} />\r\n                <LayoutHeader>\r\n                    <TopBar\r\n                        title={this.props.title}\r\n                        onMenuToggle={this.props.onMenuToggle}\r\n                    >\r\n                        {this.props.topMenu}\r\n                    </TopBar>\r\n                </LayoutHeader>\r\n                <LayoutBody>\r\n                    <LayoutBodyLeft>\r\n                        {this.props.menu}\r\n                    </LayoutBodyLeft>\r\n                    <LayoutBodyRight>\r\n                        {this.props.children}\r\n                    </LayoutBodyRight>\r\n                </LayoutBody>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\ntype LayoutNoMenuProps = {\r\n    title: string\r\n    docTitle: string\r\n    topMenu: React.ReactNode\r\n}\r\n\r\nexport class LayoutNoMenu extends React.PureComponent<LayoutNoMenuProps>{\r\n    render(){\r\n        return (\r\n            <LayoutWrapper>\r\n                <DocumentTitle text={this.props.docTitle} />\r\n                <LayoutHeader>\r\n                    <TopBar\r\n                        title={this.props.title}\r\n                    >\r\n                        {this.props.topMenu}\r\n                    </TopBar>\r\n                </LayoutHeader>\r\n                <LayoutBody>\r\n                    <LayoutBodyRight>\r\n                        {this.props.children}\r\n                    </LayoutBodyRight>\r\n                </LayoutBody>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport styled, {DefaultTheme} from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MuiSnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n}\r\n\r\nconst bgColor = (variant: AlertVariant, palette: DefaultTheme['tfso']['palette']) => {\r\n    switch(variant){\r\n    case 'success': return palette.success\r\n    case 'error': return palette.alert\r\n    case 'info': return palette.primaryLight\r\n    case 'warning': return palette.warning\r\n    }\r\n}\r\n\r\nconst SnackbarContent = ({variant, ...other}) => <MuiSnackbarContent {...other} />\r\nconst StyledSnack = styled(SnackbarContent)`&&{\r\n    background-color: ${({variant, theme}) => bgColor(variant, theme.tfso.palette)}\r\n}`\r\n\r\ntype AlertVariant = 'success' | 'warning' | 'error' | 'info'\r\n\r\nexport type AlertProps = {\r\n    message: React.ReactNode\r\n    onClose(): void\r\n    variant: AlertVariant\r\n}\r\n\r\nconst Alert = (props: AlertProps) => {\r\n    const {message, onClose, variant} = props\r\n    const Icon = variantIcon[variant]\r\n\r\n    return (\r\n        <StyledSnack\r\n            variant={variant}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" style={{display: 'flex', alignItems: 'center'}}>\r\n                    <Icon style={{fontSize: 20, opacity: 0.9, marginRight: 10}} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon style={{fontSize: 20}} />\r\n                </IconButton>,\r\n            ]}\r\n        />\r\n    )\r\n}\r\n\r\nAlert.propTypes = {\r\n    message: PropTypes.node.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\n\r\nexport type BigNumberProps = {\r\n    /**\r\n     * Choose `light` when you have a dark background, otherwise `dark`\r\n     * @default light\r\n     */\r\n    color?: 'light' | 'dark'\r\n\r\n    /**\r\n     * @default large\r\n     */\r\n    size?: 'medium' | 'large'\r\n    children: string | number\r\n}\r\n\r\nconst fontSizeMap: {[P in Required<BigNumberProps>['size']]: number} = {\r\n    medium: 32,\r\n    large: 48\r\n}\r\n\r\nconst defaultProps: Required<Pick<BigNumberProps, 'color' | 'size'>> = {\r\n    color: 'light',\r\n    size: 'large',\r\n}\r\n\r\nconst wrapper = ({size, color, ...props}: Required<BigNumberProps>) => <div {...props} />\r\n// TODO: These should be on the BigNumber component instead..\r\nwrapper.defaultProps = defaultProps\r\nwrapper.propTypes = {\r\n    color: PropTypes.oneOf(['light', 'dark']),\r\n    size: PropTypes.oneOf(['medium', 'large']),\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]).isRequired\r\n}\r\n\r\nconst BigNumber = styled(wrapper)`&&{\r\n    font-size: ${({theme, size = defaultProps.size}) => theme.mui.typography.pxToRem(fontSizeMap[size])};\r\n    line-height: normal;\r\n    letter-spacing: 0.08em;\r\n    color: ${({color = defaultProps.color}) => color === 'light' ? '#FFFFFF' : '#404040'};\r\n    white-space: nowrap\r\n}`\r\n\r\nexport default BigNumber as React.ComponentType<BigNumberProps>","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport Slide from '@material-ui/core/Slide'\r\n\r\nexport type ConfirmationDialogProps = {\r\n    open: boolean\r\n    title?: string\r\n    message: string\r\n    okButtonText: string\r\n    cancelButtonText: string\r\n    onOk: () => void\r\n    onCancel: () => void\r\n}\r\n\r\nconst TransitionComponent = props => <Slide direction='up' {...props} />\r\n\r\nconst ConfirmationDialog = (props: ConfirmationDialogProps) => {\r\n    const {open, onCancel, onOk, title, message, okButtonText, cancelButtonText} = props\r\n    return (\r\n        <Dialog\r\n            TransitionComponent={TransitionComponent}\r\n            keepMounted={false}\r\n            open={open}\r\n            onClose={onCancel}\r\n            maxWidth={'xs'}\r\n        >\r\n            {title && <DialogTitle>{title}</DialogTitle>}\r\n            <DialogContent>{message}</DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onCancel} color=\"primary\">{cancelButtonText}</Button>\r\n                <Button onClick={onOk} color=\"secondary\">{okButtonText}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    title: PropTypes.string,\r\n    message: PropTypes.string.isRequired,\r\n    okButtonText: PropTypes.string.isRequired,\r\n    cancelButtonText: PropTypes.string.isRequired,\r\n    onOk: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ConfirmationDialog","import React from 'react'\r\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nexport type SearchFieldProps = TextFieldProps\r\n\r\ntype State = {\r\n    editing: boolean\r\n}\r\n\r\nexport default class SearchField extends React.PureComponent<SearchFieldProps, State>{\r\n    static defaultProps = {\r\n        placeholder: 'Search',\r\n        margin: 'dense',\r\n        InputProps: {\r\n            startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>\r\n        }\r\n    }\r\n\r\n    state: State = {\r\n        editing: false\r\n    }\r\n\r\n    onBlur = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: false})\r\n        const {onBlur} = this.props\r\n        onBlur && onBlur(e)\r\n    }\r\n\r\n    onFocus = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: true})\r\n        const {onFocus} = this.props\r\n        onFocus && onFocus(e)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <TextField\r\n                fullWidth={this.state.editing}\r\n                {...this.props}\r\n                onBlur={this.onBlur}\r\n                onFocus={this.onFocus}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\r\n\r\ntype Props = {\r\n    value: string\r\n    onChange: (value: string) => void\r\n    dirty?: boolean\r\n    enableDirtyCheck?: boolean\r\n}\r\n\r\ntype State = {\r\n    editing: boolean\r\n    value: string\r\n    prevProps: Props\r\n}\r\n\r\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>\r\n\r\nfunction handleEvent(event: React.KeyboardEvent<HTMLDivElement>){\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n    // the above only prevents other synthetic events, if we want to prevent global listeners too, we need to stop the propagation on the native event as well\r\n    event.nativeEvent.stopImmediatePropagation()\r\n}\r\n\r\nexport type TextFieldEditorProps = Props & Partial<Omit<TextFieldProps, 'value' | 'onChange'>>\r\n\r\nexport default class TextFieldEditor extends React.PureComponent<TextFieldEditorProps, State>{\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n        onChange: PropTypes.func.isRequired,\r\n        dirty: PropTypes.bool\r\n    }\r\n\r\n    _inputRef: React.RefObject<HTMLInputElement> = React.createRef()\r\n\r\n    state: State = {\r\n        editing: false,\r\n        value: this.props.value,\r\n        prevProps: this.props\r\n    }\r\n\r\n    static getDerivedStateFromProps(props: Readonly<TextFieldEditorProps>, state: Readonly<State>){\r\n        const prevProps = state.prevProps\r\n\r\n        if(prevProps.value !== props.value){ return {value: props.value, prevProps: props} }\r\n\r\n        return {prevProps: props}\r\n    }\r\n\r\n    blur = () => { this._inputRef.current && this._inputRef.current.blur() }\r\n\r\n    onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n        this.props.onKeyDown && this.props.onKeyDown(event)\r\n        if(event.defaultPrevented){ return }\r\n\r\n        if(event.ctrlKey){\r\n            switch(event.key){\r\n            case 's':\r\n            // this event should not be 'handled' here (eg. invoke handleEvent(event)), control may want to perform other actions on ctrl+s\r\n            // It should behave as a save changes in the control as well however\r\n                this.blur()\r\n                break\r\n            case 'z':\r\n                handleEvent(event)\r\n                this.setState({editing: false, value: this.props.value}, this.blur)\r\n                break\r\n            default: break\r\n            }\r\n        }else{\r\n            switch(event.key){\r\n            case 'Enter':\r\n                if(this.props.multiline){ break }\r\n                handleEvent(event)\r\n                this.blur()\r\n                break\r\n            case 'Escape':\r\n                handleEvent(event)\r\n                this.setState({editing: false, value: this.props.value}, this.blur)\r\n                break\r\n            default: break\r\n            }\r\n        }\r\n    }\r\n\r\n    onFocus = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: true})\r\n        this.props.onFocus && this.props.onFocus(e)\r\n    }\r\n\r\n    onBlur = (e: React.EventHandler<any>) => {\r\n        if(!this.state.editing){ return } // The method should be safe to call multiple times, but we don't want to raise the event multiple times if we dont need to\r\n\r\n        this.props.onChange(this.state.value)\r\n        this.setState({editing: false})\r\n        this.props.onBlur && this.props.onBlur(e)\r\n    }\r\n\r\n    onChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement | HTMLSelectElement>) => {\r\n        const value = event.target.value\r\n        this.setState({value, editing: true})\r\n    }\r\n\r\n    render(){\r\n        const {dirty: dirtyProp, onChange: onChangeProp, value: valueProp, enableDirtyCheck, ...otherProps} = this.props\r\n        const {value} = this.state\r\n\r\n        const isDirty = enableDirtyCheck ? this.props.value !== value || !!dirtyProp : !!dirtyProp\r\n\r\n        return (\r\n            <TextField\r\n                {...otherProps as any}\r\n                inputRef={this._inputRef}\r\n                value={value}\r\n                onFocus={this.onFocus}\r\n                onChange={this.onChange}\r\n                onBlur={this.onBlur}\r\n                onKeyDown={this.onKeyDown}\r\n                InputProps={{style: {fontStyle: isDirty ? 'italic' : 'normal'}}}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport {withTheme, DefaultTheme, WithTheme} from 'styled-components'\r\n\r\nimport TrendingUp from '@material-ui/icons/TrendingUp'\r\nimport TrendingFlat from '@material-ui/icons/TrendingFlat'\r\nimport TrendingDown from '@material-ui/icons/TrendingDown'\r\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\r\n\r\nexport type TrendingProps = {\r\n    variant: 'up' | 'down' | 'flat'\r\n} & SvgIconProps\r\n\r\nconst iconMap: {[P in TrendingProps['variant']]: React.ComponentType<SvgIconProps>} = {\r\n    up: TrendingUp,\r\n    flat: TrendingFlat,\r\n    down: TrendingDown,\r\n}\r\n\r\nconst getColor = (variant: TrendingProps['variant'], theme: DefaultTheme) => {\r\n    switch(variant){\r\n    case 'up': return theme.tfso.palette.success\r\n    case 'down': return theme.tfso.palette.warning\r\n    case 'flat': return theme.tfso.palette.alert\r\n    default: return undefined\r\n    }\r\n}\r\n\r\nconst trending = ({variant, theme, ...iconProps}: TrendingProps & WithTheme) => {\r\n    const Icon = iconMap[variant]\r\n    const nativeColor = getColor(variant, theme)\r\n    return (\r\n        <Icon\r\n            nativeColor={nativeColor}\r\n            {...iconProps}\r\n        />\r\n    )\r\n}\r\n\r\ntrending.propTypes = {\r\n    variant: PropTypes.oneOf(['up', 'down', 'flat']).isRequired\r\n}\r\n\r\nexport default React.memo(withTheme(trending))","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n// https://www.w3schools.com/charsets/ref_emoji.asp\r\nconst emojis = {\r\n    middleFinger: <>&#128405;</>,\r\n    indexFinger: <>&#128070;</>,\r\n    flex: <>&#128170;</>,\r\n    brokenHeart: <>&#128148;</>,\r\n    perfect: <>&#128076;</>,\r\n    thumbsUp: <>&#128077;</>,\r\n    thumbsDown: <>&#128078;</>,\r\n    clap: <>&#128079;</>,\r\n    heart: <>&#128152;</>,\r\n    fire: <>&#128293;</>,\r\n    bulb: <>&#128161;</>,\r\n    crap: <>&#128169;</>,\r\n    thinking: <>&#129300;</>,\r\n    rocket: <>&#128640;</>,\r\n}\r\n\r\nexport type EmojiProps = {\r\n    variant: keyof typeof emojis\r\n}\r\n\r\nconst Emoji = (props: EmojiProps) => emojis[props.variant]\r\n\r\nEmoji.propTypes = {\r\n    variant: PropTypes.oneOf(Object.keys(emojis))\r\n}\r\n\r\nexport default Emoji","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    beforeShow?: any\r\n    delayMs?: number\r\n    show?: boolean\r\n    children: React.ReactNode\r\n}\r\n\r\ntype State = {\r\n    show: boolean\r\n}\r\n\r\nexport default class Delay extends React.PureComponent<Props, State>{\r\n    static propTypes = {\r\n        beforeShow: PropTypes.node,\r\n        delayMs: PropTypes.number,\r\n        show: PropTypes.bool,\r\n        children: PropTypes.node.isRequired\r\n    }\r\n\r\n    _timer: any = null\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.setState({show: false})\r\n        this._timer = setTimeout(() => {\r\n            this.setState({show: true})\r\n        }, this.props.delayMs || 1000)\r\n    }\r\n    componentWillUnmount(){\r\n        clearTimeout(this._timer)\r\n    }\r\n    render(){\r\n        if(this.props.show || this.state.show){\r\n            return this.props.children\r\n        }\r\n\r\n        return this.props.beforeShow || null\r\n    }\r\n}","import React, {HTMLProps} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    children: (hover: boolean, ref: React.RefObject<any>) => React.ReactNode\r\n} & HTMLProps<HTMLDivElement>\r\n\r\ntype State = {\r\n    hover: boolean\r\n}\r\n\r\nexport default class Hoverable extends React.PureComponent<Props, State>{\r\n    private ref: React.RefObject<any>\r\n\r\n    static propTypes = {\r\n        children: PropTypes.func.isRequired\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.ref = React.createRef()\r\n\r\n        this.state = {\r\n            hover: false\r\n        }\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState(state => ({hover: !state.hover}))\r\n    }\r\n\r\n    hoverOn = () => this.setState({hover: true})\r\n    hoverOff = () => this.setState({hover: false})\r\n\r\n    render(){\r\n        const {children, ...restProps} = this.props\r\n\r\n        return (\r\n            <div\r\n                ref={this.ref}\r\n                onMouseEnter={this.hoverOn}\r\n                onMouseLeave={this.hoverOff}\r\n                {...restProps}\r\n            >\r\n                {children(this.state.hover, this.ref)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {HTMLProps} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    children: (tabIndex: number, next: () => void, prev: () => void) => React.ReactNode\r\n    index?: number\r\n    length?: number\r\n} & HTMLProps<HTMLDivElement>\r\n\r\ntype State = {\r\n    index: number\r\n}\r\n\r\nexport default class Wizard extends React.PureComponent<Props, State>{\r\n    static propTypes = {\r\n        children: PropTypes.func.isRequired,\r\n        index: PropTypes.number,\r\n        length: PropTypes.number\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {index: props.index || 0}\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps){\r\n        if(nextProps.hasOwnProperty('index')){\r\n            return {index: nextProps.index}\r\n        }\r\n        return null\r\n    }\r\n\r\n    next = () => this.setState(state => {\r\n        if(this.props.length && state.index + 1 >= this.props.length) return state\r\n        return {index: state.index + 1}\r\n    })\r\n    prev = () => this.setState(state => {\r\n        if(state.index - 1 < 0) return state\r\n        return {index: state.index - 1}\r\n    })\r\n\r\n    render(){\r\n        const {children, ...restProps} = this.props\r\n\r\n        return (\r\n            <div {...restProps}>\r\n                {children(this.state.index, this.next, this.prev)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Styled, {css} from 'styled-components/macro'\r\n\r\nexport type TfsoLoadingIconProps = {\r\n    /**\r\n     * @default infinite\r\n     */\r\n    once?: boolean\r\n} & SvgIconProps\r\n\r\nconst TfsoLoadingIconWrapper = ({once, ...other}: TfsoLoadingIconProps) => <SvgIcon {...other}/>\r\n\r\nconst path = css`\r\n    opacity: 1;\r\n    animation-delay: 1.5s;\r\n`\r\nconst StyledSvgIcon: React.ComponentType<SvgIconProps> = Styled(TfsoLoadingIconWrapper)`&&{\r\n    #path1{\r\n        ${path}\r\n        animation: fade-in1 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path2{\r\n        ${path}\r\n        animation: fade-in2 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path3{\r\n        ${path}\r\n        animation: fade-in3 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path4{\r\n        ${path}\r\n        animation: fade-in4 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path5{\r\n        ${path}\r\n        animation: fade-in5 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    @keyframes fade-in1 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 1; }\r\n        40% { opacity: 1; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in2 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 1; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in3 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in4 {\r\n        0%   { opacity:0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 0.2; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in5 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 0.2; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n}` as any // seems like returntype of styled-components adds string as a type of _ref.. dunnp why\r\n\r\nexport default React.memo((props: TfsoLoadingIconProps) => (\r\n    <StyledSvgIcon\r\n        {...props}\r\n        viewBox=\"0 0 37 23\"\r\n        fillRule='evenodd'\r\n        strokeWidth=\"1\"\r\n    >\r\n        <path d=\"M21.79 9.81C21.17789 8.5323532 19.886707 7.7195303 18.47 7.72 16.444136 7.7143752 14.803816 6.0724096 14.800223 4.0465408 14.79663 2.020672 16.431115 0.37289845 18.456947 0.36008776 20.482778 0.34727707 22.137972 1.9742478 22.16 4c-0.01782 1.4288443 0.793121 2.7388262 2.08 3.36-1.120033 0.4431782-2.006822 1.3299671-2.45 2.45l0 0z\" id=\"path5\"/>\r\n        <path d=\"m33.24 15.09c-1.427527 0.01209-2.733245-0.802525-3.35-2.09-0.443178 1.120033-1.329967 2.006822-2.45 2.45 1.275973 0.613987 2.088053 1.903991 2.09 3.32 0 2.032408 1.647592 3.68 3.68 3.68 2.032408 0 3.68-1.647592 3.68-3.68 0-2.032408-1.647592-3.68-3.68-3.68l0.03 0 0 0z\" id=\"path4\"/>\r\n        <path d=\"m14.79 11.41c0-2.0351693-1.649831-3.685-3.685-3.685-2.0351693 0-3.685 1.6498307-3.685 3.685 0 2.032408-1.6475921 3.68-3.68 3.68-2.0324079 0-3.68 1.647592-3.68 3.68 0 2.032408 1.6475921 3.68 3.68 3.68 2.0324079 0 3.68-1.647592 3.68-3.68-0.00119-1.719312 1.1882715-3.210312 2.864877-3.591141 1.676605-0.380829 3.39346 0.450022 4.135123 2.001141 0.443178-1.120033 1.329967-2.006822 2.45-2.45-1.27208-0.616837-2.079908-1.906255-2.08-3.32l0 0 0 0z\" id=\"path2\"/>\r\n        <path d=\"m25.84 7.73c-2.016889-0.0001192-3.658077 1.6232303-3.68 3.64l0 0.09c-0.02094 1.397916-0.830116 2.663946-2.09 3.27 1.120033 0.443178 2.006822 1.329967 2.45 2.45 0.613987-1.275973 1.903991-2.088053 3.32-2.09 2.035169 0 3.685-1.649831 3.685-3.685 0-2.0351693-1.649831-3.685-3.685-3.685l0 0.01 0 0z\" id=\"path3\"/>\r\n        <path d=\"m18.47 15.1c-2.031097 0.0055-3.673671 1.655547-3.669994 3.686649 0.0037 2.031101 1.652215 3.675171 3.683318 3.673336C20.514428 22.45815 22.159993 20.811104 22.16 18.78 22.162665 17.800536 21.774754 16.860421 21.082167 16.167833 20.389579 15.475246 19.449463 15.087335 18.47 15.09l0 0.01 0 0z\" id=\"path1\"/>\r\n    </StyledSvgIcon>\r\n))\r\n","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nexport const MaterialUiIcon = React.memo((props: SvgIconProps) => (\r\n    <SvgIcon {...props} viewBox=\"0 0 600 476.6\">\r\n        <path d=\"m0 259.8v-259.8l225 129.9v86.6l-150-86.6v173.2z\" fill=\"#00b0ff\"/>\r\n        <path d=\"m225 129.9 225-129.9v259.8l-150 86.6-75-43.3 150-86.6v-86.6l-150 86.6z\" fill=\"#0081cb\"/>\r\n        <path d=\"m225 303.1v86.6l150 86.6v-86.6z\" fill=\"#00b0ff\"/>\r\n        <path d=\"m375 476.3 225-129.9v-173.2l-75 43.3v86.6l-150 86.6zm150-346.4v-86.6l75-43.3v86.6z\" fill=\"#0081cb\"/>\r\n    </SvgIcon>\r\n))\r\n\r\nexport type MaterialUiLinkProps = {\r\n    iconProps?: SvgIconProps\r\n}\r\n\r\nconst MaterialUiLink = (props: MaterialUiLinkProps) => (\r\n    <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\r\n        <MaterialUiIcon fontSize='large' {...props.iconProps as any} />\r\n    </Link>\r\n)\r\n\r\nexport default MaterialUiLink\r\n","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Link from '@material-ui/core/Link'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nexport const GitHubIcon = React.memo((props: SvgIconProps) => (\r\n    <SvgIcon {...props}>\r\n        <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\r\n    </SvgIcon>\r\n))\r\n\r\nexport type GitHubLinkProps = {\r\n    path?: string\r\n    tooltip?: string\r\n    iconProps?: SvgIconProps\r\n}\r\n\r\nconst GitHubLink = (props: GitHubLinkProps) => {\r\n    return (\r\n        <Link href={`https://github.com/tfso/react-tfso-components${props.path ? `/${props.path}` : ''}`} target='_blank' rel='noreferrer' >\r\n            <Tooltip title={props.tooltip ? props.tooltip : 'View on GitHub'}>\r\n                <GitHubIcon fontSize={props.iconProps && props.iconProps.fontSize || 'large'} {...props.iconProps as any} />\r\n            </Tooltip>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default GitHubLink\r\n","import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Zoom from '@material-ui/core/Zoom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\r\nimport {MaterialUiIcon} from '../components/MaterialUiLink'\r\nimport {GitHubIcon} from '../components/GitHubLink'\r\n\r\n// TODO: this could be a Util HOC component\r\nconst CenterTop = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    height: 100%;\r\n`\r\n\r\nconst Home = () => {\r\n    return (\r\n        <CenterTop>\r\n            <TfsoLoading once color='primary' fontSize='inherit' style={{fontSize: 400}} />\r\n            <Typography variant='h3' color='primary' paragraph>\r\n                REACT-TFSO-COMPONENTS\r\n            </Typography>\r\n            <Typography variant='h6' align='center' color='textSecondary' paragraph>\r\n                Something something useful description something dark side (TODO) <br />\r\n                Supplementary React components based on Material-UI with Tfso styling<br />\r\n            </Typography>\r\n            <Grid container justify='center'>\r\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Zoom in appear style={{transitionDelay: '250ms'}} >\r\n                        <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\r\n                            <MaterialUiIcon style={{fontSize: 150}} />\r\n                        </Link>\r\n                    </Zoom>\r\n                    <Zoom in appear style={{transitionDelay: '750ms'}} >\r\n                        <Typography variant='h6'>\r\n                            Find standard components <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>here</Link>\r\n                        </Typography>\r\n                    </Zoom>\r\n                </Grid>\r\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Zoom in appear style={{transitionDelay: '500ms'}}>\r\n                        <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >\r\n                            <GitHubIcon style={{fontSize: 150}} color='primary' />\r\n                        </Link>\r\n                    </Zoom>\r\n                    <Zoom in appear style={{transitionDelay: '1000ms'}} >\r\n                        <Typography variant='h6'>\r\n                            View source on <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >GitHub</Link>\r\n                        </Typography>\r\n                    </Zoom>\r\n                </Grid>\r\n            </Grid>\r\n        </CenterTop>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport Prism from 'prismjs'\r\n\r\n// Load languages\r\nimport 'prismjs/components/prism-clike'\r\nimport 'prismjs/components/prism-css'\r\nimport 'prismjs/components/prism-markup'\r\nimport 'prismjs/components/prism-javascript'\r\nimport 'prismjs/components/prism-typescript'\r\nimport 'prismjs/components/prism-jsx'\r\nimport 'prismjs/components/prism-tsx'\r\n\r\n// Load style\r\nimport 'prismjs/themes/prism.css'\r\n\r\ntype CodeProps = {\r\n    language: 'js' | 'ts' | 'tsx' | 'jsx'\r\n    children: React.ReactNode\r\n}\r\n\r\nexport class Code extends React.PureComponent<CodeProps>{\r\n    _ref: React.RefObject<HTMLPreElement> = React.createRef()\r\n\r\n    componentDidMount(){\r\n        this.highlight()\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.highlight()\r\n    }\r\n\r\n    highlight = () => {\r\n        if(!this._ref.current){ return }\r\n        Prism.highlightElement(this._ref.current!)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <pre ref={this._ref} className={`language-${this.props.language}`}>\r\n                <code className={`language-${this.props.language}`}>\r\n                    {this.props.children}\r\n                </code>\r\n            </pre>\r\n        )\r\n    }\r\n}","import React, {ReactChild} from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport CodeIcon from '@material-ui/icons/Code'\r\n\r\nimport GitHubLink from './GitHubLink'\r\nimport {Code} from './code'\r\n\r\nexport const Demo = (props) => <Paper style={{padding: 15, marginBottom: 30}}>{props.children}</Paper>\r\n\r\nexport type DemoTitleProps = {\r\n    children: string\r\n    /**\r\n     * The path to the Demo component. `src/demo/demos/` will be appended in front of the path\r\n     */\r\n    demoPath?: string\r\n\r\n    /**\r\n     * The path to the Implementation of the component. `src/lib/` will be appended in front of the path\r\n     */\r\n    srcPath?: string\r\n}\r\nexport const DemoTitle = (props: DemoTitleProps) => {\r\n    return (\r\n        <Grid container justify='space-between' alignItems='baseline' >\r\n            <Grid item>\r\n                <Typography variant=\"h5\">\r\n                    {props.children}\r\n                </Typography>\r\n            </Grid>\r\n            {props.srcPath || props.demoPath\r\n                ? <Grid item xs={2} container spacing={16} justify='flex-end'>\r\n                    {props.demoPath && <Grid item><GitHubLink iconProps={{fontSize: 'default', color: 'secondary'}} path={`blob/master/src/demo/demos/${props.demoPath}`} tooltip={`View demo source for ${props.children}`} /></Grid>}\r\n                    {props.srcPath && <Grid item><GitHubLink iconProps={{fontSize: 'default', color: 'primary'}} path={`blob/master/src/lib/${props.srcPath}`} tooltip={`View source for ${props.children}`}/></Grid> }\r\n                </Grid>\r\n                : null\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\nexport const DemoHelp = (props) => <Typography variant='subtitle1' paragraph>{props.children}</Typography>\r\nexport const DemoContent = (props: { children: Array<ReactChild> | ReactChild}) => (\r\n    <div style={{marginTop: 30}}>\r\n        <Typography variant=\"subtitle1\" >Example</Typography>\r\n        <Divider />\r\n        <br />\r\n        <Grid container spacing={16} alignItems='center'>\r\n            {props.children && Array.isArray(props.children)\r\n                ? props.children.map((child, i) => (\r\n                    <Grid item key={i} xs={i === 0 ? 12 : false}>\r\n                        {child}\r\n                    </Grid>\r\n                ))\r\n                : <Grid item xs={12} >{props.children}</Grid>\r\n            }\r\n        </Grid>\r\n    </div>\r\n)\r\n\r\nexport type DemoPropsProps = {\r\n    title?: string\r\n    children: React.ReactNode\r\n}\r\n\r\nexport const DemoProps = (props: DemoPropsProps) => (\r\n    <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant='h6'>{props.title || 'Props'}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Default</TableCell>\r\n                        <TableCell>Description</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.children}\r\n                </TableBody>\r\n            </Table>\r\n        </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n)\r\n\r\nexport type DemoPropProps = {\r\n    name: string\r\n    type: string\r\n    default?: string\r\n    description?: string\r\n    required?: boolean\r\n}\r\n\r\nexport const DemoProp = (props: DemoPropProps) => (\r\n    <TableRow>\r\n        <TableCell><code>{`${props.required ? '* ' : ''}${props.name}`}</code></TableCell>\r\n        <TableCell><code>{props.type}</code></TableCell>\r\n        <TableCell><code>{props.default}</code></TableCell>\r\n        <TableCell><Typography>{props.description}</Typography></TableCell>\r\n    </TableRow>\r\n)\r\n\r\ntype DemoCodeProps = Code['props']\r\nexport const DemoCode = (props: DemoCodeProps) => (\r\n    <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<CodeIcon />}>\r\n            <Typography variant='h6'>{`View Demo (${props.language})`}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n            <Code {...props} />\r\n        </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n)","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\r\nimport Tfso, {TfsoIconProps} from '../../lib/icons/Tfso'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nexport default class Icons extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <>\r\n                <TfsoDemo />\r\n                <TfsoLoadingDemo />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\ntype TfsoLogoDemoState = {\r\n    color: TfsoIconProps['color']\r\n    fontSize: TfsoIconProps['fontSize']\r\n    nativeColor: TfsoIconProps['nativeColor']\r\n}\r\n\r\nclass TfsoDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\r\n    state:TfsoLogoDemoState = {\r\n        color: 'primary',\r\n        fontSize: 'large',\r\n        nativeColor: ''\r\n    }\r\n\r\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/Tfso.tsx'>Tfso</DemoTitle>\r\n                <DemoHelp>Tfso logo icon</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Tfso\r\n                        color={this.state.color}\r\n                        fontSize={this.state.fontSize}\r\n                        nativeColor={this.state.nativeColor}\r\n                    />\r\n                    <TextField\r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                    >\r\n                        <MenuItem value='inherit' >inherit</MenuItem>\r\n                        <MenuItem value='primary' >primary</MenuItem>\r\n                        <MenuItem value='secondary' >secondary</MenuItem>\r\n                        <MenuItem value='default' >default</MenuItem>\r\n                        <MenuItem value='action' >action</MenuItem>\r\n                        <MenuItem value='disabled' >disabled</MenuItem>\r\n                        <MenuItem value='error' >error</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='fontSize'\r\n                        value={this.state.fontSize}\r\n                        onChange={this.handleChange('fontSize')}\r\n                    >\r\n                        <MenuItem value='small'>small</MenuItem>\r\n                        <MenuItem value='default'>default</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n\r\n                    </TextField>\r\n                    <TextField\r\n                        label='nativeColor'\r\n                        placeholder='#00B8F3'\r\n                        value={this.state.nativeColor}\r\n                        onChange={this.handleChange('nativeColor')}\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass TfsoLoadingDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\r\n    state:TfsoLogoDemoState = {\r\n        color: 'primary',\r\n        fontSize: 'large',\r\n        nativeColor: ''\r\n    }\r\n\r\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/TfsoLoading.tsx'>Tfso Loading</DemoTitle>\r\n                <DemoHelp>Tfso logo loading icon</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='once' type='boolean' default='false' description='If true, the icon will animate once'/>\r\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <TfsoLoading\r\n                        color={this.state.color}\r\n                        fontSize={this.state.fontSize}\r\n                        nativeColor={this.state.nativeColor}\r\n                    />\r\n                    <TextField\r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                    >\r\n                        <MenuItem value='inherit' >inherit</MenuItem>\r\n                        <MenuItem value='primary' >primary</MenuItem>\r\n                        <MenuItem value='secondary' >secondary</MenuItem>\r\n                        <MenuItem value='default' >default</MenuItem>\r\n                        <MenuItem value='action' >action</MenuItem>\r\n                        <MenuItem value='disabled' >disabled</MenuItem>\r\n                        <MenuItem value='error' >error</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='fontSize'\r\n                        value={this.state.fontSize}\r\n                        onChange={this.handleChange('fontSize')}\r\n                    >\r\n                        <MenuItem value='small'>small</MenuItem>\r\n                        <MenuItem value='default'>default</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        label='nativeColor'\r\n                        placeholder='#00B8F3'\r\n                        value={this.state.nativeColor}\r\n                        onChange={this.handleChange('nativeColor')}\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import {createHashHistory} from 'history'\r\n\r\nconst history = createHashHistory({\r\n    basename: '',\r\n    hashType: 'slash',\r\n})\r\nexport default history","import React from 'react'\r\n\r\nimport history from '../history'\r\n\r\nimport MuiLink, {LinkProps as MuiLinkProps} from '@material-ui/core/Link'\r\nimport styled from 'styled-components/macro'\r\n\r\nexport type LinkProps = {\r\n    to?: string\r\n    children: React.ReactNode\r\n} & MuiLinkProps\r\n\r\nexport default class Link extends React.PureComponent<LinkProps>{\r\n    onClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.props.onClick && this.props.onClick(event)\r\n\r\n        if(event.defaultPrevented || !this.props.to){\r\n            return\r\n        }\r\n        event.preventDefault()\r\n        history.push(this.props.to.toLowerCase())\r\n    }\r\n\r\n    render(){\r\n        const {to, href, underline, ...other} = this.props\r\n        return <MuiLink\r\n            {...other}\r\n            href={to && to.toLowerCase() || href}\r\n            underline={underline || 'none'}\r\n            rel={this.props.target === '_blank' ? 'noreferrer' : undefined}\r\n            onClick={this.onClick}\r\n        />\r\n    }\r\n}\r\n\r\nconst AnchorLink = styled(Link)`&&{\r\n    opacity: 0.2;\r\n    :hover{\r\n        opacity: 1;\r\n    }\r\n}`\r\n\r\nconst getPage = () => window.location.hash.split('/')[1]\r\nexport const Anchor = (props: {id: string}) => {\r\n    const id = `/${getPage()}/${props.id.toLowerCase()}`\r\n    return (\r\n        <AnchorLink id={id} to={id}>#</AnchorLink>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components/macro'\r\n\r\nimport Typography, {TypographyProps} from '@material-ui/core/Typography'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\n\r\nimport {Code} from '../components/code'\r\nimport Link, {Anchor} from '../components/Link'\r\n\r\n// https://www.w3schools.com/charsets/ref_emoji.asp\r\nconst emojis = {\r\n    middleFinger: <>&#128405;</>,\r\n    indexFinger: <>&#128070;</>,\r\n    flex: <>&#128170;</>,\r\n    brokenHeart: <>&#128148;</>,\r\n    perfect: <>&#128076;</>,\r\n    thumbsUp: <>&#128077;</>,\r\n    thumbsDown: <>&#128078;</>,\r\n    clap: <>&#128079;</>,\r\n    heart: <>&#128152;</>,\r\n    fire: <>&#128293;</>,\r\n    bulb: <>&#128161;</>,\r\n    crap: <>&#128169;</>,\r\n    thinking: <>&#129300;</>,\r\n    rocket: <>&#128640;</>\r\n}\r\n\r\nconst Section = styled.div`&&{\r\n    margin-top: ${({theme}) => theme.mui.spacing.unit * 4}px;\r\n    margin-bottom: ${({theme}) => theme.mui.spacing.unit * 2}px;\r\n}`\r\n\r\nconst SubHeading = (props: TypographyProps) => <Typography variant='h4' paragraph {...props} />\r\nconst Paragraph = (props: TypographyProps) => <Typography variant='body1' paragraph {...props} component='div'/>\r\nconst Tip = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\r\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\r\n    <Card elevation={0}>\r\n        <CardContent>\r\n            <Typography variant='h6'>Why?</Typography>\r\n            <Typography variant='body1' component='div'>{props.children}</Typography>\r\n        </CardContent>\r\n    </Card>\r\n    <br />\r\n</>)\r\n\r\nconst Guideline = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\r\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\r\n    <Card elevation={0}>\r\n        <CardContent>\r\n            <Typography variant='body1' component='div'>{props.children}</Typography>\r\n        </CardContent>\r\n    </Card>\r\n</>)\r\n\r\nexport default class Guidelines extends React.PureComponent{\r\n    render = () => (<>\r\n        {this.renderHeading()}\r\n        {this.renderGuidelines()}\r\n        {this.renderTips()}\r\n        {this.renderContributing()}\r\n    </>)\r\n\r\n    renderHeading = () => (\r\n        <>\r\n            <Typography variant='h2' paragraph>\r\n                Guidelines\r\n            </Typography>\r\n            <Typography variant='subtitle1' paragraph>\r\n                <b>{'{WIP} '}</b>Some general guidelines for developing React applications in TFSO\r\n            </Typography>\r\n        </>\r\n    )\r\n\r\n    renderGuidelines = () => (\r\n        <Section>\r\n            <SubHeading>General <Anchor id={'general'}/></SubHeading>\r\n            <Guideline title='Material Design'>\r\n                We strive to follow <Link underline='hover' href='https://material.io/design/' target='_blank'>Google's Material Design</Link> principles. <br />\r\n                Use components and icons from the <Link underline='hover' href='https://material-ui.com/' target='_blank'>MaterialUi package</Link><br />\r\n                This package also provides a theme to be used with <code>material-ui</code>, <Link underline='hover' to='/theme'>get started using it here</Link>\r\n            </Guideline>\r\n        </Section>\r\n    )\r\n\r\n    renderTips = () => (\r\n        <Section>\r\n            <SubHeading>\r\n                {emojis.indexFinger} Do's &amp; Don'ts {emojis.middleFinger} <Anchor id={'dodont'} />\r\n            </SubHeading>\r\n            <Tip title={<>Specific imports</>}>\r\n                Reducing bundle size!<br />\r\n                <b>Bad:</b>\r\n                <Code language='js'>\r\n                    {\r\n                        `import { Button } from '@material-ui/core' // All of material-ui/core will be included in the bundle!\r\nimport { Alert } from 'react-tfso-components' // All of react-tfso-components will be included in the bundle!`\r\n                    }\r\n                </Code>\r\n                <b>Good:</b>\r\n                <Code language='js'>\r\n                    {\r\n                        `import Button from '@material-ui/core/Button'\r\nimport Alert from 'react-tfso-components/dist/Alert'`\r\n                    }\r\n                </Code>\r\n            </Tip>\r\n\r\n            <Tip title={<>{/* emojis.thumbsUp */}Extend from <code>React.PureComponent</code> instead of <code>React.Component</code></>}>\r\n                Your components should never mutate the state directly or have mutable properties.<br/>\r\n                Hence they are pure, and should extend React.PureComponent, which is more performant.\r\n            </Tip>\r\n            <Tip title={<>{/* emojis.thumbsDown */}Don't use <code>componentWillReceiveProps</code></>}>\r\n                It's deprecated and going away in React 17 {emojis.brokenHeart}<br />\r\n                More information <Link underline='hover' href='https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops' target='_blank'>here</Link>\r\n            </Tip>\r\n            <Tip title={<>{/* emojis.thumbsDown */}Avoid copying props to state</>}>\r\n                ...unless you absolutely need to, there are legit reasons, however there is most likely a better solution. <br />\r\n                Perhaps you should invoke a callback provided by props and let the parent component handle something?\r\n            </Tip>\r\n        </Section>\r\n    )\r\n\r\n    renderContributing = () => (<>\r\n        <SubHeading>\r\n            Contributing to <code>react-tfso-components</code> {emojis.rocket} <Anchor id='contributing' />\r\n        </SubHeading>\r\n        <Paragraph>\r\n            Components in this package should:\r\n            <ul>\r\n                <li>Be written in typescript or provide type declarations (d.ts)</li>\r\n                <li>Be composible</li>\r\n                <li>Not be specific to a domain/usage (they should be as generic as possible)</li>\r\n                <li>Validate props using `<code>prop-types`</code></li>\r\n                <li>Be Pure (function component or extending <code>React.PureComponent</code>)</li>\r\n                <li>Have descriptive and easy to understand Props:\r\n                    <ul>\r\n                        <li>Use commonly known verbs/names</li>\r\n                        <li>Function props should begin with 'on', (onFocus, onChange etc.)</li>\r\n                        <li>Boolean props should <i>not</i> begin with 'is', (open instead of isOpen)</li>\r\n                        <li>Boolean props should be optional, (eg. <code>open?: boolean</code>), <code>undefined</code> should be evaluated as <code>false</code></li>\r\n                        <li><code>children</code> should always be explicitly typed (eg: <code>children: string</code>)</li>\r\n                        <li><code>children</code> should be defined as\r\n                            <ul>\r\n                                <li><code>React.ReactCild</code> for single child<br /></li>\r\n                                <li><code>React.ReactNode</code> for multiple children</li>\r\n                                <li>primitive type (<code>undefined</code>, <code>string</code>, <code>number</code> etc.)</li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li>Have a demo with documentation so that developers can easily find and use your component</li>\r\n            </ul>\r\n        </Paragraph>\r\n    </>)\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport {styledTheme} from '../../lib/theme/index'\r\n\r\nconst bgColor = (color: '') => {\r\n    const colors = styledTheme['tfso']['colors']\r\n    return colors[color]\r\n}\r\n\r\nexport type ThemeColorProps = {\r\n    color: React.ReactNode\r\n}\r\n\r\nconst Box = styled.div`\r\n    background-color: ${({color, theme}) => theme.tfso.colors[color]};\r\n    width: 230px;\r\n    height: 230px;\r\n    text-align: center;\r\n`\r\n\r\nconst Txt = styled.div`\r\n  font-size: 2em;\r\n  line-height: 2em;\r\n  color: ${({dark, theme}) => dark ? '#000' : theme.mui.palette.secondary.contrastText}\r\n`\r\n\r\nconst ThemeColor = (props: ThemeColorProps) => {\r\n    const {color} = props\r\n    return (\r\n        <Box color={color}>\r\n            theme.tfso.colors.{color}<br/><br/>\r\n            <Txt>{bgColor(color)}</Txt>\r\n            <Txt dark>{bgColor(color)}</Txt>\r\n        </Box>\r\n    )\r\n}\r\n\r\nThemeColor.propTypes = {\r\n    color: PropTypes.node.isRequired\r\n}\r\n\r\nexport default ThemeColor","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport styled from 'styled-components'\r\nimport ThemeColor from '../components/ThemeColor'\r\nimport {styledTheme} from '../../lib/theme/index'\r\n\r\nconst ThemeColors = styled.div`\r\n  clear: both;\r\n  > div{\r\n    float: left;\r\n      :hover{\r\n        width: 460px;\r\n        height: 230px;\r\n      }\r\n  }\r\n`\r\n\r\nexport default class Theme extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <>\r\n                <Typography variant='h2'>\r\n                    Theme &amp; Styling\r\n                </Typography>\r\n                <Typography variant='subtitle1'>\r\n                    There is more TODO\r\n                </Typography>\r\n                <ThemeColors>\r\n                    {Object.keys(styledTheme['tfso']['colors']).map(color => (\r\n                        <ThemeColor color={color}/>\r\n                    ))}\r\n                </ThemeColors>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport Trending, {TrendingProps} from '../../lib/Trending'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\ntype TrendingDemoState = {\r\n    variant: TrendingProps['variant']\r\n}\r\n\r\nexport default class TrendingDemo extends React.PureComponent<{}, TrendingDemoState>{\r\n    state: TrendingDemoState = {\r\n        variant: 'up'\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='TrendingDemo.tsx' srcPath='Trending.tsx' >Trending</DemoTitle>\r\n                <DemoHelp>\r\n                    A colored icon indicating a trending direction. <br/>\r\n                    Tip: You can use the <code>color</code> or <code>nativeColor</code> property to override the color of the icon.\r\n                </DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='variant' type='up | down | flat' default='' description=''></DemoProp>\r\n                    <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Trending variant={this.state.variant} fontSize='large' />\r\n                    <TextField\r\n                        select\r\n                        value={this.state.variant}\r\n                        onChange={e => this.setState({variant: e.target.value as any})}\r\n                        label='variant'\r\n                    >\r\n                        <MenuItem value='up'>up</MenuItem>\r\n                        <MenuItem value='flat'>flat</MenuItem>\r\n                        <MenuItem value='down'>down</MenuItem>\r\n                    </TextField>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport BigNumber, {BigNumberProps} from '../../lib/BigNumber'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\ntype BigNumberState = {\r\n    color: BigNumberProps['color']\r\n    size: BigNumberProps['size']\r\n}\r\n\r\nexport default class BigNumberDemo extends React.PureComponent<{}, BigNumberState>{\r\n    state: BigNumberState = {\r\n        color: 'dark',\r\n        size: 'large',\r\n    }\r\n\r\n    handleChange = (key: keyof BigNumberState) => (event: React.ChangeEvent<HTMLSelectElement>) => this.setState({[key]: event.target.value} as any)\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='BigNumberDemo.tsx' srcPath='BigNumber.tsx' >BigNumber</DemoTitle>\r\n                <DemoHelp>\r\n                    A Big Number is a number stands out\r\n                </DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='color' type='light | dark' default='light' description=''></DemoProp>\r\n                    <DemoProp name='size' type='medium | large' default='larger' description=''></DemoProp>\r\n                    <DemoProp name='children' type='string | number' default='' description=''></DemoProp>\r\n                    {/* <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp> */}\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Grid container alignItems='center' spacing={32}>\r\n                        <Grid item>\r\n                            <div style={{backgroundColor: this.state.color === 'light' ? '#11beff' : 'inherit', padding: 10}}>\r\n                                <BigNumber\r\n                                    size={this.state.size}\r\n                                    color={this.state.color}\r\n                                >$123</BigNumber>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant='caption'>NB: The BigNumber component does not set the background color!<br /> The background color used here is just for illustrative purposes.</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <TextField\r\n                        select\r\n                        label='size'\r\n                        value={this.state.size}\r\n                        onChange={this.handleChange('size')}\r\n                    >\r\n                        <MenuItem value='medium'>medium</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                    >\r\n                        <MenuItem value='light'>light</MenuItem>\r\n                        <MenuItem value='dark'>dark</MenuItem>\r\n                    </TextField>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\n\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle, DemoCode} from '../components/demo'\r\n\r\nimport Alert, {AlertProps} from '../../lib/Alert'\r\n\r\nconst variantMessage: {[P in AlertProps['variant']]: string } = {\r\n    success: 'GRATE SUCCÉSS!',\r\n    info: 'Informational information',\r\n    warning: 'You better not do that, Brian',\r\n    error: 'That failed horribly...',\r\n}\r\n\r\nexport default class AlertDemo extends React.PureComponent<{}, {variant: AlertProps['variant'], message: string, open: boolean}>{\r\n    state = {\r\n        variant: 'success' as AlertProps['variant'],\r\n        open: false,\r\n        message: 'GRATE SUCCÉSS!'\r\n    }\r\n\r\n    onClose = () => this.setState({open: false})\r\n\r\n    onPress = (variant: AlertProps['variant']) => {\r\n        const message = variantMessage[variant]\r\n        return () => this.setState({open: true, message, variant})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='AlertDemo.tsx' srcPath='Alert.tsx' >Alert</DemoTitle>\r\n                <DemoHelp>A dismissable alert-box that can be used in a SnackBar or as a standard component in a page</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='message' type='string | ReactNode' description='The message string or Element to be displayed' />\r\n                    <DemoProp name='variant' type='success | error | info | warning' description='The variant of the alert. Icon and background-color is selected based on the variant' />\r\n                    <DemoProp name='onClose' type='() => void' description='Callback function invoked when the alert is dismissed' />\r\n                </DemoProps>\r\n                <DemoCode language='tsx'>\r\n                    {`import React from 'react'\r\nimport Alert from 'react-tfso-components/dist/Alert'\r\nimport Snacbar from '@material-ui/core/Snackbar'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nclass Alerter extends React.PureComponent<{}, {open: boolean}> {\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    onClose = () => this.setState({open: false})\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Snackbar\r\n                    open={this.state.open}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    autoHideDuration={2000}\r\n                    onClose={this.onClose}\r\n                >\r\n                    <Alert\r\n                        onClose={this.onClose}\r\n                        message='An unexpected error occured'\r\n                        variant='error'\r\n                    />\r\n                </Snackbar>\r\n                <Button variant='outlined' onClick={() => this.setState({open: true})}>Show Alert</Button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}`\r\n                    }\r\n                </DemoCode>\r\n                <DemoContent>\r\n                    <Snackbar\r\n                        open={this.state.open}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        autoHideDuration={2000}\r\n                        onClose={this.onClose}\r\n                    >\r\n                        <Alert\r\n                            onClose={this.onClose}\r\n                            message={this.state.message}\r\n                            variant={this.state.variant}\r\n                        />\r\n                    </Snackbar>\r\n                    <Button variant='outlined' onClick={this.onPress('success')}>Open Success</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('info')}>Open Info</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('warning')}>Open Warning</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('error')}>Open Error</Button>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport SearchField from '../../lib/SearchField'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\n\r\nexport default class SearchFieldDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='SearchFieldDemo.tsx' srcPath='SearchField.tsx' >SearchField</DemoTitle>\r\n                <DemoHelp>A TextField that gets full width on typing. It also has a search icon adornnment.</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='placeholder' type='string (optional)' default='Search' description=''></DemoProp>\r\n                    <DemoProp name='margin' type='none | dense | normal (optional)' default='dense' description=''></DemoProp>\r\n                    <DemoProp name='InputProps' type=\"TextFieldProps['InputProps'] (optional)\" default='{ startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>}' description=''></DemoProp>\r\n                    <DemoProp name='...' type='TextFieldProps' default='' description='Any other prop is spread to the TextField'></DemoProp>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <SearchField />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextFieldEditor from '../../lib/TextFieldEditor'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport default class TextFieldEditorDemo extends React.PureComponent{\r\n    state = {\r\n        value: 'demo',\r\n        dirty: false,\r\n        enableDirtyCheck: false\r\n    }\r\n\r\n    onReset = () => {\r\n        this.setState({value: ''})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='TextFieldEditorDemo.tsx' srcPath='TextFieldEditor.tsx' >TextFieldEditor</DemoTitle>\r\n                <DemoHelp>A wrapper around material-ui's TextField with some added features</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='value' type='string' default='' description='' />\r\n                    <DemoProp name='onChange' type='(value: string) => void' default='' description='Invoked when the user has finished editing the value (editor looses focus by clicking or tabbing away, pressing the Enter or ctrl+s' />\r\n                    <DemoProp name='dirty' type='boolean (optional)' default='false' description='If true, it is rendered in italic after onChange' />\r\n                    <DemoProp name='enableDirtyCheck' type='boolean (optional)' default='false' description='If true, the component will do internal dirty checking when editing' />\r\n                    <DemoProp name='...' type='TextFieldProps' description='Any other prop is spread to the TextField' />\r\n                </DemoProps>\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} >\r\n                        <Typography>Keybindings</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <code>\r\n                                ctrl + s:&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is NOT handled!)<br/>\r\n                                ctrl + z:&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\r\n                                Enter:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is handled)<br/>\r\n                                Escape:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\r\n                        </code>\r\n                        <br/>\r\n                        <i>When the event is handled `preventDefault()` and `stopPropagation()` is invoked on the `React.KeyboardEvent`</i><br/>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <DemoContent>\r\n                    <TextFieldEditor\r\n                        value={this.state.value}\r\n                        enableDirtyCheck={this.state.enableDirtyCheck}\r\n                        dirty={this.state.dirty}\r\n                        onChange={(value: string) => this.setState({value})}\r\n                    />\r\n                    <Button variant='outlined' onClick={() => this.setState({value: 'demo'})}>Reset</Button>\r\n                    <Button variant='outlined' onClick={() => this.setState({dirty: !this.state.dirty})}>Dirty: {this.state.dirty.toString()}</Button>\r\n                    <Button variant='outlined' onClick={() => this.setState({enableDirtyCheck: !this.state.enableDirtyCheck})}>Enable dirty check: {this.state.enableDirtyCheck.toString()}</Button>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport ConfirmationDialog from '../../lib/ConfirmationDialog'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\n\r\nexport default class ConfirmationDialogDemo extends React.PureComponent{\r\n    state = {\r\n        openConfirmationDialog: false\r\n    }\r\n\r\n    onClickOpenConfirmationDialog = () => {\r\n        this.setState({openConfirmationDialog: true})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='ConfirmationDialogDemo.tsx' srcPath='ConfirmationDialog.tsx' >ConfirmationDialog</DemoTitle>\r\n                <DemoHelp>A Dialog containing Ok and Cancel buttons</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show dialog\" />\r\n                    <DemoProp name=\"title\" type=\"string (optional)\" default=\"\" description=\"Dialog title\" />\r\n                    <DemoProp name=\"message\" type=\"string\" default=\"\" description=\"Dialog content\" />\r\n                    <DemoProp name=\"okButtonText\" type=\"string\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"onOk\" type=\"function\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Button variant='outlined' onClick={this.onClickOpenConfirmationDialog}>Open ConfirmationDialog</Button>\r\n                    <ConfirmationDialog\r\n                        open={this.state.openConfirmationDialog}\r\n                        okButtonText='Ok'\r\n                        cancelButtonText='Cancel'\r\n                        onOk={() => this.setState({openConfirmationDialog: false})}\r\n                        onCancel={() => this.setState({openConfirmationDialog: false})}\r\n                        message='Confirmation dialog message'\r\n                        title='Confirmation dialog title'\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MenuList from '@material-ui/core/MenuList'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport SearchField from '../SearchField'\r\nimport withWidth, {WithWidth} from '@material-ui/core/withWidth'\r\nimport Popover from '@material-ui/core/Popover'\r\n\r\nexport type ClientSwitcherDialogProps = {\r\n    open: boolean\r\n    onCancel: () => void\r\n    onSwitch: (value: string) => void\r\n    children?: undefined\r\n    options: Array<{ value: string, label: string }>\r\n    cancelButtonText: string\r\n    anchorEl?: null | HTMLElement\r\n    disabled?: string\r\n    selected?: string\r\n}\r\n\r\ntype State = {\r\n    filterValue: string,\r\n    focusValue: string\r\n}\r\n\r\nconst TransitionComponent = props => <Slide direction='down' {...props} />\r\n\r\nconst IsMobile = withWidth()((props: WithWidth & {children: (isMobile: boolean) => JSX.Element}) => {\r\n    const isMobile = ['xs', 'sm'].includes(props.width)\r\n    return props.children(isMobile)\r\n})\r\n\r\nexport default class ClientSwitcher extends React.PureComponent<ClientSwitcherDialogProps, State>{\r\n    static propTypes = {\r\n        open: PropTypes.bool.isRequired,\r\n        onCancel: PropTypes.func.isRequired,\r\n        onSwitch: PropTypes.func.isRequired,\r\n        options: PropTypes.arrayOf(PropTypes.shape({value: PropTypes.string.isRequired, label: PropTypes.string.isRequired})).isRequired,\r\n        cancelButtonText: PropTypes.string.isRequired,\r\n        disabled: PropTypes.string,\r\n        selected: PropTypes.string\r\n    }\r\n    _inputRef: React.RefObject<HTMLLIElement> = React.createRef()\r\n    _listRef: React.RefObject<HTMLInputElement> = React.createRef()\r\n    state: State = {\r\n        filterValue: '',\r\n        focusValue: ''\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(!prevProps.open && this.props.open){\r\n            setTimeout(() => {\r\n                this._inputRef.current && this._inputRef.current.focus()\r\n            }, 1)\r\n        }\r\n    }\r\n\r\n    onFilter = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({filterValue: event.target.value})\r\n    }\r\n    onKeyDown = (event: React.KeyboardEvent) => {\r\n        if(!(event && event.keyCode === 40)){\r\n            return\r\n        }\r\n        this._listRef.current && this._listRef.current.focus()\r\n    }\r\n\r\n    onSwitch = (value) => {\r\n        this.props.onSwitch(value)\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.onCancel()\r\n    }\r\n\r\n    render(){\r\n        const renderItems = (\r\n            <>\r\n                <SearchField\r\n                    inputRef={this._inputRef}\r\n                    onChange={this.onFilter}\r\n                    value={this.state.filterValue}\r\n                    onKeyDown={this.onKeyDown}\r\n                />\r\n                <MenuList\r\n                    ref={this._listRef}\r\n                >\r\n                    { this.props.options\r\n                        .filter(option => option.label.toLowerCase().indexOf(this.state.filterValue) > -1 || option.value.indexOf(this.state.filterValue) > -1)\r\n                        .map((option, i) => (\r\n                            <MenuItem\r\n                                disabled={option.value == this.props.disabled}\r\n                                selected={option.value == this.props.selected}\r\n                                key={i}\r\n                                onClick={() => { this.onSwitch(option.value) }}\r\n                            >\r\n                                <Avatar>\r\n                                    <Typography variant='caption'>\r\n                                        {option.label.split(' ')\r\n                                            .slice(0, 3)\r\n                                            .map((words) => (\r\n                                                words[0]\r\n                                            ))\r\n                                        }\r\n                                    </Typography>\r\n                                </Avatar>\r\n                                <ListItemText primary={option.label} />\r\n                            </MenuItem>\r\n                        ))\r\n                    }\r\n                </MenuList>\r\n            </>\r\n        )\r\n\r\n        const desktopDialog = (\r\n            <Popover\r\n                anchorEl={this.props.anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={this.props.open}\r\n                onClose={this.onClose}\r\n            >\r\n                <DialogContent>\r\n                    {renderItems}\r\n                </DialogContent>\r\n            </Popover>\r\n        )\r\n\r\n        const mobileDialog = (\r\n            <Dialog\r\n                TransitionComponent={TransitionComponent}\r\n                keepMounted={false}\r\n                fullScreen={true}\r\n                open={this.props.open}\r\n                onClose={this.onClose}\r\n                fullWidth\r\n                maxWidth='sm'\r\n            >\r\n                <DialogContent>\r\n                    {renderItems}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.onCancel}>{this.props.cancelButtonText}</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n        return (\r\n\r\n            <IsMobile >\r\n                {(isMobile) => {\r\n                    return isMobile\r\n                        ? mobileDialog\r\n                        : desktopDialog\r\n                }}\r\n            </IsMobile>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport ClientSwitcher from '../../lib/layout/ClientSwitcher'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport styled from 'styled-components'\r\n\r\nconst DemoDisplay = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default class ClientSwitcherDemo extends React.PureComponent{\r\n    _anchorEl: React.RefObject<HTMLButtonElement> = React.createRef()\r\n    state = {\r\n        selectedOption: null,\r\n        open: false,\r\n        options: [{\r\n            value: '23324',\r\n            label: 'Vrådal & Rypefjord AS'\r\n        }, {\r\n            value: '353453',\r\n            label: '24SevenOffice Norge'\r\n        }, {\r\n            value: '234234324',\r\n            label: '24sevenOffice Labs'\r\n        }, {\r\n            value: '534536553',\r\n            label: '24SevenOffice Denmark'\r\n        }, {\r\n            value: '23424534324',\r\n            label: '24sevenOffice Finland'\r\n        }, {\r\n            value: '53453233',\r\n            label: '24SevenOffice Sweden'\r\n        }]\r\n    }\r\n\r\n    onClickOpenConfirmationDialog = () => {\r\n        this.setState({open: true})\r\n    }\r\n\r\n    onSwitch =(value) => {\r\n        console.log(`selected value ${value}`)\r\n        this.setState({selectedOption: value})\r\n        this.onCancel()\r\n    }\r\n\r\n    onCancel =() => {\r\n        this.setState({open: false})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='ClientSwitcherDemo.tsx' srcPath='layout/ClientSwitcher.tsx' >ClientSwitcher</DemoTitle>\r\n                <DemoHelp>Dialog(mobile) or Popover(desktop) showing list of options. Made with switching client's in mind</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show list of options\" />\r\n                    <DemoProp name=\"options\" type=\"arrayOf<{ value: string, label: string }>\" description=\"Array of items to display\"/>\r\n                    <DemoProp name=\"disabled\" type=\"string\" default=\"\" description=\"Disables current item in list\" />\r\n                    <DemoProp name=\"selected\" type=\"string\" default=\"\" description=\"Selects current item in list\" />\r\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"Text for cancel button\" />\r\n                    <DemoProp name=\"onSwitch\" type=\"function\" default=\"\" description=\"Returns value for selected option\" />\r\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"Fires when list closes\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <ClientSwitcher\r\n                        anchorEl={this._anchorEl.current}\r\n                        open={this.state.open}\r\n                        cancelButtonText='Cancel'\r\n                        onCancel={this.onCancel}\r\n                        onSwitch={this.onSwitch}\r\n                        options={this.state.options}\r\n                        disabled='234234324'\r\n                    />\r\n                    <Button variant='outlined' buttonRef={this._anchorEl} onClick={this.onClickOpenConfirmationDialog}>Click me</Button>\r\n                    {this.state && this.state.selectedOption\r\n                        ? <DemoDisplay>You have selected: {this.state.selectedOption} {\r\n                            this.state.options\r\n                                .map((option) => {\r\n                                    if(option.value == this.state.selectedOption){\r\n                                        return '(' + option.label + ')'\r\n                                    }\r\n                                })}</DemoDisplay>\r\n                        : ''\r\n                    }\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\r\nimport Emoji from '../../lib/Emoji'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\ntype State = {\r\n    // variant\r\n}\r\n\r\nexport default class EmojiDemo extends React.PureComponent<{}, State>{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle srcPath='Emoji.tsx' demoPath='EmojiDemo.tsx'>Emoji</DemoTitle>\r\n                <DemoHelp>A simple html Emoji component</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='variant' type='string' default='' description=''/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Typography variant=\"h2\">\r\n                        <Emoji variant='heart' />\r\n                        <Emoji variant='thumbsUp' />\r\n                        <Emoji variant='fire' />\r\n                    </Typography>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\n\r\nimport Paper, {PaperProps} from '@material-ui/core/Paper'\r\n\r\nimport ReactGridLayout, {Layout, ReactGridLayoutProps} from 'react-grid-layout/'\r\nimport 'react-grid-layout/css/styles.css'\r\nimport 'react-resizable/css/styles.css'\r\nimport {styledTheme} from './theme'\r\nimport isEqual from 'lodash/isEqual'\r\n\r\nconst BackgroundPaper = ({backgroundColor, ...props}: { backgroundColor: string } & PaperProps) => (<Paper {...props} />)\r\nconst GridItemContainer = styled(BackgroundPaper)`&&{\r\n    background-color: ${({backgroundColor}) => backgroundColor};\r\n    width: 100%;\r\n    height: 100%;\r\n}`\r\n\r\ntype GridItemWidth = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'\r\ntype GridItemHeight = 1 | 2 | 3 | 4 | 5 | 6\r\nconst gridItemWidths = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 'onequarter', 'onethird', 'half', 'twothirds', 'threequarters', 'full']\r\nconst gridItemHeights = [1, 2, 3, 4, 5, 6]\r\nconst gridItemWidthNumberMap: {[P in GridItemWidth]: number} = {\r\n    1: 1,\r\n    2: 2,\r\n    3: 3,\r\n    4: 4,\r\n    5: 5,\r\n    6: 6,\r\n    7: 7,\r\n    8: 8,\r\n    9: 9,\r\n    10: 10,\r\n    11: 11,\r\n    12: 12,\r\n    'onequarter': 3,\r\n    'onethird': 4,\r\n    'half': 6,\r\n    'twothirds': 8,\r\n    'threequarters': 9,\r\n    'full': 12,\r\n}\r\n\r\nconst numberGridItemWithMap: {[n: number]: GridItemWidth} = {\r\n    1: 1,\r\n    2: 2,\r\n    3: 'onequarter',\r\n    4: 'onethird',\r\n    5: 5,\r\n    6: 'half',\r\n    7: 7,\r\n    8: 'twothirds',\r\n    9: 'threequarters',\r\n    10: 10,\r\n    11: 11,\r\n    12: 'full',\r\n}\r\n\r\nconst toGridItemWidth = (w?: number): GridItemWidth | undefined => {\r\n    return w === undefined\r\n        ? undefined\r\n        : numberGridItemWithMap[Math.min(6, Math.trunc(w))]\r\n}\r\n\r\nconst toGridItemHeight = (w?: number): GridItemHeight | undefined => {\r\n    return w === undefined\r\n        ? undefined\r\n        : Math.min(12, Math.trunc(w)) as GridItemHeight\r\n}\r\n\r\nconst gridItemPositionToLayout = (position: GridItemPosition): Layout => {\r\n    return {\r\n        i: position.id,\r\n        x: position.col,\r\n        y: position.row,\r\n        h: position.height,\r\n        w: gridItemWidthNumberMap[position.width],\r\n        minH: position.minHeight,\r\n        minW: position.minWidth && gridItemWidthNumberMap[position.minWidth] || undefined,\r\n        maxH: position.maxHeight,\r\n        maxW: position.maxWidth && gridItemWidthNumberMap[position.maxWidth] || undefined,\r\n        isDraggable: position.draggable !== undefined ? position.draggable : false,\r\n        isResizable: position.resizable !== undefined ? position.resizable : false,\r\n        static: position.static,\r\n    }\r\n}\r\n\r\nconst layoutToGridItemPosition = (layout: Layout): GridItemPosition => {\r\n    return {\r\n        id: layout.i!,\r\n        col: layout.x,\r\n        row: layout.y,\r\n        width: toGridItemWidth(layout.w)!,\r\n        height: toGridItemHeight(layout.h)!,\r\n        minHeight: toGridItemHeight(layout.minH),\r\n        minWidth: toGridItemWidth(layout.minW),\r\n        maxHeight: toGridItemHeight(layout.maxH),\r\n        maxWidth: toGridItemWidth(layout.maxW),\r\n        draggable: layout.isDraggable,\r\n        resizable: layout.isResizable,\r\n        static: layout.static,\r\n    }\r\n}\r\n\r\nexport type GridItem = {\r\n    id: string\r\n    backgroundColor?: string\r\n    children: React.ReactNode\r\n}\r\n\r\ntype GridItemPosition = {\r\n    id: string\r\n    col: number\r\n    row: number\r\n    width: GridItemWidth\r\n    height: GridItemHeight\r\n    minWidth?: GridItemWidth\r\n    minHeight?: GridItemHeight\r\n    maxWidth?: GridItemWidth\r\n    maxHeight?: GridItemHeight\r\n    /**\r\n     * @default false\r\n     */\r\n    draggable?: boolean\r\n    /**\r\n     * @default false\r\n     */\r\n    resizable?: boolean\r\n    /**\r\n     * @default false\r\n     */\r\n    static?: boolean\r\n}\r\n\r\nexport type GridLayoutProps = {\r\n    items: Array<GridItem>\r\n    layout: Array<GridItemPosition>\r\n    /**\r\n     * @default 16\r\n     */\r\n    margin?: number\r\n    onLayoutChange?: (layout: Array<GridItemPosition>) => void\r\n    /**\r\n     * @default vertical\r\n     */\r\n    compactType?: ReactGridLayoutProps['compactType']\r\n    children?: undefined\r\n}\r\n\r\nexport default class GridLayout extends React.PureComponent<GridLayoutProps>{\r\n    static defaultProps: Partial<GridLayoutProps> = {\r\n        margin: 16,\r\n        compactType: 'vertical'\r\n    }\r\n\r\n    static propTypes = {\r\n        margin: PropTypes.number,\r\n        onLayoutChange: PropTypes.func,\r\n        compactType: PropTypes.oneOf(['vertical', 'horizontal', null]),\r\n        items: PropTypes.arrayOf(PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            backgroundColor: PropTypes.string,\r\n            children: PropTypes.node.isRequired\r\n        })).isRequired,\r\n        layout: PropTypes.arrayOf(PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            col: PropTypes.number.isRequired,\r\n            row: PropTypes.number.isRequired,\r\n            width: PropTypes.oneOf(gridItemWidths).isRequired,\r\n            height: PropTypes.oneOf(gridItemHeights).isRequired,\r\n            minWidth: PropTypes.oneOf(gridItemWidths),\r\n            minHeight: PropTypes.oneOf(gridItemHeights),\r\n            maxWidth: PropTypes.oneOf(gridItemWidths),\r\n            maxHeight: PropTypes.oneOf(gridItemHeights),\r\n            draggable: PropTypes.bool,\r\n            resizable: PropTypes.bool,\r\n            static: PropTypes.bool,\r\n        })).isRequired\r\n    }\r\n\r\n    _layoutWasChangedWorkaround = false\r\n\r\n    componentDidMount(){\r\n        this.validateItemLayout()\r\n    }\r\n\r\n    onLayoutChange = (layouts: Array<Layout>) => {\r\n        const {onLayoutChange} = this.props\r\n        onLayoutChange &&\r\n            this._layoutWasChangedWorkaround &&\r\n            onLayoutChange(layouts.map(layoutToGridItemPosition))\r\n        this._layoutWasChangedWorkaround = false\r\n    }\r\n\r\n    validateItemLayout = () => {\r\n        if(process.env.NODE_ENV === 'production') return\r\n\r\n        const items = new Set(this.props.items.map(item => item.id))\r\n        const layouts = new Set(this.props.layout.map(layout => layout.id))\r\n\r\n        items.forEach(item => {\r\n            if(!layouts.has(item)){\r\n                console.error(`Error: Item with id: ${item} is missing layout`)\r\n            }\r\n        })\r\n\r\n        layouts.forEach(layout => {\r\n            if(!items.has(layout)){\r\n                console.warn(`Warning: Layout with id: ${layout} does not correspond to any item`)\r\n            }\r\n        })\r\n    }\r\n\r\n    onResize = (layout: Layout[], oldItem: Layout, newItem: Layout, placeHolder: Layout) => {\r\n        newItem.h = placeHolder.h = Math.min(6, newItem.h)\r\n    }\r\n\r\n    onDragStop = (layout: Layout[], oldItem: Layout, newItem: Layout, placeHolder: Layout) => {\r\n        this._layoutWasChangedWorkaround = !isEqual(oldItem, newItem)\r\n    }\r\n\r\n    onResizeStop = (layout: Layout[], oldItem: Layout, newItem: Layout, placeHolder: Layout) => {\r\n        this._layoutWasChangedWorkaround = !isEqual(oldItem, newItem)\r\n    }\r\n\r\n    render(){\r\n        const {items, layout, margin = 16, onLayoutChange, ...other} = this.props\r\n        const rglLayout = Object.values(layout).map(gridItemPositionToLayout)\r\n\r\n        return (\r\n            <ReactGridLayout\r\n                {...other}\r\n                className='layout'\r\n                cols={12}\r\n                layout={rglLayout}\r\n                margin={[margin, margin]}\r\n                rowHeight={90}\r\n                width={styledTheme.mui.breakpoints.values.lg}\r\n                onLayoutChange={this.onLayoutChange}\r\n                onResize={this.onResize}\r\n                onResizeStop={this.onResizeStop}\r\n                onDragStop={this.onDragStop}\r\n            >\r\n                {items.map(({id, backgroundColor, children}) => (\r\n                    <GridItemContainer\r\n                        key={id}\r\n                        backgroundColor={backgroundColor || 'inherit'}\r\n                    >\r\n                        {children}\r\n                    </GridItemContainer>))}\r\n            </ReactGridLayout>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoTitle, DemoHelp, DemoProps, DemoProp} from '../components/demo'\r\nimport GridLayout from '../../lib/GridLayout'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nexport default class GridLayoutDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle srcPath='GridLayout.tsx' demoPath='GridLayoutDemo.tsx'>GridLayout</DemoTitle>\r\n                <DemoHelp>A draggable and movable grid layout based on <Link href='https://github.com/STRML/react-grid-layout' target='_blank' rel='noreferrer'>react-grid-layout</Link></DemoHelp>\r\n                <DemoProps title='GridLayoutProps' >\r\n                    <DemoProp name='margin' type='number' default='16' description='The margin between each item' />\r\n                    <DemoProp name='compactType' type='vertical | horizontal' default='vertical' description='' />\r\n                    <DemoProp required name='onLayoutChange' type='(layout: GridItemPosition[]) => void' default='' description='' />\r\n                    <DemoProp required name='items' type='GridItem[]' default='' description='' />\r\n                    <DemoProp required name='layout' type='GridItemPosition[]' default='' description='' />\r\n                </DemoProps>\r\n                <DemoProps title='GridItem' >\r\n                    <DemoProp required name='id' type='string' default='' description='Id of the item. A corresponding GridItemPosition must be supplied to the layout' />\r\n                    <DemoProp name='backgroundColor' type='string' default='inherit' description='The backgroundcolor of the item' />\r\n                    <DemoProp required name='children' type='React.ReactNode' default='' description='' />\r\n                </DemoProps>\r\n                <DemoProps title='GridItemPosition' >\r\n                    <DemoProp required name='id' type='string' default='' description='Used to positition the GridItem with the same id' />\r\n                    <DemoProp required name='col' type='number' default='' description='Column in which the item is positioned' />\r\n                    <DemoProp required name='row' type='number' default='' description='Row in which the item is positioned' />\r\n                    <DemoProp required name='width' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\r\n                    <DemoProp required name='height' type='1 | 2 | 3 | 4 | 5 | 6' default='' description='Height in number of rows' />\r\n                    <DemoProp name='draggable' type='boolean' default='false' description='If true, the item can be repositioned by dragging' />\r\n                    <DemoProp name='resizable' type='boolean' default='false' description='If true, the item can be resized' />\r\n                    <DemoProp name='static' type='boolean' default='false' description='If true, the item is locked in place (draggable and resizable is overriden to false)' />\r\n                    <DemoProp name='minWidth' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\r\n                    <DemoProp name='minHeight' type='1 | 2 | 3 | 4 | 5 | 6' default='' description='Height in number of rows' />\r\n                    <DemoProp name='maxWidth' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\r\n                    <DemoProp name='maxHeight' type='1 | 2 | 3 | 4 | 5 | 6' default='' description='Height in number of rows' />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <GridLayout\r\n                        items={[\r\n                            {\r\n                                id: 'a',\r\n                                backgroundColor: '#f0f',\r\n                                children: <div>a (I'm resizable)</div>\r\n                            },\r\n                            {\r\n                                id: 'b',\r\n                                backgroundColor: '#0ff',\r\n                                children: <div>b (I'm locked in place)</div>\r\n                            },\r\n                            {\r\n                                id: 'c',\r\n                                backgroundColor: '#ff0',\r\n                                children: <div>c</div>\r\n                            },\r\n                            {\r\n                                id: 'd',\r\n                                backgroundColor: '#f8f',\r\n                                children: <div>d</div>\r\n                            },\r\n                        ]}\r\n                        layout={[\r\n                            {\r\n                                id: 'a',\r\n                                width: 'onequarter',\r\n                                height: 1,\r\n                                col: 0,\r\n                                row: 0,\r\n                                draggable: true,\r\n                                resizable: true\r\n                            },\r\n                            {\r\n                                id: 'b',\r\n                                width: 'onequarter',\r\n                                height: 1,\r\n                                col: 3,\r\n                                row: 0,\r\n                                static: true\r\n                            },\r\n                            {\r\n                                id: 'c',\r\n                                width: 'onequarter',\r\n                                height: 1,\r\n                                col: 6,\r\n                                row: 0,\r\n                                draggable: true,\r\n                            },\r\n                            {\r\n                                id: 'd',\r\n                                width: 'full',\r\n                                height: 2,\r\n                                col: 0,\r\n                                row: 1,\r\n                                draggable: true,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport {Hoverable} from '../../lib'\r\n\r\nexport default class HoverableDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Hoverable.tsx'>Hoverable</DemoTitle>\r\n                <DemoHelp>A HOC that passes hover true/false as a render prop</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(hover: boolean, ref: RefObject) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Hoverable>\r\n                        {(hover) => (\r\n                            <React.Fragment>\r\n                                {hover\r\n                                    ? <div key=\"1\" style={{backgroundColor: '#6699bb', padding: 15, color: '#FFF', cursor: 'pointer'}}>You're hovering me!</div>\r\n                                    : <div key=\"2\" style={{padding: 15, height: '100%'}}>Hover your mouse over me</div>\r\n                                }\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Hoverable>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport {Delay} from '../../lib'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nexport default class DelayDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Delay.tsx'>Delay</DemoTitle>\r\n                <DemoHelp>Shows the component inside after a set delay. Can be used to only show loaders if exceptionally slow</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"beforeShow\" type=\"React element or string (optional)\" default=\"\" description=\"What you want to show before the delay is finished\" />\r\n                    <DemoProp name=\"delayMs\" type=\"Number (optional)\" default=\"1000\" description=\"Delay time in ms\" />\r\n                    <DemoProp name=\"show\" type=\"Boolean (optional)\" default=\"false\" description=\"Force show content\" />\r\n                    <DemoProp name=\"children\" type=\"React element\" default=\"\" description=\"Content to show after delay\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Delay beforeShow=\"Waiting for delay...\">\r\n                        <CircularProgress />\r\n                    </Delay>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport {Wizard} from '../../lib'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport Step from '@material-ui/core/Step'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport default class WizardDemo extends React.PureComponent{\r\n    render(){\r\n        const length = 3\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Wizard.tsx'>Wizard</DemoTitle>\r\n                <DemoHelp>A HOC that passes an index and next/prev functions in a render prop. Can be used along with material ui stepper or any other wizard</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(index: number, next: function, prev: function) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                    <DemoProp name=\"index\" type=\"number (optional)\" default=\"\" description=\"Force the current index to a certain value\" />\r\n                    <DemoProp name=\"length\" type=\"number (optional)\" default=\"\" description=\"The max length. The index will always be lower than this\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Wizard length={length + 1}>\r\n                        {(index, next, prev) => (\r\n                            <React.Fragment>\r\n                                <Stepper activeStep={index}>\r\n                                    <Step key=\"Step 1\">\r\n                                        <StepLabel>Step 1</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 2\">\r\n                                        <StepLabel>Step 2</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 3\">\r\n                                        <StepLabel>Step 3</StepLabel>\r\n                                    </Step>\r\n                                </Stepper>\r\n                                <div>\r\n                                    <Button onClick={prev} disabled={index <= 0}>Prev</Button>\r\n                                    <Button onClick={next} disabled={index >= length}>Next</Button>\r\n                                    {index >= length && 'All steps completed!'}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Wizard>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {layout} from '../lib'\r\nimport Home from './pages/Home'\r\nimport Icons from './pages/Icons'\r\nimport GitHubLink from './components/GitHubLink'\r\nimport MaterialUiLink from './components/MaterialUiLink'\r\nimport Guidelines from './pages/Guidelines'\r\nimport Theme from './pages/Theme'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport CodeIcon from '@material-ui/icons/Code'\r\nimport StyleIcon from '@material-ui/icons/Style'\r\nimport BuildIcon from '@material-ui/icons/Build'\r\nimport StraightenIcon from '@material-ui/icons/Straighten'\r\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact'\r\nimport FontDownloadIcon from '@material-ui/icons/FontDownload'\r\nimport history from './history'\r\nimport {Location, UnregisterCallback} from 'history'\r\nimport Link from './components/Link'\r\nimport TrendingDemo from './demos/TrendingDemo'\r\nimport BigNumberDemo from './demos/BigNumberDemo'\r\nimport AlertDemo from './demos/AlertDemo'\r\nimport SearchFieldDemo from './demos/SearchFieldDemo'\r\nimport TextFieldEditorDemo from './demos/TextFieldEditorDemo'\r\nimport ConfirmationDialogDemo from './demos/ConfirmationDialogDemo'\r\nimport ClientSwitcherDemo from './demos/ClientSwitcherDemo'\r\nimport EmojiDemo from './demos/EmojiDemo'\r\nimport GridLayoutDemo from './demos/GridLayoutDemo'\r\nimport HoverableDemo from './demos/HoverableDemo'\r\nimport DelayDemo from './demos/DelayDemo'\r\nimport WizardDemo from './demos/WizardDemo'\r\n\r\nconst menuGroups = {\r\n    home: {\r\n        label: 'Home',\r\n        subtitle: 'Where magic happens',\r\n        icon: HomeIcon,\r\n        component: Home\r\n    },\r\n    guidelines: {\r\n        label: 'Guidelines',\r\n        subtitle: 'How to frontend',\r\n        icon: StraightenIcon,\r\n        component: Guidelines\r\n    },\r\n    components: {\r\n        label: 'Components',\r\n        subtitle: 'Presentational',\r\n        icon: ViewCompactIcon,\r\n        items: {\r\n            emoji: {\r\n                label: 'Emoji',\r\n                component: EmojiDemo\r\n            },\r\n            alert: {\r\n                label: 'Alert',\r\n                component: AlertDemo\r\n            },\r\n            bignumber: {\r\n                label: 'BigNumber',\r\n                component: BigNumberDemo\r\n            },\r\n            confirmationdialog: {\r\n                label: 'ConfirmationDialog',\r\n                component: ConfirmationDialogDemo\r\n            },\r\n            clientswitcher: {\r\n                label: 'ClientSwitcher',\r\n                component: ClientSwitcherDemo\r\n            },\r\n            searchfield: {\r\n                label: 'SearchField',\r\n                component: SearchFieldDemo\r\n            },\r\n            textfieldeditor: {\r\n                label: 'TextFieldEditor',\r\n                component: TextFieldEditorDemo\r\n            },\r\n            trending: {\r\n                label: 'Trending',\r\n                component: TrendingDemo\r\n            }\r\n        }\r\n    },\r\n    theme: {\r\n        label: 'Theme',\r\n        subtitle: 'Much Dashing',\r\n        icon: StyleIcon,\r\n        component: Theme\r\n    },\r\n    utils: {\r\n        label: 'Utils',\r\n        subtitle: 'Utility',\r\n        icon: BuildIcon,\r\n        items: {\r\n            delay: {\r\n                label: 'Delay',\r\n                component: DelayDemo\r\n            },\r\n            hoverable: {\r\n                label: 'Hoverable',\r\n                component: HoverableDemo\r\n            },\r\n            wizard: {\r\n                label: 'Wizard',\r\n                component: WizardDemo\r\n            }\r\n        }\r\n    },\r\n    icons: {\r\n        label: 'Icons',\r\n        subtitle: 'Well duh',\r\n        component: Icons,\r\n        icon: FontDownloadIcon\r\n    },\r\n    labs: {\r\n        label: 'Labs',\r\n        subtitle: 'Works in progress',\r\n        icon: CodeIcon,\r\n        items: {\r\n            gridlayout: {\r\n                label: 'GridLayout',\r\n                component: GridLayoutDemo\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\ntype LayoutState = {\r\n    menuOpen: boolean,\r\n    location: Location<any>\r\n    menuGroupsExpanded: any\r\n}\r\n\r\nexport default class Layout extends React.PureComponent<{}, LayoutState>{\r\n    _unsubHistory: UnregisterCallback | null = null\r\n    componentDidMount(){\r\n        this.expandSelected()\r\n        this._unsubHistory = history.listen(this.onNavigation)\r\n    }\r\n    componentWillUnmount(){\r\n        this._unsubHistory && this._unsubHistory()\r\n    }\r\n\r\n    state: LayoutState = {\r\n        location: history.location,\r\n        menuOpen: true,\r\n        menuGroupsExpanded: {}\r\n    }\r\n\r\n    onNavigation = (location: Location<any>) => {\r\n        this.setState({location})\r\n    }\r\n\r\n    getSelected = () => {\r\n        const {location: {pathname}} = this.state\r\n        const path = pathname.slice(pathname.indexOf('#') + 2)\r\n        const [group, item] = path.split('/')\r\n\r\n        return {group: group || 'home', item}\r\n    }\r\n\r\n    expandSelected(){\r\n        const {group} = this.getSelected()\r\n        this.onToggleGroupExpanded(group)\r\n    }\r\n\r\n    onMenuToggle = () => {\r\n        this.setState(state => ({menuOpen: !state.menuOpen}))\r\n    }\r\n\r\n    onCloseMenu = () => this.setState({menuOpen: false})\r\n\r\n    onToggleGroupExpanded = (name) => {\r\n        this.setState(state => ({\r\n            menuGroupsExpanded: {\r\n                ...state.menuGroupsExpanded,\r\n                [name]: !state.menuGroupsExpanded[name]\r\n            }\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        const menu = (\r\n            <layout.Menu open={this.state.menuOpen} onClose={this.onCloseMenu}>\r\n                {Object.keys(menuGroups).map(groupName => {\r\n                    const group = menuGroups[groupName]\r\n                    if(group.component){\r\n                        return (\r\n                            <layout.MenuRootItem\r\n                                key={group.label}\r\n                                label={group.label}\r\n                                selected={this.getSelected().group === groupName}\r\n                                icon={group.icon}\r\n                                subtitle={group.subtitle}\r\n                                href={(content) => {\r\n                                    return (\r\n                                        <Link to={`/${groupName}`} key={groupName}>\r\n                                            {content}\r\n                                        </Link>\r\n                                    )\r\n                                }}\r\n                            />\r\n                        )\r\n                    }\r\n\r\n                    return (\r\n                        <layout.MenuGroup\r\n                            expanded={this.state.menuGroupsExpanded[groupName]}\r\n                            key={group.label}\r\n                            label={group.label}\r\n                            icon={group.icon}\r\n                            subtitle={group.subtitle}\r\n                            onToggleExpanded={() => this.onToggleGroupExpanded(groupName)}\r\n                        >\r\n                            {Object.keys(group.items).map(itemName => {\r\n                                const item = group.items[itemName]\r\n                                const selected = this.getSelected()\r\n                                return (\r\n                                    <layout.MenuItem\r\n                                        key={item.label}\r\n                                        label={item.label}\r\n                                        selected={selected.item === itemName && selected.group === groupName}\r\n                                        icon={item.icon}\r\n                                        href={(content) => {\r\n                                            return (\r\n                                                <Link to={`/${groupName}/${itemName}`} key={itemName}>\r\n                                                    {content}\r\n                                                </Link>\r\n                                            )\r\n                                        }}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </layout.MenuGroup>\r\n                    )\r\n                })}\r\n            </layout.Menu>\r\n        )\r\n        const topMenu = (\r\n            <layout.TopMenu>\r\n                <Grid container spacing={16}>\r\n                    <Grid item><MaterialUiLink /></Grid>\r\n                    <Grid item><GitHubLink /></Grid>\r\n                </Grid>\r\n            </layout.TopMenu>\r\n        )\r\n\r\n        const selected = this.getSelected()\r\n        const group = menuGroups[selected.group]\r\n\r\n        let content: React.ReactNode = 'Not found'\r\n        if(group.component){\r\n            const Page = group.component\r\n            content = <Page />\r\n        }else if(group.items && group.items[selected.item]){\r\n            const Page = group.items[selected.item].component\r\n            content = <Page />\r\n        }\r\n\r\n        return (\r\n            <layout.Layout\r\n                menu={menu}\r\n                topMenu={topMenu}\r\n                title=\"Tfso Components\"\r\n                docTitle=\"Tfso Components\"\r\n                onMenuToggle={this.onMenuToggle}\r\n            >\r\n                {content}\r\n            </layout.Layout>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport {theme} from '../lib'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport {ThemeProvider as StyledThemeProvider} from 'styled-components'\r\nimport {MuiThemeProvider} from '@material-ui/core/styles'\r\nimport Layout from './Layout'\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <MuiThemeProvider theme={theme.materialuiTheme}>\r\n            <StyledThemeProvider theme={theme.styledTheme}>\r\n                <Layout />\r\n            </StyledThemeProvider>\r\n        </MuiThemeProvider>\r\n    </React.Fragment>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}