{"version":3,"sources":["lib/theme/index.ts","lib/layout/Menu.tsx","lib/icons/Tfso.tsx","lib/layout/Topbar.tsx","lib/layout/DocumentTitle.tsx","lib/ScreenSize.tsx","lib/layout/Layout.tsx","lib/Alert.tsx","lib/BigNumber.tsx","lib/ConfirmationDialog.tsx","lib/SearchField.tsx","lib/TextFieldEditor.tsx","lib/Trending.tsx","lib/Emoji.tsx","lib/Delay.tsx","lib/Hoverable.tsx","lib/Wizard.tsx","lib/icons/TfsoLoading.tsx","demo/components/MaterialUiLink.tsx","demo/components/GitHubLink.tsx","demo/pages/Home.tsx","demo/components/code.tsx","demo/components/demo.tsx","demo/pages/Icons.tsx","demo/history.ts","demo/components/Link.tsx","demo/pages/Guidelines.tsx","demo/components/ThemeColor.tsx","demo/pages/Theme.tsx","demo/demos/TrendingDemo.tsx","demo/demos/BigNumberDemo.tsx","demo/demos/AlertDemo.tsx","demo/demos/SearchFieldDemo.tsx","demo/demos/TextFieldEditorDemo.tsx","demo/demos/ConfirmationDialogDemo.tsx","lib/ListPicker.tsx","demo/demos/ListPickerDemo.tsx","demo/demos/EmojiDemo.tsx","lib/GridLayout.tsx","demo/demos/GridLayoutDemo.tsx","demo/demos/HoverableDemo.tsx","demo/demos/DelayDemo.tsx","demo/demos/WizardDemo.tsx","demo/demos/ScreenSizeDemo.tsx","demo/Layout.tsx","demo/index.tsx"],"names":["colorScheme","colors","tfso","baseColor","baseLightColor","baseLight2Color","baseLight3Color","baseLight4Color","baseLight5Color","blueColor","blueDarkColor","blueDesaturatedColor","grayBlueColor","tealColor","greenColor","greenLightColor","purpleColor","redColor","redLightColor","orangeColor","yellowColor","blackColor","grayColor","grayDarkColor","grayDarkerColor","grayLightColor","grayLighterColor","grayLightestColor","whiteColor","whiteDarkColor","whiteDarkerColor","bodyBackgroundColor","listOverBackgroundColor","borderColor","tabBarColor","palette","primary","primaryLight","success","warning","alert","delete","materialuiTheme","createMuiTheme","typography","useNextVariants","secondary","dark","main","light","contrastText","styledTheme","layout","containerMargin","mui","StyledDrawer","styled","Drawer","attrs","classes","paper","withConfig","displayName","componentId","_ref","open","Menu","react_default","a","createElement","variant","this","props","mobile","elevation","onClose","List_default","disablePadding","children","React","PureComponent","MenuContent","Fragment","MenuGroup","_React$PureComponent2","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onToggleExpanded","e","stopPropagation","inherits","createClass","key","value","Icon","icon","backgroundColor","expanded","ListItem_default","divider","style","button","onClick","ListItemIcon_default","marginRight","fontSize","color","ListItemText_default","subtitle","primaryTypographyProps","secondaryTypographyProps","label","ListItemSecondaryAction_default","IconButton_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","dense","Divider_default","MenuRootItem","_React$PureComponent3","LinkContent","selected","href","Link_default","NestedListItem","ListItem","MenuItem","_React$PureComponent4","memo","SvgIcon_default","assign","viewBox","d","Root","div","StyledAppBar","AppBar","theme","zIndex","drawer","Wrapper","Left","LeftMobile","Right","MenuButton","IconButton","ToolbarRight","TopBar","position","Tfso","Typography_default","paddingLeft","title","Toolbar_default","onMenuToggle","aria-label","Menu_default","TopMenuContent","setTitle","text","document","DocumentTitle","nextProps","tablet","desktop","getScreenSize","width","includes","ScreenSize","withWidth","Component","LayoutWrapper","LayoutHeader","LayoutBody","LayoutBodyLeft","LayoutBodyRight","withScreenSize","_temp","_React$PureComponent","Layout","state","menuOpen","onCloseMenu","setState","menuIsOpen","onClickContent","screenSize","DocumentTitle_DocumentTitle","docTitle","Topbar_TopBar","topMenuContent","Menu_Menu","menuContent","variantIcon","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","StyledSnack","other","objectWithoutProperties","SnackbarContent_default","_templateObject","_ref2","bgColor","Alert","message","aria-describedby","id","display","alignItems","opacity","action","Close_default","fontSizeMap","medium","large","defaultProps","size","wrapper","BigNumber","_ref2$size","pxToRem","_ref3","_ref3$color","TransitionComponent","Slide_default","direction","ConfirmationDialog","onCancel","onOk","okButtonText","cancelButtonText","Dialog_default","keepMounted","maxWidth","DialogTitle_default","DialogContent_default","DialogActions_default","Button_default","SearchField","editing","onBlur","onFocus","TextField_default","fullWidth","handleEvent","event","preventDefault","nativeEvent","stopImmediatePropagation","placeholder","margin","InputProps","startAdornment","InputAdornment_default","Search_default","TextFieldEditor","_inputRef","createRef","prevProps","blur","current","onKeyDown","defaultPrevented","ctrlKey","multiline","onChange","target","_this$props","dirtyProp","dirty","enableDirtyCheck","otherProps","isDirty","inputRef","fontStyle","iconMap","up","TrendingUp","flat","TrendingFlat","down","TrendingDown","withTheme","iconProps","nativeColor","getColor","emojis","middleFinger","indexFinger","flex","brokenHeart","perfect","thumbsUp","thumbsDown","clap","heart","fire","bulb","crap","thinking","rocket","Emoji","propTypes","PropTypes","oneOf","keys","Delay","_timer","show","_this2","setTimeout","delayMs","clearTimeout","beforeShow","Hoverable","ref","toggleHover","hover","hoverOn","hoverOff","restProps","onMouseEnter","onMouseLeave","Wizard","next","index","prev","hasOwnProperty","path","css","TfsoLoading_templateObject","StyledSvgIcon","Styled","once","_ref4","_ref5","_ref6","fillRule","strokeWidth","MaterialUiIcon","fill","MaterialUiLink","rel","GitHubIcon","GitHubLink","Tooltip_default","tooltip","CenterTop","Home_templateObject","Home","TfsoLoading","paragraph","align","Grid_default","container","justify","item","xs","flexDirection","Zoom_default","appear","transitionDelay","Code","highlight","Prism","highlightElement","className","language","Demo","Paper_default","padding","marginBottom","DemoTitle","srcPath","demoPath","spacing","components_GitHubLink","DemoHelp","DemoContent","marginTop","isArray","map","child","i","DemoProps","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpansionPanelDetails_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","DemoProp","required","name","type","default","description","DemoCode","Code_default","code_Code","Icons","Icons_TfsoDemo","Icons_TfsoLoadingDemo","TfsoDemo","handleChange","defineProperty","demo_Demo","demo_DemoTitle","demo_DemoHelp","demo_DemoProps","demo_DemoProp","demo_DemoContent","select","MenuItem_default","TfsoLoadingDemo","history","createHashHistory","basename","hashType","Link","to","push","toLowerCase","underline","undefined","AnchorLink","Anchor","window","location","hash","split","Section","unit","SubHeading","Paragraph","component","Tip","Card_default","CardContent_default","Guideline","Guidelines","render","renderHeading","renderGuidelines","renderTips","renderContributing","Guidelines_SubHeading","Link_Anchor","Guidelines_Guideline","Link_Link","Guidelines_Tip","Guidelines_Paragraph","Box","ThemeColor_templateObject","Txt","_templateObject2","ThemeColor","ThemeColors","Theme_templateObject","Theme","components_ThemeColor","TrendingDemo","Trending","BigNumberDemo","lib_BigNumber","variantMessage","AlertDemo","onPress","demo_DemoCode","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","lib_Alert","SearchFieldDemo","SearchField_SearchField","TextFieldEditorDemo","onReset","TextFieldEditor_TextFieldEditor","toString","ConfirmationDialogDemo","openConfirmationDialog","onClickOpenConfirmationDialog","lib_ConfirmationDialog","AvatarColor","Avatar","ListPicker_templateObject","CustomDialogTitle","ListPicker_templateObject2","ListPicker","_listRef","filterValue","focusValue","onFilter","keyCode","focus","onSwitch","_this3","renderItems","searchLabel","MenuList_default","options","filter","option","indexOf","disabled","avatarColor","slice","words","desktopDialog","Popover_default","anchorEl","transformOrigin","mobileDialog","fullScreen","lib_ScreenSize","DemoDisplay","ListPickerDemo_templateObject","ListPickerDemo","_anchorEl","selectedOption","buttonType","handleColor","ListPicker_ListPicker","buttonRef","InputLabel_default","shrink","htmlFor","Select_default","index_es","EmojiDemo","lib_Emoji","ReactGridLayout","WidthProvider","RGL","GridItemContainer","gridItemWidthNumberMap","1","2","3","4","5","6","7","8","9","10","11","12","onequarter","onethird","half","twothirds","threequarters","full","numberGridItemWithMap","toGridItemWidth","w","Math","min","trunc","toGridItemHeight","gridItemPositionToLayout","x","col","y","row","h","height","minH","minHeight","minW","minWidth","maxH","maxHeight","maxW","isDraggable","draggable","isResizable","resizable","static","layoutToGridItemPosition","GridLayout","_layoutWasChangedWorkaround","onLayoutChange","layouts","validateItemLayout","onDragResizeStop","oldItem","newItem","isEqual","items","_this$props$margin","rglLayout","values","cols","rowHeight","compactType","containerPadding","autoSize","measureBeforeMount","useCSSTransforms","preventCollision","onResizeStop","onDragStop","Item","GridLayoutDemo_templateObject","getContrastText","h5","fontWeight","fontFamily","GridLayoutDemo","addItemId","addColor","addDraggable","addResizable","addStatic","addHeight","addWidth","addCol","addRow","onAddItem","_this$state","content","JSON","stringify","replace","itemLayout","Number","toConsumableArray","checked","GridLayout_GridLayout","FormControlLabel_default","control","Switch_default","inputProps","max","HoverableDemo","Hoverable_Hoverable","cursor","DelayDemo","Delay_Delay","CircularProgress_default","WizardDemo","Wizard_Wizard","Stepper_default","activeStep","Step_default","StepLabel_default","ScreenSizeDemo","menuGroups","home","HomeIcon","guidelines","StraightenIcon","components","ViewCompactIcon","emoji","bignumber","confirmationdialog","listpicker","searchfield","textfieldeditor","trending","StyleIcon","utils","BuildIcon","delay","hoverable","wizard","screensize","icons","FontDownloadIcon","labs","CodeIcon","gridlayout","_unsubHistory","menuGroupsExpanded","onNavigation","getSelected","pathname","_path$split","_path$split2","slicedToArray","group","onToggleGroupExpanded","objectSpread","expandSelected","listen","layout_namespaceObject","groupName","itemName","components_MaterialUiLink","Page","_Page","ReactDOM","CssBaseline_default","styles","styled_components_browser_esm","Layout_Layout","getElementById"],"mappings":"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","file":"static/js/main.d27fee41.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles'\r\nimport 'styled-components'\r\n\r\nconst colorScheme = {\r\n    fiord: '#445566',\r\n    lynch: '#637b94',\r\n    dodgerBlue: '#11beff',\r\n    bayOfMany: '#224477',\r\n    easternBlue: '#22aabb',\r\n    apple: '#49bd39',\r\n    melrose: '#A3A4FB',\r\n    flamingo: '#f04b4b',\r\n    texasRose: '#ffb155',\r\n    dandelion: '#FFD966',\r\n    tundora: '#404040',\r\n    dustyGray: '#999999',\r\n    hippieBlue: '#6699bb',\r\n    emperor: '#555555',\r\n    silver: '#CCCCCC',\r\n    porcelain: '#E8E9EA',\r\n    wildSand: '#F6F6F6',\r\n    white: '#FFFFFF',\r\n    casper: '#AFC5D0'\r\n}\r\n\r\nconst colors = {\r\n    tfso: '#00c7f5',\r\n    baseColor: colorScheme.fiord,\r\n    baseLightColor: '#637b94',\r\n    baseLight2Color: '#8fa1b4',\r\n    baseLight3Color: '#bdc8d3',\r\n    baseLight4Color: '#ebeef1',\r\n    baseLight5Color: '#f4f6f8',\r\n    blueColor: colorScheme.dodgerBlue,\r\n    blueDarkColor: colorScheme.bayOfMany,\r\n    blueDesaturatedColor: colorScheme.hippieBlue,\r\n    grayBlueColor: colorScheme.casper,\r\n    tealColor: colorScheme.easternBlue,\r\n    greenColor: colorScheme.apple,\r\n    greenLightColor: 'rgba(73, 189, 57, 0.4)',\r\n    purpleColor: colorScheme.melrose,\r\n    redColor: colorScheme.flamingo,\r\n    redLightColor: 'rgba(240, 75, 75, 0.4)',\r\n    orangeColor: colorScheme.texasRose,\r\n    yellowColor: colorScheme.dandelion,\r\n    blackColor: colorScheme.tundora,\r\n    grayColor: colorScheme.dustyGray,\r\n    grayDarkColor: '#6E6E6E',\r\n    grayDarkerColor: '#454545',\r\n    grayLightColor: '#C4C4C4',\r\n    grayLighterColor: '#E6E6E6',\r\n    grayLightestColor: '#F7F7F7',\r\n    whiteColor: colorScheme.white,\r\n    whiteDarkColor: '#F7F7F7',\r\n    whiteDarkerColor: '#E6E6E6',\r\n    bodyBackgroundColor: '#F7F7F7',\r\n    listOverBackgroundColor: '#E6E6E6',\r\n    borderColor: '#C4C4C4',\r\n    tabBarColor: colorScheme.white\r\n}\r\n\r\nconst palette = {\r\n    primary: colors.baseColor,\r\n    primaryLight: colors.baseLightColor,\r\n    success: colors.greenColor,\r\n    warning: colors.orangeColor,\r\n    alert: colors.redColor,\r\n    delete: colors.redColor,\r\n}\r\n\r\nconst layout = {\r\n    containerMargin: '15px'\r\n}\r\n\r\nexport const materialuiTheme = createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    palette: {\r\n        secondary: {\r\n            dark: '#1b2c3c',\r\n            main: '#456',\r\n            light: '#708194'\r\n        },\r\n        primary: {\r\n            dark: '#0090cc',\r\n            main: '#11c0ff',\r\n            light: '#6df3ff',\r\n            contrastText: '#FFF'\r\n        }\r\n    }\r\n})\r\n\r\nexport const styledTheme = {\r\n    tfso: {\r\n        colors,\r\n        palette,\r\n        layout\r\n    },\r\n    mui: materialuiTheme, // Make the entire material-ui theme available to styled components as well\r\n}\r\n\r\nexport type TfsoTheme = typeof styledTheme\r\n\r\ndeclare module 'styled-components' {\r\n    export interface DefaultTheme extends TfsoTheme {}\r\n    export type WithTheme = { theme: DefaultTheme }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport List from '@material-ui/core/List'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Link from '@material-ui/core/Link'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ExpandLess from '@material-ui/icons/ExpandLess'\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\nimport styled from 'styled-components/macro'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst StyledDrawer = styled(Drawer).attrs({\r\n    classes: {paper: 'MuiPaperStyle'}\r\n})`\r\n    &&{\r\n      width: ${({open}) => open ? 240 : 0}px;\r\n      height: 100%;\r\n    }\r\n    \r\n    .MuiPaperStyle{\r\n      position: static;\r\n    }\r\n` as typeof Drawer\r\n\r\nexport type MenuProps = {\r\n    open: boolean\r\n    onClose: () => void\r\n    mobile: boolean\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default class Menu extends React.PureComponent<MenuProps>{\r\n    static propTypes = {\r\n        open: PropTypes.bool.isRequired,\r\n        onClose: PropTypes.func.isRequired,\r\n        mobile: PropTypes.bool.isRequired,\r\n        children: PropTypes.node.isRequired\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <StyledDrawer variant={this.props.mobile ? 'temporary' : 'persistent'} elevation={0} open={this.props.open} onClose={this.props.onClose}>\r\n                <List disablePadding>\r\n                    {this.props.children}\r\n                </List>\r\n            </StyledDrawer>\r\n        )\r\n    }\r\n}\r\n\r\nexport const MenuContent = props => <>{props.children}</>\r\n\r\nexport type MenuGroupProps = {\r\n    icon: React.ComponentType<SvgIconProps>\r\n    subtitle: string\r\n    label: string\r\n    onToggleExpanded: () => void\r\n    expanded: boolean\r\n    children: React.ReactNode\r\n}\r\n\r\nexport class MenuGroup extends React.PureComponent<MenuGroupProps>{\r\n    static propTypes = {\r\n        icon: PropTypes.elementType.isRequired,\r\n        subtitle: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        onToggleExpanded: PropTypes.func.isRequired,\r\n        expanded: PropTypes.bool.isRequired,\r\n        children: PropTypes.node.isRequired\r\n    }\r\n\r\n    onToggleExpanded = e => {\r\n        // Stop propagation to let parent layout close mobile menu on clicks that do navigation\r\n        e.stopPropagation()\r\n        this.props.onToggleExpanded()\r\n    }\r\n\r\n    render(){\r\n        const Icon = this.props.icon\r\n        const backgroundColor = this.props.expanded ? '#fafaf9' : 'inherit'\r\n\r\n        return (\r\n            <>\r\n                <ListItem divider={!this.props.expanded} style={{backgroundColor}} button onClick={this.onToggleExpanded}>\r\n                    <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color='secondary'/></ListItemIcon>\r\n                    <ListItemText\r\n                        secondary={this.props.subtitle}\r\n                        primaryTypographyProps={{color: 'secondary'}}\r\n                        secondaryTypographyProps={{variant: 'caption'}}\r\n                    >\r\n                        {this.props.label}\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton onClick={this.onToggleExpanded}>\r\n                            {this.props.expanded ? <ExpandLess /> : <ExpandMore />}\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Collapse in={this.props.expanded} timeout=\"auto\" style={{backgroundColor}}>\r\n                    <List dense disablePadding>\r\n                        {this.props.children}\r\n                    </List>\r\n                    <Divider />\r\n                </Collapse>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport type MenuRootItemProps = {\r\n    icon: React.ComponentType<SvgIconProps>\r\n    subtitle: string\r\n    label: string\r\n    selected: boolean\r\n    href?: string | ((content: React.ReactChild) => React.ReactChild)\r\n}\r\n\r\nexport class MenuRootItem extends React.PureComponent<MenuRootItemProps>{\r\n    static propTypes = {\r\n        icon: PropTypes.elementType.isRequired,\r\n        subtitle: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        selected: PropTypes.bool.isRequired,\r\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\r\n    }\r\n\r\n    render(){\r\n        const Icon = this.props.icon\r\n\r\n        const LinkContent = (\r\n            <ListItem divider>\r\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'secondary'}/></ListItemIcon>\r\n                <ListItemText\r\n                    secondary={this.props.subtitle}\r\n                    primaryTypographyProps={{color: this.props.selected ? 'primary' : 'secondary'}}\r\n                    secondaryTypographyProps={{variant: 'caption'}}\r\n                >\r\n                    {this.props.label}\r\n                </ListItemText>\r\n            </ListItem>\r\n        )\r\n\r\n        return (\r\n            <>\r\n                {typeof this.props.href === 'string'\r\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\r\n                    : this.props.href\r\n                        ? this.props.href(LinkContent)\r\n                        : LinkContent\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport type MenuItemProps = {\r\n    icon?: React.ComponentType<SvgIconProps>\r\n    label: string\r\n    selected: boolean\r\n    href: string | ((content: React.ReactChild) => React.ReactChild)\r\n}\r\n\r\nconst NestedListItem = styled(ListItem)`&&{\r\n    padding-left: 52px;\r\n}` as typeof ListItem\r\n\r\nexport class MenuItem extends React.PureComponent<MenuItemProps>{\r\n    static propTypes = {\r\n        icon: PropTypes.elementType,\r\n        label: PropTypes.string.isRequired,\r\n        selected: PropTypes.bool.isRequired,\r\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\r\n    }\r\n\r\n    render(){\r\n        const Icon = this.props.icon\r\n        const LinkContent = (\r\n            <NestedListItem>\r\n                {Icon &&\r\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'secondary'}/></ListItemIcon>\r\n                }\r\n                <ListItemText primaryTypographyProps={{color: this.props.selected ? 'primary' : 'secondary'}}>{this.props.label}</ListItemText>\r\n            </NestedListItem>\r\n        )\r\n\r\n        return (\r\n            <>\r\n                {typeof this.props.href === 'string'\r\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\r\n                    : this.props.href(LinkContent)\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\n\r\n// Original icon colors: TODO: Use these?\r\n// blue: #00B8F3\r\n// white: #fff\r\n\r\nexport type TfsoIconProps = {} & SvgIconProps\r\n\r\nexport default React.memo((props: TfsoIconProps) => (\r\n    <SvgIcon\r\n        {...props}\r\n        viewBox='0 0 50.59 30.35'\r\n    >\r\n        <path\r\n            d={'M33.22,9.62A6,6,0,0,0,29.85,13a5.06,5.06,0,0,0-4.56-2.87,5.06,5.06,0,1,1,5.06-5.06A5.06,5.06,0,0,0,33.22,9.62ZM45.53,20.23A5.06,5.06,0,0,1,41,17.36a6,6,0,0,1-3.36,3.37,5.06,5.06,0,0,1,2.87,4.56,5.06,5.06,0,1,0,5.06-5.06Zm-25.3-5.06a5.06,5.06,0,1,0-10.12,0,5.06,5.06,0,0,1-5.06,5.06,5.06,5.06,0,1,0,5.06,5.06,5.06,5.06,0,0,1,9.62-2.19,6,6,0,0,1,3.37-3.37A5.06,5.06,0,0,1,20.23,15.18Zm15.18-5.06a5.06,5.06,0,0,0-5.06,5v.13a5.06,5.06,0,0,1-2.87,4.5,6,6,0,0,1,3.37,3.36,5.06,5.06,0,0,1,4.56-2.87,5.06,5.06,0,0,0,0-10.12ZM25.29,20.23a5.06,5.06,0,1,0,5.06,5.06A5.06,5.06,0,0,0,25.29,20.23Z'}\r\n        />\r\n    </SvgIcon>\r\n))","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport styled from 'styled-components/macro'\r\nimport TfsoIcon from '../icons/Tfso'\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n`\r\nconst StyledAppBar = styled(AppBar)`&&{\r\n  background: white;\r\n  z-index: ${props => props.theme.mui.zIndex.drawer + 1};  \r\n}` as typeof AppBar\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: stretch;\r\n`\r\nconst Left = styled.div`&&{\r\n  flex: 0 0 240px;\r\n  background-color: ${({theme}) => theme.tfso.colors.tfso};\r\n  color: #fff;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n}`\r\nconst LeftMobile = styled(Left)`&&{\r\n  flex: 0;\r\n}`\r\nconst Right = styled.div`&&{\r\n  flex: 1;\r\n}`\r\n\r\nconst MenuButton = styled(IconButton)`&&{\r\n  margin-left: -12px;\r\n  margin-right: 20px;\r\n}` as typeof IconButton\r\n\r\nconst ToolbarRight = styled.div`&&{\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n}`\r\n\r\nexport type TopBarProps = {\r\n    title: string\r\n    onMenuToggle?: () => void\r\n    mobile: boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default class TopBar extends React.PureComponent<TopBarProps>{\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        onMenuToggle: PropTypes.func,\r\n        mobile: PropTypes.bool.isRequired,\r\n        children: PropTypes.node\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Root>\r\n                <StyledAppBar position=\"static\" color=\"default\" elevation={1}>\r\n                    <Wrapper>\r\n                        {this.props.mobile\r\n                            ? (\r\n                                <LeftMobile>\r\n                                    <TfsoIcon color=\"inherit\" fontSize=\"large\" />\r\n                                </LeftMobile>\r\n                            )\r\n                            : (\r\n                                <Left>\r\n                                    <TfsoIcon color=\"inherit\" fontSize=\"large\" />\r\n                                    <Typography variant=\"h6\" color=\"inherit\" style={{paddingLeft: 7}}>\r\n                                        {this.props.title}\r\n                                    </Typography>\r\n                                </Left>\r\n                            )\r\n                        }\r\n                        <Right>\r\n                            <Toolbar variant=\"dense\">\r\n                                {this.props.onMenuToggle &&\r\n                                <MenuButton color=\"inherit\" aria-label=\"Open drawer\" onClick={e => this.props.onMenuToggle && this.props.onMenuToggle()}>\r\n                                    <MenuIcon/>\r\n                                </MenuButton>\r\n                                }\r\n                                <ToolbarRight>\r\n                                    <div>{this.props.children}</div>\r\n                                </ToolbarRight>\r\n                            </Toolbar>\r\n                        </Right>\r\n                    </Wrapper>\r\n                </StyledAppBar>\r\n            </Root>\r\n        )\r\n    }\r\n}\r\n\r\nexport type TopMenuContentProps = {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport class TopMenuContent extends React.PureComponent<TopMenuContentProps>{\r\n    static propTypes = {\r\n        children: PropTypes.node.isRequired\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nfunction setTitle(text){\r\n    document.title = text\r\n}\r\n\r\ntype Props = {\r\n    text: string\r\n}\r\n\r\nexport default class DocumentTitle extends React.PureComponent<Props>{\r\n    constructor(props){\r\n        super(props)\r\n        setTitle(props.text)\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.text !== this.props.text){\r\n            setTitle(nextProps.text)\r\n        }\r\n    }\r\n    render(){\r\n        return ''\r\n    }\r\n}","import React from 'react'\r\nimport withWidth, {WithWidth} from '@material-ui/core/withWidth'\r\nimport useTheme from '@material-ui/styles/useTheme'\r\nimport {unstable_useMediaQuery as useMediaQuery} from '@material-ui/core/useMediaQuery'\r\n\r\ntype Omit<T, K extends string> = Pick<T, Exclude<keyof T, K>>\r\n\r\nexport type ScreenSizeData = {\r\n    mobile: boolean\r\n    tablet: boolean\r\n    desktop: boolean\r\n}\r\n\r\nexport type InjectedScreenSizeProps = {\r\n    screenSize: ScreenSizeData\r\n}\r\n\r\nexport type ScreenSizeProps = {\r\n    children: (screenSize: ScreenSizeData) => React.ReactElement\r\n} & WithWidth\r\n\r\nconst mobile = ['xs', 'sm']\r\nconst tablet = ['sm', 'md']\r\nconst desktop = ['md', 'lg', 'xl']\r\n\r\nconst getScreenSize = width => ({\r\n    mobile: mobile.includes(width),\r\n    tablet: tablet.includes(width),\r\n    desktop: desktop.includes(width)\r\n})\r\n\r\nconst ScreenSize = withWidth()((props: ScreenSizeProps) => props.children(getScreenSize(props.width)))\r\n\r\nexport function withScreenSize<P extends InjectedScreenSizeProps>(Component: React.ComponentType<P>): React.ComponentType<Omit<P, keyof InjectedScreenSizeProps>>{\r\n    return (props: any) => {\r\n        return (\r\n            <ScreenSize>\r\n                {(screenSize) => <Component {...props} screenSize={screenSize} />}\r\n            </ScreenSize>\r\n        )\r\n    }\r\n}\r\n\r\nexport const useScreenSize = () => {\r\n    const theme = useTheme()\r\n\r\n    const width = [...theme.breakpoints.keys]\r\n        .reverse()\r\n        .reduce((output, key) => {\r\n            const matches = useMediaQuery(theme.breakpoints.only(key))\r\n            return !output && matches ? key : output\r\n        }, null) || 'xs'\r\n\r\n    return getScreenSize(width)\r\n}\r\n\r\nexport default ScreenSize","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\nimport TopBar from './Topbar'\r\nimport DocumentTitle from './DocumentTitle'\r\nimport Menu from './Menu'\r\nimport {withScreenSize, ScreenSizeData} from '../ScreenSize'\r\n\r\n// Wrap everything\r\nexport const LayoutWrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column; // Flex header and body from top to bottom\r\n`\r\n\r\n// Put topbar in here\r\nexport const LayoutHeader = styled.div`\r\n  \r\n`\r\n\r\n// Put everything below topbar here\r\nexport const LayoutBody = styled.div`\r\n  flex: 1; // Fill the rest of the page after header has taken its space\r\n  min-height: 0;\r\n  display: flex;\r\n`\r\n\r\n// Put menu here\r\nexport const LayoutBodyLeft = styled.div`\r\n\r\n`\r\n\r\n// Put your app here\r\nexport const LayoutBodyRight = styled.div`\r\n  flex: 1;\r\n  min-height: 0;\r\n  padding: 15px;\r\n  overflow-y: auto;\r\n`\r\n\r\ntype LayoutProps = {\r\n    title: string\r\n    docTitle: string\r\n    menuContent?: React.ReactNode\r\n    topMenuContent?: React.ReactNode\r\n} & {\r\n    screenSize: ScreenSizeData\r\n}\r\n\r\ntype LayoutState = {\r\n    menuOpen: boolean | null\r\n}\r\n\r\nexport default withScreenSize(class Layout extends React.PureComponent<LayoutProps, LayoutState>{\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        docTitle: PropTypes.string.isRequired,\r\n        menuContent: PropTypes.node,\r\n        topMenuContent: PropTypes.node\r\n    }\r\n\r\n    state: LayoutState = {\r\n        menuOpen: null\r\n    }\r\n\r\n    onCloseMenu = () => this.setState({menuOpen: false})\r\n    onMenuToggle = () => this.setState(state => ({menuOpen: !this.menuIsOpen()}))\r\n    menuIsOpen(){\r\n        if(this.state.menuOpen === null){\r\n            return !this.props.screenSize.mobile\r\n        }\r\n        return this.state.menuOpen\r\n    }\r\n    onClickContent = () => {\r\n        if(this.props.screenSize.mobile && this.menuIsOpen()){\r\n            this.onCloseMenu()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <LayoutWrapper>\r\n                <DocumentTitle text={this.props.docTitle} />\r\n                <LayoutHeader>\r\n                    <TopBar\r\n                        title={this.props.title}\r\n                        onMenuToggle={this.onMenuToggle}\r\n                        mobile={this.props.screenSize.mobile}\r\n                    >\r\n                        {this.props.topMenuContent}\r\n                    </TopBar>\r\n                </LayoutHeader>\r\n                <LayoutBody>\r\n                    <LayoutBodyLeft onClick={this.onClickContent}>\r\n                        <Menu mobile={this.props.screenSize.mobile} open={this.menuIsOpen()} onClose={this.onCloseMenu}>\r\n                            {this.props.menuContent}\r\n                        </Menu>\r\n                    </LayoutBodyLeft>\r\n                    <LayoutBodyRight>\r\n                        {this.props.children}\r\n                    </LayoutBodyRight>\r\n                </LayoutBody>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n})","import React from 'react'\r\nimport styled, {DefaultTheme} from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MuiSnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n}\r\n\r\nconst bgColor = (variant: AlertVariant, palette: DefaultTheme['tfso']['palette']) => {\r\n    switch(variant){\r\n    case 'success': return palette.success\r\n    case 'error': return palette.alert\r\n    case 'info': return palette.primaryLight\r\n    case 'warning': return palette.warning\r\n    }\r\n}\r\n\r\nconst SnackbarContent = ({variant, ...other}) => <MuiSnackbarContent {...other} />\r\nconst StyledSnack = styled(SnackbarContent)`&&{\r\n    background-color: ${({variant, theme}) => bgColor(variant, theme.tfso.palette)}\r\n}`\r\n\r\ntype AlertVariant = 'success' | 'warning' | 'error' | 'info'\r\n\r\nexport type AlertProps = {\r\n    message: React.ReactNode\r\n    onClose(): void\r\n    variant: AlertVariant\r\n}\r\n\r\nconst Alert = (props: AlertProps) => {\r\n    const {message, onClose, variant} = props\r\n    const Icon = variantIcon[variant]\r\n\r\n    return (\r\n        <StyledSnack\r\n            variant={variant}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" style={{display: 'flex', alignItems: 'center'}}>\r\n                    <Icon style={{fontSize: 20, opacity: 0.9, marginRight: 10}} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon style={{fontSize: 20}} />\r\n                </IconButton>,\r\n            ]}\r\n        />\r\n    )\r\n}\r\n\r\nAlert.propTypes = {\r\n    message: PropTypes.node.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\n\r\nexport type BigNumberProps = {\r\n    /**\r\n     * Choose `light` when you have a dark background, otherwise `dark`\r\n     * @default light\r\n     */\r\n    color?: 'light' | 'dark'\r\n\r\n    /**\r\n     * @default large\r\n     */\r\n    size?: 'medium' | 'large'\r\n    children: string | number\r\n}\r\n\r\nconst fontSizeMap: {[P in Required<BigNumberProps>['size']]: number} = {\r\n    medium: 32,\r\n    large: 48\r\n}\r\n\r\nconst defaultProps: Required<Pick<BigNumberProps, 'color' | 'size'>> = {\r\n    color: 'light',\r\n    size: 'large',\r\n}\r\n\r\nconst wrapper = ({size, color, ...props}: Required<BigNumberProps>) => <div {...props} />\r\n// TODO: These should be on the BigNumber component instead..\r\nwrapper.defaultProps = defaultProps\r\nwrapper.propTypes = {\r\n    color: PropTypes.oneOf(['light', 'dark']),\r\n    size: PropTypes.oneOf(['medium', 'large']),\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]).isRequired\r\n}\r\n\r\nconst BigNumber = styled(wrapper)`&&{\r\n    font-size: ${({theme, size = defaultProps.size}) => theme.mui.typography.pxToRem(fontSizeMap[size])};\r\n    line-height: normal;\r\n    letter-spacing: 0.08em;\r\n    color: ${({color = defaultProps.color}) => color === 'light' ? '#FFFFFF' : '#404040'};\r\n    white-space: nowrap\r\n}`\r\n\r\nexport default BigNumber as React.ComponentType<BigNumberProps>","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport Slide from '@material-ui/core/Slide'\r\n\r\nexport type ConfirmationDialogProps = {\r\n    open: boolean\r\n    title?: string\r\n    message: string\r\n    okButtonText: string\r\n    cancelButtonText: string\r\n    onOk: () => void\r\n    onCancel: () => void\r\n}\r\n\r\nconst TransitionComponent = props => <Slide direction='up' {...props} />\r\n\r\nconst ConfirmationDialog = (props: ConfirmationDialogProps) => {\r\n    const {open, onCancel, onOk, title, message, okButtonText, cancelButtonText} = props\r\n    return (\r\n        <Dialog\r\n            TransitionComponent={TransitionComponent}\r\n            keepMounted={false}\r\n            open={open}\r\n            onClose={onCancel}\r\n            maxWidth={'xs'}\r\n        >\r\n            {title && <DialogTitle>{title}</DialogTitle>}\r\n            <DialogContent>{message}</DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onCancel} color=\"primary\">{cancelButtonText}</Button>\r\n                <Button onClick={onOk} color=\"secondary\">{okButtonText}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    title: PropTypes.string,\r\n    message: PropTypes.string.isRequired,\r\n    okButtonText: PropTypes.string.isRequired,\r\n    cancelButtonText: PropTypes.string.isRequired,\r\n    onOk: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ConfirmationDialog","import React from 'react'\r\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nexport type SearchFieldProps = TextFieldProps\r\n\r\ntype State = {\r\n    editing: boolean\r\n}\r\n\r\nexport default class SearchField extends React.PureComponent<SearchFieldProps, State>{\r\n    static defaultProps = {\r\n        placeholder: 'Search',\r\n        margin: 'dense',\r\n        InputProps: {\r\n            startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>\r\n        }\r\n    }\r\n\r\n    state: State = {\r\n        editing: false\r\n    }\r\n\r\n    onBlur = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: false})\r\n        const {onBlur} = this.props\r\n        onBlur && onBlur(e)\r\n    }\r\n\r\n    onFocus = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: true})\r\n        const {onFocus} = this.props\r\n        onFocus && onFocus(e)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <TextField\r\n                fullWidth={this.state.editing}\r\n                {...this.props}\r\n                onBlur={this.onBlur}\r\n                onFocus={this.onFocus}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\r\n\r\ntype Props = {\r\n    value: string\r\n    onChange: (value: string) => void\r\n    dirty?: boolean\r\n    enableDirtyCheck?: boolean\r\n}\r\n\r\ntype State = {\r\n    editing: boolean\r\n    value: string\r\n    prevProps: Props\r\n}\r\n\r\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>\r\n\r\nfunction handleEvent(event: React.KeyboardEvent<HTMLDivElement>){\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n    // the above only prevents other synthetic events, if we want to prevent global listeners too, we need to stop the propagation on the native event as well\r\n    event.nativeEvent.stopImmediatePropagation()\r\n}\r\n\r\nexport type TextFieldEditorProps = Props & Partial<Omit<TextFieldProps, 'value' | 'onChange'>>\r\n\r\nexport default class TextFieldEditor extends React.PureComponent<TextFieldEditorProps, State>{\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n        onChange: PropTypes.func.isRequired,\r\n        dirty: PropTypes.bool\r\n    }\r\n\r\n    _inputRef: React.RefObject<HTMLInputElement> = React.createRef()\r\n\r\n    state: State = {\r\n        editing: false,\r\n        value: this.props.value,\r\n        prevProps: this.props\r\n    }\r\n\r\n    static getDerivedStateFromProps(props: Readonly<TextFieldEditorProps>, state: Readonly<State>){\r\n        const prevProps = state.prevProps\r\n\r\n        if(prevProps.value !== props.value){ return {value: props.value, prevProps: props} }\r\n\r\n        return {prevProps: props}\r\n    }\r\n\r\n    blur = () => { this._inputRef.current && this._inputRef.current.blur() }\r\n\r\n    onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n        this.props.onKeyDown && this.props.onKeyDown(event)\r\n        if(event.defaultPrevented){ return }\r\n\r\n        if(event.ctrlKey){\r\n            switch(event.key){\r\n            case 's':\r\n            // this event should not be 'handled' here (eg. invoke handleEvent(event)), control may want to perform other actions on ctrl+s\r\n            // It should behave as a save changes in the control as well however\r\n                this.blur()\r\n                break\r\n            case 'z':\r\n                handleEvent(event)\r\n                this.setState({editing: false, value: this.props.value}, this.blur)\r\n                break\r\n            default: break\r\n            }\r\n        }else{\r\n            switch(event.key){\r\n            case 'Enter':\r\n                if(this.props.multiline){ break }\r\n                handleEvent(event)\r\n                this.blur()\r\n                break\r\n            case 'Escape':\r\n                handleEvent(event)\r\n                this.setState({editing: false, value: this.props.value}, this.blur)\r\n                break\r\n            default: break\r\n            }\r\n        }\r\n    }\r\n\r\n    onFocus = (e: React.EventHandler<any>) => {\r\n        this.setState({editing: true})\r\n        this.props.onFocus && this.props.onFocus(e)\r\n    }\r\n\r\n    onBlur = (e: React.EventHandler<any>) => {\r\n        if(!this.state.editing){ return } // The method should be safe to call multiple times, but we don't want to raise the event multiple times if we dont need to\r\n\r\n        this.props.onChange(this.state.value)\r\n        this.setState({editing: false})\r\n        this.props.onBlur && this.props.onBlur(e)\r\n    }\r\n\r\n    onChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement | HTMLSelectElement>) => {\r\n        const value = event.target.value\r\n        this.setState({value, editing: true})\r\n    }\r\n\r\n    render(){\r\n        const {dirty: dirtyProp, onChange: onChangeProp, value: valueProp, enableDirtyCheck, ...otherProps} = this.props\r\n        const {value} = this.state\r\n\r\n        const isDirty = enableDirtyCheck ? this.props.value !== value || !!dirtyProp : !!dirtyProp\r\n\r\n        return (\r\n            <TextField\r\n                {...otherProps as any}\r\n                inputRef={this._inputRef}\r\n                value={value}\r\n                onFocus={this.onFocus}\r\n                onChange={this.onChange}\r\n                onBlur={this.onBlur}\r\n                onKeyDown={this.onKeyDown}\r\n                InputProps={{style: {fontStyle: isDirty ? 'italic' : 'normal'}}}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport {withTheme, DefaultTheme, WithTheme} from 'styled-components'\r\n\r\nimport TrendingUp from '@material-ui/icons/TrendingUp'\r\nimport TrendingFlat from '@material-ui/icons/TrendingFlat'\r\nimport TrendingDown from '@material-ui/icons/TrendingDown'\r\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\r\n\r\nexport type TrendingProps = {\r\n    variant: 'up' | 'down' | 'flat'\r\n} & SvgIconProps\r\n\r\nconst iconMap: {[P in TrendingProps['variant']]: React.ComponentType<SvgIconProps>} = {\r\n    up: TrendingUp,\r\n    flat: TrendingFlat,\r\n    down: TrendingDown,\r\n}\r\n\r\nconst getColor = (variant: TrendingProps['variant'], theme: DefaultTheme) => {\r\n    switch(variant){\r\n    case 'up': return theme.tfso.palette.success\r\n    case 'down': return theme.tfso.palette.warning\r\n    case 'flat': return theme.tfso.palette.alert\r\n    default: return undefined\r\n    }\r\n}\r\n\r\nconst trending = ({variant, theme, ...iconProps}: TrendingProps & WithTheme) => {\r\n    const Icon = iconMap[variant]\r\n    const nativeColor = getColor(variant, theme)\r\n    return (\r\n        <Icon\r\n            nativeColor={nativeColor}\r\n            {...iconProps}\r\n        />\r\n    )\r\n}\r\n\r\ntrending.propTypes = {\r\n    variant: PropTypes.oneOf(['up', 'down', 'flat']).isRequired\r\n}\r\n\r\nexport default React.memo(withTheme(trending))","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n// https://www.w3schools.com/charsets/ref_emoji.asp\r\nconst emojis = {\r\n    middleFinger: <>&#128405;</>,\r\n    indexFinger: <>&#128070;</>,\r\n    flex: <>&#128170;</>,\r\n    brokenHeart: <>&#128148;</>,\r\n    perfect: <>&#128076;</>,\r\n    thumbsUp: <>&#128077;</>,\r\n    thumbsDown: <>&#128078;</>,\r\n    clap: <>&#128079;</>,\r\n    heart: <>&#128152;</>,\r\n    fire: <>&#128293;</>,\r\n    bulb: <>&#128161;</>,\r\n    crap: <>&#128169;</>,\r\n    thinking: <>&#129300;</>,\r\n    rocket: <>&#128640;</>,\r\n}\r\n\r\nexport type EmojiProps = {\r\n    variant: keyof typeof emojis\r\n}\r\n\r\nconst Emoji = (props: EmojiProps) => emojis[props.variant]\r\n\r\nEmoji.propTypes = {\r\n    variant: PropTypes.oneOf(Object.keys(emojis))\r\n}\r\n\r\nexport default Emoji","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    beforeShow?: any\r\n    delayMs?: number\r\n    show?: boolean\r\n    children: React.ReactNode\r\n}\r\n\r\ntype State = {\r\n    show: boolean\r\n}\r\n\r\nexport default class Delay extends React.PureComponent<Props, State>{\r\n    static propTypes = {\r\n        beforeShow: PropTypes.node,\r\n        delayMs: PropTypes.number,\r\n        show: PropTypes.bool,\r\n        children: PropTypes.node.isRequired\r\n    }\r\n\r\n    _timer: any = null\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.setState({show: false})\r\n        this._timer = setTimeout(() => {\r\n            this.setState({show: true})\r\n        }, this.props.delayMs || 1000)\r\n    }\r\n    componentWillUnmount(){\r\n        clearTimeout(this._timer)\r\n    }\r\n    render(){\r\n        if(this.props.show || this.state.show){\r\n            return this.props.children\r\n        }\r\n\r\n        return this.props.beforeShow || null\r\n    }\r\n}","import React, {HTMLProps} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    children: (hover: boolean, ref: React.RefObject<any>) => React.ReactNode\r\n} & HTMLProps<HTMLDivElement>\r\n\r\ntype State = {\r\n    hover: boolean\r\n}\r\n\r\nexport default class Hoverable extends React.PureComponent<Props, State>{\r\n    private ref: React.RefObject<any>\r\n\r\n    static propTypes = {\r\n        children: PropTypes.func.isRequired\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.ref = React.createRef()\r\n\r\n        this.state = {\r\n            hover: false\r\n        }\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState(state => ({hover: !state.hover}))\r\n    }\r\n\r\n    hoverOn = () => this.setState({hover: true})\r\n    hoverOff = () => this.setState({hover: false})\r\n\r\n    render(){\r\n        const {children, ...restProps} = this.props\r\n\r\n        return (\r\n            <div\r\n                ref={this.ref}\r\n                onMouseEnter={this.hoverOn}\r\n                onMouseLeave={this.hoverOff}\r\n                {...restProps}\r\n            >\r\n                {children(this.state.hover, this.ref)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {HTMLProps} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\ntype Props = {\r\n    children: (tabIndex: number, next: () => void, prev: () => void) => React.ReactNode\r\n    index?: number\r\n    length?: number\r\n} & HTMLProps<HTMLDivElement>\r\n\r\ntype State = {\r\n    index: number\r\n}\r\n\r\nexport default class Wizard extends React.PureComponent<Props, State>{\r\n    static propTypes = {\r\n        children: PropTypes.func.isRequired,\r\n        index: PropTypes.number,\r\n        length: PropTypes.number\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {index: props.index || 0}\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps){\r\n        if(nextProps.hasOwnProperty('index')){\r\n            return {index: nextProps.index}\r\n        }\r\n        return null\r\n    }\r\n\r\n    next = () => this.setState(state => {\r\n        if(this.props.length && state.index + 1 >= this.props.length) return state\r\n        return {index: state.index + 1}\r\n    })\r\n    prev = () => this.setState(state => {\r\n        if(state.index - 1 < 0) return state\r\n        return {index: state.index - 1}\r\n    })\r\n\r\n    render(){\r\n        const {children, ...restProps} = this.props\r\n\r\n        return (\r\n            <div {...restProps}>\r\n                {children(this.state.index, this.next, this.prev)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Styled, {css} from 'styled-components/macro'\r\n\r\nexport type TfsoLoadingIconProps = {\r\n    /**\r\n     * @default infinite\r\n     */\r\n    once?: boolean\r\n} & SvgIconProps\r\n\r\nconst TfsoLoadingIconWrapper = ({once, ...other}: TfsoLoadingIconProps) => <SvgIcon {...other}/>\r\n\r\nconst path = css`\r\n    opacity: 1;\r\n    animation-delay: 1.5s;\r\n`\r\nconst StyledSvgIcon: React.ComponentType<SvgIconProps> = Styled(TfsoLoadingIconWrapper)`&&{\r\n    #path1{\r\n        ${path}\r\n        animation: fade-in1 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path2{\r\n        ${path}\r\n        animation: fade-in2 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path3{\r\n        ${path}\r\n        animation: fade-in3 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path4{\r\n        ${path}\r\n        animation: fade-in4 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    #path5{\r\n        ${path}\r\n        animation: fade-in5 1.5s ${({once}) => once ? 1 : 'infinite'}\r\n    }\r\n    @keyframes fade-in1 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 1; }\r\n        40% { opacity: 1; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in2 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 1; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in3 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 1; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in4 {\r\n        0%   { opacity:0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 0.2; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n    @keyframes fade-in5 {\r\n        0%   { opacity: 0.2; }\r\n        20% { opacity: 0.2; }\r\n        40% { opacity: 0.2; }\r\n        60% { opacity: 0.2; }\r\n        80% { opacity: 1; }\r\n        100% {opactiy: 1}\r\n    }\r\n}` as any // seems like returntype of styled-components adds string as a type of _ref.. dunnp why\r\n\r\nexport default React.memo((props: TfsoLoadingIconProps) => (\r\n    <StyledSvgIcon\r\n        {...props}\r\n        viewBox=\"0 0 37 23\"\r\n        fillRule='evenodd'\r\n        strokeWidth=\"1\"\r\n    >\r\n        <path d=\"M21.79 9.81C21.17789 8.5323532 19.886707 7.7195303 18.47 7.72 16.444136 7.7143752 14.803816 6.0724096 14.800223 4.0465408 14.79663 2.020672 16.431115 0.37289845 18.456947 0.36008776 20.482778 0.34727707 22.137972 1.9742478 22.16 4c-0.01782 1.4288443 0.793121 2.7388262 2.08 3.36-1.120033 0.4431782-2.006822 1.3299671-2.45 2.45l0 0z\" id=\"path5\"/>\r\n        <path d=\"m33.24 15.09c-1.427527 0.01209-2.733245-0.802525-3.35-2.09-0.443178 1.120033-1.329967 2.006822-2.45 2.45 1.275973 0.613987 2.088053 1.903991 2.09 3.32 0 2.032408 1.647592 3.68 3.68 3.68 2.032408 0 3.68-1.647592 3.68-3.68 0-2.032408-1.647592-3.68-3.68-3.68l0.03 0 0 0z\" id=\"path4\"/>\r\n        <path d=\"m14.79 11.41c0-2.0351693-1.649831-3.685-3.685-3.685-2.0351693 0-3.685 1.6498307-3.685 3.685 0 2.032408-1.6475921 3.68-3.68 3.68-2.0324079 0-3.68 1.647592-3.68 3.68 0 2.032408 1.6475921 3.68 3.68 3.68 2.0324079 0 3.68-1.647592 3.68-3.68-0.00119-1.719312 1.1882715-3.210312 2.864877-3.591141 1.676605-0.380829 3.39346 0.450022 4.135123 2.001141 0.443178-1.120033 1.329967-2.006822 2.45-2.45-1.27208-0.616837-2.079908-1.906255-2.08-3.32l0 0 0 0z\" id=\"path2\"/>\r\n        <path d=\"m25.84 7.73c-2.016889-0.0001192-3.658077 1.6232303-3.68 3.64l0 0.09c-0.02094 1.397916-0.830116 2.663946-2.09 3.27 1.120033 0.443178 2.006822 1.329967 2.45 2.45 0.613987-1.275973 1.903991-2.088053 3.32-2.09 2.035169 0 3.685-1.649831 3.685-3.685 0-2.0351693-1.649831-3.685-3.685-3.685l0 0.01 0 0z\" id=\"path3\"/>\r\n        <path d=\"m18.47 15.1c-2.031097 0.0055-3.673671 1.655547-3.669994 3.686649 0.0037 2.031101 1.652215 3.675171 3.683318 3.673336C20.514428 22.45815 22.159993 20.811104 22.16 18.78 22.162665 17.800536 21.774754 16.860421 21.082167 16.167833 20.389579 15.475246 19.449463 15.087335 18.47 15.09l0 0.01 0 0z\" id=\"path1\"/>\r\n    </StyledSvgIcon>\r\n))\r\n","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nexport const MaterialUiIcon = React.memo((props: SvgIconProps) => (\r\n    <SvgIcon {...props} viewBox=\"0 0 600 476.6\">\r\n        <path d=\"m0 259.8v-259.8l225 129.9v86.6l-150-86.6v173.2z\" fill=\"#00b0ff\"/>\r\n        <path d=\"m225 129.9 225-129.9v259.8l-150 86.6-75-43.3 150-86.6v-86.6l-150 86.6z\" fill=\"#0081cb\"/>\r\n        <path d=\"m225 303.1v86.6l150 86.6v-86.6z\" fill=\"#00b0ff\"/>\r\n        <path d=\"m375 476.3 225-129.9v-173.2l-75 43.3v86.6l-150 86.6zm150-346.4v-86.6l75-43.3v86.6z\" fill=\"#0081cb\"/>\r\n    </SvgIcon>\r\n))\r\n\r\nexport type MaterialUiLinkProps = {\r\n    iconProps?: SvgIconProps\r\n}\r\n\r\nconst MaterialUiLink = (props: MaterialUiLinkProps) => (\r\n    <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\r\n        <MaterialUiIcon fontSize='large' {...props.iconProps as any} />\r\n    </Link>\r\n)\r\n\r\nexport default MaterialUiLink\r\n","import React from 'react'\r\n\r\nimport SvgIcon, {SvgIconProps} from '@material-ui/core/SvgIcon'\r\nimport Link from '@material-ui/core/Link'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nexport const GitHubIcon = React.memo((props: SvgIconProps) => (\r\n    <SvgIcon {...props}>\r\n        <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\r\n    </SvgIcon>\r\n))\r\n\r\nexport type GitHubLinkProps = {\r\n    path?: string\r\n    tooltip?: string\r\n    iconProps?: SvgIconProps\r\n}\r\n\r\nconst GitHubLink = (props: GitHubLinkProps) => {\r\n    return (\r\n        <Link href={`https://github.com/tfso/react-tfso-components${props.path ? `/${props.path}` : ''}`} target='_blank' rel='noreferrer' >\r\n            <Tooltip title={props.tooltip ? props.tooltip : 'View on GitHub'}>\r\n                <GitHubIcon fontSize={props.iconProps && props.iconProps.fontSize || 'large'} {...props.iconProps as any} />\r\n            </Tooltip>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default GitHubLink\r\n","import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Zoom from '@material-ui/core/Zoom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\r\nimport {MaterialUiIcon} from '../components/MaterialUiLink'\r\nimport {GitHubIcon} from '../components/GitHubLink'\r\n\r\n// TODO: this could be a Util HOC component\r\nconst CenterTop = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    height: 100%;\r\n`\r\n\r\nconst Home = () => {\r\n    return (\r\n        <CenterTop>\r\n            <TfsoLoading once color='primary' fontSize='inherit' style={{fontSize: 400}} />\r\n            <Typography variant='h3' color='primary' paragraph>\r\n                REACT-TFSO-COMPONENTS\r\n            </Typography>\r\n            <Typography variant='h6' align='center' color='textSecondary' paragraph>\r\n                Something something useful description something dark side (TODO) <br />\r\n                Supplementary React components based on Material-UI with Tfso styling<br />\r\n            </Typography>\r\n            <Grid container justify='center'>\r\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Zoom in appear style={{transitionDelay: '250ms'}} >\r\n                        <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>\r\n                            <MaterialUiIcon style={{fontSize: 150}} />\r\n                        </Link>\r\n                    </Zoom>\r\n                    <Zoom in appear style={{transitionDelay: '750ms'}} >\r\n                        <Typography variant='h6'>\r\n                            Find standard components <Link href='https://material-ui.com/' target='_blank' rel='noreferrer'>here</Link>\r\n                        </Typography>\r\n                    </Zoom>\r\n                </Grid>\r\n                <Grid item xs={5} style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Zoom in appear style={{transitionDelay: '500ms'}}>\r\n                        <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >\r\n                            <GitHubIcon style={{fontSize: 150}} color='primary' />\r\n                        </Link>\r\n                    </Zoom>\r\n                    <Zoom in appear style={{transitionDelay: '1000ms'}} >\r\n                        <Typography variant='h6'>\r\n                            View source on <Link href='https://github.com/tfso/react-tfso-components' target='_blank' rel='noreferrer' >GitHub</Link>\r\n                        </Typography>\r\n                    </Zoom>\r\n                </Grid>\r\n            </Grid>\r\n        </CenterTop>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport Prism from 'prismjs'\r\n\r\n// Load languages\r\nimport 'prismjs/components/prism-clike'\r\nimport 'prismjs/components/prism-css'\r\nimport 'prismjs/components/prism-markup'\r\nimport 'prismjs/components/prism-javascript'\r\nimport 'prismjs/components/prism-typescript'\r\nimport 'prismjs/components/prism-jsx'\r\nimport 'prismjs/components/prism-tsx'\r\n\r\n// Load style\r\nimport 'prismjs/themes/prism.css'\r\n\r\ntype CodeProps = {\r\n    language: 'js' | 'ts' | 'tsx' | 'jsx'\r\n    children: React.ReactNode\r\n}\r\n\r\nexport class Code extends React.PureComponent<CodeProps>{\r\n    _ref: React.RefObject<HTMLPreElement> = React.createRef()\r\n\r\n    componentDidMount(){\r\n        this.highlight()\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.highlight()\r\n    }\r\n\r\n    highlight = () => {\r\n        if(!this._ref.current){ return }\r\n        Prism.highlightElement(this._ref.current!)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <pre ref={this._ref} className={`language-${this.props.language}`}>\r\n                <code className={`language-${this.props.language}`}>\r\n                    {this.props.children}\r\n                </code>\r\n            </pre>\r\n        )\r\n    }\r\n}","import React, {ReactChild} from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport CodeIcon from '@material-ui/icons/Code'\r\n\r\nimport GitHubLink from './GitHubLink'\r\nimport {Code} from './code'\r\n\r\nexport const Demo = (props) => <Paper style={{padding: 15, marginBottom: 30}}>{props.children}</Paper>\r\n\r\nexport type DemoTitleProps = {\r\n    children: string\r\n    /**\r\n     * The path to the Demo component. `src/demo/demos/` will be appended in front of the path\r\n     */\r\n    demoPath?: string\r\n\r\n    /**\r\n     * The path to the Implementation of the component. `src/lib/` will be appended in front of the path\r\n     */\r\n    srcPath?: string\r\n}\r\nexport const DemoTitle = (props: DemoTitleProps) => {\r\n    return (\r\n        <Grid container justify='space-between' alignItems='baseline' >\r\n            <Grid item>\r\n                <Typography variant=\"h5\">\r\n                    {props.children}\r\n                </Typography>\r\n            </Grid>\r\n            {props.srcPath || props.demoPath\r\n                ? <Grid item xs={2} container spacing={16} justify='flex-end'>\r\n                    {props.demoPath && <Grid item><GitHubLink iconProps={{fontSize: 'default', color: 'secondary'}} path={`blob/master/src/demo/demos/${props.demoPath}`} tooltip={`View demo source for ${props.children}`} /></Grid>}\r\n                    {props.srcPath && <Grid item><GitHubLink iconProps={{fontSize: 'default', color: 'primary'}} path={`blob/master/src/lib/${props.srcPath}`} tooltip={`View source for ${props.children}`}/></Grid> }\r\n                </Grid>\r\n                : null\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\nexport const DemoHelp = (props) => <Typography variant='subtitle1' paragraph>{props.children}</Typography>\r\nexport const DemoContent = (props: { children: Array<ReactChild> | ReactChild}) => (\r\n    <div style={{marginTop: 30}}>\r\n        <Typography variant=\"subtitle1\" >Example</Typography>\r\n        <Divider />\r\n        <br />\r\n        <Grid container spacing={16} alignItems='center'>\r\n            {props.children && Array.isArray(props.children)\r\n                ? props.children.map((child, i) => (\r\n                    <Grid item key={i} xs={i === 0 ? 12 : false}>\r\n                        {child}\r\n                    </Grid>\r\n                ))\r\n                : <Grid item xs={12} >{props.children}</Grid>\r\n            }\r\n        </Grid>\r\n    </div>\r\n)\r\n\r\nexport type DemoPropsProps = {\r\n    title?: string\r\n    children: React.ReactNode\r\n}\r\n\r\nexport const DemoProps = (props: DemoPropsProps) => (\r\n    <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant='h6'>{props.title || 'Props'}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Default</TableCell>\r\n                        <TableCell>Description</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.children}\r\n                </TableBody>\r\n            </Table>\r\n        </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n)\r\n\r\nexport type DemoPropProps = {\r\n    name: string\r\n    type: string\r\n    default?: string\r\n    description?: string\r\n    required?: boolean\r\n}\r\n\r\nexport const DemoProp = (props: DemoPropProps) => (\r\n    <TableRow>\r\n        <TableCell><code>{`${props.required ? '* ' : ''}${props.name}`}</code></TableCell>\r\n        <TableCell><code>{props.type}</code></TableCell>\r\n        <TableCell><code>{props.default}</code></TableCell>\r\n        <TableCell><Typography>{props.description}</Typography></TableCell>\r\n    </TableRow>\r\n)\r\n\r\ntype DemoCodeProps = Code['props']\r\nexport const DemoCode = (props: DemoCodeProps) => (\r\n    <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<CodeIcon />}>\r\n            <Typography variant='h6'>{`View Demo (${props.language})`}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n            <Code {...props} />\r\n        </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n)","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport TfsoLoading from '../../lib/icons/TfsoLoading'\r\nimport Tfso, {TfsoIconProps} from '../../lib/icons/Tfso'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nexport default class Icons extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <>\r\n                <TfsoDemo />\r\n                <TfsoLoadingDemo />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\ntype TfsoLogoDemoState = {\r\n    color: TfsoIconProps['color']\r\n    fontSize: TfsoIconProps['fontSize']\r\n    nativeColor: TfsoIconProps['nativeColor']\r\n}\r\n\r\nclass TfsoDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\r\n    state:TfsoLogoDemoState = {\r\n        color: 'primary',\r\n        fontSize: 'large',\r\n        nativeColor: ''\r\n    }\r\n\r\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/Tfso.tsx'>Tfso</DemoTitle>\r\n                <DemoHelp>Tfso logo icon</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Tfso\r\n                        color={this.state.color}\r\n                        fontSize={this.state.fontSize}\r\n                        nativeColor={this.state.nativeColor}\r\n                    />\r\n                    <TextField\r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                    >\r\n                        <MenuItem value='inherit' >inherit</MenuItem>\r\n                        <MenuItem value='primary' >primary</MenuItem>\r\n                        <MenuItem value='secondary' >secondary</MenuItem>\r\n                        <MenuItem value='default' >default</MenuItem>\r\n                        <MenuItem value='action' >action</MenuItem>\r\n                        <MenuItem value='disabled' >disabled</MenuItem>\r\n                        <MenuItem value='error' >error</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='fontSize'\r\n                        value={this.state.fontSize}\r\n                        onChange={this.handleChange('fontSize')}\r\n                    >\r\n                        <MenuItem value='small'>small</MenuItem>\r\n                        <MenuItem value='default'>default</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n\r\n                    </TextField>\r\n                    <TextField\r\n                        label='nativeColor'\r\n                        placeholder='#00B8F3'\r\n                        value={this.state.nativeColor}\r\n                        onChange={this.handleChange('nativeColor')}\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}\r\n\r\nclass TfsoLoadingDemo extends React.PureComponent<{}, TfsoLogoDemoState>{\r\n    state:TfsoLogoDemoState = {\r\n        color: 'primary',\r\n        fontSize: 'large',\r\n        nativeColor: ''\r\n    }\r\n\r\n    handleChange = (target: keyof TfsoLogoDemoState) => (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n        this.setState({[target]: event.target.value} as TfsoLogoDemoState)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Icons.tsx' srcPath='icons/TfsoLoading.tsx'>Tfso Loading</DemoTitle>\r\n                <DemoHelp>Tfso logo loading icon</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='once' type='boolean' default='false' description='If true, the icon will animate once'/>\r\n                    <DemoProp name='...' type='SvgIconProps' description='Any props will be spread to the material-ui SvgIcon'/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <TfsoLoading\r\n                        color={this.state.color}\r\n                        fontSize={this.state.fontSize}\r\n                        nativeColor={this.state.nativeColor}\r\n                    />\r\n                    <TextField\r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                    >\r\n                        <MenuItem value='inherit' >inherit</MenuItem>\r\n                        <MenuItem value='primary' >primary</MenuItem>\r\n                        <MenuItem value='secondary' >secondary</MenuItem>\r\n                        <MenuItem value='default' >default</MenuItem>\r\n                        <MenuItem value='action' >action</MenuItem>\r\n                        <MenuItem value='disabled' >disabled</MenuItem>\r\n                        <MenuItem value='error' >error</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='fontSize'\r\n                        value={this.state.fontSize}\r\n                        onChange={this.handleChange('fontSize')}\r\n                    >\r\n                        <MenuItem value='small'>small</MenuItem>\r\n                        <MenuItem value='default'>default</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        label='nativeColor'\r\n                        placeholder='#00B8F3'\r\n                        value={this.state.nativeColor}\r\n                        onChange={this.handleChange('nativeColor')}\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import {createHashHistory} from 'history'\r\n\r\nconst history = createHashHistory({\r\n    basename: '',\r\n    hashType: 'slash',\r\n})\r\nexport default history","import React from 'react'\r\n\r\nimport history from '../history'\r\n\r\nimport MuiLink, {LinkProps as MuiLinkProps} from '@material-ui/core/Link'\r\nimport styled from 'styled-components/macro'\r\n\r\nexport type LinkProps = {\r\n    to?: string\r\n    children: React.ReactNode\r\n} & MuiLinkProps\r\n\r\nexport default class Link extends React.PureComponent<LinkProps>{\r\n    onClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.props.onClick && this.props.onClick(event)\r\n\r\n        if(event.defaultPrevented || !this.props.to){\r\n            return\r\n        }\r\n        event.preventDefault()\r\n        history.push(this.props.to.toLowerCase())\r\n    }\r\n\r\n    render(){\r\n        const {to, href, underline, ...other} = this.props\r\n        return <MuiLink\r\n            {...other}\r\n            href={to && to.toLowerCase() || href}\r\n            underline={underline || 'none'}\r\n            rel={this.props.target === '_blank' ? 'noreferrer' : undefined}\r\n            onClick={this.onClick}\r\n        />\r\n    }\r\n}\r\n\r\nconst AnchorLink = styled(Link)`&&{\r\n    opacity: 0.2;\r\n    :hover{\r\n        opacity: 1;\r\n    }\r\n}`\r\n\r\nconst getPage = () => window.location.hash.split('/')[1]\r\nexport const Anchor = (props: {id: string}) => {\r\n    const id = `/${getPage()}/${props.id.toLowerCase()}`\r\n    return (\r\n        <AnchorLink id={id} to={id}>#</AnchorLink>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components/macro'\r\n\r\nimport Typography, {TypographyProps} from '@material-ui/core/Typography'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\n\r\nimport {Code} from '../components/code'\r\nimport Link, {Anchor} from '../components/Link'\r\n\r\n// https://www.w3schools.com/charsets/ref_emoji.asp\r\nconst emojis = {\r\n    middleFinger: <>&#128405;</>,\r\n    indexFinger: <>&#128070;</>,\r\n    flex: <>&#128170;</>,\r\n    brokenHeart: <>&#128148;</>,\r\n    perfect: <>&#128076;</>,\r\n    thumbsUp: <>&#128077;</>,\r\n    thumbsDown: <>&#128078;</>,\r\n    clap: <>&#128079;</>,\r\n    heart: <>&#128152;</>,\r\n    fire: <>&#128293;</>,\r\n    bulb: <>&#128161;</>,\r\n    crap: <>&#128169;</>,\r\n    thinking: <>&#129300;</>,\r\n    rocket: <>&#128640;</>\r\n}\r\n\r\nconst Section = styled.div`&&{\r\n    margin-top: ${({theme}) => theme.mui.spacing.unit * 4}px;\r\n    margin-bottom: ${({theme}) => theme.mui.spacing.unit * 2}px;\r\n}`\r\n\r\nconst SubHeading = (props: TypographyProps) => <Typography variant='h4' paragraph {...props} />\r\nconst Paragraph = (props: TypographyProps) => <Typography variant='body1' paragraph {...props} component='div'/>\r\nconst Tip = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\r\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\r\n    <Card elevation={0}>\r\n        <CardContent>\r\n            <Typography variant='h6'>Why?</Typography>\r\n            <Typography variant='body1' component='div'>{props.children}</Typography>\r\n        </CardContent>\r\n    </Card>\r\n    <br />\r\n</>)\r\n\r\nconst Guideline = (props: { title: React.ReactNode, children: React.ReactNode }) => (<>\r\n    <Typography variant='h5' paragraph>&#9679; {props.title}</Typography>\r\n    <Card elevation={0}>\r\n        <CardContent>\r\n            <Typography variant='body1' component='div'>{props.children}</Typography>\r\n        </CardContent>\r\n    </Card>\r\n</>)\r\n\r\nexport default class Guidelines extends React.PureComponent{\r\n    render = () => (<>\r\n        {this.renderHeading()}\r\n        {this.renderGuidelines()}\r\n        {this.renderTips()}\r\n        {this.renderContributing()}\r\n    </>)\r\n\r\n    renderHeading = () => (\r\n        <>\r\n            <Typography variant='h2' paragraph>\r\n                Guidelines\r\n            </Typography>\r\n            <Typography variant='subtitle1' paragraph>\r\n                <b>{'{WIP} '}</b>Some general guidelines for developing React applications in TFSO\r\n            </Typography>\r\n        </>\r\n    )\r\n\r\n    renderGuidelines = () => (\r\n        <Section>\r\n            <SubHeading>General <Anchor id={'general'}/></SubHeading>\r\n            <Guideline title='Material Design'>\r\n                We strive to follow <Link underline='hover' href='https://material.io/design/' target='_blank'>Google's Material Design</Link> principles. <br />\r\n                Use components and icons from the <Link underline='hover' href='https://material-ui.com/' target='_blank'>MaterialUi package</Link><br />\r\n                This package also provides a theme to be used with <code>material-ui</code>, <Link underline='hover' to='/theme'>get started using it here</Link>\r\n            </Guideline>\r\n        </Section>\r\n    )\r\n\r\n    renderTips = () => (\r\n        <Section>\r\n            <SubHeading>\r\n                {emojis.indexFinger} Do's &amp; Don'ts {emojis.middleFinger} <Anchor id={'dodont'} />\r\n            </SubHeading>\r\n            <Tip title={<>Specific imports</>}>\r\n                Reducing bundle size!<br />\r\n                <b>Bad:</b>\r\n                <Code language='js'>\r\n                    {\r\n                        `import { Button } from '@material-ui/core' // All of material-ui/core will be included in the bundle!\r\nimport { Alert } from 'react-tfso-components' // All of react-tfso-components will be included in the bundle!`\r\n                    }\r\n                </Code>\r\n                <b>Good:</b>\r\n                <Code language='js'>\r\n                    {\r\n                        `import Button from '@material-ui/core/Button'\r\nimport Alert from 'react-tfso-components/dist/Alert'`\r\n                    }\r\n                </Code>\r\n            </Tip>\r\n\r\n            <Tip title={<>{/* emojis.thumbsUp */}Extend from <code>React.PureComponent</code> instead of <code>React.Component</code></>}>\r\n                Your components should never mutate the state directly or have mutable properties.<br/>\r\n                Hence they are pure, and should extend React.PureComponent, which is more performant.\r\n            </Tip>\r\n            <Tip title={<>{/* emojis.thumbsDown */}Don't use <code>componentWillReceiveProps</code></>}>\r\n                It's deprecated and going away in React 17 {emojis.brokenHeart}<br />\r\n                More information <Link underline='hover' href='https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops' target='_blank'>here</Link>\r\n            </Tip>\r\n            <Tip title={<>{/* emojis.thumbsDown */}Avoid copying props to state</>}>\r\n                ...unless you absolutely need to, there are legit reasons, however there is most likely a better solution. <br />\r\n                Perhaps you should invoke a callback provided by props and let the parent component handle something?\r\n            </Tip>\r\n        </Section>\r\n    )\r\n\r\n    renderContributing = () => (<>\r\n        <SubHeading>\r\n            Contributing to <code>react-tfso-components</code> {emojis.rocket} <Anchor id='contributing' />\r\n        </SubHeading>\r\n        <Paragraph>\r\n            Components in this package should:\r\n            <ul>\r\n                <li>Be written in typescript or provide type declarations (d.ts)</li>\r\n                <li>Be composible</li>\r\n                <li>Not be specific to a domain/usage (they should be as generic as possible)</li>\r\n                <li>Validate props using `<code>prop-types`</code></li>\r\n                <li>Be Pure (function component or extending <code>React.PureComponent</code>)</li>\r\n                <li>Have descriptive and easy to understand Props:\r\n                    <ul>\r\n                        <li>Use commonly known verbs/names</li>\r\n                        <li>Function props should begin with 'on', (onFocus, onChange etc.)</li>\r\n                        <li>Boolean props should <i>not</i> begin with 'is', (open instead of isOpen)</li>\r\n                        <li>Boolean props should be optional, (eg. <code>open?: boolean</code>), <code>undefined</code> should be evaluated as <code>false</code></li>\r\n                        <li><code>children</code> should always be explicitly typed (eg: <code>children: string</code>)</li>\r\n                        <li><code>children</code> should be defined as\r\n                            <ul>\r\n                                <li><code>React.ReactCild</code> for single child<br /></li>\r\n                                <li><code>React.ReactNode</code> for multiple children</li>\r\n                                <li>primitive type (<code>undefined</code>, <code>string</code>, <code>number</code> etc.)</li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li>Have a demo with documentation so that developers can easily find and use your component</li>\r\n            </ul>\r\n        </Paragraph>\r\n    </>)\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport {styledTheme} from '../../lib/theme/index'\r\n\r\nconst bgColor = (color: '') => {\r\n    const colors = styledTheme['tfso']['colors']\r\n    return colors[color]\r\n}\r\n\r\nexport type ThemeColorProps = {\r\n    color: React.ReactNode\r\n}\r\n\r\nconst Box = styled.div`\r\n    background-color: ${({color, theme}) => theme.tfso.colors[color]};\r\n    width: 230px;\r\n    height: 230px;\r\n    text-align: center;\r\n`\r\n\r\nconst Txt = styled.div`\r\n  font-size: 2em;\r\n  line-height: 2em;\r\n  color: ${({dark, theme}) => dark ? '#000' : theme.mui.palette.secondary.contrastText}\r\n`\r\n\r\nconst ThemeColor = (props: ThemeColorProps) => {\r\n    const {color} = props\r\n    return (\r\n        <Box color={color}>\r\n            theme.tfso.colors.{color}<br/><br/>\r\n            <Txt>{bgColor(color)}</Txt>\r\n            <Txt dark>{bgColor(color)}</Txt>\r\n        </Box>\r\n    )\r\n}\r\n\r\nThemeColor.propTypes = {\r\n    color: PropTypes.node.isRequired\r\n}\r\n\r\nexport default ThemeColor","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport styled from 'styled-components'\r\nimport ThemeColor from '../components/ThemeColor'\r\nimport {styledTheme} from '../../lib/theme/index'\r\n\r\nconst ThemeColors = styled.div`\r\n  clear: both;\r\n  > div{\r\n    float: left;\r\n      :hover{\r\n        width: 460px;\r\n        height: 230px;\r\n      }\r\n  }\r\n`\r\n\r\nexport default class Theme extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <>\r\n                <Typography variant='h2'>\r\n                    Theme &amp; Styling\r\n                </Typography>\r\n                <Typography variant='subtitle1'>\r\n                    There is more TODO\r\n                </Typography>\r\n                <ThemeColors>\r\n                    {Object.keys(styledTheme['tfso']['colors']).map(color => (\r\n                        <ThemeColor color={color}/>\r\n                    ))}\r\n                </ThemeColors>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport Trending, {TrendingProps} from '../../lib/Trending'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\ntype TrendingDemoState = {\r\n    variant: TrendingProps['variant']\r\n}\r\n\r\nexport default class TrendingDemo extends React.PureComponent<{}, TrendingDemoState>{\r\n    state: TrendingDemoState = {\r\n        variant: 'up'\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='TrendingDemo.tsx' srcPath='Trending.tsx' >Trending</DemoTitle>\r\n                <DemoHelp>\r\n                    A colored icon indicating a trending direction. <br/>\r\n                    Tip: You can use the <code>color</code> or <code>nativeColor</code> property to override the color of the icon.\r\n                </DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='variant' type='up | down | flat' default='' description=''></DemoProp>\r\n                    <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Trending variant={this.state.variant} fontSize='large' />\r\n                    <TextField\r\n                        select\r\n                        value={this.state.variant}\r\n                        onChange={e => this.setState({variant: e.target.value as any})}\r\n                        label='variant'\r\n                    >\r\n                        <MenuItem value='up'>up</MenuItem>\r\n                        <MenuItem value='flat'>flat</MenuItem>\r\n                        <MenuItem value='down'>down</MenuItem>\r\n                    </TextField>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport BigNumber, {BigNumberProps} from '../../lib/BigNumber'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\ntype BigNumberState = {\r\n    color: BigNumberProps['color']\r\n    size: BigNumberProps['size']\r\n}\r\n\r\nexport default class BigNumberDemo extends React.PureComponent<{}, BigNumberState>{\r\n    state: BigNumberState = {\r\n        color: 'dark',\r\n        size: 'large',\r\n    }\r\n\r\n    handleChange = (key: keyof BigNumberState) => (event: React.ChangeEvent<HTMLSelectElement>) => this.setState({[key]: event.target.value} as any)\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='BigNumberDemo.tsx' srcPath='BigNumber.tsx' >BigNumber</DemoTitle>\r\n                <DemoHelp>\r\n                    A Big Number is a number stands out\r\n                </DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='color' type='light | dark' default='light' description=''></DemoProp>\r\n                    <DemoProp name='size' type='medium | large' default='larger' description=''></DemoProp>\r\n                    <DemoProp name='children' type='string | number' default='' description=''></DemoProp>\r\n                    {/* <DemoProp name='...' type='SvgIconProps' default='' description='Any other prop is spread to the SvgIcon'></DemoProp> */}\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Grid container alignItems='center' spacing={32}>\r\n                        <Grid item>\r\n                            <div style={{backgroundColor: this.state.color === 'light' ? '#11beff' : 'inherit', padding: 10}}>\r\n                                <BigNumber\r\n                                    size={this.state.size}\r\n                                    color={this.state.color}\r\n                                >$123</BigNumber>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant='caption'>NB: The BigNumber component does not set the background color!<br /> The background color used here is just for illustrative purposes.</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <TextField\r\n                        select\r\n                        label='size'\r\n                        value={this.state.size}\r\n                        onChange={this.handleChange('size')}\r\n                    >\r\n                        <MenuItem value='medium'>medium</MenuItem>\r\n                        <MenuItem value='large'>large</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        label='color'\r\n                        value={this.state.color}\r\n                        onChange={this.handleChange('color')}\r\n                    >\r\n                        <MenuItem value='light'>light</MenuItem>\r\n                        <MenuItem value='dark'>dark</MenuItem>\r\n                    </TextField>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\n\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle, DemoCode} from '../components/demo'\r\n\r\nimport Alert, {AlertProps} from '../../lib/Alert'\r\n\r\nconst variantMessage: {[P in AlertProps['variant']]: string } = {\r\n    success: 'GRATE SUCCÉSS!',\r\n    info: 'Informational information',\r\n    warning: 'You better not do that, Brian',\r\n    error: 'That failed horribly...',\r\n}\r\n\r\nexport default class AlertDemo extends React.PureComponent<{}, {variant: AlertProps['variant'], message: string, open: boolean}>{\r\n    state = {\r\n        variant: 'success' as AlertProps['variant'],\r\n        open: false,\r\n        message: 'GRATE SUCCÉSS!'\r\n    }\r\n\r\n    onClose = () => this.setState({open: false})\r\n\r\n    onPress = (variant: AlertProps['variant']) => {\r\n        const message = variantMessage[variant]\r\n        return () => this.setState({open: true, message, variant})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='AlertDemo.tsx' srcPath='Alert.tsx' >Alert</DemoTitle>\r\n                <DemoHelp>A dismissable alert-box that can be used in a SnackBar or as a standard component in a page</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='message' type='string | ReactNode' description='The message string or Element to be displayed' />\r\n                    <DemoProp name='variant' type='success | error | info | warning' description='The variant of the alert. Icon and background-color is selected based on the variant' />\r\n                    <DemoProp name='onClose' type='() => void' description='Callback function invoked when the alert is dismissed' />\r\n                </DemoProps>\r\n                <DemoCode language='tsx'>\r\n                    {`import React from 'react'\r\nimport Alert from 'react-tfso-components/dist/Alert'\r\nimport Snacbar from '@material-ui/core/Snackbar'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nclass Alerter extends React.PureComponent<{}, {open: boolean}> {\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    onClose = () => this.setState({open: false})\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Snackbar\r\n                    open={this.state.open}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    autoHideDuration={2000}\r\n                    onClose={this.onClose}\r\n                >\r\n                    <Alert\r\n                        onClose={this.onClose}\r\n                        message='An unexpected error occured'\r\n                        variant='error'\r\n                    />\r\n                </Snackbar>\r\n                <Button variant='outlined' onClick={() => this.setState({open: true})}>Show Alert</Button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}`\r\n                    }\r\n                </DemoCode>\r\n                <DemoContent>\r\n                    <Snackbar\r\n                        open={this.state.open}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        autoHideDuration={2000}\r\n                        onClose={this.onClose}\r\n                    >\r\n                        <Alert\r\n                            onClose={this.onClose}\r\n                            message={this.state.message}\r\n                            variant={this.state.variant}\r\n                        />\r\n                    </Snackbar>\r\n                    <Button variant='outlined' onClick={this.onPress('success')}>Open Success</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('info')}>Open Info</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('warning')}>Open Warning</Button>\r\n                    <Button variant='outlined' onClick={this.onPress('error')}>Open Error</Button>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport SearchField from '../../lib/SearchField'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\n\r\nexport default class SearchFieldDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='SearchFieldDemo.tsx' srcPath='SearchField.tsx' >SearchField</DemoTitle>\r\n                <DemoHelp>A TextField that gets full width on typing. It also has a search icon adornnment.</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='placeholder' type='string (optional)' default='Search' description=''></DemoProp>\r\n                    <DemoProp name='margin' type='none | dense | normal (optional)' default='dense' description=''></DemoProp>\r\n                    <DemoProp name='InputProps' type=\"TextFieldProps['InputProps'] (optional)\" default='{ startAdornment: <InputAdornment position=\"start\"><SearchIcon fontSize=\"small\"/></InputAdornment>}' description=''></DemoProp>\r\n                    <DemoProp name='...' type='TextFieldProps' default='' description='Any other prop is spread to the TextField'></DemoProp>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <SearchField />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextFieldEditor from '../../lib/TextFieldEditor'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport default class TextFieldEditorDemo extends React.PureComponent{\r\n    state = {\r\n        value: 'demo',\r\n        dirty: false,\r\n        enableDirtyCheck: false\r\n    }\r\n\r\n    onReset = () => {\r\n        this.setState({value: ''})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='TextFieldEditorDemo.tsx' srcPath='TextFieldEditor.tsx' >TextFieldEditor</DemoTitle>\r\n                <DemoHelp>A wrapper around material-ui's TextField with some added features</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='value' type='string' default='' description='' />\r\n                    <DemoProp name='onChange' type='(value: string) => void' default='' description='Invoked when the user has finished editing the value (editor looses focus by clicking or tabbing away, pressing the Enter or ctrl+s' />\r\n                    <DemoProp name='dirty' type='boolean (optional)' default='false' description='If true, it is rendered in italic after onChange' />\r\n                    <DemoProp name='enableDirtyCheck' type='boolean (optional)' default='false' description='If true, the component will do internal dirty checking when editing' />\r\n                    <DemoProp name='...' type='TextFieldProps' description='Any other prop is spread to the TextField' />\r\n                </DemoProps>\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} >\r\n                        <Typography>Keybindings</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <code>\r\n                                ctrl + s:&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is NOT handled!)<br/>\r\n                                ctrl + z:&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\r\n                                Enter:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;commit changes (event is handled)<br/>\r\n                                Escape:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort changes (event is handled)<br/>\r\n                        </code>\r\n                        <br/>\r\n                        <i>When the event is handled `preventDefault()` and `stopPropagation()` is invoked on the `React.KeyboardEvent`</i><br/>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <DemoContent>\r\n                    <TextFieldEditor\r\n                        value={this.state.value}\r\n                        enableDirtyCheck={this.state.enableDirtyCheck}\r\n                        dirty={this.state.dirty}\r\n                        onChange={(value: string) => this.setState({value})}\r\n                    />\r\n                    <Button variant='outlined' onClick={() => this.setState({value: 'demo'})}>Reset</Button>\r\n                    <Button variant='outlined' onClick={() => this.setState({dirty: !this.state.dirty})}>Dirty: {this.state.dirty.toString()}</Button>\r\n                    <Button variant='outlined' onClick={() => this.setState({enableDirtyCheck: !this.state.enableDirtyCheck})}>Enable dirty check: {this.state.enableDirtyCheck.toString()}</Button>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport ConfirmationDialog from '../../lib/ConfirmationDialog'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\n\r\nexport default class ConfirmationDialogDemo extends React.PureComponent{\r\n    state = {\r\n        openConfirmationDialog: false\r\n    }\r\n\r\n    onClickOpenConfirmationDialog = () => {\r\n        this.setState({openConfirmationDialog: true})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='ConfirmationDialogDemo.tsx' srcPath='ConfirmationDialog.tsx' >ConfirmationDialog</DemoTitle>\r\n                <DemoHelp>A Dialog containing Ok and Cancel buttons</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show dialog\" />\r\n                    <DemoProp name=\"title\" type=\"string (optional)\" default=\"\" description=\"Dialog title\" />\r\n                    <DemoProp name=\"message\" type=\"string\" default=\"\" description=\"Dialog content\" />\r\n                    <DemoProp name=\"okButtonText\" type=\"string\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"onOk\" type=\"function\" default=\"\" description=\"\" />\r\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Button variant='outlined' onClick={this.onClickOpenConfirmationDialog}>Open ConfirmationDialog</Button>\r\n                    <ConfirmationDialog\r\n                        open={this.state.openConfirmationDialog}\r\n                        okButtonText='Ok'\r\n                        cancelButtonText='Cancel'\r\n                        onOk={() => this.setState({openConfirmationDialog: false})}\r\n                        onCancel={() => this.setState({openConfirmationDialog: false})}\r\n                        message='Confirmation dialog message'\r\n                        title='Confirmation dialog title'\r\n                    />\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MenuList from '@material-ui/core/MenuList'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport SearchField from './SearchField'\r\nimport Popover from '@material-ui/core/Popover'\r\nimport styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ScreenSize from './ScreenSize'\r\n\r\nexport type ClientSwitcherDialogProps = {\r\n    open: boolean\r\n    onCancel: () => void\r\n    onSwitch: (value: string) => void\r\n    children?: undefined\r\n    options: Array<{ value: string, label: string }>\r\n    cancelButtonText: string\r\n    searchLabel?: string\r\n    anchorEl?: null | HTMLElement\r\n    disabled?: string\r\n    selected?: string\r\n    avatarColor?: string\r\n}\r\n\r\ntype State = {\r\n    filterValue: string,\r\n    focusValue: string\r\n}\r\n\r\nconst AvatarColor = styled(Avatar)`\r\n  &&{\r\n    background-color: ${({theme, color}) => color || theme.mui.palette.primary.dark}\r\n    color: ${({theme}) => theme.mui.palette.primary.contrastText}\r\n  }\r\n` as typeof Avatar\r\n\r\nconst CustomDialogTitle = styled.div`\r\n  display: flex;\r\n  flex-flow: row-reverse;\r\n  padding: 5px;\r\n`\r\n\r\nconst TransitionComponent = props => <Slide direction='down' {...props} />\r\n\r\nexport default class ListPicker extends React.PureComponent<ClientSwitcherDialogProps, State>{\r\n    static propTypes = {\r\n        open: PropTypes.bool.isRequired,\r\n        onCancel: PropTypes.func.isRequired,\r\n        onSwitch: PropTypes.func.isRequired,\r\n        options: PropTypes.arrayOf(PropTypes.shape({value: PropTypes.string.isRequired, label: PropTypes.string.isRequired})).isRequired,\r\n        cancelButtonText: PropTypes.string.isRequired,\r\n        searchLabel: PropTypes.string,\r\n        disabled: PropTypes.string,\r\n        selected: PropTypes.string,\r\n        avatarColor: PropTypes.string\r\n    }\r\n    _inputRef: React.RefObject<HTMLLIElement> = React.createRef()\r\n    _listRef: React.RefObject<HTMLInputElement> = React.createRef()\r\n    state: State = {\r\n        filterValue: '',\r\n        focusValue: ''\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(!prevProps.open && this.props.open){\r\n            setTimeout(() => {\r\n                this._inputRef.current && this._inputRef.current.focus()\r\n            }, 1)\r\n        }\r\n    }\r\n\r\n    onFilter = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({filterValue: event.target.value})\r\n    }\r\n    onKeyDown = (event: React.KeyboardEvent) => {\r\n        if(!(event && event.keyCode === 40)){\r\n            return\r\n        }\r\n        this._listRef.current && this._listRef.current.focus()\r\n    }\r\n\r\n    onSwitch = (value) => {\r\n        this.props.onSwitch(value)\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.onCancel()\r\n    }\r\n\r\n    render(){\r\n        const renderItems = (\r\n            <>\r\n                <SearchField\r\n                    placeholder={this.props.searchLabel}\r\n                    inputRef={this._inputRef}\r\n                    onChange={this.onFilter}\r\n                    value={this.state.filterValue}\r\n                    onKeyDown={this.onKeyDown}\r\n                />\r\n                <MenuList>\r\n                    { this.props.options\r\n                        .filter(option => option.label.toLowerCase().indexOf(this.state.filterValue) > -1 || option.value.indexOf(this.state.filterValue) > -1)\r\n                        .map((option, i) => (\r\n                            <MenuItem\r\n                                disabled={option.value == this.props.disabled}\r\n                                selected={option.value == this.props.selected}\r\n                                key={i}\r\n                                onClick={() => { this.onSwitch(option.value) }}\r\n                            >\r\n                                <AvatarColor color={this.props.avatarColor}>\r\n                                    <Typography variant='caption' color='inherit'>\r\n                                        {option.label.split(' ')\r\n                                            .slice(0, 3)\r\n                                            .map((words) => (\r\n                                                words[0]\r\n                                            ))\r\n                                        }\r\n                                    </Typography>\r\n                                </AvatarColor>\r\n                                <ListItemText primary={option.label} />\r\n                            </MenuItem>\r\n                        ))\r\n                    }\r\n                </MenuList>\r\n            </>\r\n        )\r\n\r\n        const desktopDialog = (\r\n            <Popover\r\n                anchorEl={this.props.anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={this.props.open}\r\n                onClose={this.onClose}\r\n            >\r\n                <DialogContent>\r\n                    {renderItems}\r\n                </DialogContent>\r\n            </Popover>\r\n        )\r\n\r\n        const mobileDialog = (\r\n            <Dialog\r\n                TransitionComponent={TransitionComponent}\r\n                keepMounted={false}\r\n                fullScreen={true}\r\n                open={this.props.open}\r\n                onClose={this.onClose}\r\n                fullWidth\r\n                maxWidth='sm'\r\n            >\r\n                <CustomDialogTitle>\r\n                    <IconButton onClick={this.props.onCancel} aria-label=\"Close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </CustomDialogTitle>\r\n                <DialogContent>\r\n                    {renderItems}\r\n                </DialogContent>\r\n            </Dialog>\r\n        )\r\n\r\n        return (\r\n            <ScreenSize>\r\n                {({mobile}) => mobile ? mobileDialog : desktopDialog}\r\n            </ScreenSize>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport ListPicker from '../../lib/ListPicker'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport styled from 'styled-components'\r\nimport {MenuItem} from '@material-ui/core'\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\nconst DemoDisplay = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default class ListPickerDemo extends React.PureComponent{\r\n    _anchorEl: React.RefObject<HTMLButtonElement> = React.createRef()\r\n    state = {\r\n        selectedOption: undefined,\r\n        selected: 'none',\r\n        buttonType: 'default',\r\n        open: false,\r\n        color: 'default',\r\n        options: [{\r\n            value: '23324',\r\n            label: 'Vrådal & Rypefjord AS'\r\n        }, {\r\n            value: '353453',\r\n            label: '24SevenOffice Norge'\r\n        }, {\r\n            value: '234234324',\r\n            label: '24sevenOffice Labs'\r\n        }, {\r\n            value: '534536553',\r\n            label: '24SevenOffice Denmark'\r\n        }, {\r\n            value: '23424534324',\r\n            label: '24sevenOffice Finland'\r\n        }, {\r\n            value: '53453233',\r\n            label: '24SevenOffice Sweden'\r\n        }]\r\n    }\r\n\r\n    onClickOpenConfirmationDialog = () => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            selected: event.target.value\r\n        })\r\n    }\r\n\r\n    handleColor = (event) => {\r\n        this.setState({\r\n            color: event.target.value\r\n        })\r\n    }\r\n\r\n    onSwitch =(value) => {\r\n        this.setState({selectedOption: value})\r\n        this.onCancel()\r\n    }\r\n\r\n    onCancel =() => {\r\n        this.setState({open: false})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='ListPickerDemo.tsx' srcPath='ListPicker.tsx' >ListPicker</DemoTitle>\r\n                <DemoHelp>Dialog(mobile) or Popover(desktop) showing list of options. Made with switching client's in mind</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"open\" type=\"boolean\" default=\"\" description=\"Show list of options\" />\r\n                    <DemoProp name=\"options\" type=\"arrayOf<{ value: string, label: string }>\" description=\"Array of items to display\"/>\r\n                    <DemoProp name=\"disabled\" type=\"string\" default=\"\" description=\"Disables current item in list\" />\r\n                    <DemoProp name=\"selected\" type=\"string\" default=\"\" description=\"Selects current item in list\" />\r\n                    <DemoProp name=\"cancelButtonText\" type=\"string\" default=\"\" description=\"Text for cancel button\" />\r\n                    <DemoProp name=\"onSwitch\" type=\"function\" default=\"\" description=\"Returns value for selected option\" />\r\n                    <DemoProp name=\"onCancel\" type=\"function\" default=\"\" description=\"Fires when list closes\" />\r\n                    <DemoProp name=\"avatarColor\" type=\"string\" default=\"\" description=\"Valid values are types of #f7f7f7 or green\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <ListPicker\r\n                        anchorEl={this._anchorEl.current}\r\n                        open={this.state.open}\r\n                        cancelButtonText='Cancel'\r\n                        searchLabel='Search list'\r\n                        onCancel={this.onCancel}\r\n                        onSwitch={this.onSwitch}\r\n                        options={this.state.options}\r\n                        disabled='234234324'\r\n                        selected={this.state.selected}\r\n                        avatarColor={this.state.color == 'default' ? '' : this.state.color}\r\n                    />\r\n                    <Button variant='outlined' buttonRef={this._anchorEl} onClick={this.onClickOpenConfirmationDialog}>Open list</Button>\r\n                    <InputLabel shrink htmlFor=\"age-label-placeholder\">\r\n                        AvatarColor\r\n                    </InputLabel>\r\n                    <Select\r\n                        onChange={this.handleColor}\r\n                        value={this.state.color}\r\n                    >\r\n                        <MenuItem key='default' value='default'>Default</MenuItem>\r\n                        <MenuItem key='green' value='green' >Green</MenuItem>\r\n                        <MenuItem key='purple' value='purple' >Purple</MenuItem>\r\n                        <MenuItem key='orange' value='orange' >Orange</MenuItem>\r\n                    </Select>\r\n                    <InputLabel shrink htmlFor=\"age-label-placeholder\">\r\n                        Set selected\r\n                    </InputLabel>\r\n                    <Select\r\n                        onChange={this.handleChange}\r\n                        value={this.state.selected}\r\n                    >\r\n                        <MenuItem value='none'>None</MenuItem>\r\n                        { this.state.options\r\n                            .map((option, i) => (\r\n                                <MenuItem\r\n                                    key={i}\r\n                                    value={option.value}\r\n                                >\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                    {this.state && this.state.selectedOption\r\n                        ? <DemoDisplay>You have selected: {this.state.selectedOption} {\r\n                            this.state.options\r\n                                .map((option) => {\r\n                                    if(option.value == this.state.selectedOption){\r\n                                        return '(' + option.label + ')'\r\n                                    }\r\n                                })}</DemoDisplay>\r\n                        : ''\r\n                    }\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport {Demo, DemoTitle, DemoHelp, DemoContent, DemoProp, DemoProps} from '../components/demo'\r\nimport Emoji from '../../lib/Emoji'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\ntype State = {\r\n    // variant\r\n}\r\n\r\nexport default class EmojiDemo extends React.PureComponent<{}, State>{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle srcPath='Emoji.tsx' demoPath='EmojiDemo.tsx'>Emoji</DemoTitle>\r\n                <DemoHelp>A simple html Emoji component</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name='variant' type='string' default='' description=''/>\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Typography variant=\"h2\">\r\n                        <Emoji variant='heart' />\r\n                        <Emoji variant='thumbsUp' />\r\n                        <Emoji variant='fire' />\r\n                    </Typography>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\nimport isEqual from 'lodash/isEqual'\r\n\r\nimport Paper, {PaperProps} from '@material-ui/core/Paper'\r\n\r\nimport RGL, {Layout, WidthProvider} from 'react-grid-layout/'\r\nimport 'react-grid-layout/css/styles.css'\r\nimport 'react-resizable/css/styles.css'\r\n\r\nconst ReactGridLayout = WidthProvider(RGL)\r\n\r\nconst BackgroundPaper = ({backgroundColor, ...props}: { backgroundColor: string } & PaperProps) => (<Paper {...props} />)\r\nconst GridItemContainer = styled(BackgroundPaper)`&&{\r\n    background-color: ${({backgroundColor}) => backgroundColor};\r\n    width: 100%;\r\n    height: 100%;\r\n}`\r\n\r\ntype GridItemWidth = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'\r\ntype GridItemHeight = number\r\nconst gridItemWidths = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 'onequarter', 'onethird', 'half', 'twothirds', 'threequarters', 'full']\r\nconst gridItemWidthNumberMap: {[P in GridItemWidth]: number} = {1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 11: 11, 12: 12, 'onequarter': 3, 'onethird': 4, 'half': 6, 'twothirds': 8, 'threequarters': 9, 'full': 12}\r\nconst numberGridItemWithMap: {[n: number]: GridItemWidth} = {1: 1, 2: 2, 3: 'onequarter', 4: 'onethird', 5: 5, 6: 'half', 7: 7, 8: 'twothirds', 9: 'threequarters', 10: 10, 11: 11, 12: 'full'}\r\n\r\nconst toGridItemWidth = (w?: number): GridItemWidth | undefined => w === undefined ? undefined : numberGridItemWithMap[Math.min(6, Math.trunc(w))]\r\nconst toGridItemHeight = (w?: number): GridItemHeight | undefined => w === undefined ? undefined : Math.min(12, Math.trunc(w)) as GridItemHeight\r\n\r\nconst gridItemPositionToLayout = (position: GridItemPosition): Layout => ({\r\n    i: position.id,\r\n    x: position.col,\r\n    y: position.row,\r\n    h: position.height,\r\n    w: gridItemWidthNumberMap[position.width],\r\n    minH: position.minHeight,\r\n    minW: position.minWidth && gridItemWidthNumberMap[position.minWidth] || undefined,\r\n    maxH: position.maxHeight,\r\n    maxW: position.maxWidth && gridItemWidthNumberMap[position.maxWidth] || undefined,\r\n    isDraggable: position.draggable !== undefined ? position.draggable : false,\r\n    isResizable: position.resizable !== undefined ? position.resizable : false,\r\n    static: position.static,\r\n})\r\n\r\nconst layoutToGridItemPosition = (layout: Layout): GridItemPosition => ({\r\n    id: layout.i!,\r\n    col: layout.x,\r\n    row: layout.y,\r\n    width: toGridItemWidth(layout.w)!,\r\n    height: toGridItemHeight(layout.h)!,\r\n    minHeight: toGridItemHeight(layout.minH),\r\n    minWidth: toGridItemWidth(layout.minW),\r\n    maxHeight: toGridItemHeight(layout.maxH),\r\n    maxWidth: toGridItemWidth(layout.maxW),\r\n    draggable: layout.isDraggable,\r\n    resizable: layout.isResizable,\r\n    static: layout.static,\r\n})\r\n\r\nexport type GridItem = {\r\n    id: string\r\n    backgroundColor?: string\r\n    children: React.ReactNode\r\n}\r\n\r\nexport type GridItemPosition = {\r\n    id: string\r\n    col: number\r\n    row: number\r\n    width: GridItemWidth\r\n    height: GridItemHeight\r\n    minWidth?: GridItemWidth\r\n    minHeight?: GridItemHeight\r\n    maxWidth?: GridItemWidth\r\n    maxHeight?: GridItemHeight\r\n    draggable?: boolean\r\n    resizable?: boolean\r\n    static?: boolean\r\n}\r\n\r\nexport type GridLayoutProps = {\r\n    items: Array<GridItem>\r\n    layout: Array<GridItemPosition>\r\n    /**\r\n     * @default 16\r\n     */\r\n    margin?: number\r\n    onLayoutChange?: (layout: Array<GridItemPosition>) => void\r\n    children?: undefined\r\n}\r\n\r\nexport default class GridLayout extends React.PureComponent<GridLayoutProps>{\r\n    static defaultProps: Partial<GridLayoutProps> = {\r\n        margin: 16,\r\n    }\r\n\r\n    static propTypes = {\r\n        margin: PropTypes.number,\r\n        onLayoutChange: PropTypes.func,\r\n        items: PropTypes.arrayOf(PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            backgroundColor: PropTypes.string,\r\n            children: PropTypes.node.isRequired\r\n        })).isRequired,\r\n        layout: PropTypes.arrayOf(PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            col: PropTypes.number.isRequired,\r\n            row: PropTypes.number.isRequired,\r\n            width: PropTypes.oneOf(gridItemWidths).isRequired,\r\n            height: PropTypes.number.isRequired,\r\n            minWidth: PropTypes.oneOf(gridItemWidths),\r\n            minHeight: PropTypes.number,\r\n            maxWidth: PropTypes.oneOf(gridItemWidths),\r\n            maxHeight: PropTypes.number,\r\n            draggable: PropTypes.bool,\r\n            resizable: PropTypes.bool,\r\n            static: PropTypes.bool,\r\n        })).isRequired\r\n    }\r\n\r\n    _layoutWasChangedWorkaround = false\r\n\r\n    componentDidMount(){\r\n        this.validateItemLayout()\r\n    }\r\n\r\n    onLayoutChange = (layouts: Array<Layout>) => {\r\n        const {onLayoutChange} = this.props\r\n        onLayoutChange &&\r\n            this._layoutWasChangedWorkaround &&\r\n            onLayoutChange(layouts.map(layoutToGridItemPosition))\r\n        this._layoutWasChangedWorkaround = false\r\n    }\r\n\r\n    validateItemLayout = () => {\r\n        if(process.env.NODE_ENV === 'production') return\r\n\r\n        const items = new Set(this.props.items.map(item => item.id))\r\n        const layouts = new Set(this.props.layout.map(layout => layout.id))\r\n\r\n        items.forEach(item => {\r\n            if(!layouts.has(item)){\r\n                console.error(`Error: Item with id: ${item} is missing layout`)\r\n            }\r\n        })\r\n\r\n        layouts.forEach(layout => {\r\n            if(!items.has(layout)){\r\n                console.warn(`Warning: Layout with id: ${layout} does not correspond to any item`)\r\n            }\r\n        })\r\n    }\r\n\r\n    onDragResizeStop = (layout: Layout[], oldItem: Layout, newItem: Layout) => {\r\n        this._layoutWasChangedWorkaround = !isEqual(oldItem, newItem)\r\n    }\r\n\r\n    render(){\r\n        const {items, layout, margin = 16} = this.props\r\n        const rglLayout = Object.values(layout).map(gridItemPositionToLayout)\r\n\r\n        return (\r\n            <ReactGridLayout\r\n                className='layout'\r\n                cols={12}\r\n                rowHeight={90}\r\n                layout={rglLayout}\r\n                compactType={'vertical'}\r\n                margin={[margin, margin]}\r\n                containerPadding={[0, 0]}\r\n                autoSize\r\n                measureBeforeMount\r\n                useCSSTransforms\r\n                preventCollision={false}\r\n                onLayoutChange={this.onLayoutChange}\r\n                onResizeStop={this.onDragResizeStop}\r\n                onDragStop={this.onDragResizeStop}\r\n            >\r\n                {items.map(({id, backgroundColor, children}) => (\r\n                    <GridItemContainer\r\n                        key={id}\r\n                        backgroundColor={backgroundColor || 'inherit'}\r\n                    >\r\n                        {children}\r\n                    </GridItemContainer>))\r\n                }\r\n            </ReactGridLayout>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport {Demo, DemoContent, DemoTitle, DemoHelp, DemoProps, DemoProp} from '../components/demo'\r\nimport GridLayout, {GridLayoutProps, GridItemPosition} from '../../lib/GridLayout'\r\nimport Link from '../components/Link'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst ItemWrapper = ({backgroundColor, ...props}: React.HTMLAttributes<HTMLDivElement> & {backgroundColor: string}) => <div {...props} />\r\nconst Item = styled(ItemWrapper)`&&{\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: ${({theme, backgroundColor}) => theme.mui.palette.getContrastText(backgroundColor)};\r\n    font-size: ${({theme}) => theme.mui.typography.h5.fontSize};\r\n    font-weight: ${({theme}) => theme.mui.typography.h5.fontWeight};\r\n    font-family: ${({theme}) => theme.mui.typography.h5.fontFamily};\r\n}`\r\n\r\ntype State = {\r\n    items: GridLayoutProps['items']\r\n    layout: GridLayoutProps['layout']\r\n    addItemId: number\r\n    addResizable: boolean\r\n    addDraggable: boolean\r\n    addStatic: boolean\r\n    addColor: string\r\n    addWidth: number\r\n    addHeight: number\r\n    addCol: number,\r\n    addRow: number,\r\n}\r\n\r\nexport default class GridLayoutDemo extends React.PureComponent<{}, State>{\r\n    state: State = {\r\n        items: [\r\n            {\r\n                id: 'a',\r\n                backgroundColor: '#f0f',\r\n                children: <Item backgroundColor={'#f0f'}>a</Item>\r\n            },\r\n            {\r\n                id: 'b',\r\n                backgroundColor: '#0ff',\r\n                children: <Item backgroundColor={'#0ff'}>b (Static object)</Item>\r\n            },\r\n            {\r\n                id: 'c',\r\n                backgroundColor: '#ff0',\r\n                children: <Item backgroundColor={'#ff0'}>c (Fixed size)</Item>\r\n            },\r\n            {\r\n                id: 'd',\r\n                backgroundColor: '#f8f',\r\n                children: <Item backgroundColor={'#f8f'}>d</Item>\r\n            },\r\n        ],\r\n        layout: [\r\n            {\r\n                id: 'a',\r\n                width: 'onequarter',\r\n                height: 1,\r\n                col: 0,\r\n                row: 0,\r\n                draggable: true,\r\n                resizable: true\r\n            },\r\n            {\r\n                id: 'b',\r\n                width: 'onequarter',\r\n                height: 1,\r\n                col: 3,\r\n                row: 0,\r\n                static: true\r\n            },\r\n            {\r\n                id: 'c',\r\n                width: 'onequarter',\r\n                height: 1,\r\n                col: 6,\r\n                row: 0,\r\n                draggable: true,\r\n            },\r\n            {\r\n                id: 'd',\r\n                width: 'full',\r\n                height: 2,\r\n                col: 0,\r\n                row: 1,\r\n                resizable: true,\r\n                draggable: true,\r\n            },\r\n        ],\r\n        addItemId: 1,\r\n        addColor: '#ccc',\r\n        addDraggable: true,\r\n        addResizable: true,\r\n        addStatic: false,\r\n        addHeight: 2,\r\n        addWidth: 6,\r\n        addCol: 0,\r\n        addRow: 2\r\n    }\r\n\r\n    onAddItem = () => {\r\n        const {\r\n            addItemId: id,\r\n            addColor: backgroundColor,\r\n            addDraggable: draggable,\r\n            addResizable: resizable,\r\n            addStatic,\r\n            addWidth: width,\r\n            addHeight: height,\r\n            addCol: col,\r\n            addRow: row,\r\n            items,\r\n            layout\r\n        } = this.state\r\n\r\n        const content = JSON.stringify({draggable, resizable, static: addStatic}, undefined, 2).replace(/\"([^(\")\"]+)\":/g, '$1:')\r\n        const item = {\r\n            id: id.toString(),\r\n            backgroundColor,\r\n            children: <Item backgroundColor={backgroundColor}>{`${id} (${content})`}</Item>\r\n        }\r\n\r\n        const itemLayout = {\r\n            id: id.toString(),\r\n            width: Number(width),\r\n            height: Number(height),\r\n            draggable,\r\n            resizable,\r\n            static: addStatic,\r\n            col,\r\n            row: col + width > 12 ? row + 1 : row\r\n        } as GridItemPosition\r\n\r\n        const addCol = col + width\r\n        this.setState({\r\n            items: [...items, item],\r\n            layout: [...layout, itemLayout],\r\n            addItemId: this.state.addItemId + 1,\r\n            addCol: addCol >= 12 ? 0 : addCol,\r\n            addRow: addCol === 0 ? row + height : col + width > 12 ? row + 1 : row\r\n        })\r\n    }\r\n\r\n    handleChange = (key: keyof State) => (event: React.ChangeEvent<HTMLInputElement>, checked?: boolean) => {\r\n        let value: string | number | boolean | undefined\r\n        switch(key){\r\n        case 'addStatic':\r\n        case 'addResizable':\r\n        case 'addDraggable':\r\n            value = !!checked\r\n            break\r\n        case 'addWidth':\r\n        case 'addHeight':\r\n            value = Number(event.target.value)\r\n            break\r\n        default:\r\n            value = event.target.value\r\n            break\r\n        }\r\n        this.setState({[key]: value} as any)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle srcPath='GridLayout.tsx' demoPath='GridLayoutDemo.tsx'>GridLayout</DemoTitle>\r\n                <DemoHelp>A draggable and movable grid layout based on <Link href='https://github.com/STRML/react-grid-layout' target='_blank'>react-grid-layout</Link></DemoHelp>\r\n                <DemoProps title='GridLayoutProps' >\r\n                    <DemoProp name='margin' type='number' default='16' description='The margin between each item' />\r\n                    <DemoProp required name='onLayoutChange' type='(layout: GridItemPosition[]) => void' default='' description='' />\r\n                    <DemoProp required name='items' type='GridItem[]' default='' description='' />\r\n                    <DemoProp required name='layout' type='GridItemPosition[]' default='' description='' />\r\n                </DemoProps>\r\n                <DemoProps title='GridItem' >\r\n                    <DemoProp required name='id' type='string' default='' description='Id of the item. A corresponding GridItemPosition must be supplied to the layout' />\r\n                    <DemoProp name='backgroundColor' type='string' default='inherit' description='The backgroundcolor of the item' />\r\n                    <DemoProp required name='children' type='React.ReactNode' default='' description='' />\r\n                </DemoProps>\r\n                <DemoProps title='GridItemPosition' >\r\n                    <DemoProp required name='id' type='string' default='' description='Used to positition the GridItem with the same id' />\r\n                    <DemoProp required name='col' type='number' default='' description='Column in which the item is positioned' />\r\n                    <DemoProp required name='row' type='number' default='' description='Row in which the item is positioned' />\r\n                    <DemoProp required name='width' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\r\n                    <DemoProp required name='height' type='number' default='' description='Height in number of rows' />\r\n                    <DemoProp name='draggable' type='boolean' default='false' description='If true, the item can be repositioned by dragging' />\r\n                    <DemoProp name='resizable' type='boolean' default='false' description='If true, the item can be resized' />\r\n                    <DemoProp name='static' type='boolean' default='false' description='If true, the item is locked in place (draggable and resizable is overriden to false)' />\r\n                    <DemoProp name='minWidth' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\r\n                    <DemoProp name='minHeight' type='number' default='' description='Height in number of rows' />\r\n                    <DemoProp name='maxWidth' type={`1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'onequarter' | 'onethird' | 'half' | 'twothirds' | 'threequarters' | 'full'`} default='' description='Width in number of columns' />\r\n                    <DemoProp name='maxHeight' type='number' default='' description='Height in number of rows' />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <GridLayout\r\n                        items={this.state.items}\r\n                        layout={this.state.layout}\r\n                    />\r\n                    <FormControlLabel label='static' control={<Switch checked={this.state.addStatic} onChange={this.handleChange('addStatic')}/>}/>\r\n                    <FormControlLabel label='resizable' control={<Switch checked={this.state.addResizable} onChange={this.handleChange('addResizable')}/>}/>\r\n                    <FormControlLabel label='draggable' control={<Switch checked={this.state.addDraggable} onChange={this.handleChange('addDraggable')}/>}/>\r\n                    <TextField label='width' value={this.state.addWidth} onChange={this.handleChange('addWidth')} type='number' inputProps={{max: 12, min: 1}} />\r\n                    <TextField label='height' value={this.state.addHeight} onChange={this.handleChange('addHeight')} type='number' inputProps={{max: 6, min: 1}} />\r\n                    <TextField label='backgroundColor' value={this.state.addColor} onChange={this.handleChange('addColor')} />\r\n                    <Button onClick={this.onAddItem} color='primary' variant='contained'>Add item</Button>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport {Hoverable} from '../../lib'\r\n\r\nexport default class HoverableDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Hoverable.tsx'>Hoverable</DemoTitle>\r\n                <DemoHelp>A HOC that passes hover true/false as a render prop</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(hover: boolean, ref: RefObject) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Hoverable>\r\n                        {(hover) => (\r\n                            <React.Fragment>\r\n                                {hover\r\n                                    ? <div key=\"1\" style={{backgroundColor: '#6699bb', padding: 15, color: '#FFF', cursor: 'pointer'}}>You're hovering me!</div>\r\n                                    : <div key=\"2\" style={{padding: 15, height: '100%'}}>Hover your mouse over me</div>\r\n                                }\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Hoverable>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport {Delay} from '../../lib'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nexport default class DelayDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Delay.tsx'>Delay</DemoTitle>\r\n                <DemoHelp>Shows the component inside after a set delay. Can be used to only show loaders if exceptionally slow</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"beforeShow\" type=\"React element or string (optional)\" default=\"\" description=\"What you want to show before the delay is finished\" />\r\n                    <DemoProp name=\"delayMs\" type=\"Number (optional)\" default=\"1000\" description=\"Delay time in ms\" />\r\n                    <DemoProp name=\"show\" type=\"Boolean (optional)\" default=\"false\" description=\"Force show content\" />\r\n                    <DemoProp name=\"children\" type=\"React element\" default=\"\" description=\"Content to show after delay\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Delay beforeShow=\"Waiting for delay...\">\r\n                        <CircularProgress />\r\n                    </Delay>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoProp, DemoProps, DemoTitle} from '../components/demo'\r\nimport {Wizard} from '../../lib'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport Step from '@material-ui/core/Step'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport default class WizardDemo extends React.PureComponent{\r\n    render(){\r\n        const length = 3\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='Utils.tsx' srcPath='Wizard.tsx'>Wizard</DemoTitle>\r\n                <DemoHelp>A HOC that passes an index and next/prev functions in a render prop. Can be used along with material ui stepper or any other wizard</DemoHelp>\r\n                <DemoProps>\r\n                    <DemoProp name=\"children\" type=\"(index: number, next: function, prev: function) => ReactElement\" default=\"\" description=\"A function that returns a react component\" />\r\n                    <DemoProp name=\"index\" type=\"number (optional)\" default=\"\" description=\"Force the current index to a certain value\" />\r\n                    <DemoProp name=\"length\" type=\"number (optional)\" default=\"\" description=\"The max length. The index will always be lower than this\" />\r\n                </DemoProps>\r\n                <DemoContent>\r\n                    <Wizard length={length + 1}>\r\n                        {(index, next, prev) => (\r\n                            <React.Fragment>\r\n                                <Stepper activeStep={index}>\r\n                                    <Step key=\"Step 1\">\r\n                                        <StepLabel>Step 1</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 2\">\r\n                                        <StepLabel>Step 2</StepLabel>\r\n                                    </Step>\r\n                                    <Step key=\"Step 3\">\r\n                                        <StepLabel>Step 3</StepLabel>\r\n                                    </Step>\r\n                                </Stepper>\r\n                                <div>\r\n                                    <Button onClick={prev} disabled={index <= 0}>Prev</Button>\r\n                                    <Button onClick={next} disabled={index >= length}>Next</Button>\r\n                                    {index >= length && 'All steps completed!'}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Wizard>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Demo, DemoContent, DemoHelp, DemoTitle} from '../components/demo'\r\nimport {ScreenSize} from '../../lib'\r\n\r\nexport default class ScreenSizeDemo extends React.PureComponent{\r\n    render(){\r\n        return (\r\n            <Demo>\r\n                <DemoTitle demoPath='ScreenSize.tsx' srcPath='ScreenSize.tsx'>ScreenSize</DemoTitle>\r\n                <DemoHelp>Gives you current screen size (mobile, tablet, desktop). Comes in hoc, render prop, and hook variants</DemoHelp>\r\n                <DemoContent>\r\n                    Drag screen to different sizes to test. Note that there is some overlap.\r\n                    <ScreenSize>\r\n                        {(screenSize) => {\r\n                            return (\r\n                                <>\r\n                                <div>Mobile: {screenSize.mobile.toString()}</div>\r\n                                <div>Tablet: {screenSize.tablet.toString()}</div>\r\n                                <div>Desktop: {screenSize.desktop.toString()}</div>\r\n                                </>\r\n                            )\r\n                        }}\r\n                    </ScreenSize>\r\n                </DemoContent>\r\n            </Demo>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {layout} from '../lib'\r\nimport Home from './pages/Home'\r\nimport Icons from './pages/Icons'\r\nimport GitHubLink from './components/GitHubLink'\r\nimport MaterialUiLink from './components/MaterialUiLink'\r\nimport Guidelines from './pages/Guidelines'\r\nimport Theme from './pages/Theme'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport CodeIcon from '@material-ui/icons/Code'\r\nimport StyleIcon from '@material-ui/icons/Style'\r\nimport BuildIcon from '@material-ui/icons/Build'\r\nimport StraightenIcon from '@material-ui/icons/Straighten'\r\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact'\r\nimport FontDownloadIcon from '@material-ui/icons/FontDownload'\r\nimport history from './history'\r\nimport {Location, UnregisterCallback} from 'history'\r\nimport Link from './components/Link'\r\nimport TrendingDemo from './demos/TrendingDemo'\r\nimport BigNumberDemo from './demos/BigNumberDemo'\r\nimport AlertDemo from './demos/AlertDemo'\r\nimport SearchFieldDemo from './demos/SearchFieldDemo'\r\nimport TextFieldEditorDemo from './demos/TextFieldEditorDemo'\r\nimport ConfirmationDialogDemo from './demos/ConfirmationDialogDemo'\r\nimport ListPickerDemo from './demos/ListPickerDemo'\r\nimport EmojiDemo from './demos/EmojiDemo'\r\nimport GridLayoutDemo from './demos/GridLayoutDemo'\r\nimport HoverableDemo from './demos/HoverableDemo'\r\nimport DelayDemo from './demos/DelayDemo'\r\nimport WizardDemo from './demos/WizardDemo'\r\nimport ScreenSizeDemo from './demos/ScreenSizeDemo'\r\n\r\nconst menuGroups = {\r\n    home: {\r\n        label: 'Home',\r\n        subtitle: 'Where magic happens',\r\n        icon: HomeIcon,\r\n        component: Home\r\n    },\r\n    guidelines: {\r\n        label: 'Guidelines',\r\n        subtitle: 'How to frontend',\r\n        icon: StraightenIcon,\r\n        component: Guidelines\r\n    },\r\n    components: {\r\n        label: 'Components',\r\n        subtitle: 'Presentational',\r\n        icon: ViewCompactIcon,\r\n        items: {\r\n            emoji: {\r\n                label: 'Emoji',\r\n                component: EmojiDemo\r\n            },\r\n            alert: {\r\n                label: 'Alert',\r\n                component: AlertDemo\r\n            },\r\n            bignumber: {\r\n                label: 'BigNumber',\r\n                component: BigNumberDemo\r\n            },\r\n            confirmationdialog: {\r\n                label: 'ConfirmationDialog',\r\n                component: ConfirmationDialogDemo\r\n            },\r\n            listpicker: {\r\n                label: 'ListPicker',\r\n                component: ListPickerDemo\r\n            },\r\n            searchfield: {\r\n                label: 'SearchField',\r\n                component: SearchFieldDemo\r\n            },\r\n            textfieldeditor: {\r\n                label: 'TextFieldEditor',\r\n                component: TextFieldEditorDemo\r\n            },\r\n            trending: {\r\n                label: 'Trending',\r\n                component: TrendingDemo\r\n            }\r\n        }\r\n    },\r\n    theme: {\r\n        label: 'Theme',\r\n        subtitle: 'Much Dashing',\r\n        icon: StyleIcon,\r\n        component: Theme\r\n    },\r\n    utils: {\r\n        label: 'Utils',\r\n        subtitle: 'Utility',\r\n        icon: BuildIcon,\r\n        items: {\r\n            delay: {\r\n                label: 'Delay',\r\n                component: DelayDemo\r\n            },\r\n            hoverable: {\r\n                label: 'Hoverable',\r\n                component: HoverableDemo\r\n            },\r\n            wizard: {\r\n                label: 'Wizard',\r\n                component: WizardDemo\r\n            },\r\n            screensize: {\r\n                label: 'ScreenSize',\r\n                component: ScreenSizeDemo\r\n            }\r\n        }\r\n    },\r\n    icons: {\r\n        label: 'Icons',\r\n        subtitle: 'Well duh',\r\n        component: Icons,\r\n        icon: FontDownloadIcon\r\n    },\r\n    labs: {\r\n        label: 'Labs',\r\n        subtitle: 'Works in progress',\r\n        icon: CodeIcon,\r\n        items: {\r\n            gridlayout: {\r\n                label: 'GridLayout',\r\n                component: GridLayoutDemo\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\ntype LayoutState = {\r\n    location: Location<any>\r\n    menuGroupsExpanded: any\r\n}\r\n\r\nexport default class Layout extends React.PureComponent<{}, LayoutState>{\r\n    _unsubHistory: UnregisterCallback | null = null\r\n    componentDidMount(){\r\n        this.expandSelected()\r\n        this._unsubHistory = history.listen(this.onNavigation)\r\n    }\r\n    componentWillUnmount(){\r\n        this._unsubHistory && this._unsubHistory()\r\n    }\r\n\r\n    state: LayoutState = {\r\n        location: history.location,\r\n        menuGroupsExpanded: {}\r\n    }\r\n\r\n    onNavigation = (location: Location<any>) => {\r\n        this.setState({location})\r\n    }\r\n\r\n    getSelected = () => {\r\n        const {location: {pathname}} = this.state\r\n        const path = pathname.slice(pathname.indexOf('#') + 2)\r\n        const [group, item] = path.split('/')\r\n\r\n        return {group: group || 'home', item}\r\n    }\r\n\r\n    expandSelected(){\r\n        const {group} = this.getSelected()\r\n        this.onToggleGroupExpanded(group)\r\n    }\r\n\r\n    onToggleGroupExpanded = (name) => {\r\n        this.setState(state => ({\r\n            menuGroupsExpanded: {\r\n                ...state.menuGroupsExpanded,\r\n                [name]: !state.menuGroupsExpanded[name]\r\n            }\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        const menuContent = (\r\n            <layout.MenuContent>\r\n                {Object.keys(menuGroups).map(groupName => {\r\n                    const group = menuGroups[groupName]\r\n                    if(group.component){\r\n                        return (\r\n                            <layout.MenuRootItem\r\n                                key={group.label}\r\n                                label={group.label}\r\n                                selected={this.getSelected().group === groupName}\r\n                                icon={group.icon}\r\n                                subtitle={group.subtitle}\r\n                                href={(content) => {\r\n                                    return (\r\n                                        <Link to={`/${groupName}`} key={groupName}>\r\n                                            {content}\r\n                                        </Link>\r\n                                    )\r\n                                }}\r\n                            />\r\n                        )\r\n                    }\r\n\r\n                    return (\r\n                        <layout.MenuGroup\r\n                            expanded={!!this.state.menuGroupsExpanded[groupName]}\r\n                            key={group.label}\r\n                            label={group.label}\r\n                            icon={group.icon}\r\n                            subtitle={group.subtitle}\r\n                            onToggleExpanded={() => this.onToggleGroupExpanded(groupName)}\r\n                        >\r\n                            {Object.keys(group.items).map(itemName => {\r\n                                const item = group.items[itemName]\r\n                                const selected = this.getSelected()\r\n                                return (\r\n                                    <layout.MenuItem\r\n                                        key={item.label}\r\n                                        label={item.label}\r\n                                        selected={selected.item === itemName && selected.group === groupName}\r\n                                        icon={item.icon}\r\n                                        href={(content) => {\r\n                                            return (\r\n                                                <Link to={`/${groupName}/${itemName}`} key={itemName}>\r\n                                                    {content}\r\n                                                </Link>\r\n                                            )\r\n                                        }}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </layout.MenuGroup>\r\n                    )\r\n                })}\r\n            </layout.MenuContent>\r\n        )\r\n        const topMenuContent = (\r\n            <layout.TopMenuContent>\r\n                <Grid container spacing={16}>\r\n                    <Grid item><MaterialUiLink /></Grid>\r\n                    <Grid item><GitHubLink /></Grid>\r\n                </Grid>\r\n            </layout.TopMenuContent>\r\n        )\r\n\r\n        const selected = this.getSelected()\r\n        const group = menuGroups[selected.group]\r\n\r\n        let content: React.ReactNode = 'Not found'\r\n        if(group.component){\r\n            const Page = group.component\r\n            content = <Page />\r\n        }else if(group.items && group.items[selected.item]){\r\n            const Page = group.items[selected.item].component\r\n            content = <Page />\r\n        }\r\n\r\n        return (\r\n            <layout.Layout\r\n                menuContent={menuContent}\r\n                topMenuContent={topMenuContent}\r\n                title=\"Tfso Components\"\r\n                docTitle=\"Tfso Components\"\r\n            >\r\n                {content}\r\n            </layout.Layout>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport {theme} from '../lib'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport {ThemeProvider as StyledThemeProvider} from 'styled-components'\r\nimport {MuiThemeProvider} from '@material-ui/core/styles'\r\nimport Layout from './Layout'\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <MuiThemeProvider theme={theme.materialuiTheme}>\r\n            <StyledThemeProvider theme={theme.styledTheme}>\r\n                <Layout />\r\n            </StyledThemeProvider>\r\n        </MuiThemeProvider>\r\n    </React.Fragment>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}