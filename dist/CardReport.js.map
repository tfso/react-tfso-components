{"version":3,"sources":["../src/lib/CardReport.tsx"],"names":["React","PureComponent","styled","Card","CardActionArea","CardMedia","CardContent","Typography","OpenInNew","IconButton","_","withScreenSize","Tooltip","TfsoReport","TitleContainer","div","CustomHeader","CustomDescription","CustomIconButton","CustomContent","theme","mui","spacing","unit","CustomArea","CustomViewArea","onClickLink","event","report","props","onClick","translate","options","screenSize","title","capitalize","e","description","reportImage","image","width","minHeight","desktopCard","mobileList","mobile"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react'\nimport styled from 'styled-components'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport OpenInNew from '@material-ui/icons/OpenInNew'\nimport IconButton from '@material-ui/core/IconButton'\nimport _ from 'lodash'\nimport {InjectedScreenSizeProps, withScreenSize} from './ScreenSize'\nimport {Tooltip} from '@material-ui/core'\nimport TfsoReport from './icons/TfsoReport'\n\nexport type ReportsProps = {\n    options: {id: number, title: string, description: string, url: string, image: any}\n    translate: (key: string) => string\n    onClick: (event, object) => void\n}\n\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-grow: 1;\n`\n\nconst CustomHeader = styled(Typography)` && {\n  flex: 1;\n  font-weight: 500;\n  font-size: 13px;\n  }\n` as typeof Typography\n\nconst CustomDescription = styled(Typography)` && {\n  font-size: 12px;\n}\n` as typeof Typography\n\nconst CustomIconButton = styled(IconButton)` &&{\n  padding: 2px;\n  }\n` as typeof IconButton\n\nconst CustomContent = styled(CardContent)` &&{\n  border-top: 1px solid #dadce0;\n  position: relative;\n  background-color: white;\n  :last-child{\n    padding-bottom: ${({theme}) => theme.mui.spacing.unit * 2}px;\n  }  \n}` as typeof CardContent\n\nconst CustomArea = styled(CardActionArea)` &&{\n  background: #f5f5f5;\n  min-height: 100px;\n  max-height: 150px;\n  padding: 10px 10px 0 10px;\n  position: relative;\n}` as typeof CardActionArea\n\nconst CustomViewArea = styled.div`\n  background-color: #FFF;\n  box-shadow: 0 1px 3px 0 rgba(0,0,0,0.2), 0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12);\n`\n\nexport default withScreenSize(class CardReport extends PureComponent<ReportsProps & InjectedScreenSizeProps>{\n    onClickLink = (event, report) => {\n        this.props.onClick(event, report)\n    }\n    render(){\n        const {translate, options, screenSize} = this.props\n        const report = (\n            <CustomContent>\n                <TitleContainer>\n                    <Tooltip title={options.title}>\n                        <CustomHeader noWrap gutterBottom variant=\"body1\">\n                            {translate(_.capitalize(this.props.options.title))}\n                        </CustomHeader>\n                    </Tooltip>\n                    <CustomIconButton color='primary' onClick={(e) => { this.onClickLink(e, options) }}>\n                        <OpenInNew/>\n                    </CustomIconButton>\n                </TitleContainer>\n                <Tooltip title={options.description}>\n                    <CustomDescription variant=\"body2\" color=\"textSecondary\" noWrap>\n                        {translate(_.capitalize(options.description))}\n                    </CustomDescription>\n                </Tooltip>\n            </CustomContent>\n        )\n        const reportImage = (\n            <CustomArea onClick={(e) => this.onClickLink(e, options)}>\n                <CustomViewArea>\n                    <CardMedia\n                        component={options.image ? 'img' : (props) => <TfsoReport style={{width: '100%', minHeight: '110px'}}/>}\n                        image={options.image ? options.image : null}\n                        title={translate(_.capitalize(options.title))}\n                    />\n                </CustomViewArea>\n            </CustomArea>\n        )\n        const desktopCard = (\n            <Card>\n                {reportImage}\n                {report}\n            </Card>\n        )\n        const mobileList = (\n            <Card>\n                {report}\n            </Card>\n        )\n        const {mobile} = screenSize\n        return mobile ? mobileList : desktopCard\n    }\n}\n)"],"file":"CardReport.js"}