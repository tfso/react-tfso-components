{"version":3,"sources":["../../src/lib/Board/utils.test.ts"],"names":["calculateBoardHeight","calculateBoardRows","calculateItemDimensions","calculateItemLayout","getBreakpointFromWidth","compact","moveItem","addBoardItem","describe","it","res","expect","toBe","component","items","a","key","desktop","row","col","colSpan","rowSpan","mobile","b","item","colWidth","rowHeight","spacing","toEqual","top","left","height","width","not","breakpoints","xs","sm","md","lg","xl","newItems","toBeTruthy","toThrowError","foo","bar","tablet","c","afterMove"],"mappings":"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","sourcesContent":["import {BreakpointValues} from '@material-ui/core/styles/createBreakpoints'\nimport {\n    calculateBoardHeight,\n    calculateBoardRows,\n    calculateItemDimensions,\n    calculateItemLayout,\n    getBreakpointFromWidth,\n    compact,\n    moveItem,\n    addBoardItem,\n    // removeBoardItem,\n    // showBoardItem,\n    // hideBoardItem,\n} from './utils'\nimport {BoardItems, BoardItemLayout} from '.'\nimport {BoardItemDimensions} from './types'\n\n// TODO: Write more tests.. (this mantra could be the meaning of life, who knows, it's always that voice in your head whispering 'write.more.testsssss' when you're about to fall asleep or when you're on the toilet a misty early morning, squeesing a chunky snickers, suddenly filling you with anxiety that your code may blow up any second now.)\n\ndescribe('utils', () => {\n    describe('calculateBoardHeight', () => {\n        it('calculates height correctly when board has spacing', () => {\n            const res = calculateBoardHeight(10, 16, 90)\n            expect(res).toBe(10 * 90 + 9 * 16)\n        })\n        it('calculates height correctly when board has 0 spacing', () => {\n            const res = calculateBoardHeight(10, 0, 90)\n            expect(res).toBe(10 * 90)\n        })\n        it('calculates height correctly when there are no rows and has spacing', () => {\n            const res = calculateBoardHeight(0, 16, 90)\n            expect(res).toBe(0)\n        })\n        it('calculates height correctly when there are no rows and no spacing', () => {\n            expect(calculateBoardHeight(0, 0, 90)).toBe(0)\n        })\n    })\n    describe('calculateBoardRows', () => {\n        const component = null as any\n        const items: BoardItems = {\n            a: {\n                key: 'a',\n                component,\n                desktop: {\n                    row: 0,\n                    col: 0,\n                    colSpan: 1,\n                    rowSpan: 2\n                },\n                mobile: {\n                    row: 0,\n                    col: 0,\n                    colSpan: 1,\n                    rowSpan: 1\n                }\n            },\n            b: {\n                key: 'b',\n                component,\n                desktop: {\n                    row: 2,\n                    col: 0,\n                    colSpan: 1,\n                    rowSpan: 1\n                }\n            }\n        }\n\n        it('returns 0 when there are no items on the tablet board', () => {\n            const res = calculateBoardRows(items, 'tablet')\n            expect(res).toBe(0)\n        })\n        it('returns 1 when board only has 1 item with height of 1 visible for mobile', () => {\n            const res = calculateBoardRows(items, 'mobile')\n            expect(res).toBe(1)\n        })\n        it('returns 3 when board has 2 items totaling 3 rowSpan for desktop', () => {\n            const res = calculateBoardRows(items, 'desktop')\n            expect(res).toBe(3)\n        })\n    })\n    describe('calculateItemDimensions', () => {\n        const item: BoardItemLayout = {\n            row: 1,\n            col: 4,\n            colSpan: 3,\n            rowSpan: 2\n        }\n        it('calculates correctly', () => {\n            const res = calculateItemDimensions(item, {colWidth: 90, rowHeight: 90, spacing: 16} as any) // not providing width on purpose\n            expect(res).toEqual({\n                top: 106,\n                left: 106 * 4,\n                height: 196,\n                width: 302\n            } as BoardItemDimensions)\n        })\n    })\n    describe('calculateItemLayout', () => {\n        const item = {\n            row: 1,\n            col: 4,\n            colSpan: 3,\n            rowSpan: 2\n        }\n        it('calculates correctly', () => {\n            const res = calculateItemLayout(\n                item,\n                {top: 106 + 2, left: 106 * 4 - 3}, // adds a little noise\n                {colWidth: 90, rowHeight: 90, spacing: 16} as any\n            )\n            expect(res).not.toBe(item)\n            expect(res).toEqual(item)\n        })\n    })\n    describe('getBreakpointFromWidth', () => {\n        const breakpoints: BreakpointValues = {\n            xs: 2,\n            sm: 4,\n            md: 6,\n            lg: 8,\n            xl: 10\n        }\n        it('returns correct breakpoint', () => {\n            const res = getBreakpointFromWidth(breakpoints, 6) // wider than both xs and sm, but sm is expected. not wider than md, but equal.\n            expect(res).toBe('sm')\n            expect(getBreakpointFromWidth(breakpoints, 12)).toBe('xl')\n        })\n    })\n    describe('addBoardItem', () => {\n        it('adds item to items', () => {\n            const items = {}\n            const newItems = addBoardItem(items, {\n                key: 'foo',\n                component: () => 'div' as any,\n                desktop: {\n                    row: 0,\n                    col: 0,\n                    rowSpan: 1,\n                    colSpan: 1\n                }\n            })\n            expect(newItems['foo']).toBeTruthy()\n        })\n        it('is pure', () => {\n            const items = {}\n            const item = {\n                key: 'foo',\n                component: () => 'div' as any,\n                desktop: {\n                    row: -1, // faulty values should be corrected in output\n                    col: -1,\n                    rowSpan: 1,\n                    colSpan: 1\n                }\n            }\n            const newItems = addBoardItem(items, item)\n            expect(items).toEqual({})\n            expect(items).not.toBe(newItems)\n            expect(item).toBe(item)\n            expect(item.desktop.col).toBe(-1)\n        })\n        it('throws when item is missing layout', () => {\n            expect(() => addBoardItem({}, {key: 'foo'} as any))\n                .toThrowError('no layout defined')\n        })\n        it('throws when item with same key already exists', () => {\n            expect(() => addBoardItem({foo: 'foo'} as any, {key: 'foo'} as any))\n                .toThrowError('duplicate key \\'foo\\'')\n        })\n        it('corrects faulty bounds of items layout', () => {\n            const foo = {\n                key: 'foo',\n                component: () => 'div' as any,\n                desktop: {\n                    row: -1, // faulty values should be corrected in output\n                    col: -1,\n                    rowSpan: 20,\n                    colSpan: 15\n                }\n            }\n            const bar = {\n                key: 'bar',\n                component: () => 'div' as any,\n                tablet: {\n                    row: 1, // faulty values should be corrected in output\n                    col: 13,\n                    rowSpan: 0,\n                    colSpan: 0\n                }\n            }\n\n            let items = addBoardItem({}, foo)\n            items = addBoardItem(items, bar as any)\n\n            expect(items['foo'].desktop).toEqual({\n                row: 0,\n                col: 0,\n                rowSpan: 20,\n                colSpan: 12,\n            })\n            expect(items['bar'].tablet).toEqual({\n                row: 0,\n                col: 10,\n                rowSpan: 1,\n                colSpan: 1\n            })\n        })\n        it('moves other items out of the way of the newly added item', () => {\n            const items = addBoardItem({\n                a: {\n                    key: 'a',\n                    component: 'div' as any,\n                    desktop: {\n                        col: 0,\n                        row: 0,\n                        rowSpan: 2,\n                        colSpan: 2\n                    }\n                }\n            }, {\n                key: 'b',\n                component: 'div' as any,\n                desktop: {\n                    col: 1,\n                    row: 1,\n                    rowSpan: 1,\n                    colSpan: 1\n                }\n            })\n\n            // This behaviour may seem kinda strange, hence the drawing:\n            //   _______  <- top\n            //  |a      |\n            //  |    ___|\n            //  |   |b  |\n            //  |___|___|\n            //\n            // expected:\n            //       ___  <- top\n            //      |b  |\n            //   ___|___|\n            //  |a      |\n            //  |       |\n            //  |       |\n            //  |_______|\n            // TODO: Maybe the addBoarItem logic should evalute the newly placed item in relation to the first colliding item to decide wether or not to place it above or below.\n            expect(items).toEqual({\n                a: {\n                    key: 'a',\n                    component: 'div' as any,\n                    desktop: {\n                        col: 0,\n                        row: 1,\n                        rowSpan: 2,\n                        colSpan: 2\n                    }\n                },\n                b: {\n                    key: 'b',\n                    component: 'div' as any,\n                    desktop: {\n                        col: 1,\n                        row: 0,\n                        rowSpan: 1,\n                        colSpan: 1\n                    }\n                }\n            })\n        })\n        it('compacts added item with free space above', () => {\n            const items = addBoardItem({}, {\n                key: 'a',\n                component: 'a' as any,\n                desktop: {\n                    row: 1,\n                    col: 0,\n                    rowSpan: 1,\n                    colSpan: 1\n                }\n            })\n            expect(items['a'].desktop.row).toBe(0)\n        })\n    })\n    describe('removeBoardItem', () => {\n\n    })\n    describe('showBoardItem', () => {\n\n    })\n    describe('hideBoardItem', () => {\n\n    })\n    describe('compact', () => {\n        it('compacts moves an item that fits above other items up', () => {\n            const component = null as any\n            const items: BoardItems = {\n                a: {\n                    key: 'a',\n                    component,\n                    desktop: {\n                        row: 0,\n                        col: 2,\n                        rowSpan: 1,\n                        colSpan: 2\n                    }\n                },\n                b: {\n                    key: 'b',\n                    component,\n                    desktop: {\n                        row: 1,\n                        col: 0,\n                        rowSpan: 2,\n                        colSpan: 12,\n                    }\n                },\n                c: {\n                    key: 'c',\n                    component,\n                    desktop: { // should fit to the left of a\n                        row: 5,\n                        col: 0,\n                        rowSpan: 1,\n                        colSpan: 2\n                    }\n                }\n            }\n            const newItems = compact(items, 'desktop')\n            expect(newItems['c'].desktop.row).toBe(0)\n        })\n    })\n    describe('moveItem', () => {\n        it('moves vertically stacked items down that both collides with a taller item moved horizontally', () => {\n            // a is moved 2 cols to the right, colliding with b and c\n            //     _____ _ _____<- top\n            //    |a    |b¦     |\n            // -->|     |_¦_____|\n            //    |     |c¦     |\n            //    |_____|_¦_____|\n            //\n            // expected:\n            //     _______<- top\n            //    |a      |\n            //    |       |\n            //    |       |\n            //    |_______|\n            //           _______\n            //          |b      |\n            //          |_______|\n            //          |c      |\n            //          |_______|\n\n            const items: BoardItems = {\n                a: {\n                    key: 'a',\n                    component: 'a' as any,\n                    desktop: {\n                        col: 0,\n                        row: 0,\n                        colSpan: 4,\n                        rowSpan: 4\n                    }\n                },\n                b: {\n                    key: 'b',\n                    component: 'b' as any,\n                    desktop: {\n                        col: 4,\n                        row: 0,\n                        colSpan: 4,\n                        rowSpan: 2\n                    }\n                },\n                c: {\n                    key: 'c',\n                    component: 'c' as any,\n                    desktop: {\n                        col: 4,\n                        row: 2,\n                        colSpan: 4,\n                        rowSpan: 2\n                    }\n                }\n            }\n\n            const afterMove = moveItem('a', items, 2, 0, 'desktop')\n\n            expect(afterMove).toEqual({\n                a: {\n                    key: 'a',\n                    component: 'a' as any,\n                    desktop: {\n                        col: 2,\n                        row: 0,\n                        colSpan: 4,\n                        rowSpan: 4\n                    }\n                },\n                b: {\n                    key: 'b',\n                    component: 'b' as any,\n                    desktop: {\n                        col: 4,\n                        row: 4,\n                        colSpan: 4,\n                        rowSpan: 2\n                    }\n                },\n                c: {\n                    key: 'c',\n                    component: 'c' as any,\n                    desktop: {\n                        col: 4,\n                        row: 6,\n                        colSpan: 4,\n                        rowSpan: 2\n                    }\n                }\n            })\n        })\n    })\n})"],"file":"utils.test.js"}