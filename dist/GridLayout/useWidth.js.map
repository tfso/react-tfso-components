{"version":3,"sources":["../../src/lib/GridLayout/useWidth.tsx"],"names":["React","ReactDOM","useWidth","node","initialWidth","useState","width","setWidth","handleResize","useCallback","domNode","findDOMNode","HTMLElement","offsetWidth","useEffect","window","addEventListener","removeEventListener"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAgCC,IAAhC,EAA4F;AAAA,MAAhCC,YAAgC,uEAAT,IAAS;;AAAA,wBACtFJ,KAAK,CAACK,QAAN,CAAeD,YAAf,CADsF;AAAA;AAAA,MACzGE,KADyG;AAAA,MAClGC,QADkG;;AAEhH,MAAMC,YAAY,GAAGR,KAAK,CAACS,WAAN,CAAkB,YAAM;AACzC,QAAMC,OAAO,GAAGT,QAAQ,CAACU,WAAT,CAAqBR,IAArB,CAAhB;;AACA,QAAGO,OAAO,YAAYE,WAAtB,EAAkC;AAC9BL,MAAAA,QAAQ,CAACG,OAAO,CAACG,WAAT,CAAR;AACH;AACJ,GALoB,EAKlB,CAACV,IAAD,EAAOI,QAAP,CALkB,CAArB;AAMAP,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCR,YAAlC;AACAA,IAAAA,YAAY,GAFM,CAEH;;AACf,WAAO,YAAM;AACTO,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCT,YAArC;AACH,KAFD;AAGH,GAND,EAMG,CAACA,YAAD,CANH;AAOA,SAAOF,KAAP;AACH,CAhBM","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nexport const useWidth = <T extends React.ReactInstance>(node: T | undefined | null, initialWidth: number = 1280) => {\n    const [width, setWidth] = React.useState(initialWidth)\n    const handleResize = React.useCallback(() => {\n        const domNode = ReactDOM.findDOMNode(node)\n        if(domNode instanceof HTMLElement){\n            setWidth(domNode.offsetWidth)\n        }\n    }, [node, setWidth])\n    React.useEffect(() => {\n        window.addEventListener('resize', handleResize)\n        handleResize() // invoking once to get the correct initial size\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n    }, [handleResize])\n    return width\n}"],"file":"useWidth.js"}