{"version":3,"sources":["../../src/lib/layout/ProfileCard.tsx"],"names":["React","Typography","Popover","Divider","Card","CardContent","CardActions","Avatar","IconButton","Button","CloseIcon","Dialog","Slide","ScreenSize","CustomCard","styled","CustomCardContent","ProfileCardContent","theme","color","tfso","palette","primaryLight","ProfileTypography","mui","primary","contrastText","ProfileAvatar","spacing","unit","CustomCloseIconButton","RightPanel","div","Right","TransitionComponent","props","ProfileCard","onClose","onSignOut","renderContent","identity","profile","thumb","data","firstName","lastName","identifier","children","signOutText","desktopDialog","anchorEl","vertical","horizontal","open","mobileDialog","mobile","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\nimport Popover from '@material-ui/core/Popover'\nimport Divider from '@material-ui/core/Divider'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport ScreenSize from '../ScreenSize'\n\nexport type ProfileCardProps = {\n    open: boolean\n    onClose: () => void\n    onSignOut: () => void\n\n    children?: React.ReactNode\n    identity: any\n    signOutText: string\n    anchorEl?: null | HTMLElement\n}\n\ntype State = {}\n\nconst CustomCard = styled(Card)`\n  &&{\n    box-shadow: none;\n    min-width: 200px;\n  } \n` as typeof Card\n\nconst CustomCardContent = styled(CardContent)`\n  &&{\n    padding: 0;\n    box-shadow: none;\n  }\n` as typeof CardContent\n\nconst ProfileCardContent = styled(CardContent)`\n  display: flex;\n  align-items: center;\n  background-color: ${({theme, color}) => color || theme.tfso.palette.primaryLight};\n   //theme.mui.palette.secondary.dark\n` as typeof CardContent\n\nconst ProfileTypography = styled(Typography)`\n  &&{\n    color: ${({theme}) => theme.mui.palette.primary.contrastText}\n  }\n` as typeof Typography\n\nconst ProfileAvatar = styled(Avatar)`\n    &&{\n     width: 60px;\n     height: 60px;\n     margin: ${({theme}) => theme.mui.spacing.unit}px;  \n    }\n` as typeof Avatar\nconst CustomCloseIconButton = styled(IconButton)`\n  &&{\n     position: absolute;\n     right: 0;\n     margin: 0 auto;\n     color: ${({theme}) => theme.mui.palette.primary.contrastText};\n  }\n` as typeof IconButton\n\nconst RightPanel = styled.div`\n  flex: 1;\n  padding: ${({theme}) => theme.mui.spacing.unit}px;;\n`\n\nconst Right = styled.div`\n  text-align: right;\n  flex: 1;\n`\n\nconst TransitionComponent = props => <Slide direction='down' {...props} />\n\nexport default class ProfileCard extends React.PureComponent<ProfileCardProps, State>{\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onClose: PropTypes.func.isRequired,\n        // identity: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n        signOutText: PropTypes.string.isRequired\n    }\n\n    onClose = () => {\n        this.props.onClose()\n    }\n\n    onSignOut = () => {\n        this.props.onSignOut()\n    }\n\n    renderContent = () => (\n        <CustomCard>\n            <ProfileCardContent>\n                <ProfileAvatar src={this.props.identity.profile.thumb.data} aria-label={this.props.identity.profile.firstName} />\n                <RightPanel>\n                    <ProfileTypography variant='h6'>{this.props.identity.profile.firstName + ' ' + this.props.identity.profile.lastName}</ProfileTypography>\n                    <ProfileTypography variant='body2'>{this.props.identity.profile.identifier}</ProfileTypography>\n                </RightPanel>\n            </ProfileCardContent>\n            <Divider />\n            <CustomCardContent>\n                {this.props.children}\n            </CustomCardContent>\n            <CardActions>\n                <Right>\n                    <Button variant=\"outlined\" size=\"small\" color=\"secondary\" onClick={this.onSignOut}>\n                        {this.props.signOutText}\n                    </Button>\n                </Right>\n            </CardActions>\n        </CustomCard>\n    )\n\n    render(){\n        const desktopDialog = (\n            <Popover\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                open={this.props.open}\n                onClose={this.onClose}\n            >\n                {this.renderContent()}\n            </Popover>\n        )\n\n        const mobileDialog = (\n            <Dialog\n                TransitionComponent={TransitionComponent}\n                keepMounted={false}\n                fullScreen={true}\n                open={this.props.open}\n                onClose={this.onClose}\n                fullWidth\n                maxWidth='sm'\n            >\n                <CustomCloseIconButton onClick={this.props.onClose} aria-label=\"Close\">\n                    <CloseIcon />\n                </CustomCloseIconButton>\n                {this.renderContent()}\n            </Dialog>\n        )\n\n        return (\n            <ScreenSize>\n                {({mobile}) => mobile ? mobileDialog : desktopDialog}\n            </ScreenSize>\n        )\n    }\n}"],"file":"ProfileCard.js"}