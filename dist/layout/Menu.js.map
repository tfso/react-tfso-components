{"version":3,"sources":["../../src/lib/layout/Menu.tsx"],"names":["React","List","Drawer","Link","Collapse","IconButton","ExpandLess","ExpandMore","ListItemIcon","ListItemText","ListItem","ListItemSecondaryAction","Divider","Typography","Chip","StyledDrawer","styled","attrs","classes","paper","open","theme","tfso","colors","menu","menuItemText","getColor","color","palette","success","alert","loudInfo","warning","ChipWrapper","ChipColor","props","StyledChip","white","mui","typography","pxToRem","Menu","mobile","onClose","paddingBottom","children","PureComponent","MenuContent","ListItemSecondaryText","grayLight","ListItemWrapper","expanded","disabled","MenuGroupListItem","menuExpanded","selected","menuItemSelectedText","action","hover","MenuGroupExpandLess","MenuGroupExpandMore","MenuGroup","onToggleExpanded","e","stopPropagation","Icon","icon","marginRight","label","subtitle","RootListItem","RootListItemIcon","MenuRootItem","LinkContent","chipLabel","chipColor","href","NestedListItem","NestedListItemIcon","MenuItem","noWrap"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport List from '@material-ui/core/List'\nimport Drawer from '@material-ui/core/Drawer'\nimport Link from '@material-ui/core/Link'\nimport Collapse from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport styled from 'styled-components/macro'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItem, {ListItemProps} from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\nimport Chip from '@material-ui/core/Chip'\nimport {DefaultTheme} from 'styled-components'\n\nconst StyledDrawer = styled(Drawer).attrs({\n    classes: {paper: 'MuiPaperStyle'}\n})`\n    &&{\n      width: ${({open}) => open ? 240 : 0}px;\n      height: 100%;\n    }\n    \n    a, a:hover{\n        text-decoration: none\n    };\n    \n    li:focus{\n     outline: none;\n    }\n    \n    .MuiPaperStyle{\n      position: static;\n      background-color: ${({theme}) => theme.tfso.colors.menu};\n      color: ${({theme}) => theme.tfso.colors.menuItemText};\n    }\n` as typeof Drawer\n\ntype ChipColor = 'success' | 'error' | 'info' | 'warning'\nconst getColor = (color: ChipColor, palette: DefaultTheme['tfso']['palette']) => {\n    switch(color){\n    case 'success': return palette.success\n    case 'error': return palette.alert\n    case 'info': return palette.loudInfo\n    case 'warning': return palette.warning\n    }\n}\n\nconst ChipWrapper = ({color: ChipColor, ...props}) => <Chip {...props} />\nconst StyledChip = styled(ChipWrapper)`&&{\n    background-color: ${({color, theme}) => getColor(color, theme.tfso.palette)};\n    color: ${({color, theme}) => theme.tfso.colors.white};\n    font-size: ${({theme}) => theme.mui.typography.pxToRem(10)}; \n    height: 22px;\n}`\n\nexport type MenuProps = {\n    open: boolean\n    onClose: () => void\n    mobile: boolean\n    children: React.ReactNode\n}\n\nexport default class Menu extends React.PureComponent<MenuProps>{\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onClose: PropTypes.func.isRequired,\n        mobile: PropTypes.bool.isRequired,\n        children: PropTypes.node.isRequired\n    }\n\n    render(){\n        return (\n            <StyledDrawer variant={this.props.mobile ? 'temporary' : 'persistent'} elevation={0} open={this.props.open} onClose={this.props.onClose}>\n                <List color=\"inherit\" disablePadding style={{paddingBottom: 100}}>\n                    {this.props.children}\n                </List>\n            </StyledDrawer>\n        )\n    }\n}\n\nexport const MenuContent = props => <>{props.children}</>\n\nconst ListItemSecondaryText = styled(Typography)`&&{\n    color: ${({theme}) => theme.tfso.colors.grayLight};\n}` as typeof Typography\n\nexport type MenuGroupProps = {\n    icon: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    onToggleExpanded: () => void\n    expanded: boolean\n    children: React.ReactNode\n    selected: boolean\n}\n\nconst ListItemWrapper = ({expanded, disabled, ...props}: ListItemProps & {expanded: boolean}) => <ListItem {...props} />\n\nconst MenuGroupListItem = styled(ListItemWrapper)`&&{\n    background-color: ${({theme, expanded}) => expanded ? theme.tfso.colors.menuExpanded : theme.tfso.colors.menu};\n    color: ${({selected, theme}) => selected ? theme.tfso.colors.menuItemSelectedText : theme.tfso.colors.menuItemText};\n    :focus :hover, :hover {\n        background-color: ${({theme}) => theme.mui.palette.action.hover};\n    };\n}` as typeof ListItemWrapper\n\nconst MenuGroupExpandLess = styled(ExpandLess)`&&{\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n}` as typeof ExpandLess\n\nconst MenuGroupExpandMore = styled(ExpandMore)`&&{\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n}` as typeof ExpandMore\n\nexport class MenuGroup extends React.PureComponent<MenuGroupProps>{\n    static propTypes = {\n        icon: PropTypes.elementType.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        onToggleExpanded: PropTypes.func.isRequired,\n        expanded: PropTypes.bool.isRequired,\n        children: PropTypes.node.isRequired,\n        selected: PropTypes.bool\n    }\n\n    onToggleExpanded = e => {\n        // Stop propagation to let parent layout close mobile menu on clicks that do navigation\n        e.stopPropagation()\n        this.props.onToggleExpanded()\n    }\n\n    render(){\n        const Icon = this.props.icon\n        return (\n            <>\n                <MenuGroupListItem divider={!this.props.expanded} selected={this.props.selected} expanded={this.props.expanded} button onClick={this.onToggleExpanded} disableRipple disableTouchRipple>\n                    <ListItemIcon style={{marginRight: 0, color: 'inherit'}}><Icon fontSize=\"small\"/></ListItemIcon>\n                    <ListItemText primaryTypographyProps={{color: 'inherit'}}>\n                        {this.props.label}\n                        <Collapse in={!this.props.expanded} timeout='auto'>\n                            <ListItemSecondaryText variant='caption' noWrap>\n                                {this.props.subtitle}\n                            </ListItemSecondaryText>\n                        </Collapse>\n                    </ListItemText>\n                    <ListItemSecondaryAction>\n                        <IconButton onClick={this.onToggleExpanded} disableRipple disableTouchRipple>\n                            {this.props.expanded ? <MenuGroupExpandLess /> : <MenuGroupExpandMore />}\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </MenuGroupListItem>\n                <Collapse in={this.props.expanded} timeout=\"auto\">\n                    <List dense disablePadding>\n                        {this.props.children}\n                    </List>\n                    {this.props.expanded && <Divider />}\n                </Collapse>\n            </>\n        )\n    }\n}\n\nexport type MenuRootItemProps = {\n    icon: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    chipLabel?: string\n    chipColor?: ChipColor\n    selected: boolean\n    href?: string | ((content: React.ReactChild) => React.ReactChild)\n}\n\nconst RootListItem = styled(ListItem).attrs({classes: {selected: 'styled-selected'}})`&&{\n    background-color: ${({theme}) => theme.tfso.colors.menu};\n    color: ${({theme}) => theme.tfso.colors.menuItemText};    \n    &&.styled-selected {\n        background-color: ${({theme}) => theme.tfso.colors.menu};\n        color: ${({theme}) => theme.tfso.colors.menuItemSelectedText};\n    };\n    :focus :hover, :hover {\n        background-color: ${({theme}) => theme.mui.palette.action.hover};\n    };\n}` as typeof ListItem\n\nconst RootListItemIcon = styled(ListItemIcon)`&&{\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n}` as typeof ListItemIcon\n\nexport class MenuRootItem extends React.PureComponent<MenuRootItemProps>{\n    static propTypes = {\n        icon: PropTypes.elementType.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired,\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        chipLabel: PropTypes.string,\n        chipColor: PropTypes.oneOf(['success', 'info', 'warning', 'error']),\n    }\n\n    render(){\n        const Icon = this.props.icon\n\n        const LinkContent = (\n            <RootListItem divider selected={this.props.selected} >\n                <RootListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color='inherit'/></RootListItemIcon>\n                <ListItemText primaryTypographyProps={{color: 'inherit'}}>\n                    {this.props.label}\n                    <ListItemSecondaryText variant='caption' noWrap>\n                        {this.props.subtitle}\n                    </ListItemSecondaryText>\n                </ListItemText>\n                {this.props.chipLabel &&\n                    <StyledChip color={this.props.chipColor} label={this.props.chipLabel}/>\n                }\n            </RootListItem>\n        )\n\n        return (\n            <>\n            {typeof this.props.href === 'string'\n                ? <Link href={this.props.href}>{LinkContent}</Link>\n                : this.props.href\n                    ? this.props.href(LinkContent)\n                    : LinkContent\n            }\n            </>\n        )\n    }\n}\n\nexport type MenuItemProps = {\n    icon?: React.ComponentType<SvgIconProps>\n    label: string\n    selected: boolean\n    href: string | ((content: React.ReactChild) => React.ReactChild)\n    chipLabel?: string\n    chipColor?: 'warning' | 'information'\n}\n\nconst NestedListItem = styled(ListItem)`&&{\n    padding-left: 52px;\n    background-color: ${({theme}) => theme.tfso.colors.menuExpanded};\n    color: ${({selected, theme}) => selected ? theme.tfso.colors.menuItemSelectedText : theme.tfso.colors.menuItemText};\n    :hover{\n      background-color: ${({theme}) => theme.tfso.colors.menu}; // ${({theme}) => theme.mui.palette.action.hover};\n    };\n}` as typeof ListItem\n\nconst NestedListItemIcon = styled(ListItemIcon)`&&{\n      color: ${({theme}) => theme.tfso.colors.menuItemText};\n}` as typeof ListItemIcon\n\nexport class MenuItem extends React.PureComponent<MenuItemProps>{\n    static propTypes = {\n        icon: PropTypes.elementType,\n        label: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired,\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        chipLabel: PropTypes.string,\n        chipColor: PropTypes.oneOf(['success', 'info', 'warning', 'error']),\n    }\n\n    render(){\n        const Icon = this.props.icon\n\n        const LinkContent = (\n            <NestedListItem selected={this.props.selected}>\n                {Icon &&\n                    <NestedListItemIcon color=\"inherit\" style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'inherit'}/></NestedListItemIcon>\n                }\n                <ListItemText primaryTypographyProps={{color: 'inherit', noWrap: true}}>\n                    {this.props.label}\n                </ListItemText>\n                {this.props.chipLabel &&\n                    <StyledChip color={this.props.chipColor} label={this.props.chipLabel}/>\n                }\n            </NestedListItem>\n        )\n        return (\n            <>\n                {typeof this.props.href === 'string'\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\n                    : this.props.href(LinkContent)\n                }\n            </>\n        )\n    }\n}"],"file":"Menu.js"}