{"version":3,"sources":["../../src/lib/layout/Menu.tsx"],"names":["React","List","Drawer","Link","Collapse","IconButton","ExpandLess","ExpandMore","ListItemIcon","ListItemText","ListItem","ListItemSecondaryAction","Divider","Typography","Chip","StyledDrawer","styled","attrs","classes","paper","open","theme","tfso","colors","menu","menuItemText","getColor","color","palette","success","alert","loudInfo","warning","ChipWrapper","ChipColor","props","StyledChip","white","mui","typography","pxToRem","StyledListItemText","Menu","mobile","onClose","paddingBottom","children","PureComponent","MenuContent","ListItemSecondaryText","grayLight","MenuIcon","ListItemWrapper","expanded","MenuGroupListItem","menuExpanded","menuItem","MenuGroupExpandLess","MenuGroupExpandMore","MenuGroup","onToggleExpanded","e","stopPropagation","subtitle","label","Icon","icon","style","top","position","zIndex","RootListItem","selected","menuItemSelectedText","MenuRootItem","LinkContent","chipLabel","chipColor","href","NestedListItem","MenuItem","noWrap"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport List from '@material-ui/core/List'\nimport Drawer from '@material-ui/core/Drawer'\nimport Link from '@material-ui/core/Link'\nimport Collapse from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport styled from 'styled-components/macro'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItem, {ListItemProps} from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\nimport Chip from '@material-ui/core/Chip'\nimport {DefaultTheme} from 'styled-components'\n\nconst StyledDrawer = styled(Drawer).attrs({\n    classes: {paper: 'MuiPaperStyle'}\n})`\n    &&{\n      width: ${({open}) => open ? 240 : 0}px;\n      height: 100%;\n    }\n    \n    a, a:hover{\n        text-decoration: none\n    };\n    \n    li:focus{\n     outline: none;\n    }\n    \n    .MuiPaperStyle{\n      position: static;\n      background-color: ${({theme}) => theme.tfso.colors.menu};\n      color: ${({theme}) => theme.tfso.colors.menuItemText};\n    }\n    \n    .MuiPaperStyle ::-webkit-scrollbar {\n        width: 7px;\n        background-color: transparent;\n    }\n    \n    .MuiPaperStyle ::-webkit-scrollbar-thumb {\n        border-radius: 10px;\n        background-color: rgba(255,255,255, 0.2);\n    }\n    \n    .MuiPaperStyle ::-webkit-scrollbar-thumb:hover{\n        background-color: rgba(255,255,255, 0.5);\n    }\n    \n    .MuiPaperStyle ::-webkit-scrollbar-track {\n        border-radius: 10px;\n        background-color: transparent;\n    }\n    \n` as typeof Drawer\n\ntype ChipColor = 'success' | 'error' | 'info' | 'warning'\nconst getColor = (color: ChipColor, palette: DefaultTheme['tfso']['palette']) => {\n    switch(color){\n    case 'success': return palette.success\n    case 'error': return palette.alert\n    case 'info': return palette.loudInfo\n    case 'warning': return palette.warning\n    }\n}\n\nconst ChipWrapper = ({color: ChipColor, ...props}) => <Chip {...props} />\nconst StyledChip = styled(ChipWrapper)`&&{\n    background-color: ${({color, theme}) => getColor(color, theme.tfso.palette)};\n    color: ${({color, theme}) => theme.tfso.colors.white};\n    font-size: ${({theme}) => theme.mui.typography.pxToRem(10)}; \n    height: 22px;\n}`\n\nconst StyledListItemText = styled(ListItemText)`&&{\n  flex: 1; //Ie fix\n}` as typeof ListItemText\n\nexport type MenuProps = {\n    open: boolean\n    onClose: () => void\n    mobile: boolean\n    children: React.ReactNode\n}\n\nexport default class Menu extends React.PureComponent<MenuProps>{\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onClose: PropTypes.func.isRequired,\n        mobile: PropTypes.bool.isRequired,\n        children: PropTypes.node.isRequired\n    }\n\n    render(){\n        return (\n            <StyledDrawer variant={this.props.mobile ? 'temporary' : 'persistent'} elevation={0} open={this.props.open} onClose={this.props.onClose}>\n                <List color=\"inherit\" disablePadding style={{paddingBottom: 100}}>\n                    {this.props.children}\n                </List>\n            </StyledDrawer>\n        )\n    }\n}\n\nexport const MenuContent = props => <>{props.children}</>\n\nconst ListItemSecondaryText = styled(Typography)`&&{\n    color: ${({theme}) => theme.tfso.colors.grayLight};\n}` as typeof Typography\n\nconst MenuIcon = styled(ListItemIcon)`&&{\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n    margin-right: 0;\n}` as typeof ListItemIcon\n\nexport type MenuGroupProps = {\n    icon: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    onToggleExpanded: () => void\n    expanded: boolean\n    children: React.ReactNode\n}\n\nconst ListItemWrapper = ({expanded, ...props}: ListItemProps & {expanded: boolean}) => <ListItem {...props} />\n\nconst MenuGroupListItem = styled(ListItemWrapper)`&&{\n    background-color: ${({theme, expanded}) => expanded ? theme.tfso.colors.menuExpanded : theme.tfso.colors.menu};\n    :focus {\n        background-color: ${({theme, expanded}) => expanded ? theme.tfso.colors.menuExpanded : theme.tfso.colors.menu};\n    }\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n    :focus :hover, :hover {\n        background-color: ${({theme}) => theme.tfso.colors.menuItem};\n    };\n}` as typeof ListItemWrapper\n\nconst MenuGroupExpandLess = styled(ExpandLess)`&&{\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n}` as typeof ExpandLess\n\nconst MenuGroupExpandMore = styled(ExpandMore)`&&{\n    color: ${({theme}) => theme.tfso.colors.menuItemText};\n}` as typeof ExpandMore\n\nexport class MenuGroup extends React.PureComponent<MenuGroupProps>{\n    static propTypes = {\n        icon: PropTypes.elementType.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        onToggleExpanded: PropTypes.func.isRequired,\n        expanded: PropTypes.bool.isRequired,\n        children: PropTypes.node.isRequired,\n    }\n\n    onToggleExpanded = e => {\n        // Stop propagation to let parent layout close mobile menu on clicks that do navigation\n        e.stopPropagation()\n        this.props.onToggleExpanded()\n    }\n\n    render(){\n        const {expanded, subtitle, label, children, icon: Icon} = this.props\n        return (\n            <>\n                <MenuGroupListItem\n                    ContainerProps={{\n                        style: {\n                            top: 0,\n                            position: expanded ? 'sticky' : 'relative',\n                            zIndex: expanded ? 1 : 'auto',\n                        }\n                    }}\n                    divider={!expanded}\n                    expanded={expanded}\n                    onClick={this.onToggleExpanded}\n                    button\n                    disableRipple\n                    disableTouchRipple\n                >\n                    <MenuIcon><Icon fontSize='small' /></MenuIcon>\n                    <StyledListItemText primaryTypographyProps={{color: 'inherit'}}>\n                        {label}\n                        <Collapse in={!expanded} timeout='auto'>\n                            <ListItemSecondaryText variant='caption' noWrap>\n                                {subtitle}\n                            </ListItemSecondaryText>\n                        </Collapse>\n                    </StyledListItemText>\n                    <ListItemSecondaryAction>\n                        <IconButton onClick={this.onToggleExpanded} disableRipple disableTouchRipple>\n                            {expanded ? <MenuGroupExpandLess /> : <MenuGroupExpandMore />}\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </MenuGroupListItem>\n                <Collapse in={expanded} timeout=\"auto\">\n                    <List dense disablePadding>\n                        {children}\n                    </List>\n                    {expanded && <Divider />}\n                </Collapse>\n            </>\n        )\n    }\n}\n\nexport type MenuRootItemProps = {\n    icon: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    chipLabel?: string\n    chipColor?: ChipColor\n    selected: boolean\n    href?: string | ((content: React.ReactChild) => React.ReactChild)\n}\n\nconst RootListItem = styled(ListItem).attrs({classes: {selected: 'styled-selected'}})`&&{\n    background-color: ${({theme}) => theme.tfso.colors.menu};\n    color: ${({theme}) => theme.tfso.colors.menuItemText};    \n    &&.styled-selected {\n        background-color: ${({theme}) => theme.tfso.colors.menu};\n        color: ${({theme}) => theme.tfso.colors.menuItemSelectedText};\n    };\n    :focus :hover, :hover {\n        background-color: ${({theme}) => theme.tfso.colors.menuItem};\n    };\n}` as typeof ListItem\n\nexport class MenuRootItem extends React.PureComponent<MenuRootItemProps>{\n    static propTypes = {\n        icon: PropTypes.elementType.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired,\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        chipLabel: PropTypes.string,\n        chipColor: PropTypes.oneOf(['success', 'info', 'warning', 'error']),\n    }\n\n    render(){\n        const Icon = this.props.icon\n\n        const LinkContent = (\n            <RootListItem\n                style={{\n                    top: 0,\n                    zIndex: 1,\n                }}\n                divider\n                button\n                disableRipple\n                disableTouchRipple\n                selected={this.props.selected}\n            >\n                <MenuIcon><Icon fontSize='small' /></MenuIcon>\n                <StyledListItemText primaryTypographyProps={{color: 'inherit'}}>\n                    {this.props.label}\n                    <ListItemSecondaryText variant='caption' noWrap>\n                        {this.props.subtitle}\n                    </ListItemSecondaryText>\n                </StyledListItemText>\n                {this.props.chipLabel &&\n                    <StyledChip color={this.props.chipColor} label={this.props.chipLabel}/>\n                }\n            </RootListItem>\n        )\n\n        return (\n            <>\n            {typeof this.props.href === 'string'\n                ? <Link href={this.props.href}>{LinkContent}</Link>\n                : this.props.href\n                    ? this.props.href(LinkContent)\n                    : LinkContent\n            }\n            </>\n        )\n    }\n}\n\nexport type MenuItemProps = {\n    icon?: React.ComponentType<SvgIconProps>\n    label: string\n    selected: boolean\n    href: string | ((content: React.ReactChild) => React.ReactChild)\n    chipLabel?: string\n    chipColor?: 'warning' | 'information'\n}\n\nconst NestedListItem = styled(ListItem)`&&{\n    padding-left: 52px;\n    background-color: ${({theme}) => theme.tfso.colors.menuExpanded};\n    color: ${({selected, theme}) => selected ? theme.tfso.colors.menuItemSelectedText : theme.tfso.colors.menuItemText};\n    :hover {\n        background-color: ${({theme}) => theme.tfso.colors.menu};\n    };\n}` as typeof ListItem\n\nexport class MenuItem extends React.PureComponent<MenuItemProps>{\n    static propTypes = {\n        icon: PropTypes.elementType,\n        label: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired,\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        chipLabel: PropTypes.string,\n        chipColor: PropTypes.oneOf(['success', 'info', 'warning', 'error']),\n    }\n\n    render(){\n        const Icon = this.props.icon\n\n        const LinkContent = (\n            <NestedListItem selected={this.props.selected}>\n                {Icon && <MenuIcon><Icon fontSize='small' /></MenuIcon>}\n                <StyledListItemText primaryTypographyProps={{color: 'inherit', noWrap: true}}>\n                    {this.props.label}\n                </StyledListItemText>\n                {this.props.chipLabel &&\n                    <StyledChip color={this.props.chipColor} label={this.props.chipLabel}/>\n                }\n            </NestedListItem>\n        )\n        return (\n            <>\n                {typeof this.props.href === 'string'\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\n                    : this.props.href(LinkContent)\n                }\n            </>\n        )\n    }\n}"],"file":"Menu.js"}