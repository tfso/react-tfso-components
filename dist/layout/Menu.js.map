{"version":3,"sources":["../../src/lib/layout/Menu.tsx"],"names":["React","List","Drawer","Link","Collapse","IconButton","ExpandLess","ExpandMore","ListItemIcon","ListItemText","ListItem","ListItemSecondaryAction","Divider","StyledDrawer","styled","attrs","classes","paper","open","Menu","props","mobile","onClose","children","PureComponent","MenuContent","MenuGroup","onToggleExpanded","e","stopPropagation","Icon","icon","backgroundColor","expanded","marginRight","subtitle","color","variant","label","MenuRootItem","LinkContent","selected","href","NestedListItem","MenuItem"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport List from '@material-ui/core/List'\nimport Drawer from '@material-ui/core/Drawer'\nimport Link from '@material-ui/core/Link'\nimport Collapse from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport styled from 'styled-components/macro'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\nimport Divider from '@material-ui/core/Divider'\n\nconst StyledDrawer = styled(Drawer).attrs({\n    classes: {paper: 'MuiPaperStyle'}\n})`\n    &&{\n      width: ${({open}) => open ? 240 : 0}px;\n      height: 100%;\n    }\n    \n    .MuiPaperStyle{\n      position: static;\n    }\n` as typeof Drawer\n\nexport type MenuProps = {\n    open: boolean\n    onClose: () => void\n    mobile: boolean\n    children: React.ReactNode\n}\n\nexport default class Menu extends React.PureComponent<MenuProps>{\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onClose: PropTypes.func.isRequired,\n        mobile: PropTypes.bool.isRequired,\n        children: PropTypes.node.isRequired\n    }\n\n    render(){\n        return (\n            <StyledDrawer variant={this.props.mobile ? 'temporary' : 'persistent'} elevation={0} open={this.props.open} onClose={this.props.onClose}>\n                <List disablePadding>\n                    {this.props.children}\n                </List>\n            </StyledDrawer>\n        )\n    }\n}\n\nexport const MenuContent = props => <>{props.children}</>\n\nexport type MenuGroupProps = {\n    icon: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    onToggleExpanded: () => void\n    expanded: boolean\n    children: React.ReactNode\n}\n\nexport class MenuGroup extends React.PureComponent<MenuGroupProps>{\n    static propTypes = {\n        icon: PropTypes.elementType.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        onToggleExpanded: PropTypes.func.isRequired,\n        expanded: PropTypes.bool.isRequired,\n        children: PropTypes.node.isRequired\n    }\n\n    onToggleExpanded = e => {\n        // Stop propagation to let parent layout close mobile menu on clicks that do navigation\n        e.stopPropagation()\n        this.props.onToggleExpanded()\n    }\n\n    render(){\n        const Icon = this.props.icon\n        const backgroundColor = this.props.expanded ? '#fafaf9' : 'inherit'\n\n        return (\n            <>\n                <ListItem divider={!this.props.expanded} style={{backgroundColor}} button onClick={this.onToggleExpanded}>\n                    <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color='secondary'/></ListItemIcon>\n                    <ListItemText\n                        secondary={this.props.subtitle}\n                        primaryTypographyProps={{color: 'secondary'}}\n                        secondaryTypographyProps={{variant: 'caption'}}\n                    >\n                        {this.props.label}\n                    </ListItemText>\n                    <ListItemSecondaryAction>\n                        <IconButton onClick={this.onToggleExpanded}>\n                            {this.props.expanded ? <ExpandLess /> : <ExpandMore />}\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <Collapse in={this.props.expanded} timeout=\"auto\" style={{backgroundColor}}>\n                    <List dense disablePadding>\n                        {this.props.children}\n                    </List>\n                    <Divider />\n                </Collapse>\n            </>\n        )\n    }\n}\n\nexport type MenuRootItemProps = {\n    icon: React.ComponentType<SvgIconProps>\n    subtitle: string\n    label: string\n    selected: boolean\n    href?: string | ((content: React.ReactChild) => React.ReactChild)\n}\n\nexport class MenuRootItem extends React.PureComponent<MenuRootItemProps>{\n    static propTypes = {\n        icon: PropTypes.elementType.isRequired,\n        subtitle: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired,\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n    }\n\n    render(){\n        const Icon = this.props.icon\n\n        const LinkContent = (\n            <ListItem divider>\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'secondary'}/></ListItemIcon>\n                <ListItemText\n                    secondary={this.props.subtitle}\n                    primaryTypographyProps={{color: this.props.selected ? 'primary' : 'secondary'}}\n                    secondaryTypographyProps={{variant: 'caption'}}\n                >\n                    {this.props.label}\n                </ListItemText>\n            </ListItem>\n        )\n\n        return (\n            <>\n                {typeof this.props.href === 'string'\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\n                    : this.props.href\n                        ? this.props.href(LinkContent)\n                        : LinkContent\n                }\n            </>\n        )\n    }\n}\n\nexport type MenuItemProps = {\n    icon?: React.ComponentType<SvgIconProps>\n    label: string\n    selected: boolean\n    href: string | ((content: React.ReactChild) => React.ReactChild)\n}\n\nconst NestedListItem = styled(ListItem)`&&{\n    padding-left: 52px;\n}` as typeof ListItem\n\nexport class MenuItem extends React.PureComponent<MenuItemProps>{\n    static propTypes = {\n        icon: PropTypes.elementType,\n        label: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired,\n        href: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n    }\n\n    render(){\n        const Icon = this.props.icon\n        const LinkContent = (\n            <NestedListItem>\n                {Icon &&\n                <ListItemIcon style={{marginRight: 0}}><Icon fontSize=\"small\" color={this.props.selected ? 'primary' : 'secondary'}/></ListItemIcon>\n                }\n                <ListItemText primaryTypographyProps={{color: this.props.selected ? 'primary' : 'secondary'}}>{this.props.label}</ListItemText>\n            </NestedListItem>\n        )\n\n        return (\n            <>\n                {typeof this.props.href === 'string'\n                    ? <Link href={this.props.href}>{LinkContent}</Link>\n                    : this.props.href(LinkContent)\n                }\n            </>\n        )\n    }\n}"],"file":"Menu.js"}