{"version":3,"sources":["../../src/lib/layout/Topbar.tsx"],"names":["React","AppBar","Toolbar","IconButton","Typography","MenuIcon","TfsoIcon","Root","styled","div","StyledAppBar","props","theme","mui","zIndex","drawer","Wrapper","Left","tfso","colors","LeftMobile","Right","MenuButton","ToolbarRight","TopBar","mobile","paddingLeft","title","onMenuToggle","e","children","PureComponent","TopMenuContent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport styled from 'styled-components/macro'\nimport TfsoIcon from '../icons/Tfso'\n\nconst Root = styled.div`\n  width: 100%;\n`\nconst StyledAppBar = styled(AppBar)`&&{\n  background: white;\n  z-index: ${props => props.theme.mui.zIndex.drawer + 1};  \n}` as typeof AppBar\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n`\nconst Left = styled.div`&&{\n  flex: 0 0 240px;\n  background-color: ${({theme}) => theme.tfso.colors.tfso};\n  color: #fff;\n  padding-left: 10px;\n  padding-right: 10px;\n  display: flex;\n  align-items: center;\n}`\nconst LeftMobile = styled(Left)`&&{\n  flex: 0;\n}`\nconst Right = styled.div`&&{\n  flex: 1;\n}`\n\nconst MenuButton = styled(IconButton)`&&{\n  margin-left: -12px;\n  margin-right: 20px;\n}` as typeof IconButton\n\nconst ToolbarRight = styled.div`&&{\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}`\n\nexport type TopBarProps = {\n    title: string\n    onMenuToggle?: () => void\n    mobile: boolean\n    children?: React.ReactNode\n}\n\nexport default class TopBar extends React.PureComponent<TopBarProps>{\n    static propTypes = {\n        title: PropTypes.string.isRequired,\n        onMenuToggle: PropTypes.func,\n        mobile: PropTypes.bool.isRequired,\n        children: PropTypes.node\n    }\n\n    render(){\n        return (\n            <Root>\n                <StyledAppBar position=\"static\" color=\"default\" elevation={1}>\n                    <Wrapper>\n                        {this.props.mobile\n                            ? (\n                                <LeftMobile>\n                                    <TfsoIcon color=\"inherit\" fontSize=\"large\" />\n                                </LeftMobile>\n                            )\n                            : (\n                                <Left>\n                                    <TfsoIcon color=\"inherit\" fontSize=\"large\" />\n                                    <Typography variant=\"h6\" color=\"inherit\" style={{paddingLeft: 7}}>\n                                        {this.props.title}\n                                    </Typography>\n                                </Left>\n                            )\n                        }\n                        <Right>\n                            <Toolbar variant=\"dense\">\n                                {this.props.onMenuToggle &&\n                                <MenuButton color=\"inherit\" aria-label=\"Open drawer\" onClick={e => this.props.onMenuToggle && this.props.onMenuToggle()}>\n                                    <MenuIcon/>\n                                </MenuButton>\n                                }\n                                <ToolbarRight>\n                                    <div>{this.props.children}</div>\n                                </ToolbarRight>\n                            </Toolbar>\n                        </Right>\n                    </Wrapper>\n                </StyledAppBar>\n            </Root>\n        )\n    }\n}\n\nexport type TopMenuContentProps = {\n    children: React.ReactNode\n}\n\nexport class TopMenuContent extends React.PureComponent<TopMenuContentProps>{\n    static propTypes = {\n        children: PropTypes.node.isRequired\n    }\n\n    render(){\n        return (\n            <React.Fragment>\n                {this.props.children}\n            </React.Fragment>\n        )\n    }\n}"],"file":"Topbar.js"}