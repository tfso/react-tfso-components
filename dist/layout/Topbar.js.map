{"version":3,"sources":["../../src/lib/layout/Topbar.tsx"],"names":["React","AppBar","Toolbar","IconButton","Typography","Link","MenuIcon","TfsoIcon","Root","styled","div","StyledAppBar","props","theme","mui","zIndex","drawer","Wrapper","Left","tfso","colors","menu","LeftMobile","Right","MenuButton","ToolbarRight","TopBar","mobile","paddingLeft","onMenuToggle","e","children","PureComponent","TopMenuContent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport styled from 'styled-components/macro'\nimport TfsoIcon from '../icons/Tfso'\n\nconst Root = styled.div`\n  width: 100%;\n`\nconst StyledAppBar = styled(AppBar)`&&{\n  background: white;\n  z-index: ${props => props.theme.mui.zIndex.drawer + 1}; // Higher than other drawers\n  position: relative; // Needed for z-index and shadow\n}` as typeof AppBar\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n`\nconst Left = styled.div`&&{\n  max-width: 240px; // IE hack\n  flex: 0 0 240px;\n  background-color: ${({theme}) => theme.tfso.colors.menu};\n  color: #fff;\n  padding-left: 10px;\n  padding-right: 10px;\n  display: flex;\n  align-items: center;\n}`\nconst LeftMobile = styled(Left)`&&{\n  flex: 0 1 auto;\n}`\nconst Right = styled.div`&&{\n  flex: 1 1 auto;\n}`\n\nconst MenuButton = styled(IconButton)`&&{\n  margin-left: -12px;\n  margin-right: 20px;\n}` as typeof IconButton\n\nconst ToolbarRight = styled.div`&&{\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}`\n\nexport type TopBarProps = {\n    onMenuToggle?: () => void\n    mobile: boolean\n    children?: React.ReactNode\n}\n\nexport default class TopBar extends React.PureComponent<TopBarProps>{\n    static propTypes = {\n        onMenuToggle: PropTypes.func,\n        mobile: PropTypes.bool.isRequired,\n        children: PropTypes.node\n    }\n\n    render(){\n        return (\n            <Root>\n                <StyledAppBar position=\"relative\" color=\"default\" elevation={1}>\n                    <Wrapper>\n                        {this.props.mobile\n                            ? (\n                                <LeftMobile>\n                                    <Link href='/' underline='none'>\n                                        <TfsoIcon color=\"primary\" fontSize=\"large\" />\n                                    </Link>\n                                </LeftMobile>\n                            )\n                            : (\n                                <Left>\n                                    <Link href='/' underline='none'>\n                                        <TfsoIcon color=\"primary\" fontSize=\"large\" />\n                                    </Link>\n                                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" style={{paddingLeft: 7}}>\n                                        <Link href='/' underline='none' color='inherit'>24SevenOffice</Link>\n                                    </Typography>\n                                </Left>\n                            )\n                        }\n                        <Right>\n                            <Toolbar variant=\"dense\">\n                                {this.props.onMenuToggle &&\n                                <MenuButton color=\"inherit\" aria-label=\"Open drawer\" onClick={e => this.props.onMenuToggle && this.props.onMenuToggle()}>\n                                    <MenuIcon/>\n                                </MenuButton>\n                                }\n                                <ToolbarRight>\n                                    {this.props.children}\n                                </ToolbarRight>\n                            </Toolbar>\n                        </Right>\n                    </Wrapper>\n                </StyledAppBar>\n            </Root>\n        )\n    }\n}\n\nexport type TopMenuContentProps = {\n    children: React.ReactNode\n}\n\nexport class TopMenuContent extends React.PureComponent<TopMenuContentProps>{\n    static propTypes = {\n        children: PropTypes.node.isRequired\n    }\n\n    render(){\n        return (\n            <React.Fragment>\n                {this.props.children}\n            </React.Fragment>\n        )\n    }\n}"],"file":"Topbar.js"}