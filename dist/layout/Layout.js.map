{"version":3,"sources":["../../src/lib/layout/Layout.tsx"],"names":["React","TopBar","DocumentTitle","Menu","withScreenSize","LayoutWrapper","styled","div","LayoutHeader","LayoutBody","LayoutBodyLeft","LayoutBodyRight","state","menuOpen","onCloseMenu","setState","onMenuToggle","menuIsOpen","onClickContent","props","screenSize","mobile","hasMenu","menuContent","docTitle","undefined","topMenuContent","children","PureComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,cAAR,QAA6C,eAA7C,C,CAEA;;AACA,OAAO,IAAMC,aAAa,GAAGC,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,uDAAnB,C,CAMP;;AACA,OAAO,IAAMC,YAAY,GAAGF,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,QAAlB,C,CAIP;;AACA,OAAO,IAAME,UAAU,GAAGH,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,yCAAhB,C,CAMP;;AACA,OAAO,IAAMG,cAAc,GAAGJ,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,QAApB,C,CAIP;;AACA,OAAO,IAAMI,eAAe,GAAGL,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,yDAArB;AAmBP,eAAeH,cAAc;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UAOzBQ,KAPyB,GAOJ;AACjBC,MAAAA,QAAQ,EAAE;AADO,KAPI;;AAAA,UAWzBC,WAXyB,GAWX;AAAA,aAAM,MAAKC,QAAL,CAAc;AAACF,QAAAA,QAAQ,EAAE;AAAX,OAAd,CAAN;AAAA,KAXW;;AAAA,UAYzBG,YAZyB,GAYV;AAAA,aAAM,MAAKD,QAAL,CAAc,UAAAH,KAAK;AAAA,eAAK;AAACC,UAAAA,QAAQ,EAAE,CAAC,MAAKI,UAAL;AAAZ,SAAL;AAAA,OAAnB,CAAN;AAAA,KAZU;;AAAA,UAmBzBC,cAnByB,GAmBR,YAAM;AACnB,UAAG,MAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,IAAgC,MAAKJ,UAAL,EAAnC,EAAqD;AACjD,cAAKH,WAAL;AACH;AACJ,KAvBwB;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAab;AACR,UAAG,KAAKF,KAAL,CAAWC,QAAX,KAAwB,IAA3B,EAAgC;AAC5B,eAAO,CAAC,KAAKM,KAAL,CAAWC,UAAX,CAAsBC,MAA9B;AACH;;AACD,aAAO,KAAKT,KAAL,CAAWC,QAAlB;AACH;AAlBwB;AAAA;AAAA,6BAyBjB;AACJ,UAAMS,OAAO,GAAG,CAAC,CAAC,KAAKH,KAAL,CAAWI,WAA7B;AACA,aACI,oBAAC,aAAD,QACI,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,QAAX,GAAsB;AAA3C,QADJ,EAEI,oBAAC,YAAD,QACI,oBAAC,MAAD;AACI,QAAA,YAAY,EAAEF,OAAO,GAAG,KAAKN,YAAR,GAAuBS,SADhD;AAEI,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWC,UAAX,CAAsBC;AAFlC,SAIK,KAAKF,KAAL,CAAWO,cAJhB,CADJ,CAFJ,EAUI,oBAAC,UAAD,QACKJ,OAAO,IACJ,oBAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,KAAKJ;AAA9B,SACI,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAApC;AAA4C,QAAA,IAAI,EAAE,KAAKJ,UAAL,EAAlD;AAAqE,QAAA,OAAO,EAAE,KAAKH;AAAnF,SACK,KAAKK,KAAL,CAAWI,WADhB,CADJ,CAFR,EAQI,oBAAC,eAAD,QACK,KAAKJ,KAAL,CAAWQ,QADhB,CARJ,CAVJ,CADJ;AAyBH;AApDwB;;AAAA;AAAA,EAAsB3B,KAAK,CAAC4B,aAA5B,UAA7B","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\nimport TopBar from './Topbar'\nimport DocumentTitle from './DocumentTitle'\nimport Menu from './Menu'\nimport {withScreenSize, ScreenSizeData} from '../ScreenSize'\n\n// Wrap everything\nexport const LayoutWrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column; // Flex header and body from top to bottom\n`\n\n// Put topbar in here\nexport const LayoutHeader = styled.div`\n  \n`\n\n// Put everything below topbar here\nexport const LayoutBody = styled.div`\n  flex: 1; // Fill the rest of the page after header has taken its space\n  min-height: 0;\n  display: flex;\n`\n\n// Put menu here\nexport const LayoutBodyLeft = styled.div`\n\n`\n\n// Put your app here\nexport const LayoutBodyRight = styled.div`\n  flex: 1;\n  min-height: 0;\n  padding: 15px;\n  overflow-y: auto;\n`\n\ntype LayoutProps = {\n    docTitle: string\n    menuContent?: React.ReactNode\n    topMenuContent?: React.ReactNode\n} & {\n    screenSize: ScreenSizeData\n}\n\ntype LayoutState = {\n    menuOpen: boolean | null\n}\n\nexport default withScreenSize(class Layout extends React.PureComponent<LayoutProps, LayoutState>{\n    static propTypes = {\n        docTitle: PropTypes.string.isRequired,\n        menuContent: PropTypes.node,\n        topMenuContent: PropTypes.node\n    }\n\n    state: LayoutState = {\n        menuOpen: null\n    }\n\n    onCloseMenu = () => this.setState({menuOpen: false})\n    onMenuToggle = () => this.setState(state => ({menuOpen: !this.menuIsOpen()}))\n    menuIsOpen(){\n        if(this.state.menuOpen === null){\n            return !this.props.screenSize.mobile\n        }\n        return this.state.menuOpen\n    }\n    onClickContent = () => {\n        if(this.props.screenSize.mobile && this.menuIsOpen()){\n            this.onCloseMenu()\n        }\n    }\n\n    render(){\n        const hasMenu = !!this.props.menuContent\n        return (\n            <LayoutWrapper>\n                <DocumentTitle text={this.props.docTitle + ' - 24SevenOffice'} />\n                <LayoutHeader>\n                    <TopBar\n                        onMenuToggle={hasMenu ? this.onMenuToggle : undefined}\n                        mobile={this.props.screenSize.mobile}\n                    >\n                        {this.props.topMenuContent}\n                    </TopBar>\n                </LayoutHeader>\n                <LayoutBody>\n                    {hasMenu &&\n                        <LayoutBodyLeft onClick={this.onClickContent}>\n                            <Menu mobile={this.props.screenSize.mobile} open={this.menuIsOpen()} onClose={this.onCloseMenu}>\n                                {this.props.menuContent}\n                            </Menu>\n                        </LayoutBodyLeft>\n                    }\n                    <LayoutBodyRight>\n                        {this.props.children}\n                    </LayoutBodyRight>\n                </LayoutBody>\n            </LayoutWrapper>\n        )\n    }\n})"],"file":"Layout.js"}