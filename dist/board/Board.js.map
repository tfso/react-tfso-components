{"version":3,"sources":["../../src/lib/board/Board.tsx"],"names":["React","BoardContainer","calculateBoardHeight","calculateBoardRows","calculateItemDimensions","calculateItemLayout","compact","moveItem","BoardItemContainer","useWidth","useScreenType","DraggableCore","BoardItemPlaceholder","isEqual","columns","useHeight","screenType","items","spacing","rowHeight","bottomRow","useMemo","height","Board","props","locked","onChange","rootRef","useRef","useState","setItems","activeDrag","setActiveDragItem","oldDragItem","setOldDragItem","placeholder","setPlaceholder","width","setWidth","useEffect","colWidth","Math","round","boardDimensions","onDragStart","useCallback","key","item","dimensions","dragging","onDrag","_","deltaX","deltaY","top","max","left","min","itemLayout","newDragItem","newItems","col","row","onDragStop","console","log","Object","values","map","layout","containerProps","Component","component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport BoardContainer from './BoardContainer'\nimport {BoardItems, ScreenType, BoardItem} from './types'\nimport {calculateBoardHeight, calculateBoardRows, calculateItemDimensions, calculateItemLayout, compact, moveItem} from './utils'\nimport BoardItemContainer, {BoardItemContainerProps} from './BoardItemContainer'\nimport {useWidth} from './useWidth'\nimport useScreenType from './useScreenType'\nimport {DraggableCore, DraggableData, DraggableEvent} from 'react-draggable'\nimport BoardItemPlaceholder, {BoardItemPlaceholdProps} from './BoardItemPlaceholder'\nimport isEqual from 'lodash/isEqual'\n\nexport type BoardProps = {\n    locked?: boolean\n    items: BoardItems\n    spacing?: number\n    rowHeight: number\n    onChange?: (items: BoardItems) => void\n    children?: undefined\n}\n\nconst columns = 12\n\nconst useHeight = (\n    {items, spacing = 0, rowHeight}: Pick<BoardProps, 'items'|'spacing'|'rowHeight'>,\n    screenType: ScreenType\n) => {\n    const bottomRow = React.useMemo(() => calculateBoardRows(items, screenType), [items, screenType])\n    const height = React.useMemo(() => calculateBoardHeight(bottomRow, spacing, rowHeight), [bottomRow, spacing, rowHeight])\n    return height\n}\n\nconst Board = (props: BoardProps) => {\n    const {spacing = 0, rowHeight, locked, onChange} = props\n    const rootRef = React.useRef<HTMLDivElement>(null)\n\n    // State\n    const [items, setItems] = React.useState(props.items)\n    const [activeDrag, setActiveDragItem] = React.useState<BoardItemContainerProps & {key: React.Key} | null>(null)\n    const [oldDragItem, setOldDragItem] = React.useState<BoardItem | null>(null)\n    const [placeholder, setPlaceholder] = React.useState<BoardItemPlaceholdProps | null>(null)\n    const [width, setWidth] = React.useState(1920)\n\n    // Component received new Items\n    React.useEffect(() => {\n        setItems(props.items)\n    }, [props.items])\n\n    // Board dimensions\n    useWidth(rootRef, (width) => setWidth(width))\n    const screenType = useScreenType(width)\n    const height = useHeight({items, spacing: props.spacing, rowHeight: props.rowHeight}, screenType)\n    const colWidth = React.useMemo(() => Math.round((width + spacing) / (columns)) - spacing, [spacing, width])\n    const boardDimensions = React.useMemo(() => ({rowHeight, colWidth, spacing}), [rowHeight, colWidth, spacing])\n\n    // Callbacks\n    const onDragStart = React.useCallback((key: React.Key) => {\n        const item = {...items[key]}\n        const dimensions = calculateItemDimensions(item[screenType]!, boardDimensions)\n        setActiveDragItem({...dimensions, key, dragging: true})\n        setOldDragItem(item)\n    }, [items, screenType, boardDimensions])\n\n    const onDrag = React.useCallback((_: DraggableEvent, {deltaX, deltaY}: DraggableData) => {\n        if(!activeDrag) return\n\n        // Constraining movement to within the container bounds\n        const top = Math.max(activeDrag.top + deltaY, 0)\n        const left = Math.min(Math.max(activeDrag.left + deltaX, 0), width - activeDrag.width)\n\n        const item = {...items[activeDrag.key]}\n        const itemLayout = calculateItemLayout(item[screenType]!, {top, left}, boardDimensions)\n\n        // TODO: Move items out of collisions.\n        const newDragItem = {...activeDrag, top, left}\n        const newItems = compact(moveItem(newDragItem.key, items, itemLayout.col, itemLayout.row, screenType), screenType)\n        setItems(newItems)\n        setActiveDragItem({...activeDrag, top, left})\n        setPlaceholder(calculateItemDimensions(newItems[activeDrag.key][screenType]!, boardDimensions))\n    }, [activeDrag, items, screenType, boardDimensions, width])\n\n    const onDragStop = React.useCallback(() => {\n        if(!activeDrag){\n            return\n        }\n        const {key} = activeDrag\n        const item = {...items[key], [screenType]: calculateItemLayout(items[key][screenType]!, activeDrag, boardDimensions)}\n        const newItems = compact({...items, [activeDrag.key]: item}, screenType)\n        setItems(newItems)\n\n        if(onChange && !isEqual(item, oldDragItem)){\n            onChange(newItems)\n        }\n\n        setActiveDragItem(null)\n        setPlaceholder(null)\n    }, [activeDrag, oldDragItem, items, screenType, boardDimensions, onChange])\n\n    // Hmm, there's a bunch of renders, maybe some can be optimized away..\n    console.log('render')\n\n    return (\n        <div ref={rootRef}>\n            <BoardContainer height={height}>\n                {Object.values(items).map(item => {\n                    const layout = item[screenType]\n                    if(!layout){\n                        return null\n                    }\n                    const containerProps = activeDrag && activeDrag.key === item.key\n                        ? activeDrag\n                        : calculateItemDimensions(layout, boardDimensions)\n\n                    const Component = item.component\n                    return locked ? (\n                        <BoardItemContainer {...containerProps} key={item.key}>\n                            <Component screenType={screenType} />\n                        </BoardItemContainer>\n                    ) : (\n                        <DraggableCore\n                            key={item.key}\n                            onStart={() => onDragStart(item.key)}\n                            onDrag={onDrag}\n                            onStop={onDragStop}\n                        >\n                            <BoardItemContainer {...containerProps}>\n                                <Component screenType={screenType} />\n                            </BoardItemContainer>\n                        </DraggableCore>\n                    )\n                })}\n                {placeholder && <BoardItemPlaceholder {...placeholder} />}\n            </BoardContainer>\n        </div>\n    )\n}\n\nBoard.propTypes = {\n    items: PropTypes.object.isRequired, // Maybe todo: more specific checking?\n    locked: PropTypes.bool,\n    onChange: PropTypes.func,\n    rowHeight: PropTypes.number.isRequired,\n    spacing: PropTypes.number,\n}\n\nexport default Board"],"file":"Board.js"}