{"version":3,"sources":["../src/lib/Trending.tsx"],"names":["React","withTheme","TrendingUp","TrendingFlat","TrendingDown","iconMap","up","flat","down","getColor","variant","theme","tfso","palette","success","warning","alert","undefined","trending","iconProps","Icon","nativeColor","memo"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAQC,SAAR,QAAiD,mBAAjD;AAEA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAOA,IAAMC,OAA6E,GAAG;AAClFC,EAAAA,EAAE,EAAEJ,UAD8E;AAElFK,EAAAA,IAAI,EAAEJ,YAF4E;AAGlFK,EAAAA,IAAI,EAAEJ;AAH4E,CAAtF;;AAMA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAoCC,KAApC,EAA4D;AACzE,UAAOD,OAAP;AACA,SAAK,IAAL;AAAW,aAAOC,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmBC,OAA1B;;AACX,SAAK,MAAL;AAAa,aAAOH,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmBE,OAA1B;;AACb,SAAK,MAAL;AAAa,aAAOJ,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmBG,KAA1B;;AACb;AAAS,aAAOC,SAAP;AAJT;AAMH,CAPD;;AASA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA+D;AAAA,MAA7DR,OAA6D,QAA7DA,OAA6D;AAAA,MAApDC,KAAoD,QAApDA,KAAoD;AAAA,MAA1CQ,SAA0C;;AAC5E,MAAMC,IAAI,GAAGf,OAAO,CAACK,OAAD,CAApB;AACA,MAAMW,WAAW,GAAGZ,QAAQ,CAACC,OAAD,EAAUC,KAAV,CAA5B;AACA,SACI,oBAAC,IAAD;AACI,IAAA,WAAW,EAAEU;AADjB,KAEQF,SAFR,EADJ;AAMH,CATD;;AAeA,eAAenB,KAAK,CAACsB,IAAN,CAAWrB,SAAS,CAACiB,QAAD,CAApB,CAAf","sourcesContent":["import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport {withTheme, DefaultTheme, WithTheme} from 'styled-components'\n\nimport TrendingUp from '@material-ui/icons/TrendingUp'\nimport TrendingFlat from '@material-ui/icons/TrendingFlat'\nimport TrendingDown from '@material-ui/icons/TrendingDown'\nimport {SvgIconProps} from '@material-ui/core/SvgIcon'\n\nexport type TrendingProps = {\n    variant: 'up' | 'down' | 'flat'\n} & SvgIconProps\n\nconst iconMap: {[P in TrendingProps['variant']]: React.ComponentType<SvgIconProps>} = {\n    up: TrendingUp,\n    flat: TrendingFlat,\n    down: TrendingDown,\n}\n\nconst getColor = (variant: TrendingProps['variant'], theme: DefaultTheme) => {\n    switch(variant){\n    case 'up': return theme.tfso.palette.success\n    case 'down': return theme.tfso.palette.warning\n    case 'flat': return theme.tfso.palette.alert\n    default: return undefined\n    }\n}\n\nconst trending = ({variant, theme, ...iconProps}: TrendingProps & WithTheme) => {\n    const Icon = iconMap[variant]\n    const nativeColor = getColor(variant, theme)\n    return (\n        <Icon\n            nativeColor={nativeColor}\n            {...iconProps}\n        />\n    )\n}\n\ntrending.propTypes = {\n    variant: PropTypes.oneOf(['up', 'down', 'flat']).isRequired\n}\n\nexport default React.memo(withTheme(trending))"],"file":"Trending.js"}