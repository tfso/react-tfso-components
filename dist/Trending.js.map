{"version":3,"sources":["../src/lib/Trending.tsx"],"names":["React","withTheme","TrendingUp","TrendingFlat","TrendingDown","iconMap","up","flat","down","getColor","variant","theme","tfso","palette","success","warning","alert","undefined","trending","iconProps","Icon","nativeColor","memo"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAQC,SAAR,QAAiD,mBAAjD;AAEA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAOA,IAAMC,OAA6E,GAAG;AAClFC,EAAAA,EAAE,EAAEJ,UAD8E;AAElFK,EAAAA,IAAI,EAAEJ,YAF4E;AAGlFK,EAAAA,IAAI,EAAEJ;AAH4E,CAAtF;;AAMA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAoCC,KAApC,EAA4D;AACzE,UAAOD,OAAP;AACI,SAAK,IAAL;AAAW,aAAOC,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmBC,OAA1B;;AACX,SAAK,MAAL;AAAa,aAAOH,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmBE,OAA1B;;AACb,SAAK,MAAL;AAAa,aAAOJ,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmBG,KAA1B;;AACb;AACI,aAAOC,SAAP;AALR;AAOH,CARD;;AAUA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA8D;AAAA,MAA5DR,OAA4D,QAA5DA,OAA4D;AAAA,MAAnDC,KAAmD,QAAnDA,KAAmD;AAAA,MAAzCQ,SAAyC;;AAC3E,MAAMC,IAAI,GAAGf,OAAO,CAACK,OAAD,CAApB;AACA,MAAMW,WAAW,GAAGZ,QAAQ,CAACC,OAAD,EAAUC,KAAV,CAA5B;AACA,SACI,oBAAC,IAAD;AACI,IAAA,WAAW,EAAEU;AADjB,KAEQF,SAFR,EADJ;AAKF,CARF;;AAcA,eAAenB,KAAK,CAACsB,IAAN,CAAWrB,SAAS,CAACiB,QAAD,CAApB,CAAf","sourcesContent":["import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport {withTheme, DefaultTheme, WithTheme} from 'styled-components'\r\n\r\nimport TrendingUp from '@material-ui/icons/TrendingUp'\r\nimport TrendingFlat from '@material-ui/icons/TrendingFlat'\r\nimport TrendingDown from '@material-ui/icons/TrendingDown'\r\nimport { SvgIconProps } from '@material-ui/core/SvgIcon'\r\n\r\nexport type TrendingProps = {\r\n    variant: 'up' | 'down' | 'flat'\r\n} & SvgIconProps\r\n\r\nconst iconMap: {[P in TrendingProps['variant']]: React.ComponentType<SvgIconProps>} = {\r\n    up: TrendingUp,\r\n    flat: TrendingFlat,\r\n    down: TrendingDown,\r\n}\r\n\r\nconst getColor = (variant: TrendingProps['variant'], theme: DefaultTheme) => {\r\n    switch(variant){\r\n        case 'up': return theme.tfso.palette.success\r\n        case 'down': return theme.tfso.palette.warning\r\n        case 'flat': return theme.tfso.palette.alert\r\n        default:\r\n            return undefined\r\n    }\r\n}\r\n\r\nconst trending = ({variant, theme, ...iconProps}: TrendingProps & WithTheme) =>{ \r\n    const Icon = iconMap[variant]\r\n    const nativeColor = getColor(variant, theme)\r\n    return (\r\n        <Icon \r\n            nativeColor={nativeColor}\r\n            {...iconProps} \r\n        />\r\n)}\r\n\r\ntrending.propTypes = {\r\n    variant: PropTypes.oneOf(['up', 'down', 'flat']).isRequired\r\n}\r\n\r\nexport default React.memo(withTheme(trending))"],"file":"Trending.js"}